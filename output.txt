Total lines: 10000
Showing first 10 lines summary:

Entry 1:
{
  "text": {
    "path": "alagoutte/actube/src/cw/lw_put_80211_wtp_wlan_radio_configuration.c",
    "func_def": "int lw_put_80211_wtp_wlan_radio_configuration(uint8_t*dst,struct radioinfo *ri)\n{\n lw_put_byte(dst,ri->rid);\n lw_put_byte(dst+1,0);\n lw_put_word(dst+2,ri->occupancy_limit);\n lw_put_byte(dst+4,ri->cfp_period);\n lw_put_word(dst+5,ri->cfp_max_duration);\n\n\n\n lw_put_bstr(dst+7,ri->rmac);\n\n lw_put_word(dst+13,ri->beacon_period);\n lw_put_byte(dst+15,ri->dtim_period);\n lw_put_data(dst+16,ri->country_str,4);\n lw_put_byte(dst+20,ri->max_bssid);\n\n\n lw_put_data(dst+21,(uint8_t*)\"DEAU990\",7);\n\n return 21+7;\n}",
    "func_head": "int lw_put_80211_wtp_wlan_radio_configuration(int *dst, struct radioinfo *ri)",
    "fname": "lw_put_80211_wtp_wlan_radio_configuration",
    "signature": [
      "int",
      "int *",
      "struct radioinfo *"
    ],
    "doc": null,
    "angha_error": "",
    "real_error": "<stdin>:1:47: error: unknown type name \u2018uint8_t\u2019\n",
    "asm": {
      "angha_gcc_x86_O0": {
        "pre_asm": "\t.file\t\"\"\n\t.text\n\t.section\t.rodata\n.LC0:\n\t.string\t\"DEAU990\"\n\t.text\n\t.globl\tlw_put_80211_wtp_wlan_radio_configuration\n\t.type\tlw_put_80211_wtp_wlan_radio_configuration, @function\n",
        "func_asm": ".globl lw_put_80211_wtp_wlan_radio_configuration\n.type lw_put_80211_wtp_wlan_radio_configuration, @function\nlw_put_80211_wtp_wlan_radio_configuration:\n.LFB0:\n\t.cfi_startproc\n\tendbr64\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset 6, -16\n\tmovq\t%rsp, %rbp\n\t.cfi_def_cfa_register 6\n\tsubq\t$16, %rsp\n\tmovq\t%rdi, -8(%rbp)\n\tmovq\t%rsi, -16(%rbp)\n\tmovq\t-16(%rbp), %rax\n\tmovl\t40(%rax), %edx\n\tmovq\t-8(%rbp), %rax\n\tmovl\t%edx, %esi\n\tmovq\t%rax, %rdi\n\tcall\tlw_put_byte@PLT\n\tmovq\t-8(%rbp), %rax\n\taddq\t$4, %rax\n\tmovl\t$0, %esi\n\tmovq\t%rax, %rdi\n\tcall\tlw_put_byte@PLT\n\tmovq\t-16(%rbp), %rax\n\tmovl\t36(%rax), %eax\n\tmovq\t-8(%rbp), %rdx\n\taddq\t$8, %rdx\n\tmovl\t%eax, %esi\n\tmovq\t%rdx, %rdi\n\tcall\tlw_put_word@PLT\n\tmovq\t-16(%rbp), %rax\n\tmovl\t32(%rax), %eax\n\tmovq\t-8(%rbp), %rdx\n\taddq\t$16, %rdx\n\tmovl\t%eax, %esi\n\tmovq\t%rdx, %rdi\n\tcall\tlw_put_byte@PLT\n\tmovq\t-16(%rbp), %rax\n\tmovl\t28(%rax), %eax\n\tmovq\t-8(%rbp), %rdx\n\taddq\t$20, %rdx\n\tmovl\t%eax, %esi\n\tmovq\t%rdx, %rdi\n\tcall\tlw_put_word@PLT\n\tmovq\t-16(%rbp), %rax\n\tmovl\t24(%rax), %eax\n\tmovq\t-8(%rbp), %rdx\n\taddq\t$28, %rdx\n\tmovl\t%eax, %esi\n\tmovq\t%rdx, %rdi\n\tcall\tlw_put_bstr@PLT\n\tmovq\t-16(%rbp), %rax\n\tmovl\t20(%rax), %eax\n\tmovq\t-8(%rbp), %rdx\n\taddq\t$52, %rdx\n\tmovl\t%eax, %esi\n\tmovq\t%rdx, %rdi\n\tcall\tlw_put_word@PLT\n\tmovq\t-16(%rbp), %rax\n\tmovl\t16(%rax), %eax\n\tmovq\t-8(%rbp), %rdx\n\taddq\t$60, %rdx\n\tmovl\t%eax, %esi\n\tmovq\t%rdx, %rdi\n\tcall\tlw_put_byte@PLT\n\tmovq\t-16(%rbp), %rax\n\tmovq\t8(%rax), %rax\n\tmovq\t-8(%rbp), %rdx\n\tleaq\t64(%rdx), %rcx\n\tmovl\t$4, %edx\n\tmovq\t%rax, %rsi\n\tmovq\t%rcx, %rdi\n\tcall\tlw_put_data@PLT\n\tmovq\t-16(%rbp), %rax\n\tmovl\t(%rax), %eax\n\tmovq\t-8(%rbp), %rdx\n\taddq\t$80, %rdx\n\tmovl\t%eax, %esi\n\tmovq\t%rdx, %rdi\n\tcall\tlw_put_byte@PLT\n\tmovq\t-8(%rbp), %rax\n\taddq\t$84, %rax\n\tmovl\t$7, %edx\n\tleaq\t.LC0(%rip), %rsi\n\tmovq\t%rax, %rdi\n\tcall\tlw_put_data@PLT\n\tmovl\t$28, %eax\n\tleave\n\t.cfi_def_cfa 7, 8\n\tret\n\t.cfi_endproc\n.LC0: \t.string\t\"DEAU990\"\n",
        "post_asm": ".LFE0:\n\t.size\tlw_put_80211_wtp_wlan_radio_configuration, .-lw_put_80211_wtp_wlan_radio_configuration\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n\t.section\t.note.gnu.property,\"a\"\n\t.align 8\n\t.long\t 1f - 0f\n\t.long\t 4f - 1f\n\t.long\t 5\n0:\n\t.string\t \"GNU\"\n1:\n\t.align 8\n\t.long\t 0xc0000002\n\t.long\t 3f - 2f\n2:\n\t.long\t 0x3\n3:\n\t.align 8\n4:\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "0"
        }
      },
      "angha_gcc_x86_Os": {
        "pre_asm": "\t.file\t\"\"\n\t.text\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.LC0:\n\t.string\t\"DEAU990\"\n\t.text\n\t.globl\tlw_put_80211_wtp_wlan_radio_configuration\n\t.type\tlw_put_80211_wtp_wlan_radio_configuration, @function\n",
        "func_asm": ".globl lw_put_80211_wtp_wlan_radio_configuration\n.type lw_put_80211_wtp_wlan_radio_configuration, @function\nlw_put_80211_wtp_wlan_radio_configuration:\n.LFB0:\n\t.cfi_startproc\n\tendbr64\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset 6, -16\n\tmovq\t%rsi, %rbp\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\t.cfi_offset 3, -24\n\tmovq\t%rdi, %rbx\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 32\n\tmovl\t40(%rsi), %esi\n\tcall\tlw_put_byte@PLT\n\tleaq\t4(%rbx), %rdi\n\txorl\t%esi, %esi\n\tcall\tlw_put_byte@PLT\n\tmovl\t36(%rbp), %esi\n\tleaq\t8(%rbx), %rdi\n\tcall\tlw_put_word@PLT\n\tmovl\t32(%rbp), %esi\n\tleaq\t16(%rbx), %rdi\n\tcall\tlw_put_byte@PLT\n\tmovl\t28(%rbp), %esi\n\tleaq\t20(%rbx), %rdi\n\tcall\tlw_put_word@PLT\n\tmovl\t24(%rbp), %esi\n\tleaq\t28(%rbx), %rdi\n\tcall\tlw_put_bstr@PLT\n\tmovl\t20(%rbp), %esi\n\tleaq\t52(%rbx), %rdi\n\tcall\tlw_put_word@PLT\n\tmovl\t16(%rbp), %esi\n\tleaq\t60(%rbx), %rdi\n\tcall\tlw_put_byte@PLT\n\tmovq\t8(%rbp), %rsi\n\tleaq\t64(%rbx), %rdi\n\tmovl\t$4, %edx\n\tcall\tlw_put_data@PLT\n\tmovl\t0(%rbp), %esi\n\tleaq\t80(%rbx), %rdi\n\tcall\tlw_put_byte@PLT\n\tleaq\t84(%rbx), %rdi\n\tmovl\t$7, %edx\n\tleaq\t.LC0(%rip), %rsi\n\tcall\tlw_put_data@PLT\n\tpopq\t%rdx\n\t.cfi_def_cfa_offset 24\n\tmovl\t$28, %eax\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tret\n\t.cfi_endproc\n.LC0: \t.string\t\"DEAU990\"\n",
        "post_asm": ".LFE0:\n\t.size\tlw_put_80211_wtp_wlan_radio_configuration, .-lw_put_80211_wtp_wlan_radio_configuration\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n\t.section\t.note.gnu.property,\"a\"\n\t.align 8\n\t.long\t 1f - 0f\n\t.long\t 4f - 1f\n\t.long\t 5\n0:\n\t.string\t \"GNU\"\n1:\n\t.align 8\n\t.long\t 0xc0000002\n\t.long\t 3f - 2f\n2:\n\t.long\t 0x3\n3:\n\t.align 8\n4:\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "s"
        }
      },
      "angha_gcc_x86_O3": {
        "pre_asm": "\t.file\t\"\"\n\t.text\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.LC0:\n\t.string\t\"DEAU990\"\n\t.text\n\t.p2align 4\n\t.globl\tlw_put_80211_wtp_wlan_radio_configuration\n\t.type\tlw_put_80211_wtp_wlan_radio_configuration, @function\n",
        "func_asm": ".globl lw_put_80211_wtp_wlan_radio_configuration\n.type lw_put_80211_wtp_wlan_radio_configuration, @function\nlw_put_80211_wtp_wlan_radio_configuration:\n.LFB0:\n\t.cfi_startproc\n\tendbr64\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset 6, -16\n\tmovq\t%rsi, %rbp\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\t.cfi_offset 3, -24\n\tmovq\t%rdi, %rbx\n\tsubq\t$8, %rsp\n\t.cfi_def_cfa_offset 32\n\tmovl\t40(%rsi), %esi\n\tcall\tlw_put_byte@PLT\n\tleaq\t4(%rbx), %rdi\n\txorl\t%esi, %esi\n\tcall\tlw_put_byte@PLT\n\tmovl\t36(%rbp), %esi\n\tleaq\t8(%rbx), %rdi\n\tcall\tlw_put_word@PLT\n\tmovl\t32(%rbp), %esi\n\tleaq\t16(%rbx), %rdi\n\tcall\tlw_put_byte@PLT\n\tmovl\t28(%rbp), %esi\n\tleaq\t20(%rbx), %rdi\n\tcall\tlw_put_word@PLT\n\tmovl\t24(%rbp), %esi\n\tleaq\t28(%rbx), %rdi\n\tcall\tlw_put_bstr@PLT\n\tmovl\t20(%rbp), %esi\n\tleaq\t52(%rbx), %rdi\n\tcall\tlw_put_word@PLT\n\tmovl\t16(%rbp), %esi\n\tleaq\t60(%rbx), %rdi\n\tcall\tlw_put_byte@PLT\n\tmovq\t8(%rbp), %rsi\n\tleaq\t64(%rbx), %rdi\n\tmovl\t$4, %edx\n\tcall\tlw_put_data@PLT\n\tmovl\t0(%rbp), %esi\n\tleaq\t80(%rbx), %rdi\n\tcall\tlw_put_byte@PLT\n\tleaq\t84(%rbx), %rdi\n\tmovl\t$7, %edx\n\tleaq\t.LC0(%rip), %rsi\n\tcall\tlw_put_data@PLT\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tmovl\t$28, %eax\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tret\n\t.cfi_endproc\n.LC0: \t.string\t\"DEAU990\"\n",
        "post_asm": ".LFE0:\n\t.size\tlw_put_80211_wtp_wlan_radio_configuration, .-lw_put_80211_wtp_wlan_radio_configuration\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n\t.section\t.note.gnu.property,\"a\"\n\t.align 8\n\t.long\t 1f - 0f\n\t.long\t 4f - 1f\n\t.long\t 5\n0:\n\t.string\t \"GNU\"\n1:\n\t.align 8\n\t.long\t 0xc0000002\n\t.long\t 3f - 2f\n2:\n\t.long\t 0x3\n3:\n\t.align 8\n4:\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "3"
        }
      },
      "angha_gcc_arm_O0": {
        "pre_asm": "\t.arch armv8-a\n\t.file\t\"\"\n\t.text\n\t.section\t.rodata\n\t.align\t3\n.LC0:\n\t.string\t\"DEAU990\"\n\t.text\n\t.align\t2\n\t.global\tlw_put_80211_wtp_wlan_radio_configuration\n\t.type\tlw_put_80211_wtp_wlan_radio_configuration, %function\n",
        "func_asm": ".global lw_put_80211_wtp_wlan_radio_configuration\n.type lw_put_80211_wtp_wlan_radio_configuration, %function\nlw_put_80211_wtp_wlan_radio_configuration:\n.LFB0:\n\t.cfi_startproc\n\tstp\tx29, x30, [sp, -32]!\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset 29, -32\n\t.cfi_offset 30, -24\n\tmov\tx29, sp\n\tstr\tx0, [sp, 24]\n\tstr\tx1, [sp, 16]\n\tldr\tx0, [sp, 16]\n\tldr\tw0, [x0, 40]\n\tmov\tw1, w0\n\tldr\tx0, [sp, 24]\n\tbl\tlw_put_byte\n\tldr\tx0, [sp, 24]\n\tadd\tx0, x0, 4\n\tmov\tw1, 0\n\tbl\tlw_put_byte\n\tldr\tx0, [sp, 24]\n\tadd\tx2, x0, 8\n\tldr\tx0, [sp, 16]\n\tldr\tw0, [x0, 36]\n\tmov\tw1, w0\n\tmov\tx0, x2\n\tbl\tlw_put_word\n\tldr\tx0, [sp, 24]\n\tadd\tx2, x0, 16\n\tldr\tx0, [sp, 16]\n\tldr\tw0, [x0, 32]\n\tmov\tw1, w0\n\tmov\tx0, x2\n\tbl\tlw_put_byte\n\tldr\tx0, [sp, 24]\n\tadd\tx2, x0, 20\n\tldr\tx0, [sp, 16]\n\tldr\tw0, [x0, 28]\n\tmov\tw1, w0\n\tmov\tx0, x2\n\tbl\tlw_put_word\n\tldr\tx0, [sp, 24]\n\tadd\tx2, x0, 28\n\tldr\tx0, [sp, 16]\n\tldr\tw0, [x0, 24]\n\tmov\tw1, w0\n\tmov\tx0, x2\n\tbl\tlw_put_bstr\n\tldr\tx0, [sp, 24]\n\tadd\tx2, x0, 52\n\tldr\tx0, [sp, 16]\n\tldr\tw0, [x0, 20]\n\tmov\tw1, w0\n\tmov\tx0, x2\n\tbl\tlw_put_word\n\tldr\tx0, [sp, 24]\n\tadd\tx2, x0, 60\n\tldr\tx0, [sp, 16]\n\tldr\tw0, [x0, 16]\n\tmov\tw1, w0\n\tmov\tx0, x2\n\tbl\tlw_put_byte\n\tldr\tx0, [sp, 24]\n\tadd\tx3, x0, 64\n\tldr\tx0, [sp, 16]\n\tldr\tx0, [x0, 8]\n\tmov\tw2, 4\n\tmov\tx1, x0\n\tmov\tx0, x3\n\tbl\tlw_put_data\n\tldr\tx0, [sp, 24]\n\tadd\tx2, x0, 80\n\tldr\tx0, [sp, 16]\n\tldr\tw0, [x0]\n\tmov\tw1, w0\n\tmov\tx0, x2\n\tbl\tlw_put_byte\n\tldr\tx0, [sp, 24]\n\tadd\tx3, x0, 84\n\tmov\tw2, 7\n\tadrp\tx0, .LC0\n\tadd\tx1, x0, :lo12:.LC0\n\tmov\tx0, x3\n\tbl\tlw_put_data\n\tmov\tw0, 28\n\tldp\tx29, x30, [sp], 32\n\t.cfi_restore 30\n\t.cfi_restore 29\n\t.cfi_def_cfa_offset 0\n\tret\n\t.cfi_endproc\n.LC0: \t.string\t\"DEAU990\"\n",
        "post_asm": ".LFE0:\n\t.size\tlw_put_80211_wtp_wlan_radio_configuration, .-lw_put_80211_wtp_wlan_radio_configuration\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "0"
        }
      },
      "angha_gcc_arm_Os": {
        "pre_asm": "\t.arch armv8-a\n\t.file\t\"\"\n\t.text\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.LC0:\n\t.string\t\"DEAU990\"\n\t.text\n\t.align\t2\n\t.global\tlw_put_80211_wtp_wlan_radio_configuration\n\t.type\tlw_put_80211_wtp_wlan_radio_configuration, %function\n",
        "func_asm": ".global lw_put_80211_wtp_wlan_radio_configuration\n.type lw_put_80211_wtp_wlan_radio_configuration, %function\nlw_put_80211_wtp_wlan_radio_configuration:\n.LFB0:\n\t.cfi_startproc\n\tstp\tx29, x30, [sp, -32]!\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset 29, -32\n\t.cfi_offset 30, -24\n\tmov\tx29, sp\n\tstp\tx19, x20, [sp, 16]\n\t.cfi_offset 19, -16\n\t.cfi_offset 20, -8\n\tmov\tx20, x1\n\tldr\tw1, [x1, 40]\n\tmov\tx19, x0\n\tbl\tlw_put_byte\n\tadd\tx0, x19, 4\n\tmov\tw1, 0\n\tbl\tlw_put_byte\n\tldr\tw1, [x20, 36]\n\tadd\tx0, x19, 8\n\tbl\tlw_put_word\n\tldr\tw1, [x20, 32]\n\tadd\tx0, x19, 16\n\tbl\tlw_put_byte\n\tldr\tw1, [x20, 28]\n\tadd\tx0, x19, 20\n\tbl\tlw_put_word\n\tldr\tw1, [x20, 24]\n\tadd\tx0, x19, 28\n\tbl\tlw_put_bstr\n\tldr\tw1, [x20, 20]\n\tadd\tx0, x19, 52\n\tbl\tlw_put_word\n\tldr\tw1, [x20, 16]\n\tadd\tx0, x19, 60\n\tbl\tlw_put_byte\n\tldr\tx1, [x20, 8]\n\tmov\tw2, 4\n\tadd\tx0, x19, 64\n\tbl\tlw_put_data\n\tldr\tw1, [x20]\n\tadd\tx0, x19, 80\n\tbl\tlw_put_byte\n\tadd\tx0, x19, 84\n\tmov\tw2, 7\n\tadrp\tx1, .LC0\n\tadd\tx1, x1, :lo12:.LC0\n\tbl\tlw_put_data\n\tmov\tw0, 28\n\tldp\tx19, x20, [sp, 16]\n\tldp\tx29, x30, [sp], 32\n\t.cfi_restore 30\n\t.cfi_restore 29\n\t.cfi_restore 19\n\t.cfi_restore 20\n\t.cfi_def_cfa_offset 0\n\tret\n\t.cfi_endproc\n.LC0: \t.string\t\"DEAU990\"\n",
        "post_asm": ".LFE0:\n\t.size\tlw_put_80211_wtp_wlan_radio_configuration, .-lw_put_80211_wtp_wlan_radio_configuration\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "s"
        }
      },
      "angha_gcc_arm_O3": {
        "pre_asm": "\t.arch armv8-a\n\t.file\t\"\"\n\t.text\n\t.section\t.rodata.str1.8,\"aMS\",@progbits,1\n\t.align\t3\n.LC0:\n\t.string\t\"DEAU990\"\n\t.text\n\t.align\t2\n\t.p2align 3,,7\n\t.global\tlw_put_80211_wtp_wlan_radio_configuration\n\t.type\tlw_put_80211_wtp_wlan_radio_configuration, %function\n",
        "func_asm": ".global lw_put_80211_wtp_wlan_radio_configuration\n.type lw_put_80211_wtp_wlan_radio_configuration, %function\nlw_put_80211_wtp_wlan_radio_configuration:\n.LFB0:\n\t.cfi_startproc\n\tstp\tx29, x30, [sp, -32]!\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset 29, -32\n\t.cfi_offset 30, -24\n\tmov\tx29, sp\n\tstp\tx19, x20, [sp, 16]\n\t.cfi_offset 19, -16\n\t.cfi_offset 20, -8\n\tmov\tx20, x1\n\tldr\tw1, [x1, 40]\n\tmov\tx19, x0\n\tbl\tlw_put_byte\n\tadd\tx0, x19, 4\n\tmov\tw1, 0\n\tbl\tlw_put_byte\n\tldr\tw1, [x20, 36]\n\tadd\tx0, x19, 8\n\tbl\tlw_put_word\n\tldr\tw1, [x20, 32]\n\tadd\tx0, x19, 16\n\tbl\tlw_put_byte\n\tldr\tw1, [x20, 28]\n\tadd\tx0, x19, 20\n\tbl\tlw_put_word\n\tldr\tw1, [x20, 24]\n\tadd\tx0, x19, 28\n\tbl\tlw_put_bstr\n\tldr\tw1, [x20, 20]\n\tadd\tx0, x19, 52\n\tbl\tlw_put_word\n\tldr\tw1, [x20, 16]\n\tadd\tx0, x19, 60\n\tbl\tlw_put_byte\n\tldr\tx1, [x20, 8]\n\tmov\tw2, 4\n\tadd\tx0, x19, 64\n\tbl\tlw_put_data\n\tldr\tw1, [x20]\n\tadd\tx0, x19, 80\n\tbl\tlw_put_byte\n\tadd\tx0, x19, 84\n\tmov\tw2, 7\n\tadrp\tx1, .LC0\n\tadd\tx1, x1, :lo12:.LC0\n\tbl\tlw_put_data\n\tmov\tw0, 28\n\tldp\tx19, x20, [sp, 16]\n\tldp\tx29, x30, [sp], 32\n\t.cfi_restore 30\n\t.cfi_restore 29\n\t.cfi_restore 19\n\t.cfi_restore 20\n\t.cfi_def_cfa_offset 0\n\tret\n\t.cfi_endproc\n.LC0: \t.string\t\"DEAU990\"\n",
        "post_asm": ".LFE0:\n\t.size\tlw_put_80211_wtp_wlan_radio_configuration, .-lw_put_80211_wtp_wlan_radio_configuration\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "3"
        }
      }
    },
    "angha_deps": "#define NULL ((void*)0)\ntypedef unsigned long size_t;  // Customize by platform.\ntypedef long intptr_t; typedef unsigned long uintptr_t;\ntypedef long scalar_t__;  // Either arithmetic or pointer type.\n/* By default, we understand bool (as a convenience). */\ntypedef int bool;\n#define false 0\n#define true 1\n\n/* Forward declarations */\n\n/* Type definitions */\ntypedef  int /*<<< orphan*/  uint8_t ;\nstruct radioinfo {int /*<<< orphan*/  max_bssid; int /*<<< orphan*/ * country_str; int /*<<< orphan*/  dtim_period; int /*<<< orphan*/  beacon_period; int /*<<< orphan*/  rmac; int /*<<< orphan*/  cfp_max_duration; int /*<<< orphan*/  cfp_period; int /*<<< orphan*/  occupancy_limit; int /*<<< orphan*/  rid; } ;\n\n/* Variables and functions */\n int /*<<< orphan*/  lw_put_bstr (int /*<<< orphan*/ *,int /*<<< orphan*/ ) ; \n int /*<<< orphan*/  lw_put_byte (int /*<<< orphan*/ *,int /*<<< orphan*/ ) ; \n int /*<<< orphan*/  lw_put_data (int /*<<< orphan*/ *,int /*<<< orphan*/ *,int) ; \n int /*<<< orphan*/  lw_put_word (int /*<<< orphan*/ *,int /*<<< orphan*/ ) ; \n\n",
    "real_deps": null,
    "angha_io_pairs": null,
    "real_io_pairs": null,
    "angha_io_error": "[Errno 28] No space left on device: '/scratch/tmp/91788/tmpac2bb0pu.c'",
    "real_io_error": null,
    "angha_exe_wrapper": null,
    "real_exe_wrapper": null,
    "angha_io_pairs_are_trivial": true,
    "real_io_pairs_are_trivial": true,
    "angha_iospec": null,
    "real_iospec": null,
    "ref": "master",
    "func_head_types": "int lw_put_80211_wtp_wlan_radio_configuration(uint8_t*dst,struct radioinfo *ri)"
  },
  "meta": {}
}
----------------------------------------
Entry 2:
{
  "text": {
    "path": "longqzh/chronOS_test/Ada/florist-gpl-2010-src/posix-macros.c",
    "func_def": "sem_t *__gnat_florist_sem_open\n(char *name, int oflag, mode_t mode, unsigned value) {\n  return sem_open (name, oflag, mode, value);\n}",
    "func_head": "int * __gnat_florist_sem_open(char *name, intoflag, intmode, unsigned intvalue)",
    "fname": "__gnat_florist_sem_open",
    "signature": [
      "int *",
      "char *",
      "int",
      "int",
      "unsigned int"
    ],
    "doc": null,
    "angha_error": "",
    "real_error": "<stdin>:1:1: error: unknown type name \u2018sem_t\u2019\n<stdin>:2:25: error: unknown type name \u2018mode_t\u2019\n",
    "asm": {
      "angha_gcc_x86_O0": {
        "pre_asm": "\t.file\t\"\"\n\t.text\n\t.globl\t__gnat_florist_sem_open\n\t.type\t__gnat_florist_sem_open, @function\n",
        "func_asm": ".globl __gnat_florist_sem_open\n.type __gnat_florist_sem_open, @function\n__gnat_florist_sem_open:\n.LFB0:\n\t.cfi_startproc\n\tendbr64\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset 6, -16\n\tmovq\t%rsp, %rbp\n\t.cfi_def_cfa_register 6\n\tsubq\t$32, %rsp\n\tmovq\t%rdi, -8(%rbp)\n\tmovl\t%esi, -12(%rbp)\n\tmovl\t%edx, -16(%rbp)\n\tmovl\t%ecx, -20(%rbp)\n\tmovl\t-20(%rbp), %ecx\n\tmovl\t-16(%rbp), %edx\n\tmovl\t-12(%rbp), %esi\n\tmovq\t-8(%rbp), %rax\n\tmovq\t%rax, %rdi\n\tcall\tsem_open@PLT\n\tleave\n\t.cfi_def_cfa 7, 8\n\tret\n\t.cfi_endproc\n\n",
        "post_asm": ".LFE0:\n\t.size\t__gnat_florist_sem_open, .-__gnat_florist_sem_open\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n\t.section\t.note.gnu.property,\"a\"\n\t.align 8\n\t.long\t 1f - 0f\n\t.long\t 4f - 1f\n\t.long\t 5\n0:\n\t.string\t \"GNU\"\n1:\n\t.align 8\n\t.long\t 0xc0000002\n\t.long\t 3f - 2f\n2:\n\t.long\t 0x3\n3:\n\t.align 8\n4:\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "0"
        }
      },
      "angha_gcc_x86_Os": {
        "pre_asm": "\t.file\t\"\"\n\t.text\n\t.globl\t__gnat_florist_sem_open\n\t.type\t__gnat_florist_sem_open, @function\n",
        "func_asm": ".globl __gnat_florist_sem_open\n.type __gnat_florist_sem_open, @function\n__gnat_florist_sem_open:\n.LFB0:\n\t.cfi_startproc\n\tendbr64\n\tjmp\tsem_open@PLT\n\t.cfi_endproc\n\n",
        "post_asm": ".LFE0:\n\t.size\t__gnat_florist_sem_open, .-__gnat_florist_sem_open\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n\t.section\t.note.gnu.property,\"a\"\n\t.align 8\n\t.long\t 1f - 0f\n\t.long\t 4f - 1f\n\t.long\t 5\n0:\n\t.string\t \"GNU\"\n1:\n\t.align 8\n\t.long\t 0xc0000002\n\t.long\t 3f - 2f\n2:\n\t.long\t 0x3\n3:\n\t.align 8\n4:\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "s"
        }
      },
      "angha_gcc_x86_O3": {
        "pre_asm": "\t.file\t\"\"\n\t.text\n\t.p2align 4\n\t.globl\t__gnat_florist_sem_open\n\t.type\t__gnat_florist_sem_open, @function\n",
        "func_asm": ".globl __gnat_florist_sem_open\n.type __gnat_florist_sem_open, @function\n__gnat_florist_sem_open:\n.LFB0:\n\t.cfi_startproc\n\tendbr64\n\tjmp\tsem_open@PLT\n\t.cfi_endproc\n\n",
        "post_asm": ".LFE0:\n\t.size\t__gnat_florist_sem_open, .-__gnat_florist_sem_open\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n\t.section\t.note.gnu.property,\"a\"\n\t.align 8\n\t.long\t 1f - 0f\n\t.long\t 4f - 1f\n\t.long\t 5\n0:\n\t.string\t \"GNU\"\n1:\n\t.align 8\n\t.long\t 0xc0000002\n\t.long\t 3f - 2f\n2:\n\t.long\t 0x3\n3:\n\t.align 8\n4:\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "3"
        }
      },
      "angha_gcc_arm_O0": {
        "pre_asm": "\t.arch armv8-a\n\t.file\t\"\"\n\t.text\n\t.align\t2\n\t.global\t__gnat_florist_sem_open\n\t.type\t__gnat_florist_sem_open, %function\n",
        "func_asm": ".global __gnat_florist_sem_open\n.type __gnat_florist_sem_open, %function\n__gnat_florist_sem_open:\n.LFB0:\n\t.cfi_startproc\n\tstp\tx29, x30, [sp, -48]!\n\t.cfi_def_cfa_offset 48\n\t.cfi_offset 29, -48\n\t.cfi_offset 30, -40\n\tmov\tx29, sp\n\tstr\tx0, [sp, 40]\n\tstr\tw1, [sp, 36]\n\tstr\tw2, [sp, 32]\n\tstr\tw3, [sp, 28]\n\tldr\tw3, [sp, 28]\n\tldr\tw2, [sp, 32]\n\tldr\tw1, [sp, 36]\n\tldr\tx0, [sp, 40]\n\tbl\tsem_open\n\tldp\tx29, x30, [sp], 48\n\t.cfi_restore 30\n\t.cfi_restore 29\n\t.cfi_def_cfa_offset 0\n\tret\n\t.cfi_endproc\n\n",
        "post_asm": ".LFE0:\n\t.size\t__gnat_florist_sem_open, .-__gnat_florist_sem_open\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "0"
        }
      },
      "angha_gcc_arm_Os": {
        "pre_asm": "\t.arch armv8-a\n\t.file\t\"\"\n\t.text\n\t.align\t2\n\t.global\t__gnat_florist_sem_open\n\t.type\t__gnat_florist_sem_open, %function\n",
        "func_asm": ".global __gnat_florist_sem_open\n.type __gnat_florist_sem_open, %function\n__gnat_florist_sem_open:\n.LFB0:\n\t.cfi_startproc\n\tb\tsem_open\n\t.cfi_endproc\n\n",
        "post_asm": ".LFE0:\n\t.size\t__gnat_florist_sem_open, .-__gnat_florist_sem_open\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "s"
        }
      },
      "angha_gcc_arm_O3": {
        "pre_asm": "\t.arch armv8-a\n\t.file\t\"\"\n\t.text\n\t.align\t2\n\t.p2align 3,,7\n\t.global\t__gnat_florist_sem_open\n\t.type\t__gnat_florist_sem_open, %function\n",
        "func_asm": ".global __gnat_florist_sem_open\n.type __gnat_florist_sem_open, %function\n__gnat_florist_sem_open:\n.LFB0:\n\t.cfi_startproc\n\tb\tsem_open\n\t.cfi_endproc\n\n",
        "post_asm": ".LFE0:\n\t.size\t__gnat_florist_sem_open, .-__gnat_florist_sem_open\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "3"
        }
      }
    },
    "angha_deps": "#define NULL ((void*)0)\ntypedef unsigned long size_t;  // Customize by platform.\ntypedef long intptr_t; typedef unsigned long uintptr_t;\ntypedef long scalar_t__;  // Either arithmetic or pointer type.\n/* By default, we understand bool (as a convenience). */\ntypedef int bool;\n#define false 0\n#define true 1\n\n/* Forward declarations */\n\n/* Type definitions */\ntypedef  int /*<<< orphan*/  sem_t ;\ntypedef  int /*<<< orphan*/  mode_t ;\n\n/* Variables and functions */\n int /*<<< orphan*/ * sem_open (char*,int,int /*<<< orphan*/ ,unsigned int) ; \n\n",
    "real_deps": null,
    "angha_io_pairs": null,
    "real_io_pairs": null,
    "angha_io_error": "[Errno 28] No space left on device: '/scratch/tmp/91788/tmpbm0h0acz.c'",
    "real_io_error": null,
    "angha_exe_wrapper": null,
    "real_exe_wrapper": null,
    "angha_io_pairs_are_trivial": true,
    "real_io_pairs_are_trivial": true,
    "angha_iospec": null,
    "real_iospec": null,
    "ref": "master",
    "func_head_types": "sem_t *__gnat_florist_sem_open (char *name, int oflag, mode_t mode, unsigned value)"
  },
  "meta": {}
}
----------------------------------------
Entry 3:
{
  "text": {
    "path": "FHV-S1-FFPST/BOSS/EmulatorTest/src/timer/irqtimer.c",
    "func_def": "void\nirqTimerStart( void )\n{\n halTimerStart( 0x49032000, 0xFF );\n}",
    "func_head": "void irqTimerStart()",
    "fname": "irqTimerStart",
    "signature": [
      "void",
      ""
    ],
    "doc": null,
    "angha_error": "",
    "real_error": null,
    "asm": {
      "angha_gcc_x86_O0": {
        "pre_asm": "\t.file\t\"\"\n\t.text\n\t.globl\tirqTimerStart\n\t.type\tirqTimerStart, @function\n",
        "func_asm": ".globl irqTimerStart\n.type irqTimerStart, @function\nirqTimerStart:\n.LFB0:\n\t.cfi_startproc\n\tendbr64\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset 6, -16\n\tmovq\t%rsp, %rbp\n\t.cfi_def_cfa_register 6\n\tmovl\t$255, %esi\n\tmovl\t$1224941568, %edi\n\tcall\thalTimerStart@PLT\n\tnop\n\tpopq\t%rbp\n\t.cfi_def_cfa 7, 8\n\tret\n\t.cfi_endproc\n\n",
        "post_asm": ".LFE0:\n\t.size\tirqTimerStart, .-irqTimerStart\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n\t.section\t.note.gnu.property,\"a\"\n\t.align 8\n\t.long\t 1f - 0f\n\t.long\t 4f - 1f\n\t.long\t 5\n0:\n\t.string\t \"GNU\"\n1:\n\t.align 8\n\t.long\t 0xc0000002\n\t.long\t 3f - 2f\n2:\n\t.long\t 0x3\n3:\n\t.align 8\n4:\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "0"
        }
      },
      "real_gcc_x86_O0": {
        "pre_asm": "\t.file\t\"\"\n\t.text\n\t.globl\tirqTimerStart\n\t.type\tirqTimerStart, @function\n",
        "func_asm": ".globl irqTimerStart\n.type irqTimerStart, @function\nirqTimerStart:\n.LFB0:\n\t.cfi_startproc\n\tendbr64\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset 6, -16\n\tmovq\t%rsp, %rbp\n\t.cfi_def_cfa_register 6\n\tmovl\t$255, %esi\n\tmovl\t$1224941568, %edi\n\tmovl\t$0, %eax\n\tcall\thalTimerStart@PLT\n\tnop\n\tpopq\t%rbp\n\t.cfi_def_cfa 7, 8\n\tret\n\t.cfi_endproc\n\n",
        "post_asm": ".LFE0:\n\t.size\tirqTimerStart, .-irqTimerStart\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n\t.section\t.note.gnu.property,\"a\"\n\t.align 8\n\t.long\t 1f - 0f\n\t.long\t 4f - 1f\n\t.long\t 5\n0:\n\t.string\t \"GNU\"\n1:\n\t.align 8\n\t.long\t 0xc0000002\n\t.long\t 3f - 2f\n2:\n\t.long\t 0x3\n3:\n\t.align 8\n4:\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "0"
        }
      },
      "angha_gcc_x86_Os": {
        "pre_asm": "\t.file\t\"\"\n\t.text\n\t.globl\tirqTimerStart\n\t.type\tirqTimerStart, @function\n",
        "func_asm": ".globl irqTimerStart\n.type irqTimerStart, @function\nirqTimerStart:\n.LFB0:\n\t.cfi_startproc\n\tendbr64\n\tmovl\t$255, %esi\n\tmovl\t$1224941568, %edi\n\tjmp\thalTimerStart@PLT\n\t.cfi_endproc\n\n",
        "post_asm": ".LFE0:\n\t.size\tirqTimerStart, .-irqTimerStart\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n\t.section\t.note.gnu.property,\"a\"\n\t.align 8\n\t.long\t 1f - 0f\n\t.long\t 4f - 1f\n\t.long\t 5\n0:\n\t.string\t \"GNU\"\n1:\n\t.align 8\n\t.long\t 0xc0000002\n\t.long\t 3f - 2f\n2:\n\t.long\t 0x3\n3:\n\t.align 8\n4:\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "s"
        }
      },
      "real_gcc_x86_Os": {
        "pre_asm": "\t.file\t\"\"\n\t.text\n\t.globl\tirqTimerStart\n\t.type\tirqTimerStart, @function\n",
        "func_asm": ".globl irqTimerStart\n.type irqTimerStart, @function\nirqTimerStart:\n.LFB0:\n\t.cfi_startproc\n\tendbr64\n\tmovl\t$255, %esi\n\tmovl\t$1224941568, %edi\n\txorl\t%eax, %eax\n\tjmp\thalTimerStart@PLT\n\t.cfi_endproc\n\n",
        "post_asm": ".LFE0:\n\t.size\tirqTimerStart, .-irqTimerStart\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n\t.section\t.note.gnu.property,\"a\"\n\t.align 8\n\t.long\t 1f - 0f\n\t.long\t 4f - 1f\n\t.long\t 5\n0:\n\t.string\t \"GNU\"\n1:\n\t.align 8\n\t.long\t 0xc0000002\n\t.long\t 3f - 2f\n2:\n\t.long\t 0x3\n3:\n\t.align 8\n4:\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "s"
        }
      },
      "angha_gcc_x86_O3": {
        "pre_asm": "\t.file\t\"\"\n\t.text\n\t.p2align 4\n\t.globl\tirqTimerStart\n\t.type\tirqTimerStart, @function\n",
        "func_asm": ".globl irqTimerStart\n.type irqTimerStart, @function\nirqTimerStart:\n.LFB0:\n\t.cfi_startproc\n\tendbr64\n\tmovl\t$255, %esi\n\tmovl\t$1224941568, %edi\n\tjmp\thalTimerStart@PLT\n\t.cfi_endproc\n\n",
        "post_asm": ".LFE0:\n\t.size\tirqTimerStart, .-irqTimerStart\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n\t.section\t.note.gnu.property,\"a\"\n\t.align 8\n\t.long\t 1f - 0f\n\t.long\t 4f - 1f\n\t.long\t 5\n0:\n\t.string\t \"GNU\"\n1:\n\t.align 8\n\t.long\t 0xc0000002\n\t.long\t 3f - 2f\n2:\n\t.long\t 0x3\n3:\n\t.align 8\n4:\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "3"
        }
      },
      "real_gcc_x86_O3": {
        "pre_asm": "\t.file\t\"\"\n\t.text\n\t.p2align 4\n\t.globl\tirqTimerStart\n\t.type\tirqTimerStart, @function\n",
        "func_asm": ".globl irqTimerStart\n.type irqTimerStart, @function\nirqTimerStart:\n.LFB0:\n\t.cfi_startproc\n\tendbr64\n\tmovl\t$255, %esi\n\tmovl\t$1224941568, %edi\n\txorl\t%eax, %eax\n\tjmp\thalTimerStart@PLT\n\t.cfi_endproc\n\n",
        "post_asm": ".LFE0:\n\t.size\tirqTimerStart, .-irqTimerStart\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n\t.section\t.note.gnu.property,\"a\"\n\t.align 8\n\t.long\t 1f - 0f\n\t.long\t 4f - 1f\n\t.long\t 5\n0:\n\t.string\t \"GNU\"\n1:\n\t.align 8\n\t.long\t 0xc0000002\n\t.long\t 3f - 2f\n2:\n\t.long\t 0x3\n3:\n\t.align 8\n4:\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "3"
        }
      },
      "angha_gcc_arm_O0": {
        "pre_asm": "\t.arch armv8-a\n\t.file\t\"\"\n\t.text\n\t.align\t2\n\t.global\tirqTimerStart\n\t.type\tirqTimerStart, %function\n",
        "func_asm": ".global irqTimerStart\n.type irqTimerStart, %function\nirqTimerStart:\n.LFB0:\n\t.cfi_startproc\n\tstp\tx29, x30, [sp, -16]!\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset 29, -16\n\t.cfi_offset 30, -8\n\tmov\tx29, sp\n\tmov\tw1, 255\n\tmov\tw0, 8192\n\tmovk\tw0, 0x4903, lsl 16\n\tbl\thalTimerStart\n\tnop\n\tldp\tx29, x30, [sp], 16\n\t.cfi_restore 30\n\t.cfi_restore 29\n\t.cfi_def_cfa_offset 0\n\tret\n\t.cfi_endproc\n\n",
        "post_asm": ".LFE0:\n\t.size\tirqTimerStart, .-irqTimerStart\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "0"
        }
      },
      "real_gcc_arm_O0": {
        "pre_asm": "\t.arch armv8-a\n\t.file\t\"\"\n\t.text\n\t.align\t2\n\t.global\tirqTimerStart\n\t.type\tirqTimerStart, %function\n",
        "func_asm": ".global irqTimerStart\n.type irqTimerStart, %function\nirqTimerStart:\n.LFB0:\n\t.cfi_startproc\n\tstp\tx29, x30, [sp, -16]!\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset 29, -16\n\t.cfi_offset 30, -8\n\tmov\tx29, sp\n\tmov\tw1, 255\n\tmov\tw0, 8192\n\tmovk\tw0, 0x4903, lsl 16\n\tbl\thalTimerStart\n\tnop\n\tldp\tx29, x30, [sp], 16\n\t.cfi_restore 30\n\t.cfi_restore 29\n\t.cfi_def_cfa_offset 0\n\tret\n\t.cfi_endproc\n\n",
        "post_asm": ".LFE0:\n\t.size\tirqTimerStart, .-irqTimerStart\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "0"
        }
      },
      "angha_gcc_arm_Os": {
        "pre_asm": "\t.arch armv8-a\n\t.file\t\"\"\n\t.text\n\t.align\t2\n\t.global\tirqTimerStart\n\t.type\tirqTimerStart, %function\n",
        "func_asm": ".global irqTimerStart\n.type irqTimerStart, %function\nirqTimerStart:\n.LFB0:\n\t.cfi_startproc\n\tmov\tw0, 8192\n\tmov\tw1, 255\n\tmovk\tw0, 0x4903, lsl 16\n\tb\thalTimerStart\n\t.cfi_endproc\n\n",
        "post_asm": ".LFE0:\n\t.size\tirqTimerStart, .-irqTimerStart\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "s"
        }
      },
      "real_gcc_arm_Os": {
        "pre_asm": "\t.arch armv8-a\n\t.file\t\"\"\n\t.text\n\t.align\t2\n\t.global\tirqTimerStart\n\t.type\tirqTimerStart, %function\n",
        "func_asm": ".global irqTimerStart\n.type irqTimerStart, %function\nirqTimerStart:\n.LFB0:\n\t.cfi_startproc\n\tmov\tw0, 8192\n\tmov\tw1, 255\n\tmovk\tw0, 0x4903, lsl 16\n\tb\thalTimerStart\n\t.cfi_endproc\n\n",
        "post_asm": ".LFE0:\n\t.size\tirqTimerStart, .-irqTimerStart\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "s"
        }
      },
      "angha_gcc_arm_O3": {
        "pre_asm": "\t.arch armv8-a\n\t.file\t\"\"\n\t.text\n\t.align\t2\n\t.p2align 3,,7\n\t.global\tirqTimerStart\n\t.type\tirqTimerStart, %function\n",
        "func_asm": ".global irqTimerStart\n.type irqTimerStart, %function\nirqTimerStart:\n.LFB0:\n\t.cfi_startproc\n\tmov\tw0, 8192\n\tmov\tw1, 255\n\tmovk\tw0, 0x4903, lsl 16\n\tb\thalTimerStart\n\t.cfi_endproc\n\n",
        "post_asm": ".LFE0:\n\t.size\tirqTimerStart, .-irqTimerStart\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "3"
        }
      },
      "real_gcc_arm_O3": {
        "pre_asm": "\t.arch armv8-a\n\t.file\t\"\"\n\t.text\n\t.align\t2\n\t.p2align 3,,7\n\t.global\tirqTimerStart\n\t.type\tirqTimerStart, %function\n",
        "func_asm": ".global irqTimerStart\n.type irqTimerStart, %function\nirqTimerStart:\n.LFB0:\n\t.cfi_startproc\n\tmov\tw0, 8192\n\tmov\tw1, 255\n\tmovk\tw0, 0x4903, lsl 16\n\tb\thalTimerStart\n\t.cfi_endproc\n\n",
        "post_asm": ".LFE0:\n\t.size\tirqTimerStart, .-irqTimerStart\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "3"
        }
      }
    },
    "angha_deps": "#define NULL ((void*)0)\ntypedef unsigned long size_t;  // Customize by platform.\ntypedef long intptr_t; typedef unsigned long uintptr_t;\ntypedef long scalar_t__;  // Either arithmetic or pointer type.\n/* By default, we understand bool (as a convenience). */\ntypedef int bool;\n#define false 0\n#define true 1\n\n/* Forward declarations */\n\n/* Type definitions */\n\n/* Variables and functions */\n int /*<<< orphan*/  halTimerStart (int,int) ; \n\n",
    "real_deps": "\n# 1 ",
    "angha_io_pairs": null,
    "real_io_pairs": null,
    "angha_io_error": "[Errno 28] No space left on device: '/scratch/tmp/91788/tmp5199dll7.c'",
    "real_io_error": null,
    "angha_exe_wrapper": null,
    "real_exe_wrapper": null,
    "angha_io_pairs_are_trivial": true,
    "real_io_pairs_are_trivial": true,
    "angha_iospec": null,
    "real_iospec": null,
    "ref": "master",
    "func_head_types": "void irqTimerStart( void )"
  },
  "meta": {}
}
----------------------------------------
Entry 4:
{
  "text": {
    "path": "mbartling/TAMU_senior_design/Arduino/sketchbook/libraries/mavlink/include/common/mavlink_msg_statustext.h",
    "func_def": "static inline uint16_t mavlink_msg_statustext_get_text(const mavlink_message_t* msg, int8_t* r_data)\n{\n\n memcpy(r_data, msg->payload+sizeof(uint8_t), 50);\n return 50;\n}",
    "func_head": "int mavlink_msg_statustext_get_text(const int *msg, int *r_data)",
    "fname": "mavlink_msg_statustext_get_text",
    "signature": [
      "int",
      "const int *",
      "int *"
    ],
    "doc": null,
    "angha_error": "",
    "real_error": "<stdin>:1:15: error: unknown type name \u2018uint16_t\u2019\n<stdin>:1:62: error: unknown type name \u2018mavlink_message_t\u2019\n<stdin>:1:86: error: unknown type name \u2018int8_t\u2019\n",
    "asm": {
      "angha_gcc_x86_O0": {
        "pre_asm": "\t.file\t\"\"\n\t.text\n\t.type\tmavlink_msg_statustext_get_text, @function\n",
        "func_asm": ".globl mavlink_msg_statustext_get_text\n.type mavlink_msg_statustext_get_text, @function\nmavlink_msg_statustext_get_text:\n.LFB0:\n\t.cfi_startproc\n\tendbr64\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset 6, -16\n\tmovq\t%rsp, %rbp\n\t.cfi_def_cfa_register 6\n\tsubq\t$16, %rsp\n\tmovq\t%rdi, -8(%rbp)\n\tmovq\t%rsi, -16(%rbp)\n\tmovq\t-8(%rbp), %rax\n\tmovq\t(%rax), %rax\n\taddq\t$4, %rax\n\tmovq\t%rax, %rcx\n\tmovq\t-16(%rbp), %rax\n\tmovl\t$50, %edx\n\tmovq\t%rcx, %rsi\n\tmovq\t%rax, %rdi\n\tcall\tmemcpy@PLT\n\tmovl\t$50, %eax\n\tleave\n\t.cfi_def_cfa 7, 8\n\tret\n\t.cfi_endproc\n\n",
        "post_asm": ".LFE0:\n\t.size\tmavlink_msg_statustext_get_text, .-mavlink_msg_statustext_get_text\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n\t.section\t.note.gnu.property,\"a\"\n\t.align 8\n\t.long\t 1f - 0f\n\t.long\t 4f - 1f\n\t.long\t 5\n0:\n\t.string\t \"GNU\"\n1:\n\t.align 8\n\t.long\t 0xc0000002\n\t.long\t 3f - 2f\n2:\n\t.long\t 0x3\n3:\n\t.align 8\n4:\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "0"
        }
      },
      "angha_gcc_x86_Os": {
        "pre_asm": "\t.file\t\"\"\n\t.text\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n\t.section\t.note.gnu.property,\"a\"\n\t.align 8\n\t.long\t 1f - 0f\n\t.long\t 4f - 1f\n\t.long\t 5\n0:\n\t.string\t \"GNU\"\n1:\n\t.align 8\n\t.long\t 0xc0000002\n\t.long\t 3f - 2f\n2:\n\t.long\t 0x3\n3:\n\t.align 8\n4:\n",
        "func_asm": ".globl mavlink_msg_statustext_get_text\n.type mavlink_msg_statustext_get_text, @function\n\n",
        "post_asm": "\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "s"
        }
      },
      "angha_gcc_x86_O3": {
        "pre_asm": "\t.file\t\"\"\n\t.text\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n\t.section\t.note.gnu.property,\"a\"\n\t.align 8\n\t.long\t 1f - 0f\n\t.long\t 4f - 1f\n\t.long\t 5\n0:\n\t.string\t \"GNU\"\n1:\n\t.align 8\n\t.long\t 0xc0000002\n\t.long\t 3f - 2f\n2:\n\t.long\t 0x3\n3:\n\t.align 8\n4:\n",
        "func_asm": ".globl mavlink_msg_statustext_get_text\n.type mavlink_msg_statustext_get_text, @function\n\n",
        "post_asm": "\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "3"
        }
      },
      "angha_gcc_arm_O0": {
        "pre_asm": "\t.arch armv8-a\n\t.file\t\"\"\n\t.text\n\t.align\t2\n\t.type\tmavlink_msg_statustext_get_text, %function\n",
        "func_asm": ".global mavlink_msg_statustext_get_text\n.type mavlink_msg_statustext_get_text, %function\nmavlink_msg_statustext_get_text:\n.LFB0:\n\t.cfi_startproc\n\tstp\tx29, x30, [sp, -32]!\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset 29, -32\n\t.cfi_offset 30, -24\n\tmov\tx29, sp\n\tstr\tx0, [sp, 24]\n\tstr\tx1, [sp, 16]\n\tldr\tx0, [sp, 24]\n\tldr\tx0, [x0]\n\tadd\tx0, x0, 4\n\tmov\tw2, 50\n\tmov\tx1, x0\n\tldr\tx0, [sp, 16]\n\tbl\tmemcpy\n\tmov\tw0, 50\n\tldp\tx29, x30, [sp], 32\n\t.cfi_restore 30\n\t.cfi_restore 29\n\t.cfi_def_cfa_offset 0\n\tret\n\t.cfi_endproc\n\n",
        "post_asm": ".LFE0:\n\t.size\tmavlink_msg_statustext_get_text, .-mavlink_msg_statustext_get_text\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "0"
        }
      },
      "angha_gcc_arm_Os": {
        "pre_asm": "\t.arch armv8-a\n\t.file\t\"\"\n\t.text\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n",
        "func_asm": ".global mavlink_msg_statustext_get_text\n.type mavlink_msg_statustext_get_text, %function\n\n",
        "post_asm": "\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "s"
        }
      },
      "angha_gcc_arm_O3": {
        "pre_asm": "\t.arch armv8-a\n\t.file\t\"\"\n\t.text\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n",
        "func_asm": ".global mavlink_msg_statustext_get_text\n.type mavlink_msg_statustext_get_text, %function\n\n",
        "post_asm": "\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "3"
        }
      }
    },
    "angha_deps": "#define NULL ((void*)0)\ntypedef unsigned long size_t;  // Customize by platform.\ntypedef long intptr_t; typedef unsigned long uintptr_t;\ntypedef long scalar_t__;  // Either arithmetic or pointer type.\n/* By default, we understand bool (as a convenience). */\ntypedef int bool;\n#define false 0\n#define true 1\n\n/* Forward declarations */\ntypedef  struct TYPE_3__   TYPE_1__ ;\n\n/* Type definitions */\ntypedef  int /*<<< orphan*/  uint8_t ;\ntypedef  int uint16_t ;\nstruct TYPE_3__ {scalar_t__ payload; } ;\ntypedef  TYPE_1__ mavlink_message_t ;\ntypedef  int /*<<< orphan*/  int8_t ;\n\n/* Variables and functions */\n int /*<<< orphan*/  memcpy (int /*<<< orphan*/ *,scalar_t__,int) ; \n\n",
    "real_deps": null,
    "angha_io_pairs": null,
    "real_io_pairs": null,
    "angha_io_error": "",
    "real_io_error": null,
    "angha_exe_wrapper": null,
    "real_exe_wrapper": null,
    "angha_io_pairs_are_trivial": true,
    "real_io_pairs_are_trivial": true,
    "angha_iospec": null,
    "real_iospec": null,
    "ref": "master",
    "func_head_types": "uint16_t mavlink_msg_statustext_get_text(const mavlink_message_t* msg, int8_t* r_data)"
  },
  "meta": {}
}
----------------------------------------
Entry 5:
{
  "text": {
    "path": "brenocfg/AnghaBench/fastsocket/kernel/drivers/media/video/gspca/extr_spca500.c_setbrightness.c",
    "func_def": "__attribute__((used)) static void setbrightness(struct gspca_dev *gspca_dev)\n{\n\tstruct sd *sd = (struct sd *) gspca_dev;\n\n\treg_w(gspca_dev, 0x00, 0x8167,\n\t\t\t(__u8) (sd->brightness - 128));\n}",
    "func_head": "void setbrightness(struct gspca_dev *gspca_dev)",
    "fname": "setbrightness",
    "signature": [
      "void",
      "struct gspca_dev *"
    ],
    "doc": null,
    "angha_error": null,
    "real_error": null,
    "asm": {
      "angha_gcc_x86_O0": {
        "pre_asm": "\t.file\t\"\"\n\t.text\n\t.type\tsetbrightness, @function\n",
        "func_asm": ".globl setbrightness\n.type setbrightness, @function\nsetbrightness:\n.LFB0:\n\t.cfi_startproc\n\tendbr64\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset 6, -16\n\tmovq\t%rsp, %rbp\n\t.cfi_def_cfa_register 6\n\tsubq\t$32, %rsp\n\tmovq\t%rdi, -24(%rbp)\n\tmovq\t-24(%rbp), %rax\n\tmovq\t%rax, -8(%rbp)\n\tmovq\t-8(%rbp), %rax\n\tmovl\t(%rax), %eax\n\tleal\t-128(%rax), %edx\n\tmovq\t-24(%rbp), %rax\n\tmovl\t%edx, %ecx\n\tmovl\t$33127, %edx\n\tmovl\t$0, %esi\n\tmovq\t%rax, %rdi\n\tcall\treg_w@PLT\n\tnop\n\tleave\n\t.cfi_def_cfa 7, 8\n\tret\n\t.cfi_endproc\n\n",
        "post_asm": ".LFE0:\n\t.size\tsetbrightness, .-setbrightness\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n\t.section\t.note.gnu.property,\"a\"\n\t.align 8\n\t.long\t 1f - 0f\n\t.long\t 4f - 1f\n\t.long\t 5\n0:\n\t.string\t \"GNU\"\n1:\n\t.align 8\n\t.long\t 0xc0000002\n\t.long\t 3f - 2f\n2:\n\t.long\t 0x3\n3:\n\t.align 8\n4:\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "0"
        }
      },
      "angha_gcc_x86_Os": {
        "pre_asm": "\t.file\t\"\"\n\t.text\n\t.type\tsetbrightness, @function\n",
        "func_asm": ".globl setbrightness\n.type setbrightness, @function\nsetbrightness:\n.LFB0:\n\t.cfi_startproc\n\tendbr64\n\tmovl\t(%rdi), %eax\n\tmovl\t$33127, %edx\n\txorl\t%esi, %esi\n\tleal\t-128(%rax), %ecx\n\tjmp\treg_w@PLT\n\t.cfi_endproc\n\n",
        "post_asm": ".LFE0:\n\t.size\tsetbrightness, .-setbrightness\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n\t.section\t.note.gnu.property,\"a\"\n\t.align 8\n\t.long\t 1f - 0f\n\t.long\t 4f - 1f\n\t.long\t 5\n0:\n\t.string\t \"GNU\"\n1:\n\t.align 8\n\t.long\t 0xc0000002\n\t.long\t 3f - 2f\n2:\n\t.long\t 0x3\n3:\n\t.align 8\n4:\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "s"
        }
      },
      "angha_gcc_x86_O3": {
        "pre_asm": "\t.file\t\"\"\n\t.text\n\t.p2align 4\n\t.type\tsetbrightness, @function\n",
        "func_asm": ".globl setbrightness\n.type setbrightness, @function\nsetbrightness:\n.LFB0:\n\t.cfi_startproc\n\tendbr64\n\tmovl\t(%rdi), %eax\n\tmovl\t$33127, %edx\n\txorl\t%esi, %esi\n\tleal\t-128(%rax), %ecx\n\tjmp\treg_w@PLT\n\t.cfi_endproc\n\n",
        "post_asm": ".LFE0:\n\t.size\tsetbrightness, .-setbrightness\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n\t.section\t.note.gnu.property,\"a\"\n\t.align 8\n\t.long\t 1f - 0f\n\t.long\t 4f - 1f\n\t.long\t 5\n0:\n\t.string\t \"GNU\"\n1:\n\t.align 8\n\t.long\t 0xc0000002\n\t.long\t 3f - 2f\n2:\n\t.long\t 0x3\n3:\n\t.align 8\n4:\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "3"
        }
      },
      "angha_gcc_arm_O0": {
        "pre_asm": "\t.arch armv8-a\n\t.file\t\"\"\n\t.text\n\t.align\t2\n\t.type\tsetbrightness, %function\n",
        "func_asm": ".global setbrightness\n.type setbrightness, %function\nsetbrightness:\n.LFB0:\n\t.cfi_startproc\n\tstp\tx29, x30, [sp, -48]!\n\t.cfi_def_cfa_offset 48\n\t.cfi_offset 29, -48\n\t.cfi_offset 30, -40\n\tmov\tx29, sp\n\tstr\tx0, [sp, 24]\n\tldr\tx0, [sp, 24]\n\tstr\tx0, [sp, 40]\n\tldr\tx0, [sp, 40]\n\tldr\tw0, [x0]\n\tsub\tw0, w0, #128\n\tmov\tw3, w0\n\tmov\tw2, 33127\n\tmov\tw1, 0\n\tldr\tx0, [sp, 24]\n\tbl\treg_w\n\tnop\n\tldp\tx29, x30, [sp], 48\n\t.cfi_restore 30\n\t.cfi_restore 29\n\t.cfi_def_cfa_offset 0\n\tret\n\t.cfi_endproc\n\n",
        "post_asm": ".LFE0:\n\t.size\tsetbrightness, .-setbrightness\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "0"
        }
      },
      "angha_gcc_arm_Os": {
        "pre_asm": "\t.arch armv8-a\n\t.file\t\"\"\n\t.text\n\t.align\t2\n\t.type\tsetbrightness, %function\n",
        "func_asm": ".global setbrightness\n.type setbrightness, %function\nsetbrightness:\n.LFB0:\n\t.cfi_startproc\n\tldr\tw3, [x0]\n\tmov\tw2, 33127\n\tmov\tw1, 0\n\tsub\tw3, w3, #128\n\tb\treg_w\n\t.cfi_endproc\n\n",
        "post_asm": ".LFE0:\n\t.size\tsetbrightness, .-setbrightness\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "s"
        }
      },
      "angha_gcc_arm_O3": {
        "pre_asm": "\t.arch armv8-a\n\t.file\t\"\"\n\t.text\n\t.align\t2\n\t.p2align 3,,7\n\t.type\tsetbrightness, %function\n",
        "func_asm": ".global setbrightness\n.type setbrightness, %function\nsetbrightness:\n.LFB0:\n\t.cfi_startproc\n\tldr\tw3, [x0]\n\tmov\tw2, 33127\n\tmov\tw1, 0\n\tsub\tw3, w3, #128\n\tb\treg_w\n\t.cfi_endproc\n\n",
        "post_asm": ".LFE0:\n\t.size\tsetbrightness, .-setbrightness\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "3"
        }
      }
    },
    "angha_deps": "#define NULL ((void*)0)\ntypedef unsigned long size_t;  // Customize by platform.\ntypedef long intptr_t; typedef unsigned long uintptr_t;\ntypedef long scalar_t__;  // Either arithmetic or pointer type.\n/* By default, we understand bool (as a convenience). */\ntypedef int bool;\n#define false 0\n#define true 1\n\n/* Forward declarations */\n\n/* Type definitions */\nstruct sd {int brightness; } ;\nstruct gspca_dev {int dummy; } ;\ntypedef  int /*<<< orphan*/  __u8 ;\n\n/* Variables and functions */\n int /*<<< orphan*/  reg_w (struct gspca_dev*,int,int,int /*<<< orphan*/ ) ; \n\n",
    "real_deps": null,
    "angha_io_pairs": [
      {
        "input": {
          "gspca_dev": [
            {
              "dummy": 124
            },
            {
              "dummy": 8
            },
            {
              "dummy": 112
            },
            {
              "dummy": 119
            },
            {
              "dummy": 64
            },
            {
              "dummy": 122
            },
            {
              "dummy": 58
            },
            {
              "dummy": 72
            },
            {
              "dummy": 48
            },
            {
              "dummy": 125
            },
            {
              "dummy": 7
            },
            {
              "dummy": 75
            },
            {
              "dummy": 61
            },
            {
              "dummy": 80
            },
            {
              "dummy": 116
            },
            {
              "dummy": 70
            },
            {
              "dummy": 60
            },
            {
              "dummy": 61
            },
            {
              "dummy": 52
            },
            {
              "dummy": 109
            },
            {
              "dummy": 7
            },
            {
              "dummy": 25
            },
            {
              "dummy": 107
            },
            {
              "dummy": 35
            },
            {
              "dummy": 12
            },
            {
              "dummy": 32
            },
            {
              "dummy": 66
            },
            {
              "dummy": 61
            },
            {
              "dummy": 36
            },
            {
              "dummy": 106
            },
            {
              "dummy": 29
            },
            {
              "dummy": 55
            }
          ]
        },
        "output": {
          "gspca_dev": [
            {
              "dummy": 124
            },
            {
              "dummy": 8
            },
            {
              "dummy": 112
            },
            {
              "dummy": 119
            },
            {
              "dummy": 64
            },
            {
              "dummy": 122
            },
            {
              "dummy": 58
            },
            {
              "dummy": 72
            },
            {
              "dummy": 48
            },
            {
              "dummy": 125
            },
            {
              "dummy": 7
            },
            {
              "dummy": 75
            },
            {
              "dummy": 61
            },
            {
              "dummy": 80
            },
            {
              "dummy": 116
            },
            {
              "dummy": 70
            },
            {
              "dummy": 60
            },
            {
              "dummy": 61
            },
            {
              "dummy": 52
            },
            {
              "dummy": 109
            },
            {
              "dummy": 7
            },
            {
              "dummy": 25
            },
            {
              "dummy": 107
            },
            {
              "dummy": 35
            },
            {
              "dummy": 12
            },
            {
              "dummy": 32
            },
            {
              "dummy": 66
            },
            {
              "dummy": 61
            },
            {
              "dummy": 36
            },
            {
              "dummy": 106
            },
            {
              "dummy": 29
            },
            {
              "dummy": 55
            }
          ]
        },
        "dummy_funcs": "int reg_w (struct gspca_dev * b, int d, int e, int o) {\n\tint returnv;\n\tint temp_variable = 45;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n",
        "dummy_funcs_seed": 0
      },
      {
        "input": {
          "gspca_dev": [
            {
              "dummy": 79
            },
            {
              "dummy": 41
            },
            {
              "dummy": 44
            },
            {
              "dummy": 110
            },
            {
              "dummy": 55
            },
            {
              "dummy": 114
            },
            {
              "dummy": 40
            },
            {
              "dummy": 10
            },
            {
              "dummy": 59
            },
            {
              "dummy": 67
            },
            {
              "dummy": 64
            },
            {
              "dummy": 78
            },
            {
              "dummy": 75
            },
            {
              "dummy": 59
            },
            {
              "dummy": 50
            },
            {
              "dummy": 114
            },
            {
              "dummy": 108
            },
            {
              "dummy": 114
            },
            {
              "dummy": 24
            },
            {
              "dummy": 79
            },
            {
              "dummy": 95
            },
            {
              "dummy": 20
            },
            {
              "dummy": 8
            },
            {
              "dummy": 91
            },
            {
              "dummy": 118
            },
            {
              "dummy": 33
            },
            {
              "dummy": 125
            },
            {
              "dummy": 56
            },
            {
              "dummy": 0
            },
            {
              "dummy": 17
            },
            {
              "dummy": 15
            },
            {
              "dummy": 119
            }
          ]
        },
        "output": {
          "gspca_dev": [
            {
              "dummy": 79
            },
            {
              "dummy": 41
            },
            {
              "dummy": 44
            },
            {
              "dummy": 110
            },
            {
              "dummy": 55
            },
            {
              "dummy": 114
            },
            {
              "dummy": 40
            },
            {
              "dummy": 10
            },
            {
              "dummy": 59
            },
            {
              "dummy": 67
            },
            {
              "dummy": 64
            },
            {
              "dummy": 78
            },
            {
              "dummy": 75
            },
            {
              "dummy": 59
            },
            {
              "dummy": 50
            },
            {
              "dummy": 114
            },
            {
              "dummy": 108
            },
            {
              "dummy": 114
            },
            {
              "dummy": 24
            },
            {
              "dummy": 79
            },
            {
              "dummy": 95
            },
            {
              "dummy": 20
            },
            {
              "dummy": 8
            },
            {
              "dummy": 91
            },
            {
              "dummy": 118
            },
            {
              "dummy": 33
            },
            {
              "dummy": 125
            },
            {
              "dummy": 56
            },
            {
              "dummy": 0
            },
            {
              "dummy": 17
            },
            {
              "dummy": 15
            },
            {
              "dummy": 119
            }
          ]
        },
        "dummy_funcs": "int reg_w (struct gspca_dev * b, int d, int e, int o) {\n\tint returnv;\n\tint temp_variable = 45;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n",
        "dummy_funcs_seed": 0
      },
      {
        "input": {
          "gspca_dev": [
            {
              "dummy": 73
            },
            {
              "dummy": 6
            },
            {
              "dummy": 53
            },
            {
              "dummy": 36
            },
            {
              "dummy": 113
            },
            {
              "dummy": 109
            },
            {
              "dummy": 19
            },
            {
              "dummy": 7
            },
            {
              "dummy": 56
            },
            {
              "dummy": 49
            },
            {
              "dummy": 121
            },
            {
              "dummy": 60
            },
            {
              "dummy": 70
            },
            {
              "dummy": 100
            },
            {
              "dummy": 72
            },
            {
              "dummy": 42
            },
            {
              "dummy": 99
            },
            {
              "dummy": 118
            },
            {
              "dummy": 101
            },
            {
              "dummy": 58
            },
            {
              "dummy": 104
            },
            {
              "dummy": 11
            },
            {
              "dummy": 79
            },
            {
              "dummy": 23
            },
            {
              "dummy": 110
            },
            {
              "dummy": 126
            },
            {
              "dummy": 115
            },
            {
              "dummy": 27
            },
            {
              "dummy": 95
            },
            {
              "dummy": 51
            },
            {
              "dummy": 92
            },
            {
              "dummy": 28
            }
          ]
        },
        "output": {
          "gspca_dev": [
            {
              "dummy": 73
            },
            {
              "dummy": 6
            },
            {
              "dummy": 53
            },
            {
              "dummy": 36
            },
            {
              "dummy": 113
            },
            {
              "dummy": 109
            },
            {
              "dummy": 19
            },
            {
              "dummy": 7
            },
            {
              "dummy": 56
            },
            {
              "dummy": 49
            },
            {
              "dummy": 121
            },
            {
              "dummy": 60
            },
            {
              "dummy": 70
            },
            {
              "dummy": 100
            },
            {
              "dummy": 72
            },
            {
              "dummy": 42
            },
            {
              "dummy": 99
            },
            {
              "dummy": 118
            },
            {
              "dummy": 101
            },
            {
              "dummy": 58
            },
            {
              "dummy": 104
            },
            {
              "dummy": 11
            },
            {
              "dummy": 79
            },
            {
              "dummy": 23
            },
            {
              "dummy": 110
            },
            {
              "dummy": 126
            },
            {
              "dummy": 115
            },
            {
              "dummy": 27
            },
            {
              "dummy": 95
            },
            {
              "dummy": 51
            },
            {
              "dummy": 92
            },
            {
              "dummy": 28
            }
          ]
        },
        "dummy_funcs": "int reg_w (struct gspca_dev * b, int d, int e, int o) {\n\tint returnv;\n\tint temp_variable = 45;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n",
        "dummy_funcs_seed": 0
      },
      {
        "input": {
          "gspca_dev": [
            {
              "dummy": 49
            },
            {
              "dummy": 59
            },
            {
              "dummy": 56
            },
            {
              "dummy": 25
            },
            {
              "dummy": 32
            },
            {
              "dummy": 79
            },
            {
              "dummy": 122
            },
            {
              "dummy": 14
            },
            {
              "dummy": 88
            },
            {
              "dummy": 3
            },
            {
              "dummy": 91
            },
            {
              "dummy": 101
            },
            {
              "dummy": 21
            },
            {
              "dummy": 98
            },
            {
              "dummy": 95
            },
            {
              "dummy": 69
            },
            {
              "dummy": 37
            },
            {
              "dummy": 2
            },
            {
              "dummy": 5
            },
            {
              "dummy": 78
            },
            {
              "dummy": 5
            },
            {
              "dummy": 84
            },
            {
              "dummy": 19
            },
            {
              "dummy": 85
            },
            {
              "dummy": 108
            },
            {
              "dummy": 51
            },
            {
              "dummy": 68
            },
            {
              "dummy": 96
            },
            {
              "dummy": 3
            },
            {
              "dummy": 6
            },
            {
              "dummy": 64
            },
            {
              "dummy": 69
            }
          ]
        },
        "output": {
          "gspca_dev": [
            {
              "dummy": 49
            },
            {
              "dummy": 59
            },
            {
              "dummy": 56
            },
            {
              "dummy": 25
            },
            {
              "dummy": 32
            },
            {
              "dummy": 79
            },
            {
              "dummy": 122
            },
            {
              "dummy": 14
            },
            {
              "dummy": 88
            },
            {
              "dummy": 3
            },
            {
              "dummy": 91
            },
            {
              "dummy": 101
            },
            {
              "dummy": 21
            },
            {
              "dummy": 98
            },
            {
              "dummy": 95
            },
            {
              "dummy": 69
            },
            {
              "dummy": 37
            },
            {
              "dummy": 2
            },
            {
              "dummy": 5
            },
            {
              "dummy": 78
            },
            {
              "dummy": 5
            },
            {
              "dummy": 84
            },
            {
              "dummy": 19
            },
            {
              "dummy": 85
            },
            {
              "dummy": 108
            },
            {
              "dummy": 51
            },
            {
              "dummy": 68
            },
            {
              "dummy": 96
            },
            {
              "dummy": 3
            },
            {
              "dummy": 6
            },
            {
              "dummy": 64
            },
            {
              "dummy": 69
            }
          ]
        },
        "dummy_funcs": "int reg_w (struct gspca_dev * b, int d, int e, int o) {\n\tint returnv;\n\tint temp_variable = 45;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n",
        "dummy_funcs_seed": 0
      },
      {
        "input": {
          "gspca_dev": [
            {
              "dummy": 86
            },
            {
              "dummy": 113
            },
            {
              "dummy": 53
            },
            {
              "dummy": 68
            },
            {
              "dummy": 40
            },
            {
              "dummy": 122
            },
            {
              "dummy": 17
            },
            {
              "dummy": 66
            },
            {
              "dummy": 20
            },
            {
              "dummy": 33
            },
            {
              "dummy": 79
            },
            {
              "dummy": 10
            },
            {
              "dummy": 121
            },
            {
              "dummy": 32
            },
            {
              "dummy": 116
            },
            {
              "dummy": 122
            },
            {
              "dummy": 21
            },
            {
              "dummy": 51
            },
            {
              "dummy": 72
            },
            {
              "dummy": 41
            },
            {
              "dummy": 50
            },
            {
              "dummy": 81
            },
            {
              "dummy": 22
            },
            {
              "dummy": 3
            },
            {
              "dummy": 7
            },
            {
              "dummy": 97
            },
            {
              "dummy": 1
            },
            {
              "dummy": 0
            },
            {
              "dummy": 43
            },
            {
              "dummy": 9
            },
            {
              "dummy": 103
            },
            {
              "dummy": 119
            }
          ]
        },
        "output": {
          "gspca_dev": [
            {
              "dummy": 86
            },
            {
              "dummy": 113
            },
            {
              "dummy": 53
            },
            {
              "dummy": 68
            },
            {
              "dummy": 40
            },
            {
              "dummy": 122
            },
            {
              "dummy": 17
            },
            {
              "dummy": 66
            },
            {
              "dummy": 20
            },
            {
              "dummy": 33
            },
            {
              "dummy": 79
            },
            {
              "dummy": 10
            },
            {
              "dummy": 121
            },
            {
              "dummy": 32
            },
            {
              "dummy": 116
            },
            {
              "dummy": 122
            },
            {
              "dummy": 21
            },
            {
              "dummy": 51
            },
            {
              "dummy": 72
            },
            {
              "dummy": 41
            },
            {
              "dummy": 50
            },
            {
              "dummy": 81
            },
            {
              "dummy": 22
            },
            {
              "dummy": 3
            },
            {
              "dummy": 7
            },
            {
              "dummy": 97
            },
            {
              "dummy": 1
            },
            {
              "dummy": 0
            },
            {
              "dummy": 43
            },
            {
              "dummy": 9
            },
            {
              "dummy": 103
            },
            {
              "dummy": 119
            }
          ]
        },
        "dummy_funcs": "int reg_w (struct gspca_dev * b, int d, int e, int o) {\n\tint returnv;\n\tint temp_variable = 45;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n",
        "dummy_funcs_seed": 0
      },
      {
        "input": {
          "gspca_dev": [
            {
              "dummy": 90
            },
            {
              "dummy": 7
            },
            {
              "dummy": 48
            },
            {
              "dummy": 22
            },
            {
              "dummy": 71
            },
            {
              "dummy": 113
            },
            {
              "dummy": 51
            },
            {
              "dummy": 112
            },
            {
              "dummy": 63
            },
            {
              "dummy": 46
            },
            {
              "dummy": 22
            },
            {
              "dummy": 109
            },
            {
              "dummy": 4
            },
            {
              "dummy": 28
            },
            {
              "dummy": 62
            },
            {
              "dummy": 57
            },
            {
              "dummy": 111
            },
            {
              "dummy": 40
            },
            {
              "dummy": 44
            },
            {
              "dummy": 70
            },
            {
              "dummy": 101
            },
            {
              "dummy": 16
            },
            {
              "dummy": 3
            },
            {
              "dummy": 102
            },
            {
              "dummy": 42
            },
            {
              "dummy": 125
            },
            {
              "dummy": 48
            },
            {
              "dummy": 107
            },
            {
              "dummy": 40
            },
            {
              "dummy": 62
            },
            {
              "dummy": 81
            },
            {
              "dummy": 8
            }
          ]
        },
        "output": {
          "gspca_dev": [
            {
              "dummy": 90
            },
            {
              "dummy": 7
            },
            {
              "dummy": 48
            },
            {
              "dummy": 22
            },
            {
              "dummy": 71
            },
            {
              "dummy": 113
            },
            {
              "dummy": 51
            },
            {
              "dummy": 112
            },
            {
              "dummy": 63
            },
            {
              "dummy": 46
            },
            {
              "dummy": 22
            },
            {
              "dummy": 109
            },
            {
              "dummy": 4
            },
            {
              "dummy": 28
            },
            {
              "dummy": 62
            },
            {
              "dummy": 57
            },
            {
              "dummy": 111
            },
            {
              "dummy": 40
            },
            {
              "dummy": 44
            },
            {
              "dummy": 70
            },
            {
              "dummy": 101
            },
            {
              "dummy": 16
            },
            {
              "dummy": 3
            },
            {
              "dummy": 102
            },
            {
              "dummy": 42
            },
            {
              "dummy": 125
            },
            {
              "dummy": 48
            },
            {
              "dummy": 107
            },
            {
              "dummy": 40
            },
            {
              "dummy": 62
            },
            {
              "dummy": 81
            },
            {
              "dummy": 8
            }
          ]
        },
        "dummy_funcs": "int reg_w (struct gspca_dev * b, int d, int e, int o) {\n\tint returnv;\n\tint temp_variable = 45;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n",
        "dummy_funcs_seed": 0
      },
      {
        "input": {
          "gspca_dev": [
            {
              "dummy": 89
            },
            {
              "dummy": 47
            },
            {
              "dummy": 106
            },
            {
              "dummy": 47
            },
            {
              "dummy": 47
            },
            {
              "dummy": 125
            },
            {
              "dummy": 110
            },
            {
              "dummy": 34
            },
            {
              "dummy": 47
            },
            {
              "dummy": 106
            },
            {
              "dummy": 53
            },
            {
              "dummy": 55
            },
            {
              "dummy": 2
            },
            {
              "dummy": 63
            },
            {
              "dummy": 79
            },
            {
              "dummy": 33
            },
            {
              "dummy": 19
            },
            {
              "dummy": 114
            },
            {
              "dummy": 124
            },
            {
              "dummy": 121
            },
            {
              "dummy": 20
            },
            {
              "dummy": 96
            },
            {
              "dummy": 98
            },
            {
              "dummy": 86
            },
            {
              "dummy": 14
            },
            {
              "dummy": 104
            },
            {
              "dummy": 6
            },
            {
              "dummy": 4
            },
            {
              "dummy": 59
            },
            {
              "dummy": 34
            },
            {
              "dummy": 75
            },
            {
              "dummy": 51
            }
          ]
        },
        "output": {
          "gspca_dev": [
            {
              "dummy": 89
            },
            {
              "dummy": 47
            },
            {
              "dummy": 106
            },
            {
              "dummy": 47
            },
            {
              "dummy": 47
            },
            {
              "dummy": 125
            },
            {
              "dummy": 110
            },
            {
              "dummy": 34
            },
            {
              "dummy": 47
            },
            {
              "dummy": 106
            },
            {
              "dummy": 53
            },
            {
              "dummy": 55
            },
            {
              "dummy": 2
            },
            {
              "dummy": 63
            },
            {
              "dummy": 79
            },
            {
              "dummy": 33
            },
            {
              "dummy": 19
            },
            {
              "dummy": 114
            },
            {
              "dummy": 124
            },
            {
              "dummy": 121
            },
            {
              "dummy": 20
            },
            {
              "dummy": 96
            },
            {
              "dummy": 98
            },
            {
              "dummy": 86
            },
            {
              "dummy": 14
            },
            {
              "dummy": 104
            },
            {
              "dummy": 6
            },
            {
              "dummy": 4
            },
            {
              "dummy": 59
            },
            {
              "dummy": 34
            },
            {
              "dummy": 75
            },
            {
              "dummy": 51
            }
          ]
        },
        "dummy_funcs": "int reg_w (struct gspca_dev * b, int d, int e, int o) {\n\tint returnv;\n\tint temp_variable = 45;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n",
        "dummy_funcs_seed": 0
      },
      {
        "input": {
          "gspca_dev": [
            {
              "dummy": 71
            },
            {
              "dummy": 33
            },
            {
              "dummy": 98
            },
            {
              "dummy": 82
            },
            {
              "dummy": 110
            },
            {
              "dummy": 38
            },
            {
              "dummy": 88
            },
            {
              "dummy": 36
            },
            {
              "dummy": 82
            },
            {
              "dummy": 60
            },
            {
              "dummy": 41
            },
            {
              "dummy": 107
            },
            {
              "dummy": 99
            },
            {
              "dummy": 81
            },
            {
              "dummy": 4
            },
            {
              "dummy": 30
            },
            {
              "dummy": 60
            },
            {
              "dummy": 84
            },
            {
              "dummy": 1
            },
            {
              "dummy": 94
            },
            {
              "dummy": 113
            },
            {
              "dummy": 57
            },
            {
              "dummy": 74
            },
            {
              "dummy": 31
            },
            {
              "dummy": 23
            },
            {
              "dummy": 0
            },
            {
              "dummy": 19
            },
            {
              "dummy": 43
            },
            {
              "dummy": 40
            },
            {
              "dummy": 14
            },
            {
              "dummy": 70
            },
            {
              "dummy": 28
            }
          ]
        },
        "output": {
          "gspca_dev": [
            {
              "dummy": 71
            },
            {
              "dummy": 33
            },
            {
              "dummy": 98
            },
            {
              "dummy": 82
            },
            {
              "dummy": 110
            },
            {
              "dummy": 38
            },
            {
              "dummy": 88
            },
            {
              "dummy": 36
            },
            {
              "dummy": 82
            },
            {
              "dummy": 60
            },
            {
              "dummy": 41
            },
            {
              "dummy": 107
            },
            {
              "dummy": 99
            },
            {
              "dummy": 81
            },
            {
              "dummy": 4
            },
            {
              "dummy": 30
            },
            {
              "dummy": 60
            },
            {
              "dummy": 84
            },
            {
              "dummy": 1
            },
            {
              "dummy": 94
            },
            {
              "dummy": 113
            },
            {
              "dummy": 57
            },
            {
              "dummy": 74
            },
            {
              "dummy": 31
            },
            {
              "dummy": 23
            },
            {
              "dummy": 0
            },
            {
              "dummy": 19
            },
            {
              "dummy": 43
            },
            {
              "dummy": 40
            },
            {
              "dummy": 14
            },
            {
              "dummy": 70
            },
            {
              "dummy": 28
            }
          ]
        },
        "dummy_funcs": "int reg_w (struct gspca_dev * b, int d, int e, int o) {\n\tint returnv;\n\tint temp_variable = 45;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n",
        "dummy_funcs_seed": 0
      },
      {
        "input": {
          "gspca_dev": [
            {
              "dummy": 95
            },
            {
              "dummy": 102
            },
            {
              "dummy": 11
            },
            {
              "dummy": 96
            },
            {
              "dummy": 17
            },
            {
              "dummy": 62
            },
            {
              "dummy": 124
            },
            {
              "dummy": 6
            },
            {
              "dummy": 88
            },
            {
              "dummy": 57
            },
            {
              "dummy": 79
            },
            {
              "dummy": 27
            },
            {
              "dummy": 43
            },
            {
              "dummy": 15
            },
            {
              "dummy": 38
            },
            {
              "dummy": 64
            },
            {
              "dummy": 72
            },
            {
              "dummy": 1
            },
            {
              "dummy": 75
            },
            {
              "dummy": 64
            },
            {
              "dummy": 91
            },
            {
              "dummy": 53
            },
            {
              "dummy": 67
            },
            {
              "dummy": 46
            },
            {
              "dummy": 84
            },
            {
              "dummy": 57
            },
            {
              "dummy": 115
            },
            {
              "dummy": 43
            },
            {
              "dummy": 17
            },
            {
              "dummy": 102
            },
            {
              "dummy": 23
            },
            {
              "dummy": 94
            }
          ]
        },
        "output": {
          "gspca_dev": [
            {
              "dummy": 95
            },
            {
              "dummy": 102
            },
            {
              "dummy": 11
            },
            {
              "dummy": 96
            },
            {
              "dummy": 17
            },
            {
              "dummy": 62
            },
            {
              "dummy": 124
            },
            {
              "dummy": 6
            },
            {
              "dummy": 88
            },
            {
              "dummy": 57
            },
            {
              "dummy": 79
            },
            {
              "dummy": 27
            },
            {
              "dummy": 43
            },
            {
              "dummy": 15
            },
            {
              "dummy": 38
            },
            {
              "dummy": 64
            },
            {
              "dummy": 72
            },
            {
              "dummy": 1
            },
            {
              "dummy": 75
            },
            {
              "dummy": 64
            },
            {
              "dummy": 91
            },
            {
              "dummy": 53
            },
            {
              "dummy": 67
            },
            {
              "dummy": 46
            },
            {
              "dummy": 84
            },
            {
              "dummy": 57
            },
            {
              "dummy": 115
            },
            {
              "dummy": 43
            },
            {
              "dummy": 17
            },
            {
              "dummy": 102
            },
            {
              "dummy": 23
            },
            {
              "dummy": 94
            }
          ]
        },
        "dummy_funcs": "int reg_w (struct gspca_dev * b, int d, int e, int o) {\n\tint returnv;\n\tint temp_variable = 45;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n",
        "dummy_funcs_seed": 0
      },
      {
        "input": {
          "gspca_dev": [
            {
              "dummy": 95
            },
            {
              "dummy": 17
            },
            {
              "dummy": 38
            },
            {
              "dummy": 74
            },
            {
              "dummy": 34
            },
            {
              "dummy": 81
            },
            {
              "dummy": 116
            },
            {
              "dummy": 11
            },
            {
              "dummy": 12
            },
            {
              "dummy": 102
            },
            {
              "dummy": 40
            },
            {
              "dummy": 121
            },
            {
              "dummy": 65
            },
            {
              "dummy": 34
            },
            {
              "dummy": 24
            },
            {
              "dummy": 98
            },
            {
              "dummy": 78
            },
            {
              "dummy": 20
            },
            {
              "dummy": 120
            },
            {
              "dummy": 26
            },
            {
              "dummy": 67
            },
            {
              "dummy": 69
            },
            {
              "dummy": 38
            },
            {
              "dummy": 69
            },
            {
              "dummy": 81
            },
            {
              "dummy": 49
            },
            {
              "dummy": 11
            },
            {
              "dummy": 43
            },
            {
              "dummy": 4
            },
            {
              "dummy": 57
            },
            {
              "dummy": 120
            },
            {
              "dummy": 8
            }
          ]
        },
        "output": {
          "gspca_dev": [
            {
              "dummy": 95
            },
            {
              "dummy": 17
            },
            {
              "dummy": 38
            },
            {
              "dummy": 74
            },
            {
              "dummy": 34
            },
            {
              "dummy": 81
            },
            {
              "dummy": 116
            },
            {
              "dummy": 11
            },
            {
              "dummy": 12
            },
            {
              "dummy": 102
            },
            {
              "dummy": 40
            },
            {
              "dummy": 121
            },
            {
              "dummy": 65
            },
            {
              "dummy": 34
            },
            {
              "dummy": 24
            },
            {
              "dummy": 98
            },
            {
              "dummy": 78
            },
            {
              "dummy": 20
            },
            {
              "dummy": 120
            },
            {
              "dummy": 26
            },
            {
              "dummy": 67
            },
            {
              "dummy": 69
            },
            {
              "dummy": 38
            },
            {
              "dummy": 69
            },
            {
              "dummy": 81
            },
            {
              "dummy": 49
            },
            {
              "dummy": 11
            },
            {
              "dummy": 43
            },
            {
              "dummy": 4
            },
            {
              "dummy": 57
            },
            {
              "dummy": 120
            },
            {
              "dummy": 8
            }
          ]
        },
        "dummy_funcs": "int reg_w (struct gspca_dev * b, int d, int e, int o) {\n\tint returnv;\n\tint temp_variable = 45;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n",
        "dummy_funcs_seed": 0
      },
      {
        "input": {
          "gspca_dev": [
            {
              "dummy": 124
            },
            {
              "dummy": 8
            },
            {
              "dummy": 112
            },
            {
              "dummy": 119
            },
            {
              "dummy": 64
            },
            {
              "dummy": 122
            },
            {
              "dummy": 58
            },
            {
              "dummy": 72
            },
            {
              "dummy": 48
            },
            {
              "dummy": 125
            },
            {
              "dummy": 7
            },
            {
              "dummy": 75
            },
            {
              "dummy": 61
            },
            {
              "dummy": 80
            },
            {
              "dummy": 116
            },
            {
              "dummy": 70
            },
            {
              "dummy": 60
            },
            {
              "dummy": 61
            },
            {
              "dummy": 52
            },
            {
              "dummy": 109
            },
            {
              "dummy": 7
            },
            {
              "dummy": 25
            },
            {
              "dummy": 107
            },
            {
              "dummy": 35
            },
            {
              "dummy": 12
            },
            {
              "dummy": 32
            },
            {
              "dummy": 66
            },
            {
              "dummy": 61
            },
            {
              "dummy": 36
            },
            {
              "dummy": 106
            },
            {
              "dummy": 29
            },
            {
              "dummy": 55
            }
          ]
        },
        "output": {
          "gspca_dev": [
            {
              "dummy": 124
            },
            {
              "dummy": 8
            },
            {
              "dummy": 112
            },
            {
              "dummy": 119
            },
            {
              "dummy": 64
            },
            {
              "dummy": 122
            },
            {
              "dummy": 58
            },
            {
              "dummy": 72
            },
            {
              "dummy": 48
            },
            {
              "dummy": 125
            },
            {
              "dummy": 7
            },
            {
              "dummy": 75
            },
            {
              "dummy": 61
            },
            {
              "dummy": 80
            },
            {
              "dummy": 116
            },
            {
              "dummy": 70
            },
            {
              "dummy": 60
            },
            {
              "dummy": 61
            },
            {
              "dummy": 52
            },
            {
              "dummy": 109
            },
            {
              "dummy": 7
            },
            {
              "dummy": 25
            },
            {
              "dummy": 107
            },
            {
              "dummy": 35
            },
            {
              "dummy": 12
            },
            {
              "dummy": 32
            },
            {
              "dummy": 66
            },
            {
              "dummy": 61
            },
            {
              "dummy": 36
            },
            {
              "dummy": 106
            },
            {
              "dummy": 29
            },
            {
              "dummy": 55
            }
          ]
        },
        "dummy_funcs": "int reg_w (struct gspca_dev * m, int z, int o, int b) {\n\tint returnv;\n\tint temp_variable = 74;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n",
        "dummy_funcs_seed": 1
      },
      {
        "input": {
          "gspca_dev": [
            {
              "dummy": 79
            },
            {
              "dummy": 41
            },
            {
              "dummy": 44
            },
            {
              "dummy": 110
            },
            {
              "dummy": 55
            },
            {
              "dummy": 114
            },
            {
              "dummy": 40
            },
            {
              "dummy": 10
            },
            {
              "dummy": 59
            },
            {
              "dummy": 67
            },
            {
              "dummy": 64
            },
            {
              "dummy": 78
            },
            {
              "dummy": 75
            },
            {
              "dummy": 59
            },
            {
              "dummy": 50
            },
            {
              "dummy": 114
            },
            {
              "dummy": 108
            },
            {
              "dummy": 114
            },
            {
              "dummy": 24
            },
            {
              "dummy": 79
            },
            {
              "dummy": 95
            },
            {
              "dummy": 20
            },
            {
              "dummy": 8
            },
            {
              "dummy": 91
            },
            {
              "dummy": 118
            },
            {
              "dummy": 33
            },
            {
              "dummy": 125
            },
            {
              "dummy": 56
            },
            {
              "dummy": 0
            },
            {
              "dummy": 17
            },
            {
              "dummy": 15
            },
            {
              "dummy": 119
            }
          ]
        },
        "output": {
          "gspca_dev": [
            {
              "dummy": 79
            },
            {
              "dummy": 41
            },
            {
              "dummy": 44
            },
            {
              "dummy": 110
            },
            {
              "dummy": 55
            },
            {
              "dummy": 114
            },
            {
              "dummy": 40
            },
            {
              "dummy": 10
            },
            {
              "dummy": 59
            },
            {
              "dummy": 67
            },
            {
              "dummy": 64
            },
            {
              "dummy": 78
            },
            {
              "dummy": 75
            },
            {
              "dummy": 59
            },
            {
              "dummy": 50
            },
            {
              "dummy": 114
            },
            {
              "dummy": 108
            },
            {
              "dummy": 114
            },
            {
              "dummy": 24
            },
            {
              "dummy": 79
            },
            {
              "dummy": 95
            },
            {
              "dummy": 20
            },
            {
              "dummy": 8
            },
            {
              "dummy": 91
            },
            {
              "dummy": 118
            },
            {
              "dummy": 33
            },
            {
              "dummy": 125
            },
            {
              "dummy": 56
            },
            {
              "dummy": 0
            },
            {
              "dummy": 17
            },
            {
              "dummy": 15
            },
            {
              "dummy": 119
            }
          ]
        },
        "dummy_funcs": "int reg_w (struct gspca_dev * m, int z, int o, int b) {\n\tint returnv;\n\tint temp_variable = 74;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n",
        "dummy_funcs_seed": 1
      },
      {
        "input": {
          "gspca_dev": [
            {
              "dummy": 73
            },
            {
              "dummy": 6
            },
            {
              "dummy": 53
            },
            {
              "dummy": 36
            },
            {
              "dummy": 113
            },
            {
              "dummy": 109
            },
            {
              "dummy": 19
            },
            {
              "dummy": 7
            },
            {
              "dummy": 56
            },
            {
              "dummy": 49
            },
            {
              "dummy": 121
            },
            {
              "dummy": 60
            },
            {
              "dummy": 70
            },
            {
              "dummy": 100
            },
            {
              "dummy": 72
            },
            {
              "dummy": 42
            },
            {
              "dummy": 99
            },
            {
              "dummy": 118
            },
            {
              "dummy": 101
            },
            {
              "dummy": 58
            },
            {
              "dummy": 104
            },
            {
              "dummy": 11
            },
            {
              "dummy": 79
            },
            {
              "dummy": 23
            },
            {
              "dummy": 110
            },
            {
              "dummy": 126
            },
            {
              "dummy": 115
            },
            {
              "dummy": 27
            },
            {
              "dummy": 95
            },
            {
              "dummy": 51
            },
            {
              "dummy": 92
            },
            {
              "dummy": 28
            }
          ]
        },
        "output": {
          "gspca_dev": [
            {
              "dummy": 73
            },
            {
              "dummy": 6
            },
            {
              "dummy": 53
            },
            {
              "dummy": 36
            },
            {
              "dummy": 113
            },
            {
              "dummy": 109
            },
            {
              "dummy": 19
            },
            {
              "dummy": 7
            },
            {
              "dummy": 56
            },
            {
              "dummy": 49
            },
            {
              "dummy": 121
            },
            {
              "dummy": 60
            },
            {
              "dummy": 70
            },
            {
              "dummy": 100
            },
            {
              "dummy": 72
            },
            {
              "dummy": 42
            },
            {
              "dummy": 99
            },
            {
              "dummy": 118
            },
            {
              "dummy": 101
            },
            {
              "dummy": 58
            },
            {
              "dummy": 104
            },
            {
              "dummy": 11
            },
            {
              "dummy": 79
            },
            {
              "dummy": 23
            },
            {
              "dummy": 110
            },
            {
              "dummy": 126
            },
            {
              "dummy": 115
            },
            {
              "dummy": 27
            },
            {
              "dummy": 95
            },
            {
              "dummy": 51
            },
            {
              "dummy": 92
            },
            {
              "dummy": 28
            }
          ]
        },
        "dummy_funcs": "int reg_w (struct gspca_dev * m, int z, int o, int b) {\n\tint returnv;\n\tint temp_variable = 74;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n",
        "dummy_funcs_seed": 1
      },
      {
        "input": {
          "gspca_dev": [
            {
              "dummy": 49
            },
            {
              "dummy": 59
            },
            {
              "dummy": 56
            },
            {
              "dummy": 25
            },
            {
              "dummy": 32
            },
            {
              "dummy": 79
            },
            {
              "dummy": 122
            },
            {
              "dummy": 14
            },
            {
              "dummy": 88
            },
            {
              "dummy": 3
            },
            {
              "dummy": 91
            },
            {
              "dummy": 101
            },
            {
              "dummy": 21
            },
            {
              "dummy": 98
            },
            {
              "dummy": 95
            },
            {
              "dummy": 69
            },
            {
              "dummy": 37
            },
            {
              "dummy": 2
            },
            {
              "dummy": 5
            },
            {
              "dummy": 78
            },
            {
              "dummy": 5
            },
            {
              "dummy": 84
            },
            {
              "dummy": 19
            },
            {
              "dummy": 85
            },
            {
              "dummy": 108
            },
            {
              "dummy": 51
            },
            {
              "dummy": 68
            },
            {
              "dummy": 96
            },
            {
              "dummy": 3
            },
            {
              "dummy": 6
            },
            {
              "dummy": 64
            },
            {
              "dummy": 69
            }
          ]
        },
        "output": {
          "gspca_dev": [
            {
              "dummy": 49
            },
            {
              "dummy": 59
            },
            {
              "dummy": 56
            },
            {
              "dummy": 25
            },
            {
              "dummy": 32
            },
            {
              "dummy": 79
            },
            {
              "dummy": 122
            },
            {
              "dummy": 14
            },
            {
              "dummy": 88
            },
            {
              "dummy": 3
            },
            {
              "dummy": 91
            },
            {
              "dummy": 101
            },
            {
              "dummy": 21
            },
            {
              "dummy": 98
            },
            {
              "dummy": 95
            },
            {
              "dummy": 69
            },
            {
              "dummy": 37
            },
            {
              "dummy": 2
            },
            {
              "dummy": 5
            },
            {
              "dummy": 78
            },
            {
              "dummy": 5
            },
            {
              "dummy": 84
            },
            {
              "dummy": 19
            },
            {
              "dummy": 85
            },
            {
              "dummy": 108
            },
            {
              "dummy": 51
            },
            {
              "dummy": 68
            },
            {
              "dummy": 96
            },
            {
              "dummy": 3
            },
            {
              "dummy": 6
            },
            {
              "dummy": 64
            },
            {
              "dummy": 69
            }
          ]
        },
        "dummy_funcs": "int reg_w (struct gspca_dev * m, int z, int o, int b) {\n\tint returnv;\n\tint temp_variable = 74;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n",
        "dummy_funcs_seed": 1
      },
      {
        "input": {
          "gspca_dev": [
            {
              "dummy": 86
            },
            {
              "dummy": 113
            },
            {
              "dummy": 53
            },
            {
              "dummy": 68
            },
            {
              "dummy": 40
            },
            {
              "dummy": 122
            },
            {
              "dummy": 17
            },
            {
              "dummy": 66
            },
            {
              "dummy": 20
            },
            {
              "dummy": 33
            },
            {
              "dummy": 79
            },
            {
              "dummy": 10
            },
            {
              "dummy": 121
            },
            {
              "dummy": 32
            },
            {
              "dummy": 116
            },
            {
              "dummy": 122
            },
            {
              "dummy": 21
            },
            {
              "dummy": 51
            },
            {
              "dummy": 72
            },
            {
              "dummy": 41
            },
            {
              "dummy": 50
            },
            {
              "dummy": 81
            },
            {
              "dummy": 22
            },
            {
              "dummy": 3
            },
            {
              "dummy": 7
            },
            {
              "dummy": 97
            },
            {
              "dummy": 1
            },
            {
              "dummy": 0
            },
            {
              "dummy": 43
            },
            {
              "dummy": 9
            },
            {
              "dummy": 103
            },
            {
              "dummy": 119
            }
          ]
        },
        "output": {
          "gspca_dev": [
            {
              "dummy": 86
            },
            {
              "dummy": 113
            },
            {
              "dummy": 53
            },
            {
              "dummy": 68
            },
            {
              "dummy": 40
            },
            {
              "dummy": 122
            },
            {
              "dummy": 17
            },
            {
              "dummy": 66
            },
            {
              "dummy": 20
            },
            {
              "dummy": 33
            },
            {
              "dummy": 79
            },
            {
              "dummy": 10
            },
            {
              "dummy": 121
            },
            {
              "dummy": 32
            },
            {
              "dummy": 116
            },
            {
              "dummy": 122
            },
            {
              "dummy": 21
            },
            {
              "dummy": 51
            },
            {
              "dummy": 72
            },
            {
              "dummy": 41
            },
            {
              "dummy": 50
            },
            {
              "dummy": 81
            },
            {
              "dummy": 22
            },
            {
              "dummy": 3
            },
            {
              "dummy": 7
            },
            {
              "dummy": 97
            },
            {
              "dummy": 1
            },
            {
              "dummy": 0
            },
            {
              "dummy": 43
            },
            {
              "dummy": 9
            },
            {
              "dummy": 103
            },
            {
              "dummy": 119
            }
          ]
        },
        "dummy_funcs": "int reg_w (struct gspca_dev * m, int z, int o, int b) {\n\tint returnv;\n\tint temp_variable = 74;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n",
        "dummy_funcs_seed": 1
      },
      {
        "input": {
          "gspca_dev": [
            {
              "dummy": 90
            },
            {
              "dummy": 7
            },
            {
              "dummy": 48
            },
            {
              "dummy": 22
            },
            {
              "dummy": 71
            },
            {
              "dummy": 113
            },
            {
              "dummy": 51
            },
            {
              "dummy": 112
            },
            {
              "dummy": 63
            },
            {
              "dummy": 46
            },
            {
              "dummy": 22
            },
            {
              "dummy": 109
            },
            {
              "dummy": 4
            },
            {
              "dummy": 28
            },
            {
              "dummy": 62
            },
            {
              "dummy": 57
            },
            {
              "dummy": 111
            },
            {
              "dummy": 40
            },
            {
              "dummy": 44
            },
            {
              "dummy": 70
            },
            {
              "dummy": 101
            },
            {
              "dummy": 16
            },
            {
              "dummy": 3
            },
            {
              "dummy": 102
            },
            {
              "dummy": 42
            },
            {
              "dummy": 125
            },
            {
              "dummy": 48
            },
            {
              "dummy": 107
            },
            {
              "dummy": 40
            },
            {
              "dummy": 62
            },
            {
              "dummy": 81
            },
            {
              "dummy": 8
            }
          ]
        },
        "output": {
          "gspca_dev": [
            {
              "dummy": 90
            },
            {
              "dummy": 7
            },
            {
              "dummy": 48
            },
            {
              "dummy": 22
            },
            {
              "dummy": 71
            },
            {
              "dummy": 113
            },
            {
              "dummy": 51
            },
            {
              "dummy": 112
            },
            {
              "dummy": 63
            },
            {
              "dummy": 46
            },
            {
              "dummy": 22
            },
            {
              "dummy": 109
            },
            {
              "dummy": 4
            },
            {
              "dummy": 28
            },
            {
              "dummy": 62
            },
            {
              "dummy": 57
            },
            {
              "dummy": 111
            },
            {
              "dummy": 40
            },
            {
              "dummy": 44
            },
            {
              "dummy": 70
            },
            {
              "dummy": 101
            },
            {
              "dummy": 16
            },
            {
              "dummy": 3
            },
            {
              "dummy": 102
            },
            {
              "dummy": 42
            },
            {
              "dummy": 125
            },
            {
              "dummy": 48
            },
            {
              "dummy": 107
            },
            {
              "dummy": 40
            },
            {
              "dummy": 62
            },
            {
              "dummy": 81
            },
            {
              "dummy": 8
            }
          ]
        },
        "dummy_funcs": "int reg_w (struct gspca_dev * m, int z, int o, int b) {\n\tint returnv;\n\tint temp_variable = 74;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n",
        "dummy_funcs_seed": 1
      },
      {
        "input": {
          "gspca_dev": [
            {
              "dummy": 89
            },
            {
              "dummy": 47
            },
            {
              "dummy": 106
            },
            {
              "dummy": 47
            },
            {
              "dummy": 47
            },
            {
              "dummy": 125
            },
            {
              "dummy": 110
            },
            {
              "dummy": 34
            },
            {
              "dummy": 47
            },
            {
              "dummy": 106
            },
            {
              "dummy": 53
            },
            {
              "dummy": 55
            },
            {
              "dummy": 2
            },
            {
              "dummy": 63
            },
            {
              "dummy": 79
            },
            {
              "dummy": 33
            },
            {
              "dummy": 19
            },
            {
              "dummy": 114
            },
            {
              "dummy": 124
            },
            {
              "dummy": 121
            },
            {
              "dummy": 20
            },
            {
              "dummy": 96
            },
            {
              "dummy": 98
            },
            {
              "dummy": 86
            },
            {
              "dummy": 14
            },
            {
              "dummy": 104
            },
            {
              "dummy": 6
            },
            {
              "dummy": 4
            },
            {
              "dummy": 59
            },
            {
              "dummy": 34
            },
            {
              "dummy": 75
            },
            {
              "dummy": 51
            }
          ]
        },
        "output": {
          "gspca_dev": [
            {
              "dummy": 89
            },
            {
              "dummy": 47
            },
            {
              "dummy": 106
            },
            {
              "dummy": 47
            },
            {
              "dummy": 47
            },
            {
              "dummy": 125
            },
            {
              "dummy": 110
            },
            {
              "dummy": 34
            },
            {
              "dummy": 47
            },
            {
              "dummy": 106
            },
            {
              "dummy": 53
            },
            {
              "dummy": 55
            },
            {
              "dummy": 2
            },
            {
              "dummy": 63
            },
            {
              "dummy": 79
            },
            {
              "dummy": 33
            },
            {
              "dummy": 19
            },
            {
              "dummy": 114
            },
            {
              "dummy": 124
            },
            {
              "dummy": 121
            },
            {
              "dummy": 20
            },
            {
              "dummy": 96
            },
            {
              "dummy": 98
            },
            {
              "dummy": 86
            },
            {
              "dummy": 14
            },
            {
              "dummy": 104
            },
            {
              "dummy": 6
            },
            {
              "dummy": 4
            },
            {
              "dummy": 59
            },
            {
              "dummy": 34
            },
            {
              "dummy": 75
            },
            {
              "dummy": 51
            }
          ]
        },
        "dummy_funcs": "int reg_w (struct gspca_dev * m, int z, int o, int b) {\n\tint returnv;\n\tint temp_variable = 74;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n",
        "dummy_funcs_seed": 1
      },
      {
        "input": {
          "gspca_dev": [
            {
              "dummy": 71
            },
            {
              "dummy": 33
            },
            {
              "dummy": 98
            },
            {
              "dummy": 82
            },
            {
              "dummy": 110
            },
            {
              "dummy": 38
            },
            {
              "dummy": 88
            },
            {
              "dummy": 36
            },
            {
              "dummy": 82
            },
            {
              "dummy": 60
            },
            {
              "dummy": 41
            },
            {
              "dummy": 107
            },
            {
              "dummy": 99
            },
            {
              "dummy": 81
            },
            {
              "dummy": 4
            },
            {
              "dummy": 30
            },
            {
              "dummy": 60
            },
            {
              "dummy": 84
            },
            {
              "dummy": 1
            },
            {
              "dummy": 94
            },
            {
              "dummy": 113
            },
            {
              "dummy": 57
            },
            {
              "dummy": 74
            },
            {
              "dummy": 31
            },
            {
              "dummy": 23
            },
            {
              "dummy": 0
            },
            {
              "dummy": 19
            },
            {
              "dummy": 43
            },
            {
              "dummy": 40
            },
            {
              "dummy": 14
            },
            {
              "dummy": 70
            },
            {
              "dummy": 28
            }
          ]
        },
        "output": {
          "gspca_dev": [
            {
              "dummy": 71
            },
            {
              "dummy": 33
            },
            {
              "dummy": 98
            },
            {
              "dummy": 82
            },
            {
              "dummy": 110
            },
            {
              "dummy": 38
            },
            {
              "dummy": 88
            },
            {
              "dummy": 36
            },
            {
              "dummy": 82
            },
            {
              "dummy": 60
            },
            {
              "dummy": 41
            },
            {
              "dummy": 107
            },
            {
              "dummy": 99
            },
            {
              "dummy": 81
            },
            {
              "dummy": 4
            },
            {
              "dummy": 30
            },
            {
              "dummy": 60
            },
            {
              "dummy": 84
            },
            {
              "dummy": 1
            },
            {
              "dummy": 94
            },
            {
              "dummy": 113
            },
            {
              "dummy": 57
            },
            {
              "dummy": 74
            },
            {
              "dummy": 31
            },
            {
              "dummy": 23
            },
            {
              "dummy": 0
            },
            {
              "dummy": 19
            },
            {
              "dummy": 43
            },
            {
              "dummy": 40
            },
            {
              "dummy": 14
            },
            {
              "dummy": 70
            },
            {
              "dummy": 28
            }
          ]
        },
        "dummy_funcs": "int reg_w (struct gspca_dev * m, int z, int o, int b) {\n\tint returnv;\n\tint temp_variable = 74;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n",
        "dummy_funcs_seed": 1
      },
      {
        "input": {
          "gspca_dev": [
            {
              "dummy": 95
            },
            {
              "dummy": 102
            },
            {
              "dummy": 11
            },
            {
              "dummy": 96
            },
            {
              "dummy": 17
            },
            {
              "dummy": 62
            },
            {
              "dummy": 124
            },
            {
              "dummy": 6
            },
            {
              "dummy": 88
            },
            {
              "dummy": 57
            },
            {
              "dummy": 79
            },
            {
              "dummy": 27
            },
            {
              "dummy": 43
            },
            {
              "dummy": 15
            },
            {
              "dummy": 38
            },
            {
              "dummy": 64
            },
            {
              "dummy": 72
            },
            {
              "dummy": 1
            },
            {
              "dummy": 75
            },
            {
              "dummy": 64
            },
            {
              "dummy": 91
            },
            {
              "dummy": 53
            },
            {
              "dummy": 67
            },
            {
              "dummy": 46
            },
            {
              "dummy": 84
            },
            {
              "dummy": 57
            },
            {
              "dummy": 115
            },
            {
              "dummy": 43
            },
            {
              "dummy": 17
            },
            {
              "dummy": 102
            },
            {
              "dummy": 23
            },
            {
              "dummy": 94
            }
          ]
        },
        "output": {
          "gspca_dev": [
            {
              "dummy": 95
            },
            {
              "dummy": 102
            },
            {
              "dummy": 11
            },
            {
              "dummy": 96
            },
            {
              "dummy": 17
            },
            {
              "dummy": 62
            },
            {
              "dummy": 124
            },
            {
              "dummy": 6
            },
            {
              "dummy": 88
            },
            {
              "dummy": 57
            },
            {
              "dummy": 79
            },
            {
              "dummy": 27
            },
            {
              "dummy": 43
            },
            {
              "dummy": 15
            },
            {
              "dummy": 38
            },
            {
              "dummy": 64
            },
            {
              "dummy": 72
            },
            {
              "dummy": 1
            },
            {
              "dummy": 75
            },
            {
              "dummy": 64
            },
            {
              "dummy": 91
            },
            {
              "dummy": 53
            },
            {
              "dummy": 67
            },
            {
              "dummy": 46
            },
            {
              "dummy": 84
            },
            {
              "dummy": 57
            },
            {
              "dummy": 115
            },
            {
              "dummy": 43
            },
            {
              "dummy": 17
            },
            {
              "dummy": 102
            },
            {
              "dummy": 23
            },
            {
              "dummy": 94
            }
          ]
        },
        "dummy_funcs": "int reg_w (struct gspca_dev * m, int z, int o, int b) {\n\tint returnv;\n\tint temp_variable = 74;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n",
        "dummy_funcs_seed": 1
      },
      {
        "input": {
          "gspca_dev": [
            {
              "dummy": 95
            },
            {
              "dummy": 17
            },
            {
              "dummy": 38
            },
            {
              "dummy": 74
            },
            {
              "dummy": 34
            },
            {
              "dummy": 81
            },
            {
              "dummy": 116
            },
            {
              "dummy": 11
            },
            {
              "dummy": 12
            },
            {
              "dummy": 102
            },
            {
              "dummy": 40
            },
            {
              "dummy": 121
            },
            {
              "dummy": 65
            },
            {
              "dummy": 34
            },
            {
              "dummy": 24
            },
            {
              "dummy": 98
            },
            {
              "dummy": 78
            },
            {
              "dummy": 20
            },
            {
              "dummy": 120
            },
            {
              "dummy": 26
            },
            {
              "dummy": 67
            },
            {
              "dummy": 69
            },
            {
              "dummy": 38
            },
            {
              "dummy": 69
            },
            {
              "dummy": 81
            },
            {
              "dummy": 49
            },
            {
              "dummy": 11
            },
            {
              "dummy": 43
            },
            {
              "dummy": 4
            },
            {
              "dummy": 57
            },
            {
              "dummy": 120
            },
            {
              "dummy": 8
            }
          ]
        },
        "output": {
          "gspca_dev": [
            {
              "dummy": 95
            },
            {
              "dummy": 17
            },
            {
              "dummy": 38
            },
            {
              "dummy": 74
            },
            {
              "dummy": 34
            },
            {
              "dummy": 81
            },
            {
              "dummy": 116
            },
            {
              "dummy": 11
            },
            {
              "dummy": 12
            },
            {
              "dummy": 102
            },
            {
              "dummy": 40
            },
            {
              "dummy": 121
            },
            {
              "dummy": 65
            },
            {
              "dummy": 34
            },
            {
              "dummy": 24
            },
            {
              "dummy": 98
            },
            {
              "dummy": 78
            },
            {
              "dummy": 20
            },
            {
              "dummy": 120
            },
            {
              "dummy": 26
            },
            {
              "dummy": 67
            },
            {
              "dummy": 69
            },
            {
              "dummy": 38
            },
            {
              "dummy": 69
            },
            {
              "dummy": 81
            },
            {
              "dummy": 49
            },
            {
              "dummy": 11
            },
            {
              "dummy": 43
            },
            {
              "dummy": 4
            },
            {
              "dummy": 57
            },
            {
              "dummy": 120
            },
            {
              "dummy": 8
            }
          ]
        },
        "dummy_funcs": "int reg_w (struct gspca_dev * m, int z, int o, int b) {\n\tint returnv;\n\tint temp_variable = 74;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n",
        "dummy_funcs_seed": 1
      },
      {
        "input": {
          "gspca_dev": [
            {
              "dummy": 124
            },
            {
              "dummy": 8
            },
            {
              "dummy": 112
            },
            {
              "dummy": 119
            },
            {
              "dummy": 64
            },
            {
              "dummy": 122
            },
            {
              "dummy": 58
            },
            {
              "dummy": 72
            },
            {
              "dummy": 48
            },
            {
              "dummy": 125
            },
            {
              "dummy": 7
            },
            {
              "dummy": 75
            },
            {
              "dummy": 61
            },
            {
              "dummy": 80
            },
            {
              "dummy": 116
            },
            {
              "dummy": 70
            },
            {
              "dummy": 60
            },
            {
              "dummy": 61
            },
            {
              "dummy": 52
            },
            {
              "dummy": 109
            },
            {
              "dummy": 7
            },
            {
              "dummy": 25
            },
            {
              "dummy": 107
            },
            {
              "dummy": 35
            },
            {
              "dummy": 12
            },
            {
              "dummy": 32
            },
            {
              "dummy": 66
            },
            {
              "dummy": 61
            },
            {
              "dummy": 36
            },
            {
              "dummy": 106
            },
            {
              "dummy": 29
            },
            {
              "dummy": 55
            }
          ]
        },
        "output": {
          "gspca_dev": [
            {
              "dummy": 124
            },
            {
              "dummy": 8
            },
            {
              "dummy": 112
            },
            {
              "dummy": 119
            },
            {
              "dummy": 64
            },
            {
              "dummy": 122
            },
            {
              "dummy": 58
            },
            {
              "dummy": 72
            },
            {
              "dummy": 48
            },
            {
              "dummy": 125
            },
            {
              "dummy": 7
            },
            {
              "dummy": 75
            },
            {
              "dummy": 61
            },
            {
              "dummy": 80
            },
            {
              "dummy": 116
            },
            {
              "dummy": 70
            },
            {
              "dummy": 60
            },
            {
              "dummy": 61
            },
            {
              "dummy": 52
            },
            {
              "dummy": 109
            },
            {
              "dummy": 7
            },
            {
              "dummy": 25
            },
            {
              "dummy": 107
            },
            {
              "dummy": 35
            },
            {
              "dummy": 12
            },
            {
              "dummy": 32
            },
            {
              "dummy": 66
            },
            {
              "dummy": 61
            },
            {
              "dummy": 36
            },
            {
              "dummy": 106
            },
            {
              "dummy": 29
            },
            {
              "dummy": 55
            }
          ]
        },
        "dummy_funcs": "int reg_w (struct gspca_dev * s, int z, int c, int j) {\n\tint returnv;\n\tint temp_variable = 113;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n",
        "dummy_funcs_seed": 2
      },
      {
        "input": {
          "gspca_dev": [
            {
              "dummy": 79
            },
            {
              "dummy": 41
            },
            {
              "dummy": 44
            },
            {
              "dummy": 110
            },
            {
              "dummy": 55
            },
            {
              "dummy": 114
            },
            {
              "dummy": 40
            },
            {
              "dummy": 10
            },
            {
              "dummy": 59
            },
            {
              "dummy": 67
            },
            {
              "dummy": 64
            },
            {
              "dummy": 78
            },
            {
              "dummy": 75
            },
            {
              "dummy": 59
            },
            {
              "dummy": 50
            },
            {
              "dummy": 114
            },
            {
              "dummy": 108
            },
            {
              "dummy": 114
            },
            {
              "dummy": 24
            },
            {
              "dummy": 79
            },
            {
              "dummy": 95
            },
            {
              "dummy": 20
            },
            {
              "dummy": 8
            },
            {
              "dummy": 91
            },
            {
              "dummy": 118
            },
            {
              "dummy": 33
            },
            {
              "dummy": 125
            },
            {
              "dummy": 56
            },
            {
              "dummy": 0
            },
            {
              "dummy": 17
            },
            {
              "dummy": 15
            },
            {
              "dummy": 119
            }
          ]
        },
        "output": {
          "gspca_dev": [
            {
              "dummy": 79
            },
            {
              "dummy": 41
            },
            {
              "dummy": 44
            },
            {
              "dummy": 110
            },
            {
              "dummy": 55
            },
            {
              "dummy": 114
            },
            {
              "dummy": 40
            },
            {
              "dummy": 10
            },
            {
              "dummy": 59
            },
            {
              "dummy": 67
            },
            {
              "dummy": 64
            },
            {
              "dummy": 78
            },
            {
              "dummy": 75
            },
            {
              "dummy": 59
            },
            {
              "dummy": 50
            },
            {
              "dummy": 114
            },
            {
              "dummy": 108
            },
            {
              "dummy": 114
            },
            {
              "dummy": 24
            },
            {
              "dummy": 79
            },
            {
              "dummy": 95
            },
            {
              "dummy": 20
            },
            {
              "dummy": 8
            },
            {
              "dummy": 91
            },
            {
              "dummy": 118
            },
            {
              "dummy": 33
            },
            {
              "dummy": 125
            },
            {
              "dummy": 56
            },
            {
              "dummy": 0
            },
            {
              "dummy": 17
            },
            {
              "dummy": 15
            },
            {
              "dummy": 119
            }
          ]
        },
        "dummy_funcs": "int reg_w (struct gspca_dev * s, int z, int c, int j) {\n\tint returnv;\n\tint temp_variable = 113;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n",
        "dummy_funcs_seed": 2
      },
      {
        "input": {
          "gspca_dev": [
            {
              "dummy": 73
            },
            {
              "dummy": 6
            },
            {
              "dummy": 53
            },
            {
              "dummy": 36
            },
            {
              "dummy": 113
            },
            {
              "dummy": 109
            },
            {
              "dummy": 19
            },
            {
              "dummy": 7
            },
            {
              "dummy": 56
            },
            {
              "dummy": 49
            },
            {
              "dummy": 121
            },
            {
              "dummy": 60
            },
            {
              "dummy": 70
            },
            {
              "dummy": 100
            },
            {
              "dummy": 72
            },
            {
              "dummy": 42
            },
            {
              "dummy": 99
            },
            {
              "dummy": 118
            },
            {
              "dummy": 101
            },
            {
              "dummy": 58
            },
            {
              "dummy": 104
            },
            {
              "dummy": 11
            },
            {
              "dummy": 79
            },
            {
              "dummy": 23
            },
            {
              "dummy": 110
            },
            {
              "dummy": 126
            },
            {
              "dummy": 115
            },
            {
              "dummy": 27
            },
            {
              "dummy": 95
            },
            {
              "dummy": 51
            },
            {
              "dummy": 92
            },
            {
              "dummy": 28
            }
          ]
        },
        "output": {
          "gspca_dev": [
            {
              "dummy": 73
            },
            {
              "dummy": 6
            },
            {
              "dummy": 53
            },
            {
              "dummy": 36
            },
            {
              "dummy": 113
            },
            {
              "dummy": 109
            },
            {
              "dummy": 19
            },
            {
              "dummy": 7
            },
            {
              "dummy": 56
            },
            {
              "dummy": 49
            },
            {
              "dummy": 121
            },
            {
              "dummy": 60
            },
            {
              "dummy": 70
            },
            {
              "dummy": 100
            },
            {
              "dummy": 72
            },
            {
              "dummy": 42
            },
            {
              "dummy": 99
            },
            {
              "dummy": 118
            },
            {
              "dummy": 101
            },
            {
              "dummy": 58
            },
            {
              "dummy": 104
            },
            {
              "dummy": 11
            },
            {
              "dummy": 79
            },
            {
              "dummy": 23
            },
            {
              "dummy": 110
            },
            {
              "dummy": 126
            },
            {
              "dummy": 115
            },
            {
              "dummy": 27
            },
            {
              "dummy": 95
            },
            {
              "dummy": 51
            },
            {
              "dummy": 92
            },
            {
              "dummy": 28
            }
          ]
        },
        "dummy_funcs": "int reg_w (struct gspca_dev * s, int z, int c, int j) {\n\tint returnv;\n\tint temp_variable = 113;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n",
        "dummy_funcs_seed": 2
      },
      {
        "input": {
          "gspca_dev": [
            {
              "dummy": 49
            },
            {
              "dummy": 59
            },
            {
              "dummy": 56
            },
            {
              "dummy": 25
            },
            {
              "dummy": 32
            },
            {
              "dummy": 79
            },
            {
              "dummy": 122
            },
            {
              "dummy": 14
            },
            {
              "dummy": 88
            },
            {
              "dummy": 3
            },
            {
              "dummy": 91
            },
            {
              "dummy": 101
            },
            {
              "dummy": 21
            },
            {
              "dummy": 98
            },
            {
              "dummy": 95
            },
            {
              "dummy": 69
            },
            {
              "dummy": 37
            },
            {
              "dummy": 2
            },
            {
              "dummy": 5
            },
            {
              "dummy": 78
            },
            {
              "dummy": 5
            },
            {
              "dummy": 84
            },
            {
              "dummy": 19
            },
            {
              "dummy": 85
            },
            {
              "dummy": 108
            },
            {
              "dummy": 51
            },
            {
              "dummy": 68
            },
            {
              "dummy": 96
            },
            {
              "dummy": 3
            },
            {
              "dummy": 6
            },
            {
              "dummy": 64
            },
            {
              "dummy": 69
            }
          ]
        },
        "output": {
          "gspca_dev": [
            {
              "dummy": 49
            },
            {
              "dummy": 59
            },
            {
              "dummy": 56
            },
            {
              "dummy": 25
            },
            {
              "dummy": 32
            },
            {
              "dummy": 79
            },
            {
              "dummy": 122
            },
            {
              "dummy": 14
            },
            {
              "dummy": 88
            },
            {
              "dummy": 3
            },
            {
              "dummy": 91
            },
            {
              "dummy": 101
            },
            {
              "dummy": 21
            },
            {
              "dummy": 98
            },
            {
              "dummy": 95
            },
            {
              "dummy": 69
            },
            {
              "dummy": 37
            },
            {
              "dummy": 2
            },
            {
              "dummy": 5
            },
            {
              "dummy": 78
            },
            {
              "dummy": 5
            },
            {
              "dummy": 84
            },
            {
              "dummy": 19
            },
            {
              "dummy": 85
            },
            {
              "dummy": 108
            },
            {
              "dummy": 51
            },
            {
              "dummy": 68
            },
            {
              "dummy": 96
            },
            {
              "dummy": 3
            },
            {
              "dummy": 6
            },
            {
              "dummy": 64
            },
            {
              "dummy": 69
            }
          ]
        },
        "dummy_funcs": "int reg_w (struct gspca_dev * s, int z, int c, int j) {\n\tint returnv;\n\tint temp_variable = 113;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n",
        "dummy_funcs_seed": 2
      },
      {
        "input": {
          "gspca_dev": [
            {
              "dummy": 86
            },
            {
              "dummy": 113
            },
            {
              "dummy": 53
            },
            {
              "dummy": 68
            },
            {
              "dummy": 40
            },
            {
              "dummy": 122
            },
            {
              "dummy": 17
            },
            {
              "dummy": 66
            },
            {
              "dummy": 20
            },
            {
              "dummy": 33
            },
            {
              "dummy": 79
            },
            {
              "dummy": 10
            },
            {
              "dummy": 121
            },
            {
              "dummy": 32
            },
            {
              "dummy": 116
            },
            {
              "dummy": 122
            },
            {
              "dummy": 21
            },
            {
              "dummy": 51
            },
            {
              "dummy": 72
            },
            {
              "dummy": 41
            },
            {
              "dummy": 50
            },
            {
              "dummy": 81
            },
            {
              "dummy": 22
            },
            {
              "dummy": 3
            },
            {
              "dummy": 7
            },
            {
              "dummy": 97
            },
            {
              "dummy": 1
            },
            {
              "dummy": 0
            },
            {
              "dummy": 43
            },
            {
              "dummy": 9
            },
            {
              "dummy": 103
            },
            {
              "dummy": 119
            }
          ]
        },
        "output": {
          "gspca_dev": [
            {
              "dummy": 86
            },
            {
              "dummy": 113
            },
            {
              "dummy": 53
            },
            {
              "dummy": 68
            },
            {
              "dummy": 40
            },
            {
              "dummy": 122
            },
            {
              "dummy": 17
            },
            {
              "dummy": 66
            },
            {
              "dummy": 20
            },
            {
              "dummy": 33
            },
            {
              "dummy": 79
            },
            {
              "dummy": 10
            },
            {
              "dummy": 121
            },
            {
              "dummy": 32
            },
            {
              "dummy": 116
            },
            {
              "dummy": 122
            },
            {
              "dummy": 21
            },
            {
              "dummy": 51
            },
            {
              "dummy": 72
            },
            {
              "dummy": 41
            },
            {
              "dummy": 50
            },
            {
              "dummy": 81
            },
            {
              "dummy": 22
            },
            {
              "dummy": 3
            },
            {
              "dummy": 7
            },
            {
              "dummy": 97
            },
            {
              "dummy": 1
            },
            {
              "dummy": 0
            },
            {
              "dummy": 43
            },
            {
              "dummy": 9
            },
            {
              "dummy": 103
            },
            {
              "dummy": 119
            }
          ]
        },
        "dummy_funcs": "int reg_w (struct gspca_dev * s, int z, int c, int j) {\n\tint returnv;\n\tint temp_variable = 113;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n",
        "dummy_funcs_seed": 2
      },
      {
        "input": {
          "gspca_dev": [
            {
              "dummy": 90
            },
            {
              "dummy": 7
            },
            {
              "dummy": 48
            },
            {
              "dummy": 22
            },
            {
              "dummy": 71
            },
            {
              "dummy": 113
            },
            {
              "dummy": 51
            },
            {
              "dummy": 112
            },
            {
              "dummy": 63
            },
            {
              "dummy": 46
            },
            {
              "dummy": 22
            },
            {
              "dummy": 109
            },
            {
              "dummy": 4
            },
            {
              "dummy": 28
            },
            {
              "dummy": 62
            },
            {
              "dummy": 57
            },
            {
              "dummy": 111
            },
            {
              "dummy": 40
            },
            {
              "dummy": 44
            },
            {
              "dummy": 70
            },
            {
              "dummy": 101
            },
            {
              "dummy": 16
            },
            {
              "dummy": 3
            },
            {
              "dummy": 102
            },
            {
              "dummy": 42
            },
            {
              "dummy": 125
            },
            {
              "dummy": 48
            },
            {
              "dummy": 107
            },
            {
              "dummy": 40
            },
            {
              "dummy": 62
            },
            {
              "dummy": 81
            },
            {
              "dummy": 8
            }
          ]
        },
        "output": {
          "gspca_dev": [
            {
              "dummy": 90
            },
            {
              "dummy": 7
            },
            {
              "dummy": 48
            },
            {
              "dummy": 22
            },
            {
              "dummy": 71
            },
            {
              "dummy": 113
            },
            {
              "dummy": 51
            },
            {
              "dummy": 112
            },
            {
              "dummy": 63
            },
            {
              "dummy": 46
            },
            {
              "dummy": 22
            },
            {
              "dummy": 109
            },
            {
              "dummy": 4
            },
            {
              "dummy": 28
            },
            {
              "dummy": 62
            },
            {
              "dummy": 57
            },
            {
              "dummy": 111
            },
            {
              "dummy": 40
            },
            {
              "dummy": 44
            },
            {
              "dummy": 70
            },
            {
              "dummy": 101
            },
            {
              "dummy": 16
            },
            {
              "dummy": 3
            },
            {
              "dummy": 102
            },
            {
              "dummy": 42
            },
            {
              "dummy": 125
            },
            {
              "dummy": 48
            },
            {
              "dummy": 107
            },
            {
              "dummy": 40
            },
            {
              "dummy": 62
            },
            {
              "dummy": 81
            },
            {
              "dummy": 8
            }
          ]
        },
        "dummy_funcs": "int reg_w (struct gspca_dev * s, int z, int c, int j) {\n\tint returnv;\n\tint temp_variable = 113;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n",
        "dummy_funcs_seed": 2
      },
      {
        "input": {
          "gspca_dev": [
            {
              "dummy": 89
            },
            {
              "dummy": 47
            },
            {
              "dummy": 106
            },
            {
              "dummy": 47
            },
            {
              "dummy": 47
            },
            {
              "dummy": 125
            },
            {
              "dummy": 110
            },
            {
              "dummy": 34
            },
            {
              "dummy": 47
            },
            {
              "dummy": 106
            },
            {
              "dummy": 53
            },
            {
              "dummy": 55
            },
            {
              "dummy": 2
            },
            {
              "dummy": 63
            },
            {
              "dummy": 79
            },
            {
              "dummy": 33
            },
            {
              "dummy": 19
            },
            {
              "dummy": 114
            },
            {
              "dummy": 124
            },
            {
              "dummy": 121
            },
            {
              "dummy": 20
            },
            {
              "dummy": 96
            },
            {
              "dummy": 98
            },
            {
              "dummy": 86
            },
            {
              "dummy": 14
            },
            {
              "dummy": 104
            },
            {
              "dummy": 6
            },
            {
              "dummy": 4
            },
            {
              "dummy": 59
            },
            {
              "dummy": 34
            },
            {
              "dummy": 75
            },
            {
              "dummy": 51
            }
          ]
        },
        "output": {
          "gspca_dev": [
            {
              "dummy": 89
            },
            {
              "dummy": 47
            },
            {
              "dummy": 106
            },
            {
              "dummy": 47
            },
            {
              "dummy": 47
            },
            {
              "dummy": 125
            },
            {
              "dummy": 110
            },
            {
              "dummy": 34
            },
            {
              "dummy": 47
            },
            {
              "dummy": 106
            },
            {
              "dummy": 53
            },
            {
              "dummy": 55
            },
            {
              "dummy": 2
            },
            {
              "dummy": 63
            },
            {
              "dummy": 79
            },
            {
              "dummy": 33
            },
            {
              "dummy": 19
            },
            {
              "dummy": 114
            },
            {
              "dummy": 124
            },
            {
              "dummy": 121
            },
            {
              "dummy": 20
            },
            {
              "dummy": 96
            },
            {
              "dummy": 98
            },
            {
              "dummy": 86
            },
            {
              "dummy": 14
            },
            {
              "dummy": 104
            },
            {
              "dummy": 6
            },
            {
              "dummy": 4
            },
            {
              "dummy": 59
            },
            {
              "dummy": 34
            },
            {
              "dummy": 75
            },
            {
              "dummy": 51
            }
          ]
        },
        "dummy_funcs": "int reg_w (struct gspca_dev * s, int z, int c, int j) {\n\tint returnv;\n\tint temp_variable = 113;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n",
        "dummy_funcs_seed": 2
      },
      {
        "input": {
          "gspca_dev": [
            {
              "dummy": 71
            },
            {
              "dummy": 33
            },
            {
              "dummy": 98
            },
            {
              "dummy": 82
            },
            {
              "dummy": 110
            },
            {
              "dummy": 38
            },
            {
              "dummy": 88
            },
            {
              "dummy": 36
            },
            {
              "dummy": 82
            },
            {
              "dummy": 60
            },
            {
              "dummy": 41
            },
            {
              "dummy": 107
            },
            {
              "dummy": 99
            },
            {
              "dummy": 81
            },
            {
              "dummy": 4
            },
            {
              "dummy": 30
            },
            {
              "dummy": 60
            },
            {
              "dummy": 84
            },
            {
              "dummy": 1
            },
            {
              "dummy": 94
            },
            {
              "dummy": 113
            },
            {
              "dummy": 57
            },
            {
              "dummy": 74
            },
            {
              "dummy": 31
            },
            {
              "dummy": 23
            },
            {
              "dummy": 0
            },
            {
              "dummy": 19
            },
            {
              "dummy": 43
            },
            {
              "dummy": 40
            },
            {
              "dummy": 14
            },
            {
              "dummy": 70
            },
            {
              "dummy": 28
            }
          ]
        },
        "output": {
          "gspca_dev": [
            {
              "dummy": 71
            },
            {
              "dummy": 33
            },
            {
              "dummy": 98
            },
            {
              "dummy": 82
            },
            {
              "dummy": 110
            },
            {
              "dummy": 38
            },
            {
              "dummy": 88
            },
            {
              "dummy": 36
            },
            {
              "dummy": 82
            },
            {
              "dummy": 60
            },
            {
              "dummy": 41
            },
            {
              "dummy": 107
            },
            {
              "dummy": 99
            },
            {
              "dummy": 81
            },
            {
              "dummy": 4
            },
            {
              "dummy": 30
            },
            {
              "dummy": 60
            },
            {
              "dummy": 84
            },
            {
              "dummy": 1
            },
            {
              "dummy": 94
            },
            {
              "dummy": 113
            },
            {
              "dummy": 57
            },
            {
              "dummy": 74
            },
            {
              "dummy": 31
            },
            {
              "dummy": 23
            },
            {
              "dummy": 0
            },
            {
              "dummy": 19
            },
            {
              "dummy": 43
            },
            {
              "dummy": 40
            },
            {
              "dummy": 14
            },
            {
              "dummy": 70
            },
            {
              "dummy": 28
            }
          ]
        },
        "dummy_funcs": "int reg_w (struct gspca_dev * s, int z, int c, int j) {\n\tint returnv;\n\tint temp_variable = 113;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n",
        "dummy_funcs_seed": 2
      },
      {
        "input": {
          "gspca_dev": [
            {
              "dummy": 95
            },
            {
              "dummy": 102
            },
            {
              "dummy": 11
            },
            {
              "dummy": 96
            },
            {
              "dummy": 17
            },
            {
              "dummy": 62
            },
            {
              "dummy": 124
            },
            {
              "dummy": 6
            },
            {
              "dummy": 88
            },
            {
              "dummy": 57
            },
            {
              "dummy": 79
            },
            {
              "dummy": 27
            },
            {
              "dummy": 43
            },
            {
              "dummy": 15
            },
            {
              "dummy": 38
            },
            {
              "dummy": 64
            },
            {
              "dummy": 72
            },
            {
              "dummy": 1
            },
            {
              "dummy": 75
            },
            {
              "dummy": 64
            },
            {
              "dummy": 91
            },
            {
              "dummy": 53
            },
            {
              "dummy": 67
            },
            {
              "dummy": 46
            },
            {
              "dummy": 84
            },
            {
              "dummy": 57
            },
            {
              "dummy": 115
            },
            {
              "dummy": 43
            },
            {
              "dummy": 17
            },
            {
              "dummy": 102
            },
            {
              "dummy": 23
            },
            {
              "dummy": 94
            }
          ]
        },
        "output": {
          "gspca_dev": [
            {
              "dummy": 95
            },
            {
              "dummy": 102
            },
            {
              "dummy": 11
            },
            {
              "dummy": 96
            },
            {
              "dummy": 17
            },
            {
              "dummy": 62
            },
            {
              "dummy": 124
            },
            {
              "dummy": 6
            },
            {
              "dummy": 88
            },
            {
              "dummy": 57
            },
            {
              "dummy": 79
            },
            {
              "dummy": 27
            },
            {
              "dummy": 43
            },
            {
              "dummy": 15
            },
            {
              "dummy": 38
            },
            {
              "dummy": 64
            },
            {
              "dummy": 72
            },
            {
              "dummy": 1
            },
            {
              "dummy": 75
            },
            {
              "dummy": 64
            },
            {
              "dummy": 91
            },
            {
              "dummy": 53
            },
            {
              "dummy": 67
            },
            {
              "dummy": 46
            },
            {
              "dummy": 84
            },
            {
              "dummy": 57
            },
            {
              "dummy": 115
            },
            {
              "dummy": 43
            },
            {
              "dummy": 17
            },
            {
              "dummy": 102
            },
            {
              "dummy": 23
            },
            {
              "dummy": 94
            }
          ]
        },
        "dummy_funcs": "int reg_w (struct gspca_dev * s, int z, int c, int j) {\n\tint returnv;\n\tint temp_variable = 113;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n",
        "dummy_funcs_seed": 2
      },
      {
        "input": {
          "gspca_dev": [
            {
              "dummy": 95
            },
            {
              "dummy": 17
            },
            {
              "dummy": 38
            },
            {
              "dummy": 74
            },
            {
              "dummy": 34
            },
            {
              "dummy": 81
            },
            {
              "dummy": 116
            },
            {
              "dummy": 11
            },
            {
              "dummy": 12
            },
            {
              "dummy": 102
            },
            {
              "dummy": 40
            },
            {
              "dummy": 121
            },
            {
              "dummy": 65
            },
            {
              "dummy": 34
            },
            {
              "dummy": 24
            },
            {
              "dummy": 98
            },
            {
              "dummy": 78
            },
            {
              "dummy": 20
            },
            {
              "dummy": 120
            },
            {
              "dummy": 26
            },
            {
              "dummy": 67
            },
            {
              "dummy": 69
            },
            {
              "dummy": 38
            },
            {
              "dummy": 69
            },
            {
              "dummy": 81
            },
            {
              "dummy": 49
            },
            {
              "dummy": 11
            },
            {
              "dummy": 43
            },
            {
              "dummy": 4
            },
            {
              "dummy": 57
            },
            {
              "dummy": 120
            },
            {
              "dummy": 8
            }
          ]
        },
        "output": {
          "gspca_dev": [
            {
              "dummy": 95
            },
            {
              "dummy": 17
            },
            {
              "dummy": 38
            },
            {
              "dummy": 74
            },
            {
              "dummy": 34
            },
            {
              "dummy": 81
            },
            {
              "dummy": 116
            },
            {
              "dummy": 11
            },
            {
              "dummy": 12
            },
            {
              "dummy": 102
            },
            {
              "dummy": 40
            },
            {
              "dummy": 121
            },
            {
              "dummy": 65
            },
            {
              "dummy": 34
            },
            {
              "dummy": 24
            },
            {
              "dummy": 98
            },
            {
              "dummy": 78
            },
            {
              "dummy": 20
            },
            {
              "dummy": 120
            },
            {
              "dummy": 26
            },
            {
              "dummy": 67
            },
            {
              "dummy": 69
            },
            {
              "dummy": 38
            },
            {
              "dummy": 69
            },
            {
              "dummy": 81
            },
            {
              "dummy": 49
            },
            {
              "dummy": 11
            },
            {
              "dummy": 43
            },
            {
              "dummy": 4
            },
            {
              "dummy": 57
            },
            {
              "dummy": 120
            },
            {
              "dummy": 8
            }
          ]
        },
        "dummy_funcs": "int reg_w (struct gspca_dev * s, int z, int c, int j) {\n\tint returnv;\n\tint temp_variable = 113;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n",
        "dummy_funcs_seed": 2
      }
    ],
    "real_io_pairs": null,
    "angha_io_error": null,
    "real_io_error": null,
    "angha_exe_wrapper": "extern \"C\" {\n#include \"/run/user/1000/pytmpfile_jordiws_3577741z7su43vf.c\"\n}\n\n#include <vector>\n#include <nlohmann/json.hpp>\n#include <fstream>\n#include <iomanip>\n#include <clib/synthesizer.h>\n#include <time.h>\n#include <math.h>\n#include <iostream>\nchar* output_file;\nchar* pre_accel_dump_file;  // optional dump file.\nusing json = nlohmann::json;\nconst char* __asan_default_options() {\n  return \"detect_leaks=0\";\n}\n\nclock_t AcceleratorStart;\nclock_t AcceleratorTotalNanos = 0;\nvoid StartAcceleratorTimer() {\n  AcceleratorStart = clock();\n}\n\nvoid StopAcceleratorTimer() {\n  AcceleratorTotalNanos += (clock()) - AcceleratorStart;\n}\n\nvoid write_output(struct gspca_dev* gspca_dev) {\n  json output_json;\n  std::vector<json> output_temp_2;\n  for (unsigned int i3 = 0; i3 < 32; i3++) {\n    struct gspca_dev output_temp_4 = gspca_dev[i3];\n    json output_temp_5;\n\n    output_temp_5[\"dummy\"] = output_temp_4.dummy;\n    output_temp_2.push_back(output_temp_5);\n  }\n  output_json[\"gspca_dev\"] = output_temp_2;\n  std::ofstream out_str(output_file);\n  out_str << std::setw(4) << output_json << std::endl;\n}\nint main(int argc, char** argv) {\n  char* inpname = argv[1];\n  output_file = argv[2];\n\n  std::ifstream ifs(inpname);\n  json input_json = json::parse(ifs);\n  std::vector<struct gspca_dev> input_temp_1_vec;\n  for (auto& elem : input_json[\"gspca_dev\"]) {\n    int input_temp_1_inner__dummy = elem[\"dummy\"];\n    struct gspca_dev input_temp_1_inner = {input_temp_1_inner__dummy};\n    input_temp_1_vec.push_back(input_temp_1_inner);\n  }\n  struct gspca_dev* gspca_dev = &input_temp_1_vec[0];\n  clock_t begin = clock();\n  setbrightness(gspca_dev);\n  clock_t end = clock();\n  std::cout << \"Time: \" << (double)(end - begin) / CLOCKS_PER_SEC << std::endl;\n  std::cout << \"AccTime: \" << (double)AcceleratorTotalNanos / CLOCKS_PER_SEC << std::endl;\n  write_output(gspca_dev);\n}",
    "real_exe_wrapper": null,
    "angha_io_pairs_are_trivial": true,
    "real_io_pairs_are_trivial": true,
    "angha_iospec": {
      "livein": [
        "gspca_dev"
      ],
      "liveout": [
        "gspca_dev"
      ],
      "returnvarname": [],
      "execcmd": "",
      "funname": "setbrightness",
      "funargs": [
        "gspca_dev"
      ],
      "typemap": {
        "gspca_dev": "array(struct gspca_dev#32)"
      },
      "required_includes": [
        "/run/user/1000/pytmpfile_jordiws_3577741z7su43vf.c"
      ],
      "classmap": {
        "struct gspca_dev": {
          "type": "struct",
          "symbols": [
            "dummy"
          ],
          "typemap": {
            "dummy": "int32"
          }
        }
      },
      "range": {},
      "needs_cast": {},
      "globals": []
    },
    "real_iospec": null,
    "ref": "master",
    "func_head_types": "void setbrightness(struct gspca_dev *gspca_dev)"
  },
  "meta": {}
}
----------------------------------------
Entry 6:
{
  "text": {
    "path": "rmcnew/cPharos/src/ray.h",
    "func_def": "Point* pointPlusPoint(Point* pA, Point* pB) {\n    Point* retVal = NULL;\n    if ((pA == NULL) || (pB == NULL)) {\n        fprintf(stderr, \"pointPlusPoint parameters cannot be NULL!\\n\");\n } else {\n        retVal = newPoint(pA->x + pB->x, pA->y + pB->y, pA->z + pB->z);\n    }\n    return retVal;\n}",
    "func_head": "Point * pointPlusPoint(Point *pA, Point *pB)",
    "fname": "pointPlusPoint",
    "signature": [
      "Point *",
      "Point *",
      "Point *"
    ],
    "doc": null,
    "angha_error": "",
    "real_error": "<stdin>:1:1: error: unknown type name \u2018Point\u2019; did you mean \u2018int\u2019?\n<stdin>:1:23: error: unknown type name \u2018Point\u2019; did you mean \u2018int\u2019?\n<stdin>:1:34: error: unknown type name \u2018Point\u2019; did you mean \u2018int\u2019?\n",
    "asm": {
      "angha_gcc_x86_O0": {
        "pre_asm": "\t.file\t\"\"\n\t.text\n\t.comm\tstderr,4,4\n\t.section\t.rodata\n\t.align 8\n.LC0:\n\t.string\t\"pointPlusPoint parameters cannot be NULL!\\n\"\n\t.text\n\t.globl\tpointPlusPoint\n\t.type\tpointPlusPoint, @function\n",
        "func_asm": ".globl pointPlusPoint\n.type pointPlusPoint, @function\npointPlusPoint:\n.LFB0:\n\t.cfi_startproc\n\tendbr64\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset 6, -16\n\tmovq\t%rsp, %rbp\n\t.cfi_def_cfa_register 6\n\tsubq\t$32, %rsp\n\tmovq\t%rdi, -24(%rbp)\n\tmovq\t%rsi, -32(%rbp)\n\tmovq\t$0, -8(%rbp)\n\tcmpq\t$0, -24(%rbp)\n\tje\t.L2\n\tcmpq\t$0, -32(%rbp)\n\tjne\t.L3\n.L2:\n\tmovl\tstderr(%rip), %eax\n\tleaq\t.LC0(%rip), %rsi\n\tmovl\t%eax, %edi\n\tcall\tfprintf@PLT\n\tjmp\t.L4\n.L3:\n\tmovq\t-24(%rbp), %rax\n\tmovq\t(%rax), %rdx\n\tmovq\t-32(%rbp), %rax\n\tmovq\t(%rax), %rax\n\taddq\t%rax, %rdx\n\tmovq\t-24(%rbp), %rax\n\tmovq\t8(%rax), %rcx\n\tmovq\t-32(%rbp), %rax\n\tmovq\t8(%rax), %rax\n\taddq\t%rax, %rcx\n\tmovq\t-24(%rbp), %rax\n\tmovq\t16(%rax), %rsi\n\tmovq\t-32(%rbp), %rax\n\tmovq\t16(%rax), %rax\n\taddq\t%rsi, %rax\n\tmovq\t%rcx, %rsi\n\tmovq\t%rax, %rdi\n\tcall\tnewPoint@PLT\n\tmovq\t%rax, -8(%rbp)\n.L4:\n\tmovq\t-8(%rbp), %rax\n\tleave\n\t.cfi_def_cfa 7, 8\n\tret\n\t.cfi_endproc\n.LC0: \t.string\t\"pointPlusPoint parameters cannot be NULL!\\n\"\n",
        "post_asm": ".LFE0:\n\t.size\tpointPlusPoint, .-pointPlusPoint\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n\t.section\t.note.gnu.property,\"a\"\n\t.align 8\n\t.long\t 1f - 0f\n\t.long\t 4f - 1f\n\t.long\t 5\n0:\n\t.string\t \"GNU\"\n1:\n\t.align 8\n\t.long\t 0xc0000002\n\t.long\t 3f - 2f\n2:\n\t.long\t 0x3\n3:\n\t.align 8\n4:\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "0"
        }
      },
      "angha_gcc_x86_Os": {
        "pre_asm": "\t.file\t\"\"\n\t.text\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.LC0:\n\t.string\t\"pointPlusPoint parameters cannot be NULL!\\n\"\n\t.text\n\t.globl\tpointPlusPoint\n\t.type\tpointPlusPoint, @function\n",
        "func_asm": ".globl pointPlusPoint\n.type pointPlusPoint, @function\npointPlusPoint:\n.LFB0:\n\t.cfi_startproc\n\tendbr64\n\ttestq\t%rdi, %rdi\n\tje\t.L5\n\ttestq\t%rsi, %rsi\n\tje\t.L5\n\tmovq\t8(%rsi), %r8\n\tmovq\t16(%rsi), %rax\n\taddq\t8(%rdi), %r8\n\taddq\t16(%rdi), %rax\n\tmovq\t(%rsi), %rdx\n\tmovq\t%r8, %rsi\n\taddq\t(%rdi), %rdx\n\tmovq\t%rax, %rdi\n\tjmp\tnewPoint@PLT\n.L5:\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 16\n\tmovl\tstderr(%rip), %edi\n\tleaq\t.LC0(%rip), %rsi\n\tcall\tfprintf@PLT\n\txorl\t%eax, %eax\n\tpopq\t%rdx\n\t.cfi_def_cfa_offset 8\n\tret\n\t.cfi_endproc\n.LC0: \t.string\t\"pointPlusPoint parameters cannot be NULL!\\n\"\n",
        "post_asm": ".LFE0:\n\t.size\tpointPlusPoint, .-pointPlusPoint\n\t.comm\tstderr,4,4\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n\t.section\t.note.gnu.property,\"a\"\n\t.align 8\n\t.long\t 1f - 0f\n\t.long\t 4f - 1f\n\t.long\t 5\n0:\n\t.string\t \"GNU\"\n1:\n\t.align 8\n\t.long\t 0xc0000002\n\t.long\t 3f - 2f\n2:\n\t.long\t 0x3\n3:\n\t.align 8\n4:\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "s"
        }
      },
      "angha_gcc_x86_O3": {
        "pre_asm": "\t.file\t\"\"\n\t.text\n\t.section\t.rodata.str1.8,\"aMS\",@progbits,1\n\t.align 8\n.LC0:\n\t.string\t\"pointPlusPoint parameters cannot be NULL!\\n\"\n\t.text\n\t.p2align 4\n\t.globl\tpointPlusPoint\n\t.type\tpointPlusPoint, @function\n",
        "func_asm": ".globl pointPlusPoint\n.type pointPlusPoint, @function\npointPlusPoint:\n.LFB0:\n\t.cfi_startproc\n\tendbr64\n\ttestq\t%rdi, %rdi\n\tje\t.L5\n\ttestq\t%rsi, %rsi\n\tje\t.L5\n\tmovq\t8(%rsi), %r8\n\tmovq\t16(%rsi), %rax\n\taddq\t8(%rdi), %r8\n\taddq\t16(%rdi), %rax\n\tmovq\t(%rsi), %rdx\n\tmovq\t%r8, %rsi\n\taddq\t(%rdi), %rdx\n\tmovq\t%rax, %rdi\n\tjmp\tnewPoint@PLT\n\t.p2align 4,,10\n\t.p2align 3\n.L5:\n\tsubq\t$8, %rsp\n\t.cfi_def_cfa_offset 16\n\tmovl\tstderr(%rip), %edi\n\tleaq\t.LC0(%rip), %rsi\n\tcall\tfprintf@PLT\n\txorl\t%eax, %eax\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 8\n\tret\n\t.cfi_endproc\n.LC0: \t.string\t\"pointPlusPoint parameters cannot be NULL!\\n\"\n",
        "post_asm": ".LFE0:\n\t.size\tpointPlusPoint, .-pointPlusPoint\n\t.comm\tstderr,4,4\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n\t.section\t.note.gnu.property,\"a\"\n\t.align 8\n\t.long\t 1f - 0f\n\t.long\t 4f - 1f\n\t.long\t 5\n0:\n\t.string\t \"GNU\"\n1:\n\t.align 8\n\t.long\t 0xc0000002\n\t.long\t 3f - 2f\n2:\n\t.long\t 0x3\n3:\n\t.align 8\n4:\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "3"
        }
      },
      "angha_gcc_arm_O0": {
        "pre_asm": "\t.arch armv8-a\n\t.file\t\"\"\n\t.text\n\t.comm\tstderr,4,4\n\t.section\t.rodata\n\t.align\t3\n.LC0:\n\t.string\t\"pointPlusPoint parameters cannot be NULL!\\n\"\n\t.text\n\t.align\t2\n\t.global\tpointPlusPoint\n\t.type\tpointPlusPoint, %function\n",
        "func_asm": ".global pointPlusPoint\n.type pointPlusPoint, %function\npointPlusPoint:\n.LFB0:\n\t.cfi_startproc\n\tstp\tx29, x30, [sp, -48]!\n\t.cfi_def_cfa_offset 48\n\t.cfi_offset 29, -48\n\t.cfi_offset 30, -40\n\tmov\tx29, sp\n\tstr\tx0, [sp, 24]\n\tstr\tx1, [sp, 16]\n\tstr\txzr, [sp, 40]\n\tldr\tx0, [sp, 24]\n\tcmp\tx0, 0\n\tbeq\t.L2\n\tldr\tx0, [sp, 16]\n\tcmp\tx0, 0\n\tbne\t.L3\n.L2:\n\tadrp\tx0, :got:stderr\n\tldr\tx0, [x0, #:got_lo12:stderr]\n\tldr\tw2, [x0]\n\tadrp\tx0, .LC0\n\tadd\tx1, x0, :lo12:.LC0\n\tmov\tw0, w2\n\tbl\tfprintf\n\tb\t.L4\n.L3:\n\tldr\tx0, [sp, 24]\n\tldr\tx1, [x0, 16]\n\tldr\tx0, [sp, 16]\n\tldr\tx0, [x0, 16]\n\tadd\tx3, x1, x0\n\tldr\tx0, [sp, 24]\n\tldr\tx1, [x0, 8]\n\tldr\tx0, [sp, 16]\n\tldr\tx0, [x0, 8]\n\tadd\tx4, x1, x0\n\tldr\tx0, [sp, 24]\n\tldr\tx1, [x0]\n\tldr\tx0, [sp, 16]\n\tldr\tx0, [x0]\n\tadd\tx0, x1, x0\n\tmov\tx2, x0\n\tmov\tx1, x4\n\tmov\tx0, x3\n\tbl\tnewPoint\n\tstr\tx0, [sp, 40]\n.L4:\n\tldr\tx0, [sp, 40]\n\tldp\tx29, x30, [sp], 48\n\t.cfi_restore 30\n\t.cfi_restore 29\n\t.cfi_def_cfa_offset 0\n\tret\n\t.cfi_endproc\n.LC0: \t.string\t\"pointPlusPoint parameters cannot be NULL!\\n\"\n",
        "post_asm": ".LFE0:\n\t.size\tpointPlusPoint, .-pointPlusPoint\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "0"
        }
      },
      "angha_gcc_arm_Os": {
        "pre_asm": "\t.arch armv8-a\n\t.file\t\"\"\n\t.text\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.LC0:\n\t.string\t\"pointPlusPoint parameters cannot be NULL!\\n\"\n\t.text\n\t.align\t2\n\t.global\tpointPlusPoint\n\t.type\tpointPlusPoint, %function\n",
        "func_asm": ".global pointPlusPoint\n.type pointPlusPoint, %function\npointPlusPoint:\n.LFB0:\n\t.cfi_startproc\n\tcmp\tx0, 0\n\tccmp\tx1, 0, 4, ne\n\tbeq\t.L5\n\tldp\tx6, x5, [x0]\n\tldp\tx2, x4, [x1]\n\tldr\tx3, [x0, 16]\n\tldr\tx0, [x1, 16]\n\tadd\tx2, x6, x2\n\tadd\tx1, x5, x4\n\tadd\tx0, x3, x0\n\tb\tnewPoint\n.L5:\n\tstp\tx29, x30, [sp, -16]!\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset 29, -16\n\t.cfi_offset 30, -8\n\tadrp\tx0, :got:stderr\n\tadrp\tx1, .LC0\n\tmov\tx29, sp\n\tldr\tx0, [x0, #:got_lo12:stderr]\n\tadd\tx1, x1, :lo12:.LC0\n\tldr\tw0, [x0]\n\tbl\tfprintf\n\tmov\tx0, 0\n\tldp\tx29, x30, [sp], 16\n\t.cfi_restore 30\n\t.cfi_restore 29\n\t.cfi_def_cfa_offset 0\n\tret\n\t.cfi_endproc\n.LC0: \t.string\t\"pointPlusPoint parameters cannot be NULL!\\n\"\n",
        "post_asm": ".LFE0:\n\t.size\tpointPlusPoint, .-pointPlusPoint\n\t.comm\tstderr,4,4\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "s"
        }
      },
      "angha_gcc_arm_O3": {
        "pre_asm": "\t.arch armv8-a\n\t.file\t\"\"\n\t.text\n\t.section\t.rodata.str1.8,\"aMS\",@progbits,1\n\t.align\t3\n.LC0:\n\t.string\t\"pointPlusPoint parameters cannot be NULL!\\n\"\n\t.text\n\t.align\t2\n\t.p2align 3,,7\n\t.global\tpointPlusPoint\n\t.type\tpointPlusPoint, %function\n",
        "func_asm": ".global pointPlusPoint\n.type pointPlusPoint, %function\npointPlusPoint:\n.LFB0:\n\t.cfi_startproc\n\tcmp\tx0, 0\n\tccmp\tx1, 0, 4, ne\n\tbeq\t.L5\n\tldp\tx2, x5, [x0]\n\tmov\tx3, x1\n\tldr\tx1, [x1]\n\tldr\tx4, [x0, 16]\n\tadd\tx2, x2, x1\n\tldr\tx1, [x3, 8]\n\tldr\tx0, [x3, 16]\n\tadd\tx1, x5, x1\n\tadd\tx0, x4, x0\n\tb\tnewPoint\n\t.p2align 2,,3\n.L5:\n\tstp\tx29, x30, [sp, -16]!\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset 29, -16\n\t.cfi_offset 30, -8\n\tadrp\tx0, :got:stderr\n\tadrp\tx1, .LC0\n\tmov\tx29, sp\n\tldr\tx0, [x0, #:got_lo12:stderr]\n\tadd\tx1, x1, :lo12:.LC0\n\tldr\tw0, [x0]\n\tbl\tfprintf\n\tmov\tx0, 0\n\tldp\tx29, x30, [sp], 16\n\t.cfi_restore 30\n\t.cfi_restore 29\n\t.cfi_def_cfa_offset 0\n\tret\n\t.cfi_endproc\n.LC0: \t.string\t\"pointPlusPoint parameters cannot be NULL!\\n\"\n",
        "post_asm": ".LFE0:\n\t.size\tpointPlusPoint, .-pointPlusPoint\n\t.comm\tstderr,4,4\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "3"
        }
      }
    },
    "angha_deps": "#define NULL ((void*)0)\ntypedef unsigned long size_t;  // Customize by platform.\ntypedef long intptr_t; typedef unsigned long uintptr_t;\ntypedef long scalar_t__;  // Either arithmetic or pointer type.\n/* By default, we understand bool (as a convenience). */\ntypedef int bool;\n#define false 0\n#define true 1\n\n/* Forward declarations */\ntypedef  struct TYPE_6__   TYPE_1__ ;\n\n/* Type definitions */\nstruct TYPE_6__ {scalar_t__ z; scalar_t__ y; scalar_t__ x; } ;\ntypedef  TYPE_1__ Point ;\n\n/* Variables and functions */\n int /*<<< orphan*/  fprintf (int /*<<< orphan*/ ,char*) ; \n TYPE_1__* newPoint (scalar_t__,scalar_t__,scalar_t__) ; \n int /*<<< orphan*/  stderr ; \n\n",
    "real_deps": null,
    "angha_io_pairs": null,
    "real_io_pairs": null,
    "angha_io_error": "[Errno 28] No space left on device: '/scratch/tmp/91788/tmp_5avdde8.c'",
    "real_io_error": null,
    "angha_exe_wrapper": null,
    "real_exe_wrapper": null,
    "angha_io_pairs_are_trivial": true,
    "real_io_pairs_are_trivial": true,
    "angha_iospec": null,
    "real_iospec": null,
    "ref": "master",
    "func_head_types": "Point* pointPlusPoint(Point* pA, Point* pB)"
  },
  "meta": {}
}
----------------------------------------
Entry 7:
{
  "text": {
    "path": "nathansoz/cs261-DataStructures/assignment4/bst.c",
    "func_def": "void* _leftMost(struct Node *cur)\n{\n struct Node * loopNode = cur;\n\n    while(loopNode->left != 0)\n        loopNode = loopNode->left;\n\n return loopNode->val;\n}",
    "func_head": "void * _leftMost(struct Node *cur)",
    "fname": "_leftMost",
    "signature": [
      "void *",
      "struct Node *"
    ],
    "doc": null,
    "angha_error": "",
    "real_error": "<stdin>: In function \u2018_leftMost\u2019:\n<stdin>:5:19: error: dereferencing pointer to incomplete type \u2018struct Node\u2019\n",
    "asm": {
      "angha_gcc_x86_O0": {
        "pre_asm": "\t.file\t\"\"\n\t.text\n\t.globl\t_leftMost\n\t.type\t_leftMost, @function\n",
        "func_asm": ".globl _leftMost\n.type _leftMost, @function\n_leftMost:\n.LFB0:\n\t.cfi_startproc\n\tendbr64\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset 6, -16\n\tmovq\t%rsp, %rbp\n\t.cfi_def_cfa_register 6\n\tmovq\t%rdi, -24(%rbp)\n\tmovq\t-24(%rbp), %rax\n\tmovq\t%rax, -8(%rbp)\n\tjmp\t.L2\n.L3:\n\tmovq\t-8(%rbp), %rax\n\tmovq\t8(%rax), %rax\n\tmovq\t%rax, -8(%rbp)\n.L2:\n\tmovq\t-8(%rbp), %rax\n\tmovq\t8(%rax), %rax\n\ttestq\t%rax, %rax\n\tjne\t.L3\n\tmovq\t-8(%rbp), %rax\n\tmovq\t(%rax), %rax\n\tpopq\t%rbp\n\t.cfi_def_cfa 7, 8\n\tret\n\t.cfi_endproc\n\n",
        "post_asm": ".LFE0:\n\t.size\t_leftMost, .-_leftMost\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n\t.section\t.note.gnu.property,\"a\"\n\t.align 8\n\t.long\t 1f - 0f\n\t.long\t 4f - 1f\n\t.long\t 5\n0:\n\t.string\t \"GNU\"\n1:\n\t.align 8\n\t.long\t 0xc0000002\n\t.long\t 3f - 2f\n2:\n\t.long\t 0x3\n3:\n\t.align 8\n4:\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "0"
        }
      },
      "angha_gcc_x86_Os": {
        "pre_asm": "\t.file\t\"\"\n\t.text\n\t.globl\t_leftMost\n\t.type\t_leftMost, @function\n",
        "func_asm": ".globl _leftMost\n.type _leftMost, @function\n_leftMost:\n.LFB0:\n\t.cfi_startproc\n\tendbr64\n.L2:\n\tmovq\t%rdi, %rax\n\tmovq\t8(%rdi), %rdi\n\ttestq\t%rdi, %rdi\n\tjne\t.L2\n\tmovq\t(%rax), %rax\n\tret\n\t.cfi_endproc\n\n",
        "post_asm": ".LFE0:\n\t.size\t_leftMost, .-_leftMost\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n\t.section\t.note.gnu.property,\"a\"\n\t.align 8\n\t.long\t 1f - 0f\n\t.long\t 4f - 1f\n\t.long\t 5\n0:\n\t.string\t \"GNU\"\n1:\n\t.align 8\n\t.long\t 0xc0000002\n\t.long\t 3f - 2f\n2:\n\t.long\t 0x3\n3:\n\t.align 8\n4:\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "s"
        }
      },
      "angha_gcc_x86_O3": {
        "pre_asm": "\t.file\t\"\"\n\t.text\n\t.p2align 4\n\t.globl\t_leftMost\n\t.type\t_leftMost, @function\n",
        "func_asm": ".globl _leftMost\n.type _leftMost, @function\n_leftMost:\n.LFB0:\n\t.cfi_startproc\n\tendbr64\n\t.p2align 4,,10\n\t.p2align 3\n.L2:\n\tmovq\t%rdi, %rax\n\tmovq\t8(%rdi), %rdi\n\ttestq\t%rdi, %rdi\n\tjne\t.L2\n\tmovq\t(%rax), %rax\n\tret\n\t.cfi_endproc\n\n",
        "post_asm": ".LFE0:\n\t.size\t_leftMost, .-_leftMost\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n\t.section\t.note.gnu.property,\"a\"\n\t.align 8\n\t.long\t 1f - 0f\n\t.long\t 4f - 1f\n\t.long\t 5\n0:\n\t.string\t \"GNU\"\n1:\n\t.align 8\n\t.long\t 0xc0000002\n\t.long\t 3f - 2f\n2:\n\t.long\t 0x3\n3:\n\t.align 8\n4:\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "3"
        }
      },
      "angha_gcc_arm_O0": {
        "pre_asm": "\t.arch armv8-a\n\t.file\t\"\"\n\t.text\n\t.align\t2\n\t.global\t_leftMost\n\t.type\t_leftMost, %function\n",
        "func_asm": ".global _leftMost\n.type _leftMost, %function\n_leftMost:\n.LFB0:\n\t.cfi_startproc\n\tsub\tsp, sp, #32\n\t.cfi_def_cfa_offset 32\n\tstr\tx0, [sp, 8]\n\tldr\tx0, [sp, 8]\n\tstr\tx0, [sp, 24]\n\tb\t.L2\n.L3:\n\tldr\tx0, [sp, 24]\n\tldr\tx0, [x0, 8]\n\tstr\tx0, [sp, 24]\n.L2:\n\tldr\tx0, [sp, 24]\n\tldr\tx0, [x0, 8]\n\tcmp\tx0, 0\n\tbne\t.L3\n\tldr\tx0, [sp, 24]\n\tldr\tx0, [x0]\n\tadd\tsp, sp, 32\n\t.cfi_def_cfa_offset 0\n\tret\n\t.cfi_endproc\n\n",
        "post_asm": ".LFE0:\n\t.size\t_leftMost, .-_leftMost\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "0"
        }
      },
      "angha_gcc_arm_Os": {
        "pre_asm": "\t.arch armv8-a\n\t.file\t\"\"\n\t.text\n\t.align\t2\n\t.global\t_leftMost\n\t.type\t_leftMost, %function\n",
        "func_asm": ".global _leftMost\n.type _leftMost, %function\n_leftMost:\n.LFB0:\n\t.cfi_startproc\n.L2:\n\tmov\tx1, x0\n\tldr\tx0, [x0, 8]\n\tcbnz\tx0, .L2\n\tldr\tx0, [x1]\n\tret\n\t.cfi_endproc\n\n",
        "post_asm": ".LFE0:\n\t.size\t_leftMost, .-_leftMost\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "s"
        }
      },
      "angha_gcc_arm_O3": {
        "pre_asm": "\t.arch armv8-a\n\t.file\t\"\"\n\t.text\n\t.align\t2\n\t.p2align 3,,7\n\t.global\t_leftMost\n\t.type\t_leftMost, %function\n",
        "func_asm": ".global _leftMost\n.type _leftMost, %function\n_leftMost:\n.LFB0:\n\t.cfi_startproc\n\t.p2align 3,,7\n.L2:\n\tmov\tx1, x0\n\tldr\tx0, [x0, 8]\n\tcbnz\tx0, .L2\n\tldr\tx0, [x1]\n\tret\n\t.cfi_endproc\n\n",
        "post_asm": ".LFE0:\n\t.size\t_leftMost, .-_leftMost\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "3"
        }
      }
    },
    "angha_deps": "#define NULL ((void*)0)\ntypedef unsigned long size_t;  // Customize by platform.\ntypedef long intptr_t; typedef unsigned long uintptr_t;\ntypedef long scalar_t__;  // Either arithmetic or pointer type.\n/* By default, we understand bool (as a convenience). */\ntypedef int bool;\n#define false 0\n#define true 1\n\n/* Forward declarations */\n\n/* Type definitions */\nstruct Node {void* val; struct Node* left; } ;\n\n/* Variables and functions */\n\n",
    "real_deps": null,
    "angha_io_pairs": null,
    "real_io_pairs": null,
    "angha_io_error": "",
    "real_io_error": null,
    "angha_exe_wrapper": null,
    "real_exe_wrapper": null,
    "angha_io_pairs_are_trivial": true,
    "real_io_pairs_are_trivial": true,
    "angha_iospec": null,
    "real_iospec": null,
    "ref": "master",
    "func_head_types": "void* _leftMost(struct Node *cur)"
  },
  "meta": {}
}
----------------------------------------
Entry 8:
{
  "text": {
    "path": "farruggia/random_decs/external/booster/huffrle/bitio.c",
    "func_def": "int fwrite_logskewed(FILE *f, uint32 t, uint32 n)\n{\n  int k,bits_written=0;\n  uint32 u,delta;\n\n  assert(n>0);\n  assert(t<n);\n  k=31; u=1<<k;\n  while(1) {\n    assert(n>0);\n    assert(t<n);\n    while(n<u) {\n      u >>=1; k--;\n    }\n\n    if(n==u) {\n      if(k>0) {\n        if(f!=NULL) fbit_write(f,k,t);\n bits_written += k;\n      }\n      break;\n    }\n    else {\n      delta = n-u;\n      assert(delta>0);\n      if(t>=delta) {\n        if(f!=NULL) {\n   fbit_write(f,1,1);\n   fbit_write(f,k,t-delta);\n }\n bits_written += k+1;\n        break;\n      }\n      else {\n        if(f!=NULL)\n   fbit_write(f,1,0);\n bits_written++;\n        n=delta;\n      }\n    }\n  }\n  return bits_written;\n}",
    "func_head": "int fwrite_logskewed(int *f, uint32t, uint32n)",
    "fname": "fwrite_logskewed",
    "signature": [
      "int",
      "int *",
      "uint32",
      "uint32"
    ],
    "doc": null,
    "angha_error": "",
    "real_error": "<stdin>:1:22: error: unknown type name \u2018FILE\u2019\n<stdin>:1: note: \u2018FILE\u2019 is defined in header \u2018<stdio.h>\u2019; did you forget to \u2018#include <stdio.h>\u2019?\n<stdin>:1:31: error: unknown type name \u2018uint32\u2019\n<stdin>:1:41: error: unknown type name \u2018uint32\u2019\n",
    "asm": {
      "angha_gcc_x86_O0": {
        "pre_asm": "\t.file\t\"\"\n\t.text\n\t.globl\tfwrite_logskewed\n\t.type\tfwrite_logskewed, @function\n",
        "func_asm": ".globl fwrite_logskewed\n.type fwrite_logskewed, @function\nfwrite_logskewed:\n.LFB0:\n\t.cfi_startproc\n\tendbr64\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset 6, -16\n\tmovq\t%rsp, %rbp\n\t.cfi_def_cfa_register 6\n\tsubq\t$32, %rsp\n\tmovq\t%rdi, -24(%rbp)\n\tmovl\t%esi, -28(%rbp)\n\tmovl\t%edx, -32(%rbp)\n\tmovl\t$0, -12(%rbp)\n\tcmpl\t$0, -32(%rbp)\n\tsetg\t%al\n\tmovzbl\t%al, %eax\n\tmovl\t%eax, %edi\n\tcall\tassert@PLT\n\tmovl\t-28(%rbp), %eax\n\tcmpl\t-32(%rbp), %eax\n\tsetl\t%al\n\tmovzbl\t%al, %eax\n\tmovl\t%eax, %edi\n\tcall\tassert@PLT\n\tmovl\t$31, -16(%rbp)\n\tmovl\t-16(%rbp), %eax\n\tmovl\t$1, %edx\n\tmovl\t%eax, %ecx\n\tsall\t%cl, %edx\n\tmovl\t%edx, %eax\n\tmovl\t%eax, -8(%rbp)\n.L11:\n\tcmpl\t$0, -32(%rbp)\n\tsetg\t%al\n\tmovzbl\t%al, %eax\n\tmovl\t%eax, %edi\n\tcall\tassert@PLT\n\tmovl\t-28(%rbp), %eax\n\tcmpl\t-32(%rbp), %eax\n\tsetl\t%al\n\tmovzbl\t%al, %eax\n\tmovl\t%eax, %edi\n\tcall\tassert@PLT\n\tjmp\t.L2\n.L3:\n\tsarl\t-8(%rbp)\n\tsubl\t$1, -16(%rbp)\n.L2:\n\tmovl\t-32(%rbp), %eax\n\tcmpl\t-8(%rbp), %eax\n\tjl\t.L3\n\tmovl\t-32(%rbp), %eax\n\tcmpl\t-8(%rbp), %eax\n\tjne\t.L4\n\tcmpl\t$0, -16(%rbp)\n\tjle\t.L13\n\tcmpq\t$0, -24(%rbp)\n\tje\t.L6\n\tmovl\t-28(%rbp), %edx\n\tmovl\t-16(%rbp), %ecx\n\tmovq\t-24(%rbp), %rax\n\tmovl\t%ecx, %esi\n\tmovq\t%rax, %rdi\n\tcall\tfbit_write@PLT\n.L6:\n\tmovl\t-16(%rbp), %eax\n\taddl\t%eax, -12(%rbp)\n\tjmp\t.L13\n.L4:\n\tmovl\t-32(%rbp), %eax\n\tsubl\t-8(%rbp), %eax\n\tmovl\t%eax, -4(%rbp)\n\tcmpl\t$0, -4(%rbp)\n\tsetg\t%al\n\tmovzbl\t%al, %eax\n\tmovl\t%eax, %edi\n\tcall\tassert@PLT\n\tmovl\t-28(%rbp), %eax\n\tcmpl\t-4(%rbp), %eax\n\tjl\t.L8\n\tcmpq\t$0, -24(%rbp)\n\tje\t.L9\n\tmovq\t-24(%rbp), %rax\n\tmovl\t$1, %edx\n\tmovl\t$1, %esi\n\tmovq\t%rax, %rdi\n\tcall\tfbit_write@PLT\n\tmovl\t-28(%rbp), %eax\n\tsubl\t-4(%rbp), %eax\n\tmovl\t%eax, %edx\n\tmovl\t-16(%rbp), %ecx\n\tmovq\t-24(%rbp), %rax\n\tmovl\t%ecx, %esi\n\tmovq\t%rax, %rdi\n\tcall\tfbit_write@PLT\n.L9:\n\tmovl\t-16(%rbp), %eax\n\taddl\t$1, %eax\n\taddl\t%eax, -12(%rbp)\n\tjmp\t.L7\n.L8:\n\tcmpq\t$0, -24(%rbp)\n\tje\t.L10\n\tmovq\t-24(%rbp), %rax\n\tmovl\t$0, %edx\n\tmovl\t$1, %esi\n\tmovq\t%rax, %rdi\n\tcall\tfbit_write@PLT\n.L10:\n\taddl\t$1, -12(%rbp)\n\tmovl\t-4(%rbp), %eax\n\tmovl\t%eax, -32(%rbp)\n\tjmp\t.L11\n.L13:\n\tnop\n.L7:\n\tmovl\t-12(%rbp), %eax\n\tleave\n\t.cfi_def_cfa 7, 8\n\tret\n\t.cfi_endproc\n\n",
        "post_asm": ".LFE0:\n\t.size\tfwrite_logskewed, .-fwrite_logskewed\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n\t.section\t.note.gnu.property,\"a\"\n\t.align 8\n\t.long\t 1f - 0f\n\t.long\t 4f - 1f\n\t.long\t 5\n0:\n\t.string\t \"GNU\"\n1:\n\t.align 8\n\t.long\t 0xc0000002\n\t.long\t 3f - 2f\n2:\n\t.long\t 0x3\n3:\n\t.align 8\n4:\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "0"
        }
      },
      "angha_gcc_x86_Os": {
        "pre_asm": "\t.file\t\"\"\n\t.text\n\t.globl\tfwrite_logskewed\n\t.type\tfwrite_logskewed, @function\n",
        "func_asm": ".globl fwrite_logskewed\n.type fwrite_logskewed, @function\nfwrite_logskewed:\n.LFB0:\n\t.cfi_startproc\n\tendbr64\n\tpushq\t%r13\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset 13, -16\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 24\n\t.cfi_offset 12, -24\n\tmovl\t%esi, %r12d\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset 6, -32\n\tmovq\t%rdi, %rbp\n\txorl\t%edi, %edi\n\ttestl\t%edx, %edx\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 40\n\t.cfi_offset 3, -40\n\tsetg\t%dil\n\tmovl\t%edx, %ebx\n\tpushq\t%rcx\n\t.cfi_def_cfa_offset 48\n\tcall\tassert@PLT\n\txorl\t%edi, %edi\n\tcmpl\t%r12d, %ebx\n\tsetg\t%dil\n\txorl\t%r13d, %r13d\n\tcall\tassert@PLT\n.L8:\n\txorl\t%edi, %edi\n\ttestl\t%ebx, %ebx\n\tsetg\t%dil\n\tcall\tassert@PLT\n\txorl\t%edi, %edi\n\tcmpl\t%r12d, %ebx\n\tsetg\t%dil\n\tcall\tassert@PLT\n\tcmpl\t$-2147483648, %ebx\n\tjne\t.L2\n\ttestq\t%rbp, %rbp\n\tje\t.L3\n\tmovl\t%r12d, %edx\n\tmovl\t$31, %esi\n\tmovq\t%rbp, %rdi\n\tcall\tfbit_write@PLT\n.L3:\n\tleal\t31(%r13), %eax\n\tjmp\t.L1\n.L2:\n\taddl\t$-2147483648, %ebx\n\tmovl\t$1, %edi\n\tcall\tassert@PLT\n\tcmpl\t%ebx, %r12d\n\tjl\t.L5\n\ttestq\t%rbp, %rbp\n\tje\t.L6\n\tmovl\t$1, %edx\n\tmovl\t$1, %esi\n\tmovq\t%rbp, %rdi\n\tcall\tfbit_write@PLT\n\tmovl\t%r12d, %edx\n\tmovl\t$31, %esi\n\tmovq\t%rbp, %rdi\n\tsubl\t%ebx, %edx\n\tcall\tfbit_write@PLT\n.L6:\n\tleal\t32(%r13), %eax\n\tjmp\t.L1\n.L5:\n\ttestq\t%rbp, %rbp\n\tje\t.L7\n\txorl\t%edx, %edx\n\tmovl\t$1, %esi\n\tmovq\t%rbp, %rdi\n\tcall\tfbit_write@PLT\n.L7:\n\tincl\t%r13d\n\tjmp\t.L8\n.L1:\n\tpopq\t%rdx\n\t.cfi_def_cfa_offset 40\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 32\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r13\n\t.cfi_def_cfa_offset 8\n\tret\n\t.cfi_endproc\n\n",
        "post_asm": ".LFE0:\n\t.size\tfwrite_logskewed, .-fwrite_logskewed\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n\t.section\t.note.gnu.property,\"a\"\n\t.align 8\n\t.long\t 1f - 0f\n\t.long\t 4f - 1f\n\t.long\t 5\n0:\n\t.string\t \"GNU\"\n1:\n\t.align 8\n\t.long\t 0xc0000002\n\t.long\t 3f - 2f\n2:\n\t.long\t 0x3\n3:\n\t.align 8\n4:\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "s"
        }
      },
      "angha_gcc_x86_O3": {
        "pre_asm": "\t.file\t\"\"\n\t.text\n\t.p2align 4\n\t.globl\tfwrite_logskewed\n\t.type\tfwrite_logskewed, @function\n",
        "func_asm": ".globl fwrite_logskewed\n.type fwrite_logskewed, @function\nfwrite_logskewed:\n.LFB0:\n\t.cfi_startproc\n\tendbr64\n\tpushq\t%r13\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset 13, -16\n\tmovq\t%rdi, %r13\n\txorl\t%edi, %edi\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 24\n\t.cfi_offset 12, -24\n\tmovl\t%esi, %r12d\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset 6, -32\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 40\n\t.cfi_offset 3, -40\n\tmovl\t%edx, %ebx\n\tsubq\t$8, %rsp\n\t.cfi_def_cfa_offset 48\n\ttestl\t%edx, %edx\n\tsetg\t%dil\n\tcall\tassert@PLT\n\txorl\t%edi, %edi\n\tcmpl\t%r12d, %ebx\n\tsetg\t%dil\n\txorl\t%ebp, %ebp\n\tcall\tassert@PLT\n\tjmp\t.L8\n\t.p2align 4,,10\n\t.p2align 3\n.L2:\n\taddl\t$-2147483648, %ebx\n\tmovl\t$1, %edi\n\tcall\tassert@PLT\n\tcmpl\t%ebx, %r12d\n\tjge\t.L20\n\ttestq\t%r13, %r13\n\tje\t.L7\n\txorl\t%edx, %edx\n\tmovl\t$1, %esi\n\tmovq\t%r13, %rdi\n\tcall\tfbit_write@PLT\n.L7:\n\taddl\t$1, %ebp\n.L8:\n\txorl\t%edi, %edi\n\ttestl\t%ebx, %ebx\n\tsetg\t%dil\n\tcall\tassert@PLT\n\txorl\t%edi, %edi\n\tcmpl\t%r12d, %ebx\n\tsetg\t%dil\n\tcall\tassert@PLT\n\tcmpl\t$-2147483648, %ebx\n\tjne\t.L2\n\ttestq\t%r13, %r13\n\tje\t.L3\n\tmovl\t%r12d, %edx\n\tmovl\t$31, %esi\n\tmovq\t%r13, %rdi\n\tcall\tfbit_write@PLT\n.L3:\n\taddq\t$8, %rsp\n\t.cfi_remember_state\n\t.cfi_def_cfa_offset 40\n\tleal\t31(%rbp), %eax\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 32\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r13\n\t.cfi_def_cfa_offset 8\n\tret\n\t.p2align 4,,10\n\t.p2align 3\n.L20:\n\t.cfi_restore_state\n\ttestq\t%r13, %r13\n\tje\t.L6\n\tmovl\t$1, %edx\n\tmovl\t$1, %esi\n\tmovq\t%r13, %rdi\n\tcall\tfbit_write@PLT\n\tmovl\t%r12d, %edx\n\tmovl\t$31, %esi\n\tmovq\t%r13, %rdi\n\tsubl\t%ebx, %edx\n\tcall\tfbit_write@PLT\n.L6:\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 40\n\tleal\t32(%rbp), %eax\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 32\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r13\n\t.cfi_def_cfa_offset 8\n\tret\n\t.cfi_endproc\n\n",
        "post_asm": ".LFE0:\n\t.size\tfwrite_logskewed, .-fwrite_logskewed\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n\t.section\t.note.gnu.property,\"a\"\n\t.align 8\n\t.long\t 1f - 0f\n\t.long\t 4f - 1f\n\t.long\t 5\n0:\n\t.string\t \"GNU\"\n1:\n\t.align 8\n\t.long\t 0xc0000002\n\t.long\t 3f - 2f\n2:\n\t.long\t 0x3\n3:\n\t.align 8\n4:\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "3"
        }
      },
      "angha_gcc_arm_O0": {
        "pre_asm": "\t.arch armv8-a\n\t.file\t\"\"\n\t.text\n\t.align\t2\n\t.global\tfwrite_logskewed\n\t.type\tfwrite_logskewed, %function\n",
        "func_asm": ".global fwrite_logskewed\n.type fwrite_logskewed, %function\nfwrite_logskewed:\n.LFB0:\n\t.cfi_startproc\n\tstp\tx29, x30, [sp, -48]!\n\t.cfi_def_cfa_offset 48\n\t.cfi_offset 29, -48\n\t.cfi_offset 30, -40\n\tmov\tx29, sp\n\tstr\tx0, [sp, 24]\n\tstr\tw1, [sp, 20]\n\tstr\tw2, [sp, 16]\n\tstr\twzr, [sp, 36]\n\tldr\tw0, [sp, 16]\n\tcmp\tw0, 0\n\tcset\tw0, gt\n\tand\tw0, w0, 255\n\tbl\tassert\n\tldr\tw1, [sp, 20]\n\tldr\tw0, [sp, 16]\n\tcmp\tw1, w0\n\tcset\tw0, lt\n\tand\tw0, w0, 255\n\tbl\tassert\n\tmov\tw0, 31\n\tstr\tw0, [sp, 32]\n\tldr\tw0, [sp, 32]\n\tmov\tw1, 1\n\tlsl\tw0, w1, w0\n\tstr\tw0, [sp, 40]\n.L11:\n\tldr\tw0, [sp, 16]\n\tcmp\tw0, 0\n\tcset\tw0, gt\n\tand\tw0, w0, 255\n\tbl\tassert\n\tldr\tw1, [sp, 20]\n\tldr\tw0, [sp, 16]\n\tcmp\tw1, w0\n\tcset\tw0, lt\n\tand\tw0, w0, 255\n\tbl\tassert\n\tb\t.L2\n.L3:\n\tldr\tw0, [sp, 40]\n\tasr\tw0, w0, 1\n\tstr\tw0, [sp, 40]\n\tldr\tw0, [sp, 32]\n\tsub\tw0, w0, #1\n\tstr\tw0, [sp, 32]\n.L2:\n\tldr\tw1, [sp, 16]\n\tldr\tw0, [sp, 40]\n\tcmp\tw1, w0\n\tblt\t.L3\n\tldr\tw1, [sp, 16]\n\tldr\tw0, [sp, 40]\n\tcmp\tw1, w0\n\tbne\t.L4\n\tldr\tw0, [sp, 32]\n\tcmp\tw0, 0\n\tble\t.L13\n\tldr\tx0, [sp, 24]\n\tcmp\tx0, 0\n\tbeq\t.L6\n\tldr\tw2, [sp, 20]\n\tldr\tw1, [sp, 32]\n\tldr\tx0, [sp, 24]\n\tbl\tfbit_write\n.L6:\n\tldr\tw1, [sp, 36]\n\tldr\tw0, [sp, 32]\n\tadd\tw0, w1, w0\n\tstr\tw0, [sp, 36]\n\tb\t.L13\n.L4:\n\tldr\tw1, [sp, 16]\n\tldr\tw0, [sp, 40]\n\tsub\tw0, w1, w0\n\tstr\tw0, [sp, 44]\n\tldr\tw0, [sp, 44]\n\tcmp\tw0, 0\n\tcset\tw0, gt\n\tand\tw0, w0, 255\n\tbl\tassert\n\tldr\tw1, [sp, 20]\n\tldr\tw0, [sp, 44]\n\tcmp\tw1, w0\n\tblt\t.L8\n\tldr\tx0, [sp, 24]\n\tcmp\tx0, 0\n\tbeq\t.L9\n\tmov\tw2, 1\n\tmov\tw1, 1\n\tldr\tx0, [sp, 24]\n\tbl\tfbit_write\n\tldr\tw1, [sp, 20]\n\tldr\tw0, [sp, 44]\n\tsub\tw0, w1, w0\n\tmov\tw2, w0\n\tldr\tw1, [sp, 32]\n\tldr\tx0, [sp, 24]\n\tbl\tfbit_write\n.L9:\n\tldr\tw0, [sp, 32]\n\tadd\tw0, w0, 1\n\tldr\tw1, [sp, 36]\n\tadd\tw0, w1, w0\n\tstr\tw0, [sp, 36]\n\tb\t.L7\n.L8:\n\tldr\tx0, [sp, 24]\n\tcmp\tx0, 0\n\tbeq\t.L10\n\tmov\tw2, 0\n\tmov\tw1, 1\n\tldr\tx0, [sp, 24]\n\tbl\tfbit_write\n.L10:\n\tldr\tw0, [sp, 36]\n\tadd\tw0, w0, 1\n\tstr\tw0, [sp, 36]\n\tldr\tw0, [sp, 44]\n\tstr\tw0, [sp, 16]\n\tb\t.L11\n.L13:\n\tnop\n.L7:\n\tldr\tw0, [sp, 36]\n\tldp\tx29, x30, [sp], 48\n\t.cfi_restore 30\n\t.cfi_restore 29\n\t.cfi_def_cfa_offset 0\n\tret\n\t.cfi_endproc\n\n",
        "post_asm": ".LFE0:\n\t.size\tfwrite_logskewed, .-fwrite_logskewed\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "0"
        }
      },
      "angha_gcc_arm_Os": {
        "pre_asm": "\t.arch armv8-a\n\t.file\t\"\"\n\t.text\n\t.align\t2\n\t.global\tfwrite_logskewed\n\t.type\tfwrite_logskewed, %function\n",
        "func_asm": ".global fwrite_logskewed\n.type fwrite_logskewed, %function\nfwrite_logskewed:\n.LFB0:\n\t.cfi_startproc\n\tstp\tx29, x30, [sp, -64]!\n\t.cfi_def_cfa_offset 64\n\t.cfi_offset 29, -64\n\t.cfi_offset 30, -56\n\tcmp\tw2, 0\n\tmov\tx29, sp\n\tstp\tx19, x20, [sp, 16]\n\t.cfi_offset 19, -48\n\t.cfi_offset 20, -40\n\tmov\tw19, w2\n\tmov\tx20, x0\n\tcset\tw0, gt\n\tstp\tx21, x22, [sp, 32]\n\t.cfi_offset 21, -32\n\t.cfi_offset 22, -24\n\tmov\tw22, w1\n\tstr\tx23, [sp, 48]\n\t.cfi_offset 23, -16\n\tbl\tassert\n\tcmp\tw19, w22\n\tmov\tw21, 0\n\tmov\tw23, -2147483648\n\tcset\tw0, gt\n\tbl\tassert\n.L8:\n\tcmp\tw19, 0\n\tcset\tw0, gt\n\tbl\tassert\n\tcmp\tw19, w22\n\tcset\tw0, gt\n\tbl\tassert\n\tcmp\tw19, w23\n\tbne\t.L2\n\tcbz\tx20, .L3\n\tmov\tw2, w22\n\tmov\tx0, x20\n\tmov\tw1, 31\n\tbl\tfbit_write\n.L3:\n\tadd\tw0, w21, 31\n.L1:\n\tldp\tx19, x20, [sp, 16]\n\tldp\tx21, x22, [sp, 32]\n\tldr\tx23, [sp, 48]\n\tldp\tx29, x30, [sp], 64\n\t.cfi_remember_state\n\t.cfi_restore 30\n\t.cfi_restore 29\n\t.cfi_restore 23\n\t.cfi_restore 21\n\t.cfi_restore 22\n\t.cfi_restore 19\n\t.cfi_restore 20\n\t.cfi_def_cfa_offset 0\n\tret\n.L2:\n\t.cfi_restore_state\n\tadd\tw19, w19, w23\n\tmov\tw0, 1\n\tbl\tassert\n\tcmp\tw22, w19\n\tblt\t.L5\n\tcbz\tx20, .L6\n\tmov\tw2, 1\n\tmov\tx0, x20\n\tmov\tw1, w2\n\tbl\tfbit_write\n\tsub\tw2, w22, w19\n\tmov\tx0, x20\n\tmov\tw1, 31\n\tbl\tfbit_write\n.L6:\n\tadd\tw0, w21, 32\n\tb\t.L1\n.L5:\n\tcbz\tx20, .L7\n\tmov\tx0, x20\n\tmov\tw2, 0\n\tmov\tw1, 1\n\tbl\tfbit_write\n.L7:\n\tadd\tw21, w21, 1\n\tb\t.L8\n\t.cfi_endproc\n\n",
        "post_asm": ".LFE0:\n\t.size\tfwrite_logskewed, .-fwrite_logskewed\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "s"
        }
      },
      "angha_gcc_arm_O3": {
        "pre_asm": "\t.arch armv8-a\n\t.file\t\"\"\n\t.text\n\t.align\t2\n\t.p2align 3,,7\n\t.global\tfwrite_logskewed\n\t.type\tfwrite_logskewed, %function\n",
        "func_asm": ".global fwrite_logskewed\n.type fwrite_logskewed, %function\nfwrite_logskewed:\n.LFB0:\n\t.cfi_startproc\n\tstp\tx29, x30, [sp, -64]!\n\t.cfi_def_cfa_offset 64\n\t.cfi_offset 29, -64\n\t.cfi_offset 30, -56\n\tcmp\tw2, 0\n\tmov\tx29, sp\n\tstp\tx19, x20, [sp, 16]\n\t.cfi_offset 19, -48\n\t.cfi_offset 20, -40\n\tmov\tw19, w2\n\tmov\tw20, w1\n\tstp\tx21, x22, [sp, 32]\n\t.cfi_offset 21, -32\n\t.cfi_offset 22, -24\n\tmov\tw21, 0\n\tmov\tw22, -2147483648\n\tstr\tx23, [sp, 48]\n\t.cfi_offset 23, -16\n\tmov\tx23, x0\n\tcset\tw0, gt\n\tbl\tassert\n\tcmp\tw19, w20\n\tcset\tw0, gt\n\tbl\tassert\n\t.p2align 3,,7\n.L8:\n\tcmp\tw19, 0\n\tcset\tw0, gt\n\tbl\tassert\n\tcmp\tw19, w20\n\tcset\tw0, gt\n\tbl\tassert\n\tcmp\tw19, w22\n\tmov\tw0, 1\n\tadd\tw19, w19, w22\n\tbeq\t.L20\n\tbl\tassert\n\tcmp\tw20, w19\n\tbge\t.L21\n\tcbz\tx23, .L7\n\tmov\tx0, x23\n\tmov\tw2, 0\n\tmov\tw1, 1\n\tbl\tfbit_write\n.L7:\n\tadd\tw21, w21, 1\n\tb\t.L8\n\t.p2align 2,,3\n.L20:\n\tcbz\tx23, .L3\n\tmov\tw2, w20\n\tmov\tx0, x23\n\tmov\tw1, 31\n\tbl\tfbit_write\n.L3:\n\tadd\tw0, w21, 31\n\tldp\tx19, x20, [sp, 16]\n\tldp\tx21, x22, [sp, 32]\n\tldr\tx23, [sp, 48]\n\tldp\tx29, x30, [sp], 64\n\t.cfi_remember_state\n\t.cfi_restore 30\n\t.cfi_restore 29\n\t.cfi_restore 23\n\t.cfi_restore 21\n\t.cfi_restore 22\n\t.cfi_restore 19\n\t.cfi_restore 20\n\t.cfi_def_cfa_offset 0\n\tret\n\t.p2align 2,,3\n.L21:\n\t.cfi_restore_state\n\tcbz\tx23, .L6\n\tmov\tw2, 1\n\tmov\tx0, x23\n\tmov\tw1, w2\n\tbl\tfbit_write\n\tsub\tw2, w20, w19\n\tmov\tx0, x23\n\tmov\tw1, 31\n\tbl\tfbit_write\n.L6:\n\tadd\tw0, w21, 32\n\tldp\tx19, x20, [sp, 16]\n\tldp\tx21, x22, [sp, 32]\n\tldr\tx23, [sp, 48]\n\tldp\tx29, x30, [sp], 64\n\t.cfi_restore 30\n\t.cfi_restore 29\n\t.cfi_restore 23\n\t.cfi_restore 21\n\t.cfi_restore 22\n\t.cfi_restore 19\n\t.cfi_restore 20\n\t.cfi_def_cfa_offset 0\n\tret\n\t.cfi_endproc\n\n",
        "post_asm": ".LFE0:\n\t.size\tfwrite_logskewed, .-fwrite_logskewed\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "3"
        }
      }
    },
    "angha_deps": "#define NULL ((void*)0)\ntypedef unsigned long size_t;  // Customize by platform.\ntypedef long intptr_t; typedef unsigned long uintptr_t;\ntypedef long scalar_t__;  // Either arithmetic or pointer type.\n/* By default, we understand bool (as a convenience). */\ntypedef int bool;\n#define false 0\n#define true 1\n\n/* Forward declarations */\n\n/* Type definitions */\ntypedef  int uint32 ;\ntypedef  int /*<<< orphan*/  FILE ;\n\n/* Variables and functions */\n int /*<<< orphan*/  assert (int) ; \n int /*<<< orphan*/  fbit_write (int /*<<< orphan*/ *,int,int) ; \n\n",
    "real_deps": null,
    "angha_io_pairs": null,
    "real_io_pairs": null,
    "angha_io_error": "[Errno 28] No space left on device: '/scratch/tmp/91788/tmpwi1148mx.c'",
    "real_io_error": null,
    "angha_exe_wrapper": null,
    "real_exe_wrapper": null,
    "angha_io_pairs_are_trivial": true,
    "real_io_pairs_are_trivial": true,
    "angha_iospec": null,
    "real_iospec": null,
    "ref": "master",
    "func_head_types": "int fwrite_logskewed(FILE *f, uint32 t, uint32 n)"
  },
  "meta": {}
}
----------------------------------------
Entry 9:
{
  "text": {
    "path": "brenocfg/AnghaBench/freebsd/usr.bin/sdiotool/extr_cam_sdio.c_sdio_func_intr_enable.c",
    "func_def": "int\nsdio_func_intr_enable(struct cam_device *dev, uint8_t func_number, int enable) {\n\treturn sdio_set_bool_for_func(dev, SD_IO_CCCR_INT_ENABLE, func_number, enable);\n}",
    "func_head": "int sdio_func_intr_enable(struct cam_device *dev, uint8_tfunc_number, intenable)",
    "fname": "sdio_func_intr_enable",
    "signature": [
      "int",
      "struct cam_device *",
      "uint8_t",
      "int"
    ],
    "doc": null,
    "angha_error": null,
    "real_error": null,
    "asm": {
      "angha_gcc_x86_O0": {
        "pre_asm": "\t.file\t\"\"\n\t.text\n\t.comm\tSD_IO_CCCR_INT_ENABLE,4,4\n\t.globl\tsdio_func_intr_enable\n\t.type\tsdio_func_intr_enable, @function\n",
        "func_asm": ".globl sdio_func_intr_enable\n.type sdio_func_intr_enable, @function\nsdio_func_intr_enable:\n.LFB0:\n\t.cfi_startproc\n\tendbr64\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset 6, -16\n\tmovq\t%rsp, %rbp\n\t.cfi_def_cfa_register 6\n\tsubq\t$16, %rsp\n\tmovq\t%rdi, -8(%rbp)\n\tmovl\t%esi, -12(%rbp)\n\tmovl\t%edx, -16(%rbp)\n\tmovl\tSD_IO_CCCR_INT_ENABLE(%rip), %esi\n\tmovl\t-16(%rbp), %ecx\n\tmovl\t-12(%rbp), %edx\n\tmovq\t-8(%rbp), %rax\n\tmovq\t%rax, %rdi\n\tcall\tsdio_set_bool_for_func@PLT\n\tleave\n\t.cfi_def_cfa 7, 8\n\tret\n\t.cfi_endproc\n\n",
        "post_asm": ".LFE0:\n\t.size\tsdio_func_intr_enable, .-sdio_func_intr_enable\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n\t.section\t.note.gnu.property,\"a\"\n\t.align 8\n\t.long\t 1f - 0f\n\t.long\t 4f - 1f\n\t.long\t 5\n0:\n\t.string\t \"GNU\"\n1:\n\t.align 8\n\t.long\t 0xc0000002\n\t.long\t 3f - 2f\n2:\n\t.long\t 0x3\n3:\n\t.align 8\n4:\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "0"
        }
      },
      "angha_gcc_x86_Os": {
        "pre_asm": "\t.file\t\"\"\n\t.text\n\t.globl\tsdio_func_intr_enable\n\t.type\tsdio_func_intr_enable, @function\n",
        "func_asm": ".globl sdio_func_intr_enable\n.type sdio_func_intr_enable, @function\nsdio_func_intr_enable:\n.LFB0:\n\t.cfi_startproc\n\tendbr64\n\tmovl\t%edx, %ecx\n\tmovl\t%esi, %edx\n\tmovl\tSD_IO_CCCR_INT_ENABLE(%rip), %esi\n\tjmp\tsdio_set_bool_for_func@PLT\n\t.cfi_endproc\n\n",
        "post_asm": ".LFE0:\n\t.size\tsdio_func_intr_enable, .-sdio_func_intr_enable\n\t.comm\tSD_IO_CCCR_INT_ENABLE,4,4\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n\t.section\t.note.gnu.property,\"a\"\n\t.align 8\n\t.long\t 1f - 0f\n\t.long\t 4f - 1f\n\t.long\t 5\n0:\n\t.string\t \"GNU\"\n1:\n\t.align 8\n\t.long\t 0xc0000002\n\t.long\t 3f - 2f\n2:\n\t.long\t 0x3\n3:\n\t.align 8\n4:\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "s"
        }
      },
      "angha_gcc_x86_O3": {
        "pre_asm": "\t.file\t\"\"\n\t.text\n\t.p2align 4\n\t.globl\tsdio_func_intr_enable\n\t.type\tsdio_func_intr_enable, @function\n",
        "func_asm": ".globl sdio_func_intr_enable\n.type sdio_func_intr_enable, @function\nsdio_func_intr_enable:\n.LFB0:\n\t.cfi_startproc\n\tendbr64\n\tmovl\t%edx, %ecx\n\tmovl\t%esi, %edx\n\tmovl\tSD_IO_CCCR_INT_ENABLE(%rip), %esi\n\tjmp\tsdio_set_bool_for_func@PLT\n\t.cfi_endproc\n\n",
        "post_asm": ".LFE0:\n\t.size\tsdio_func_intr_enable, .-sdio_func_intr_enable\n\t.comm\tSD_IO_CCCR_INT_ENABLE,4,4\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n\t.section\t.note.gnu.property,\"a\"\n\t.align 8\n\t.long\t 1f - 0f\n\t.long\t 4f - 1f\n\t.long\t 5\n0:\n\t.string\t \"GNU\"\n1:\n\t.align 8\n\t.long\t 0xc0000002\n\t.long\t 3f - 2f\n2:\n\t.long\t 0x3\n3:\n\t.align 8\n4:\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "3"
        }
      },
      "angha_gcc_arm_O0": {
        "pre_asm": "\t.arch armv8-a\n\t.file\t\"\"\n\t.text\n\t.comm\tSD_IO_CCCR_INT_ENABLE,4,4\n\t.align\t2\n\t.global\tsdio_func_intr_enable\n\t.type\tsdio_func_intr_enable, %function\n",
        "func_asm": ".global sdio_func_intr_enable\n.type sdio_func_intr_enable, %function\nsdio_func_intr_enable:\n.LFB0:\n\t.cfi_startproc\n\tstp\tx29, x30, [sp, -32]!\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset 29, -32\n\t.cfi_offset 30, -24\n\tmov\tx29, sp\n\tstr\tx0, [sp, 24]\n\tstr\tw1, [sp, 20]\n\tstr\tw2, [sp, 16]\n\tadrp\tx0, :got:SD_IO_CCCR_INT_ENABLE\n\tldr\tx0, [x0, #:got_lo12:SD_IO_CCCR_INT_ENABLE]\n\tldr\tw0, [x0]\n\tldr\tw3, [sp, 16]\n\tldr\tw2, [sp, 20]\n\tmov\tw1, w0\n\tldr\tx0, [sp, 24]\n\tbl\tsdio_set_bool_for_func\n\tldp\tx29, x30, [sp], 32\n\t.cfi_restore 30\n\t.cfi_restore 29\n\t.cfi_def_cfa_offset 0\n\tret\n\t.cfi_endproc\n\n",
        "post_asm": ".LFE0:\n\t.size\tsdio_func_intr_enable, .-sdio_func_intr_enable\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "0"
        }
      },
      "angha_gcc_arm_Os": {
        "pre_asm": "\t.arch armv8-a\n\t.file\t\"\"\n\t.text\n\t.align\t2\n\t.global\tsdio_func_intr_enable\n\t.type\tsdio_func_intr_enable, %function\n",
        "func_asm": ".global sdio_func_intr_enable\n.type sdio_func_intr_enable, %function\nsdio_func_intr_enable:\n.LFB0:\n\t.cfi_startproc\n\tmov\tw3, w2\n\tmov\tw2, w1\n\tadrp\tx1, :got:SD_IO_CCCR_INT_ENABLE\n\tldr\tx1, [x1, #:got_lo12:SD_IO_CCCR_INT_ENABLE]\n\tldr\tw1, [x1]\n\tb\tsdio_set_bool_for_func\n\t.cfi_endproc\n\n",
        "post_asm": ".LFE0:\n\t.size\tsdio_func_intr_enable, .-sdio_func_intr_enable\n\t.comm\tSD_IO_CCCR_INT_ENABLE,4,4\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "s"
        }
      },
      "angha_gcc_arm_O3": {
        "pre_asm": "\t.arch armv8-a\n\t.file\t\"\"\n\t.text\n\t.align\t2\n\t.p2align 3,,7\n\t.global\tsdio_func_intr_enable\n\t.type\tsdio_func_intr_enable, %function\n",
        "func_asm": ".global sdio_func_intr_enable\n.type sdio_func_intr_enable, %function\nsdio_func_intr_enable:\n.LFB0:\n\t.cfi_startproc\n\tadrp\tx4, :got:SD_IO_CCCR_INT_ENABLE\n\tmov\tw3, w2\n\tmov\tw2, w1\n\tldr\tx4, [x4, #:got_lo12:SD_IO_CCCR_INT_ENABLE]\n\tldr\tw1, [x4]\n\tb\tsdio_set_bool_for_func\n\t.cfi_endproc\n\n",
        "post_asm": ".LFE0:\n\t.size\tsdio_func_intr_enable, .-sdio_func_intr_enable\n\t.comm\tSD_IO_CCCR_INT_ENABLE,4,4\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "3"
        }
      }
    },
    "angha_deps": "#define NULL ((void*)0)\ntypedef unsigned long size_t;  // Customize by platform.\ntypedef long intptr_t; typedef unsigned long uintptr_t;\ntypedef long scalar_t__;  // Either arithmetic or pointer type.\n/* By default, we understand bool (as a convenience). */\ntypedef int bool;\n#define false 0\n#define true 1\n\n/* Forward declarations */\n\n/* Type definitions */\ntypedef  int /*<<< orphan*/  uint8_t ;\nstruct cam_device {int dummy; } ;\n\n/* Variables and functions */\n int /*<<< orphan*/  SD_IO_CCCR_INT_ENABLE ; \n int sdio_set_bool_for_func (struct cam_device*,int /*<<< orphan*/ ,int /*<<< orphan*/ ,int) ; \n\n",
    "real_deps": null,
    "angha_io_pairs": null,
    "real_io_pairs": null,
    "angha_io_error": "",
    "real_io_error": null,
    "angha_exe_wrapper": null,
    "real_exe_wrapper": null,
    "angha_io_pairs_are_trivial": true,
    "real_io_pairs_are_trivial": true,
    "angha_iospec": null,
    "real_iospec": null,
    "ref": "master",
    "func_head_types": "int sdio_func_intr_enable(struct cam_device *dev, uint8_t func_number, int enable)"
  },
  "meta": {}
}
----------------------------------------
Entry 10:
{
  "text": {
    "path": "concurrency/nocc/backend/krocetc.c",
    "func_def": "static void krocetc_be_gettypecat (tnode_t *bename, typecat_e *tcptr)\n{\n krocetc_namehook_t *nh;\n\n if ((bename->tag != krocetc_target.tag_NAME) && (bename->tag != krocetc_target.tag_NAMEREF)) {\n  nocc_pinternal((\"krocetc_be_settypecat(): not a NAME/NAMEREF!\"),\"/scratch/repos/new/home/jordi_armengol_estape/c-scraper/outputs/2022-01-22/02-19-57/repos/concurrency/nocc/refs/heads/master/backend/krocetc.c\",1202);\n  return;\n }\n nh = (krocetc_namehook_t *)tnode_nthhookof (bename, 0);\n if (!nh) {\n  nocc_pinternal((\"krocetc_be_settypecat(): NAME/NAMEREF has no hook\"),\"/scratch/repos/new/home/jordi_armengol_estape/c-scraper/outputs/2022-01-22/02-19-57/repos/concurrency/nocc/refs/heads/master/backend/krocetc.c\",1207);\n  return;\n }\n\n if (tcptr) {\n  *tcptr = nh->typecat;\n }\n\n return;\n}",
    "func_head": "void krocetc_be_gettypecat(tnode_t *bename, typecat_e *tcptr)",
    "fname": "krocetc_be_gettypecat",
    "signature": [
      "void",
      "tnode_t *",
      "typecat_e *"
    ],
    "doc": null,
    "angha_error": "",
    "real_error": "<stdin>:1:36: error: unknown type name \u2018tnode_t\u2019\n<stdin>:1:53: error: unknown type name \u2018typecat_e\u2019\n",
    "asm": {
      "angha_gcc_x86_O0": {
        "pre_asm": "\t.file\t\"\"\n\t.text\n\t.comm\tkrocetc_target,16,16\n\t.section\t.rodata\n\t.align 8\n.LC0:\n\t.string\t\"/scratch/repos/new/home/jordi_armengol_estape/c-scraper/outputs/2022-01-22/02-19-57/repos/concurrency/nocc/refs/heads/master/backend/krocetc.c\"\n\t.align 8\n.LC1:\n\t.string\t\"krocetc_be_settypecat(): not a NAME/NAMEREF!\"\n\t.align 8\n.LC2:\n\t.string\t\"krocetc_be_settypecat(): NAME/NAMEREF has no hook\"\n\t.text\n\t.type\tkrocetc_be_gettypecat, @function\n",
        "func_asm": ".globl krocetc_be_gettypecat\n.type krocetc_be_gettypecat, @function\nkrocetc_be_gettypecat:\n.LFB0:\n\t.cfi_startproc\n\tendbr64\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset 6, -16\n\tmovq\t%rsp, %rbp\n\t.cfi_def_cfa_register 6\n\tsubq\t$32, %rsp\n\tmovq\t%rdi, -24(%rbp)\n\tmovq\t%rsi, -32(%rbp)\n\tmovq\t-24(%rbp), %rax\n\tmovq\t(%rax), %rdx\n\tmovq\tkrocetc_target(%rip), %rax\n\tcmpq\t%rax, %rdx\n\tje\t.L2\n\tmovq\t-24(%rbp), %rax\n\tmovq\t(%rax), %rdx\n\tmovq\t8+krocetc_target(%rip), %rax\n\tcmpq\t%rax, %rdx\n\tje\t.L2\n\tmovl\t$1202, %edx\n\tleaq\t.LC0(%rip), %rsi\n\tleaq\t.LC1(%rip), %rdi\n\tcall\tnocc_pinternal@PLT\n\tjmp\t.L1\n.L2:\n\tmovq\t-24(%rbp), %rax\n\tmovl\t$0, %esi\n\tmovq\t%rax, %rdi\n\tcall\ttnode_nthhookof@PLT\n\tmovq\t%rax, -8(%rbp)\n\tcmpq\t$0, -8(%rbp)\n\tjne\t.L4\n\tmovl\t$1207, %edx\n\tleaq\t.LC0(%rip), %rsi\n\tleaq\t.LC2(%rip), %rdi\n\tcall\tnocc_pinternal@PLT\n\tjmp\t.L1\n.L4:\n\tcmpq\t$0, -32(%rbp)\n\tje\t.L6\n\tmovq\t-8(%rbp), %rax\n\tmovl\t(%rax), %edx\n\tmovq\t-32(%rbp), %rax\n\tmovl\t%edx, (%rax)\n.L6:\n\tnop\n.L1:\n\tleave\n\t.cfi_def_cfa 7, 8\n\tret\n\t.cfi_endproc\n.LC0: \t.string\t\"/scratch/repos/new/home/jordi_armengol_estape/c-scraper/outputs/2022-01-22/02-19-57/repos/concurrency/nocc/refs/heads/master/backend/krocetc.c\"\n.LC2: \t.string\t\"krocetc_be_settypecat(): NAME/NAMEREF has no hook\"\n.LC1: \t.string\t\"krocetc_be_settypecat(): not a NAME/NAMEREF!\"\n",
        "post_asm": ".LFE0:\n\t.size\tkrocetc_be_gettypecat, .-krocetc_be_gettypecat\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n\t.section\t.note.gnu.property,\"a\"\n\t.align 8\n\t.long\t 1f - 0f\n\t.long\t 4f - 1f\n\t.long\t 5\n0:\n\t.string\t \"GNU\"\n1:\n\t.align 8\n\t.long\t 0xc0000002\n\t.long\t 3f - 2f\n2:\n\t.long\t 0x3\n3:\n\t.align 8\n4:\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "0"
        }
      },
      "angha_gcc_x86_Os": {
        "pre_asm": "\t.file\t\"\"\n\t.text\n\t.comm\tkrocetc_target,16,16\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n\t.section\t.note.gnu.property,\"a\"\n\t.align 8\n\t.long\t 1f - 0f\n\t.long\t 4f - 1f\n\t.long\t 5\n0:\n\t.string\t \"GNU\"\n1:\n\t.align 8\n\t.long\t 0xc0000002\n\t.long\t 3f - 2f\n2:\n\t.long\t 0x3\n3:\n\t.align 8\n4:\n",
        "func_asm": ".globl krocetc_be_gettypecat\n.type krocetc_be_gettypecat, @function\n\n",
        "post_asm": "\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "s"
        }
      },
      "angha_gcc_x86_O3": {
        "pre_asm": "\t.file\t\"\"\n\t.text\n\t.comm\tkrocetc_target,16,16\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n\t.section\t.note.gnu.property,\"a\"\n\t.align 8\n\t.long\t 1f - 0f\n\t.long\t 4f - 1f\n\t.long\t 5\n0:\n\t.string\t \"GNU\"\n1:\n\t.align 8\n\t.long\t 0xc0000002\n\t.long\t 3f - 2f\n2:\n\t.long\t 0x3\n3:\n\t.align 8\n4:\n",
        "func_asm": ".globl krocetc_be_gettypecat\n.type krocetc_be_gettypecat, @function\n\n",
        "post_asm": "\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "3"
        }
      },
      "angha_gcc_arm_O0": {
        "pre_asm": "\t.arch armv8-a\n\t.file\t\"\"\n\t.text\n\t.comm\tkrocetc_target,16,8\n\t.section\t.rodata\n\t.align\t3\n.LC0:\n\t.string\t\"/scratch/repos/new/home/jordi_armengol_estape/c-scraper/outputs/2022-01-22/02-19-57/repos/concurrency/nocc/refs/heads/master/backend/krocetc.c\"\n\t.align\t3\n.LC1:\n\t.string\t\"krocetc_be_settypecat(): not a NAME/NAMEREF!\"\n\t.align\t3\n.LC2:\n\t.string\t\"krocetc_be_settypecat(): NAME/NAMEREF has no hook\"\n\t.text\n\t.align\t2\n\t.type\tkrocetc_be_gettypecat, %function\n",
        "func_asm": ".global krocetc_be_gettypecat\n.type krocetc_be_gettypecat, %function\nkrocetc_be_gettypecat:\n.LFB0:\n\t.cfi_startproc\n\tstp\tx29, x30, [sp, -48]!\n\t.cfi_def_cfa_offset 48\n\t.cfi_offset 29, -48\n\t.cfi_offset 30, -40\n\tmov\tx29, sp\n\tstr\tx0, [sp, 24]\n\tstr\tx1, [sp, 16]\n\tldr\tx0, [sp, 24]\n\tldr\tx1, [x0]\n\tadrp\tx0, :got:krocetc_target\n\tldr\tx0, [x0, #:got_lo12:krocetc_target]\n\tldr\tx0, [x0]\n\tcmp\tx1, x0\n\tbeq\t.L2\n\tldr\tx0, [sp, 24]\n\tldr\tx1, [x0]\n\tadrp\tx0, :got:krocetc_target\n\tldr\tx0, [x0, #:got_lo12:krocetc_target]\n\tldr\tx0, [x0, 8]\n\tcmp\tx1, x0\n\tbeq\t.L2\n\tmov\tw2, 1202\n\tadrp\tx0, .LC0\n\tadd\tx1, x0, :lo12:.LC0\n\tadrp\tx0, .LC1\n\tadd\tx0, x0, :lo12:.LC1\n\tbl\tnocc_pinternal\n\tb\t.L1\n.L2:\n\tmov\tw1, 0\n\tldr\tx0, [sp, 24]\n\tbl\ttnode_nthhookof\n\tstr\tx0, [sp, 40]\n\tldr\tx0, [sp, 40]\n\tcmp\tx0, 0\n\tbne\t.L4\n\tmov\tw2, 1207\n\tadrp\tx0, .LC0\n\tadd\tx1, x0, :lo12:.LC0\n\tadrp\tx0, .LC2\n\tadd\tx0, x0, :lo12:.LC2\n\tbl\tnocc_pinternal\n\tb\t.L1\n.L4:\n\tldr\tx0, [sp, 16]\n\tcmp\tx0, 0\n\tbeq\t.L6\n\tldr\tx0, [sp, 40]\n\tldr\tw1, [x0]\n\tldr\tx0, [sp, 16]\n\tstr\tw1, [x0]\n.L6:\n\tnop\n.L1:\n\tldp\tx29, x30, [sp], 48\n\t.cfi_restore 30\n\t.cfi_restore 29\n\t.cfi_def_cfa_offset 0\n\tret\n\t.cfi_endproc\n.LC0: \t.string\t\"/scratch/repos/new/home/jordi_armengol_estape/c-scraper/outputs/2022-01-22/02-19-57/repos/concurrency/nocc/refs/heads/master/backend/krocetc.c\"\n.LC2: \t.string\t\"krocetc_be_settypecat(): NAME/NAMEREF has no hook\"\n.LC1: \t.string\t\"krocetc_be_settypecat(): not a NAME/NAMEREF!\"\n",
        "post_asm": ".LFE0:\n\t.size\tkrocetc_be_gettypecat, .-krocetc_be_gettypecat\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "0"
        }
      },
      "angha_gcc_arm_Os": {
        "pre_asm": "\t.arch armv8-a\n\t.file\t\"\"\n\t.text\n\t.comm\tkrocetc_target,16,8\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n",
        "func_asm": ".global krocetc_be_gettypecat\n.type krocetc_be_gettypecat, %function\n\n",
        "post_asm": "\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "s"
        }
      },
      "angha_gcc_arm_O3": {
        "pre_asm": "\t.arch armv8-a\n\t.file\t\"\"\n\t.text\n\t.comm\tkrocetc_target,16,8\n\t.ident\t\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n",
        "func_asm": ".global krocetc_be_gettypecat\n.type krocetc_be_gettypecat, %function\n\n",
        "post_asm": "\n",
        "target": {
          "impl": "gcc",
          "bits": 64,
          "lang": "gas",
          "o": "3"
        }
      }
    },
    "angha_deps": "#define NULL ((void*)0)\ntypedef unsigned long size_t;  // Customize by platform.\ntypedef long intptr_t; typedef unsigned long uintptr_t;\ntypedef long scalar_t__;  // Either arithmetic or pointer type.\n/* By default, we understand bool (as a convenience). */\ntypedef int bool;\n#define false 0\n#define true 1\n\n/* Forward declarations */\ntypedef  struct TYPE_8__   TYPE_4__ ;\ntypedef  struct TYPE_7__   TYPE_2__ ;\ntypedef  struct TYPE_6__   TYPE_1__ ;\n\n/* Type definitions */\ntypedef  int /*<<< orphan*/  typecat_e ;\nstruct TYPE_6__ {scalar_t__ tag; } ;\ntypedef  TYPE_1__ tnode_t ;\nstruct TYPE_7__ {int /*<<< orphan*/  typecat; } ;\ntypedef  TYPE_2__ krocetc_namehook_t ;\nstruct TYPE_8__ {scalar_t__ tag_NAME; scalar_t__ tag_NAMEREF; } ;\n\n/* Variables and functions */\n TYPE_4__ krocetc_target ; \n int /*<<< orphan*/  nocc_pinternal (char*,char*,int) ; \n scalar_t__ tnode_nthhookof (TYPE_1__*,int /*<<< orphan*/ ) ; \n\n",
    "real_deps": null,
    "angha_io_pairs": [
      {
        "input": {
          "bename": {
            "tag": 43
          },
          "tcptr": [
            31,
            101,
            50,
            35,
            28,
            80,
            85,
            98,
            96,
            40,
            85,
            55,
            103,
            1,
            115,
            30,
            95,
            23,
            121,
            32,
            24,
            0,
            12,
            113,
            104,
            103,
            35,
            20,
            4,
            42,
            18,
            1
          ],
          "krocetc_target": {
            "tag_NAMEREF": 82,
            "tag_NAME": 111
          }
        },
        "output": {
          "bename": {
            "tag": 43
          },
          "krocetc_target": {
            "tag_NAME": 111,
            "tag_NAMEREF": 82
          },
          "tcptr": [
            31,
            101,
            50,
            35,
            28,
            80,
            85,
            98,
            96,
            40,
            85,
            55,
            103,
            1,
            115,
            30,
            95,
            23,
            121,
            32,
            24,
            0,
            12,
            113,
            104,
            103,
            35,
            20,
            4,
            42,
            18,
            1
          ]
        },
        "dummy_funcs": "long int tnode_nthhookof (TYPE_1__ * j, int t) {\n\tlong int returnv;\n\tlong int temp_variable = 45;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n\n#define MAX_STRING_SIZE 32\nint nocc_pinternal (char * y, char * n, int b) {\n\tint returnv;\n\tint temp_variable = 86;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n",
        "dummy_funcs_seed": 0
      },
      {
        "input": {
          "bename": {
            "tag": 108
          },
          "tcptr": [
            80,
            74,
            108,
            35,
            21,
            67,
            83,
            67,
            96,
            93,
            33,
            125,
            65,
            98,
            119,
            113,
            65,
            111,
            44,
            95,
            30,
            115,
            97,
            37,
            50,
            121,
            80,
            13,
            62,
            100,
            112,
            41
          ],
          "krocetc_target": {
            "tag_NAMEREF": 69,
            "tag_NAME": 77
          }
        },
        "output": {
          "bename": {
            "tag": 108
          },
          "krocetc_target": {
            "tag_NAME": 77,
            "tag_NAMEREF": 69
          },
          "tcptr": [
            80,
            74,
            108,
            35,
            21,
            67,
            83,
            67,
            96,
            93,
            33,
            125,
            65,
            98,
            119,
            113,
            65,
            111,
            44,
            95,
            30,
            115,
            97,
            37,
            50,
            121,
            80,
            13,
            62,
            100,
            112,
            41
          ]
        },
        "dummy_funcs": "long int tnode_nthhookof (TYPE_1__ * j, int t) {\n\tlong int returnv;\n\tlong int temp_variable = 45;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n\n#define MAX_STRING_SIZE 32\nint nocc_pinternal (char * y, char * n, int b) {\n\tint returnv;\n\tint temp_variable = 86;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n",
        "dummy_funcs_seed": 0
      },
      {
        "input": {
          "bename": {
            "tag": 92
          },
          "tcptr": [
            40,
            124,
            86,
            122,
            7,
            29,
            51,
            5,
            4,
            68,
            114,
            104,
            10,
            26,
            111,
            72,
            39,
            24,
            63,
            104,
            84,
            92,
            61,
            68,
            93,
            6,
            59,
            1,
            112,
            55,
            109,
            27
          ],
          "krocetc_target": {
            "tag_NAMEREF": 84,
            "tag_NAME": 12
          }
        },
        "output": {
          "bename": {
            "tag": 92
          },
          "krocetc_target": {
            "tag_NAME": 12,
            "tag_NAMEREF": 84
          },
          "tcptr": [
            40,
            124,
            86,
            122,
            7,
            29,
            51,
            5,
            4,
            68,
            114,
            104,
            10,
            26,
            111,
            72,
            39,
            24,
            63,
            104,
            84,
            92,
            61,
            68,
            93,
            6,
            59,
            1,
            112,
            55,
            109,
            27
          ]
        },
        "dummy_funcs": "long int tnode_nthhookof (TYPE_1__ * j, int t) {\n\tlong int returnv;\n\tlong int temp_variable = 45;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n\n#define MAX_STRING_SIZE 32\nint nocc_pinternal (char * y, char * n, int b) {\n\tint returnv;\n\tint temp_variable = 86;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n",
        "dummy_funcs_seed": 0
      },
      {
        "input": {
          "bename": {
            "tag": 104
          },
          "tcptr": [
            98,
            106,
            69,
            8,
            119,
            56,
            3,
            118,
            30,
            15,
            41,
            112,
            7,
            10,
            61,
            8,
            63,
            1,
            20,
            51,
            5,
            103,
            119,
            105,
            11,
            114,
            3,
            55,
            98,
            68,
            52,
            22
          ],
          "krocetc_target": {
            "tag_NAMEREF": 46,
            "tag_NAME": 81
          }
        },
        "output": {
          "bename": {
            "tag": 104
          },
          "krocetc_target": {
            "tag_NAME": 81,
            "tag_NAMEREF": 46
          },
          "tcptr": [
            98,
            106,
            69,
            8,
            119,
            56,
            3,
            118,
            30,
            15,
            41,
            112,
            7,
            10,
            61,
            8,
            63,
            1,
            20,
            51,
            5,
            103,
            119,
            105,
            11,
            114,
            3,
            55,
            98,
            68,
            52,
            22
          ]
        },
        "dummy_funcs": "long int tnode_nthhookof (TYPE_1__ * j, int t) {\n\tlong int returnv;\n\tlong int temp_variable = 45;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n\n#define MAX_STRING_SIZE 32\nint nocc_pinternal (char * y, char * n, int b) {\n\tint returnv;\n\tint temp_variable = 86;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n",
        "dummy_funcs_seed": 0
      },
      {
        "input": {
          "bename": {
            "tag": 58
          },
          "tcptr": [
            89,
            45,
            55,
            26,
            119,
            109,
            125,
            53,
            25,
            114,
            78,
            44,
            120,
            102,
            96,
            51,
            95,
            84,
            2,
            114,
            21,
            4,
            6,
            4,
            49,
            69,
            85,
            85,
            22,
            117,
            35,
            17
          ],
          "krocetc_target": {
            "tag_NAMEREF": 84,
            "tag_NAME": 71
          }
        },
        "output": {
          "bename": {
            "tag": 58
          },
          "krocetc_target": {
            "tag_NAME": 71,
            "tag_NAMEREF": 84
          },
          "tcptr": [
            89,
            45,
            55,
            26,
            119,
            109,
            125,
            53,
            25,
            114,
            78,
            44,
            120,
            102,
            96,
            51,
            95,
            84,
            2,
            114,
            21,
            4,
            6,
            4,
            49,
            69,
            85,
            85,
            22,
            117,
            35,
            17
          ]
        },
        "dummy_funcs": "long int tnode_nthhookof (TYPE_1__ * j, int t) {\n\tlong int returnv;\n\tlong int temp_variable = 45;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n\n#define MAX_STRING_SIZE 32\nint nocc_pinternal (char * y, char * n, int b) {\n\tint returnv;\n\tint temp_variable = 86;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n",
        "dummy_funcs_seed": 0
      },
      {
        "input": {
          "bename": {
            "tag": 64
          },
          "tcptr": [
            80,
            31,
            69,
            77,
            0,
            51,
            45,
            39,
            38,
            94,
            113,
            46,
            32,
            60,
            90,
            122,
            0,
            96,
            73,
            94,
            65,
            61,
            83,
            31,
            51,
            83,
            87,
            42,
            51,
            40,
            23,
            49
          ],
          "krocetc_target": {
            "tag_NAMEREF": 14,
            "tag_NAME": 104
          }
        },
        "output": {
          "bename": {
            "tag": 64
          },
          "krocetc_target": {
            "tag_NAME": 104,
            "tag_NAMEREF": 14
          },
          "tcptr": [
            80,
            31,
            69,
            77,
            0,
            51,
            45,
            39,
            38,
            94,
            113,
            46,
            32,
            60,
            90,
            122,
            0,
            96,
            73,
            94,
            65,
            61,
            83,
            31,
            51,
            83,
            87,
            42,
            51,
            40,
            23,
            49
          ]
        },
        "dummy_funcs": "long int tnode_nthhookof (TYPE_1__ * j, int t) {\n\tlong int returnv;\n\tlong int temp_variable = 45;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n\n#define MAX_STRING_SIZE 32\nint nocc_pinternal (char * y, char * n, int b) {\n\tint returnv;\n\tint temp_variable = 86;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n",
        "dummy_funcs_seed": 0
      },
      {
        "input": {
          "bename": {
            "tag": 121
          },
          "tcptr": [
            126,
            48,
            8,
            52,
            29,
            47,
            29,
            9,
            58,
            105,
            88,
            98,
            106,
            73,
            105,
            80,
            115,
            12,
            109,
            62,
            16,
            1,
            25,
            1,
            49,
            7,
            50,
            6,
            23,
            32,
            82,
            42
          ],
          "krocetc_target": {
            "tag_NAMEREF": 48,
            "tag_NAME": 23
          }
        },
        "output": {
          "bename": {
            "tag": 121
          },
          "krocetc_target": {
            "tag_NAME": 23,
            "tag_NAMEREF": 48
          },
          "tcptr": [
            126,
            48,
            8,
            52,
            29,
            47,
            29,
            9,
            58,
            105,
            88,
            98,
            106,
            73,
            105,
            80,
            115,
            12,
            109,
            62,
            16,
            1,
            25,
            1,
            49,
            7,
            50,
            6,
            23,
            32,
            82,
            42
          ]
        },
        "dummy_funcs": "long int tnode_nthhookof (TYPE_1__ * j, int t) {\n\tlong int returnv;\n\tlong int temp_variable = 45;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n\n#define MAX_STRING_SIZE 32\nint nocc_pinternal (char * y, char * n, int b) {\n\tint returnv;\n\tint temp_variable = 86;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n",
        "dummy_funcs_seed": 0
      },
      {
        "input": {
          "bename": {
            "tag": 116
          },
          "tcptr": [
            4,
            98,
            40,
            65,
            13,
            36,
            10,
            40,
            60,
            105,
            78,
            38,
            104,
            40,
            29,
            44,
            97,
            66,
            65,
            65,
            72,
            74,
            84,
            69,
            25,
            19,
            92,
            55,
            56,
            100,
            52,
            108
          ],
          "krocetc_target": {
            "tag_NAMEREF": 49,
            "tag_NAME": 97
          }
        },
        "output": {
          "bename": {
            "tag": 116
          },
          "krocetc_target": {
            "tag_NAME": 97,
            "tag_NAMEREF": 49
          },
          "tcptr": [
            4,
            98,
            40,
            65,
            13,
            36,
            10,
            40,
            60,
            105,
            78,
            38,
            104,
            40,
            29,
            44,
            97,
            66,
            65,
            65,
            72,
            74,
            84,
            69,
            25,
            19,
            92,
            55,
            56,
            100,
            52,
            108
          ]
        },
        "dummy_funcs": "long int tnode_nthhookof (TYPE_1__ * j, int t) {\n\tlong int returnv;\n\tlong int temp_variable = 45;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n\n#define MAX_STRING_SIZE 32\nint nocc_pinternal (char * y, char * n, int b) {\n\tint returnv;\n\tint temp_variable = 86;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n",
        "dummy_funcs_seed": 0
      },
      {
        "input": {
          "bename": {
            "tag": 13
          },
          "tcptr": [
            3,
            4,
            38,
            50,
            9,
            113,
            109,
            6,
            98,
            55,
            62,
            112,
            1,
            7,
            51,
            119,
            13,
            126,
            123,
            86,
            97,
            72,
            88,
            72,
            64,
            60,
            48,
            11,
            29,
            62,
            0,
            49
          ],
          "krocetc_target": {
            "tag_NAMEREF": 39,
            "tag_NAME": 81
          }
        },
        "output": {
          "bename": {
            "tag": 13
          },
          "krocetc_target": {
            "tag_NAME": 81,
            "tag_NAMEREF": 39
          },
          "tcptr": [
            3,
            4,
            38,
            50,
            9,
            113,
            109,
            6,
            98,
            55,
            62,
            112,
            1,
            7,
            51,
            119,
            13,
            126,
            123,
            86,
            97,
            72,
            88,
            72,
            64,
            60,
            48,
            11,
            29,
            62,
            0,
            49
          ]
        },
        "dummy_funcs": "long int tnode_nthhookof (TYPE_1__ * j, int t) {\n\tlong int returnv;\n\tlong int temp_variable = 45;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n\n#define MAX_STRING_SIZE 32\nint nocc_pinternal (char * y, char * n, int b) {\n\tint returnv;\n\tint temp_variable = 86;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n",
        "dummy_funcs_seed": 0
      },
      {
        "input": {
          "bename": {
            "tag": 48
          },
          "tcptr": [
            15,
            50,
            39,
            6,
            12,
            52,
            77,
            6,
            31,
            65,
            115,
            39,
            70,
            119,
            66,
            26,
            115,
            56,
            63,
            30,
            99,
            62,
            61,
            59,
            91,
            49,
            48,
            93,
            46,
            32,
            94,
            10
          ],
          "krocetc_target": {
            "tag_NAMEREF": 121,
            "tag_NAME": 124
          }
        },
        "output": {
          "bename": {
            "tag": 48
          },
          "krocetc_target": {
            "tag_NAME": 124,
            "tag_NAMEREF": 121
          },
          "tcptr": [
            15,
            50,
            39,
            6,
            12,
            52,
            77,
            6,
            31,
            65,
            115,
            39,
            70,
            119,
            66,
            26,
            115,
            56,
            63,
            30,
            99,
            62,
            61,
            59,
            91,
            49,
            48,
            93,
            46,
            32,
            94,
            10
          ]
        },
        "dummy_funcs": "long int tnode_nthhookof (TYPE_1__ * j, int t) {\n\tlong int returnv;\n\tlong int temp_variable = 45;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n\n#define MAX_STRING_SIZE 32\nint nocc_pinternal (char * y, char * n, int b) {\n\tint returnv;\n\tint temp_variable = 86;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n",
        "dummy_funcs_seed": 0
      },
      {
        "input": {
          "bename": {
            "tag": 43
          },
          "tcptr": [
            31,
            101,
            50,
            35,
            28,
            80,
            85,
            98,
            96,
            40,
            85,
            55,
            103,
            1,
            115,
            30,
            95,
            23,
            121,
            32,
            24,
            0,
            12,
            113,
            104,
            103,
            35,
            20,
            4,
            42,
            18,
            1
          ],
          "krocetc_target": {
            "tag_NAMEREF": 82,
            "tag_NAME": 111
          }
        },
        "output": {
          "bename": {
            "tag": 43
          },
          "krocetc_target": {
            "tag_NAME": 111,
            "tag_NAMEREF": 82
          },
          "tcptr": [
            31,
            101,
            50,
            35,
            28,
            80,
            85,
            98,
            96,
            40,
            85,
            55,
            103,
            1,
            115,
            30,
            95,
            23,
            121,
            32,
            24,
            0,
            12,
            113,
            104,
            103,
            35,
            20,
            4,
            42,
            18,
            1
          ]
        },
        "dummy_funcs": "long int tnode_nthhookof (TYPE_1__ * j, int t) {\n\tlong int returnv;\n\tlong int temp_variable = 74;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n\n#define MAX_STRING_SIZE 32\nint nocc_pinternal (char * y, char * n, int b) {\n\tint returnv;\n\tint temp_variable = 57;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n",
        "dummy_funcs_seed": 1
      },
      {
        "input": {
          "bename": {
            "tag": 108
          },
          "tcptr": [
            80,
            74,
            108,
            35,
            21,
            67,
            83,
            67,
            96,
            93,
            33,
            125,
            65,
            98,
            119,
            113,
            65,
            111,
            44,
            95,
            30,
            115,
            97,
            37,
            50,
            121,
            80,
            13,
            62,
            100,
            112,
            41
          ],
          "krocetc_target": {
            "tag_NAMEREF": 69,
            "tag_NAME": 77
          }
        },
        "output": {
          "bename": {
            "tag": 108
          },
          "krocetc_target": {
            "tag_NAME": 77,
            "tag_NAMEREF": 69
          },
          "tcptr": [
            80,
            74,
            108,
            35,
            21,
            67,
            83,
            67,
            96,
            93,
            33,
            125,
            65,
            98,
            119,
            113,
            65,
            111,
            44,
            95,
            30,
            115,
            97,
            37,
            50,
            121,
            80,
            13,
            62,
            100,
            112,
            41
          ]
        },
        "dummy_funcs": "long int tnode_nthhookof (TYPE_1__ * j, int t) {\n\tlong int returnv;\n\tlong int temp_variable = 74;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n\n#define MAX_STRING_SIZE 32\nint nocc_pinternal (char * y, char * n, int b) {\n\tint returnv;\n\tint temp_variable = 57;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n",
        "dummy_funcs_seed": 1
      },
      {
        "input": {
          "bename": {
            "tag": 92
          },
          "tcptr": [
            40,
            124,
            86,
            122,
            7,
            29,
            51,
            5,
            4,
            68,
            114,
            104,
            10,
            26,
            111,
            72,
            39,
            24,
            63,
            104,
            84,
            92,
            61,
            68,
            93,
            6,
            59,
            1,
            112,
            55,
            109,
            27
          ],
          "krocetc_target": {
            "tag_NAMEREF": 84,
            "tag_NAME": 12
          }
        },
        "output": {
          "bename": {
            "tag": 92
          },
          "krocetc_target": {
            "tag_NAME": 12,
            "tag_NAMEREF": 84
          },
          "tcptr": [
            40,
            124,
            86,
            122,
            7,
            29,
            51,
            5,
            4,
            68,
            114,
            104,
            10,
            26,
            111,
            72,
            39,
            24,
            63,
            104,
            84,
            92,
            61,
            68,
            93,
            6,
            59,
            1,
            112,
            55,
            109,
            27
          ]
        },
        "dummy_funcs": "long int tnode_nthhookof (TYPE_1__ * j, int t) {\n\tlong int returnv;\n\tlong int temp_variable = 74;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n\n#define MAX_STRING_SIZE 32\nint nocc_pinternal (char * y, char * n, int b) {\n\tint returnv;\n\tint temp_variable = 57;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n",
        "dummy_funcs_seed": 1
      },
      {
        "input": {
          "bename": {
            "tag": 104
          },
          "tcptr": [
            98,
            106,
            69,
            8,
            119,
            56,
            3,
            118,
            30,
            15,
            41,
            112,
            7,
            10,
            61,
            8,
            63,
            1,
            20,
            51,
            5,
            103,
            119,
            105,
            11,
            114,
            3,
            55,
            98,
            68,
            52,
            22
          ],
          "krocetc_target": {
            "tag_NAMEREF": 46,
            "tag_NAME": 81
          }
        },
        "output": {
          "bename": {
            "tag": 104
          },
          "krocetc_target": {
            "tag_NAME": 81,
            "tag_NAMEREF": 46
          },
          "tcptr": [
            98,
            106,
            69,
            8,
            119,
            56,
            3,
            118,
            30,
            15,
            41,
            112,
            7,
            10,
            61,
            8,
            63,
            1,
            20,
            51,
            5,
            103,
            119,
            105,
            11,
            114,
            3,
            55,
            98,
            68,
            52,
            22
          ]
        },
        "dummy_funcs": "long int tnode_nthhookof (TYPE_1__ * j, int t) {\n\tlong int returnv;\n\tlong int temp_variable = 74;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n\n#define MAX_STRING_SIZE 32\nint nocc_pinternal (char * y, char * n, int b) {\n\tint returnv;\n\tint temp_variable = 57;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n",
        "dummy_funcs_seed": 1
      },
      {
        "input": {
          "bename": {
            "tag": 58
          },
          "tcptr": [
            89,
            45,
            55,
            26,
            119,
            109,
            125,
            53,
            25,
            114,
            78,
            44,
            120,
            102,
            96,
            51,
            95,
            84,
            2,
            114,
            21,
            4,
            6,
            4,
            49,
            69,
            85,
            85,
            22,
            117,
            35,
            17
          ],
          "krocetc_target": {
            "tag_NAMEREF": 84,
            "tag_NAME": 71
          }
        },
        "output": {
          "bename": {
            "tag": 58
          },
          "krocetc_target": {
            "tag_NAME": 71,
            "tag_NAMEREF": 84
          },
          "tcptr": [
            89,
            45,
            55,
            26,
            119,
            109,
            125,
            53,
            25,
            114,
            78,
            44,
            120,
            102,
            96,
            51,
            95,
            84,
            2,
            114,
            21,
            4,
            6,
            4,
            49,
            69,
            85,
            85,
            22,
            117,
            35,
            17
          ]
        },
        "dummy_funcs": "long int tnode_nthhookof (TYPE_1__ * j, int t) {\n\tlong int returnv;\n\tlong int temp_variable = 74;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n\n#define MAX_STRING_SIZE 32\nint nocc_pinternal (char * y, char * n, int b) {\n\tint returnv;\n\tint temp_variable = 57;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n",
        "dummy_funcs_seed": 1
      },
      {
        "input": {
          "bename": {
            "tag": 64
          },
          "tcptr": [
            80,
            31,
            69,
            77,
            0,
            51,
            45,
            39,
            38,
            94,
            113,
            46,
            32,
            60,
            90,
            122,
            0,
            96,
            73,
            94,
            65,
            61,
            83,
            31,
            51,
            83,
            87,
            42,
            51,
            40,
            23,
            49
          ],
          "krocetc_target": {
            "tag_NAMEREF": 14,
            "tag_NAME": 104
          }
        },
        "output": {
          "bename": {
            "tag": 64
          },
          "krocetc_target": {
            "tag_NAME": 104,
            "tag_NAMEREF": 14
          },
          "tcptr": [
            80,
            31,
            69,
            77,
            0,
            51,
            45,
            39,
            38,
            94,
            113,
            46,
            32,
            60,
            90,
            122,
            0,
            96,
            73,
            94,
            65,
            61,
            83,
            31,
            51,
            83,
            87,
            42,
            51,
            40,
            23,
            49
          ]
        },
        "dummy_funcs": "long int tnode_nthhookof (TYPE_1__ * j, int t) {\n\tlong int returnv;\n\tlong int temp_variable = 74;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n\n#define MAX_STRING_SIZE 32\nint nocc_pinternal (char * y, char * n, int b) {\n\tint returnv;\n\tint temp_variable = 57;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n",
        "dummy_funcs_seed": 1
      },
      {
        "input": {
          "bename": {
            "tag": 121
          },
          "tcptr": [
            126,
            48,
            8,
            52,
            29,
            47,
            29,
            9,
            58,
            105,
            88,
            98,
            106,
            73,
            105,
            80,
            115,
            12,
            109,
            62,
            16,
            1,
            25,
            1,
            49,
            7,
            50,
            6,
            23,
            32,
            82,
            42
          ],
          "krocetc_target": {
            "tag_NAMEREF": 48,
            "tag_NAME": 23
          }
        },
        "output": {
          "bename": {
            "tag": 121
          },
          "krocetc_target": {
            "tag_NAME": 23,
            "tag_NAMEREF": 48
          },
          "tcptr": [
            126,
            48,
            8,
            52,
            29,
            47,
            29,
            9,
            58,
            105,
            88,
            98,
            106,
            73,
            105,
            80,
            115,
            12,
            109,
            62,
            16,
            1,
            25,
            1,
            49,
            7,
            50,
            6,
            23,
            32,
            82,
            42
          ]
        },
        "dummy_funcs": "long int tnode_nthhookof (TYPE_1__ * j, int t) {\n\tlong int returnv;\n\tlong int temp_variable = 74;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n\n#define MAX_STRING_SIZE 32\nint nocc_pinternal (char * y, char * n, int b) {\n\tint returnv;\n\tint temp_variable = 57;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n",
        "dummy_funcs_seed": 1
      },
      {
        "input": {
          "bename": {
            "tag": 116
          },
          "tcptr": [
            4,
            98,
            40,
            65,
            13,
            36,
            10,
            40,
            60,
            105,
            78,
            38,
            104,
            40,
            29,
            44,
            97,
            66,
            65,
            65,
            72,
            74,
            84,
            69,
            25,
            19,
            92,
            55,
            56,
            100,
            52,
            108
          ],
          "krocetc_target": {
            "tag_NAMEREF": 49,
            "tag_NAME": 97
          }
        },
        "output": {
          "bename": {
            "tag": 116
          },
          "krocetc_target": {
            "tag_NAME": 97,
            "tag_NAMEREF": 49
          },
          "tcptr": [
            4,
            98,
            40,
            65,
            13,
            36,
            10,
            40,
            60,
            105,
            78,
            38,
            104,
            40,
            29,
            44,
            97,
            66,
            65,
            65,
            72,
            74,
            84,
            69,
            25,
            19,
            92,
            55,
            56,
            100,
            52,
            108
          ]
        },
        "dummy_funcs": "long int tnode_nthhookof (TYPE_1__ * j, int t) {\n\tlong int returnv;\n\tlong int temp_variable = 74;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n\n#define MAX_STRING_SIZE 32\nint nocc_pinternal (char * y, char * n, int b) {\n\tint returnv;\n\tint temp_variable = 57;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n",
        "dummy_funcs_seed": 1
      },
      {
        "input": {
          "bename": {
            "tag": 13
          },
          "tcptr": [
            3,
            4,
            38,
            50,
            9,
            113,
            109,
            6,
            98,
            55,
            62,
            112,
            1,
            7,
            51,
            119,
            13,
            126,
            123,
            86,
            97,
            72,
            88,
            72,
            64,
            60,
            48,
            11,
            29,
            62,
            0,
            49
          ],
          "krocetc_target": {
            "tag_NAMEREF": 39,
            "tag_NAME": 81
          }
        },
        "output": {
          "bename": {
            "tag": 13
          },
          "krocetc_target": {
            "tag_NAME": 81,
            "tag_NAMEREF": 39
          },
          "tcptr": [
            3,
            4,
            38,
            50,
            9,
            113,
            109,
            6,
            98,
            55,
            62,
            112,
            1,
            7,
            51,
            119,
            13,
            126,
            123,
            86,
            97,
            72,
            88,
            72,
            64,
            60,
            48,
            11,
            29,
            62,
            0,
            49
          ]
        },
        "dummy_funcs": "long int tnode_nthhookof (TYPE_1__ * j, int t) {\n\tlong int returnv;\n\tlong int temp_variable = 74;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n\n#define MAX_STRING_SIZE 32\nint nocc_pinternal (char * y, char * n, int b) {\n\tint returnv;\n\tint temp_variable = 57;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n",
        "dummy_funcs_seed": 1
      },
      {
        "input": {
          "bename": {
            "tag": 48
          },
          "tcptr": [
            15,
            50,
            39,
            6,
            12,
            52,
            77,
            6,
            31,
            65,
            115,
            39,
            70,
            119,
            66,
            26,
            115,
            56,
            63,
            30,
            99,
            62,
            61,
            59,
            91,
            49,
            48,
            93,
            46,
            32,
            94,
            10
          ],
          "krocetc_target": {
            "tag_NAMEREF": 121,
            "tag_NAME": 124
          }
        },
        "output": {
          "bename": {
            "tag": 48
          },
          "krocetc_target": {
            "tag_NAME": 124,
            "tag_NAMEREF": 121
          },
          "tcptr": [
            15,
            50,
            39,
            6,
            12,
            52,
            77,
            6,
            31,
            65,
            115,
            39,
            70,
            119,
            66,
            26,
            115,
            56,
            63,
            30,
            99,
            62,
            61,
            59,
            91,
            49,
            48,
            93,
            46,
            32,
            94,
            10
          ]
        },
        "dummy_funcs": "long int tnode_nthhookof (TYPE_1__ * j, int t) {\n\tlong int returnv;\n\tlong int temp_variable = 74;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n\n#define MAX_STRING_SIZE 32\nint nocc_pinternal (char * y, char * n, int b) {\n\tint returnv;\n\tint temp_variable = 57;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n",
        "dummy_funcs_seed": 1
      },
      {
        "input": {
          "bename": {
            "tag": 43
          },
          "tcptr": [
            31,
            101,
            50,
            35,
            28,
            80,
            85,
            98,
            96,
            40,
            85,
            55,
            103,
            1,
            115,
            30,
            95,
            23,
            121,
            32,
            24,
            0,
            12,
            113,
            104,
            103,
            35,
            20,
            4,
            42,
            18,
            1
          ],
          "krocetc_target": {
            "tag_NAMEREF": 82,
            "tag_NAME": 111
          }
        },
        "output": {
          "bename": {
            "tag": 43
          },
          "krocetc_target": {
            "tag_NAME": 111,
            "tag_NAMEREF": 82
          },
          "tcptr": [
            31,
            101,
            50,
            35,
            28,
            80,
            85,
            98,
            96,
            40,
            85,
            55,
            103,
            1,
            115,
            30,
            95,
            23,
            121,
            32,
            24,
            0,
            12,
            113,
            104,
            103,
            35,
            20,
            4,
            42,
            18,
            1
          ]
        },
        "dummy_funcs": "long int tnode_nthhookof (TYPE_1__ * j, int e) {\n\tlong int returnv;\n\tlong int temp_variable = 113;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n\n#define MAX_STRING_SIZE 32\nint nocc_pinternal (char * z, char * y, int c) {\n\tint returnv;\n\tint temp_variable = 80;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n",
        "dummy_funcs_seed": 2
      },
      {
        "input": {
          "bename": {
            "tag": 108
          },
          "tcptr": [
            80,
            74,
            108,
            35,
            21,
            67,
            83,
            67,
            96,
            93,
            33,
            125,
            65,
            98,
            119,
            113,
            65,
            111,
            44,
            95,
            30,
            115,
            97,
            37,
            50,
            121,
            80,
            13,
            62,
            100,
            112,
            41
          ],
          "krocetc_target": {
            "tag_NAMEREF": 69,
            "tag_NAME": 77
          }
        },
        "output": {
          "bename": {
            "tag": 108
          },
          "krocetc_target": {
            "tag_NAME": 77,
            "tag_NAMEREF": 69
          },
          "tcptr": [
            80,
            74,
            108,
            35,
            21,
            67,
            83,
            67,
            96,
            93,
            33,
            125,
            65,
            98,
            119,
            113,
            65,
            111,
            44,
            95,
            30,
            115,
            97,
            37,
            50,
            121,
            80,
            13,
            62,
            100,
            112,
            41
          ]
        },
        "dummy_funcs": "long int tnode_nthhookof (TYPE_1__ * j, int e) {\n\tlong int returnv;\n\tlong int temp_variable = 113;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n\n#define MAX_STRING_SIZE 32\nint nocc_pinternal (char * z, char * y, int c) {\n\tint returnv;\n\tint temp_variable = 80;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n",
        "dummy_funcs_seed": 2
      },
      {
        "input": {
          "bename": {
            "tag": 92
          },
          "tcptr": [
            40,
            124,
            86,
            122,
            7,
            29,
            51,
            5,
            4,
            68,
            114,
            104,
            10,
            26,
            111,
            72,
            39,
            24,
            63,
            104,
            84,
            92,
            61,
            68,
            93,
            6,
            59,
            1,
            112,
            55,
            109,
            27
          ],
          "krocetc_target": {
            "tag_NAMEREF": 84,
            "tag_NAME": 12
          }
        },
        "output": {
          "bename": {
            "tag": 92
          },
          "krocetc_target": {
            "tag_NAME": 12,
            "tag_NAMEREF": 84
          },
          "tcptr": [
            40,
            124,
            86,
            122,
            7,
            29,
            51,
            5,
            4,
            68,
            114,
            104,
            10,
            26,
            111,
            72,
            39,
            24,
            63,
            104,
            84,
            92,
            61,
            68,
            93,
            6,
            59,
            1,
            112,
            55,
            109,
            27
          ]
        },
        "dummy_funcs": "long int tnode_nthhookof (TYPE_1__ * j, int e) {\n\tlong int returnv;\n\tlong int temp_variable = 113;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n\n#define MAX_STRING_SIZE 32\nint nocc_pinternal (char * z, char * y, int c) {\n\tint returnv;\n\tint temp_variable = 80;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n",
        "dummy_funcs_seed": 2
      },
      {
        "input": {
          "bename": {
            "tag": 104
          },
          "tcptr": [
            98,
            106,
            69,
            8,
            119,
            56,
            3,
            118,
            30,
            15,
            41,
            112,
            7,
            10,
            61,
            8,
            63,
            1,
            20,
            51,
            5,
            103,
            119,
            105,
            11,
            114,
            3,
            55,
            98,
            68,
            52,
            22
          ],
          "krocetc_target": {
            "tag_NAMEREF": 46,
            "tag_NAME": 81
          }
        },
        "output": {
          "bename": {
            "tag": 104
          },
          "krocetc_target": {
            "tag_NAME": 81,
            "tag_NAMEREF": 46
          },
          "tcptr": [
            98,
            106,
            69,
            8,
            119,
            56,
            3,
            118,
            30,
            15,
            41,
            112,
            7,
            10,
            61,
            8,
            63,
            1,
            20,
            51,
            5,
            103,
            119,
            105,
            11,
            114,
            3,
            55,
            98,
            68,
            52,
            22
          ]
        },
        "dummy_funcs": "long int tnode_nthhookof (TYPE_1__ * j, int e) {\n\tlong int returnv;\n\tlong int temp_variable = 113;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n\n#define MAX_STRING_SIZE 32\nint nocc_pinternal (char * z, char * y, int c) {\n\tint returnv;\n\tint temp_variable = 80;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n",
        "dummy_funcs_seed": 2
      },
      {
        "input": {
          "bename": {
            "tag": 58
          },
          "tcptr": [
            89,
            45,
            55,
            26,
            119,
            109,
            125,
            53,
            25,
            114,
            78,
            44,
            120,
            102,
            96,
            51,
            95,
            84,
            2,
            114,
            21,
            4,
            6,
            4,
            49,
            69,
            85,
            85,
            22,
            117,
            35,
            17
          ],
          "krocetc_target": {
            "tag_NAMEREF": 84,
            "tag_NAME": 71
          }
        },
        "output": {
          "bename": {
            "tag": 58
          },
          "krocetc_target": {
            "tag_NAME": 71,
            "tag_NAMEREF": 84
          },
          "tcptr": [
            89,
            45,
            55,
            26,
            119,
            109,
            125,
            53,
            25,
            114,
            78,
            44,
            120,
            102,
            96,
            51,
            95,
            84,
            2,
            114,
            21,
            4,
            6,
            4,
            49,
            69,
            85,
            85,
            22,
            117,
            35,
            17
          ]
        },
        "dummy_funcs": "long int tnode_nthhookof (TYPE_1__ * j, int e) {\n\tlong int returnv;\n\tlong int temp_variable = 113;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n\n#define MAX_STRING_SIZE 32\nint nocc_pinternal (char * z, char * y, int c) {\n\tint returnv;\n\tint temp_variable = 80;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n",
        "dummy_funcs_seed": 2
      },
      {
        "input": {
          "bename": {
            "tag": 64
          },
          "tcptr": [
            80,
            31,
            69,
            77,
            0,
            51,
            45,
            39,
            38,
            94,
            113,
            46,
            32,
            60,
            90,
            122,
            0,
            96,
            73,
            94,
            65,
            61,
            83,
            31,
            51,
            83,
            87,
            42,
            51,
            40,
            23,
            49
          ],
          "krocetc_target": {
            "tag_NAMEREF": 14,
            "tag_NAME": 104
          }
        },
        "output": {
          "bename": {
            "tag": 64
          },
          "krocetc_target": {
            "tag_NAME": 104,
            "tag_NAMEREF": 14
          },
          "tcptr": [
            80,
            31,
            69,
            77,
            0,
            51,
            45,
            39,
            38,
            94,
            113,
            46,
            32,
            60,
            90,
            122,
            0,
            96,
            73,
            94,
            65,
            61,
            83,
            31,
            51,
            83,
            87,
            42,
            51,
            40,
            23,
            49
          ]
        },
        "dummy_funcs": "long int tnode_nthhookof (TYPE_1__ * j, int e) {\n\tlong int returnv;\n\tlong int temp_variable = 113;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n\n#define MAX_STRING_SIZE 32\nint nocc_pinternal (char * z, char * y, int c) {\n\tint returnv;\n\tint temp_variable = 80;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n",
        "dummy_funcs_seed": 2
      },
      {
        "input": {
          "bename": {
            "tag": 121
          },
          "tcptr": [
            126,
            48,
            8,
            52,
            29,
            47,
            29,
            9,
            58,
            105,
            88,
            98,
            106,
            73,
            105,
            80,
            115,
            12,
            109,
            62,
            16,
            1,
            25,
            1,
            49,
            7,
            50,
            6,
            23,
            32,
            82,
            42
          ],
          "krocetc_target": {
            "tag_NAMEREF": 48,
            "tag_NAME": 23
          }
        },
        "output": {
          "bename": {
            "tag": 121
          },
          "krocetc_target": {
            "tag_NAME": 23,
            "tag_NAMEREF": 48
          },
          "tcptr": [
            126,
            48,
            8,
            52,
            29,
            47,
            29,
            9,
            58,
            105,
            88,
            98,
            106,
            73,
            105,
            80,
            115,
            12,
            109,
            62,
            16,
            1,
            25,
            1,
            49,
            7,
            50,
            6,
            23,
            32,
            82,
            42
          ]
        },
        "dummy_funcs": "long int tnode_nthhookof (TYPE_1__ * j, int e) {\n\tlong int returnv;\n\tlong int temp_variable = 113;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n\n#define MAX_STRING_SIZE 32\nint nocc_pinternal (char * z, char * y, int c) {\n\tint returnv;\n\tint temp_variable = 80;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n",
        "dummy_funcs_seed": 2
      },
      {
        "input": {
          "bename": {
            "tag": 116
          },
          "tcptr": [
            4,
            98,
            40,
            65,
            13,
            36,
            10,
            40,
            60,
            105,
            78,
            38,
            104,
            40,
            29,
            44,
            97,
            66,
            65,
            65,
            72,
            74,
            84,
            69,
            25,
            19,
            92,
            55,
            56,
            100,
            52,
            108
          ],
          "krocetc_target": {
            "tag_NAMEREF": 49,
            "tag_NAME": 97
          }
        },
        "output": {
          "bename": {
            "tag": 116
          },
          "krocetc_target": {
            "tag_NAME": 97,
            "tag_NAMEREF": 49
          },
          "tcptr": [
            4,
            98,
            40,
            65,
            13,
            36,
            10,
            40,
            60,
            105,
            78,
            38,
            104,
            40,
            29,
            44,
            97,
            66,
            65,
            65,
            72,
            74,
            84,
            69,
            25,
            19,
            92,
            55,
            56,
            100,
            52,
            108
          ]
        },
        "dummy_funcs": "long int tnode_nthhookof (TYPE_1__ * j, int e) {\n\tlong int returnv;\n\tlong int temp_variable = 113;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n\n#define MAX_STRING_SIZE 32\nint nocc_pinternal (char * z, char * y, int c) {\n\tint returnv;\n\tint temp_variable = 80;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n",
        "dummy_funcs_seed": 2
      },
      {
        "input": {
          "bename": {
            "tag": 13
          },
          "tcptr": [
            3,
            4,
            38,
            50,
            9,
            113,
            109,
            6,
            98,
            55,
            62,
            112,
            1,
            7,
            51,
            119,
            13,
            126,
            123,
            86,
            97,
            72,
            88,
            72,
            64,
            60,
            48,
            11,
            29,
            62,
            0,
            49
          ],
          "krocetc_target": {
            "tag_NAMEREF": 39,
            "tag_NAME": 81
          }
        },
        "output": {
          "bename": {
            "tag": 13
          },
          "krocetc_target": {
            "tag_NAME": 81,
            "tag_NAMEREF": 39
          },
          "tcptr": [
            3,
            4,
            38,
            50,
            9,
            113,
            109,
            6,
            98,
            55,
            62,
            112,
            1,
            7,
            51,
            119,
            13,
            126,
            123,
            86,
            97,
            72,
            88,
            72,
            64,
            60,
            48,
            11,
            29,
            62,
            0,
            49
          ]
        },
        "dummy_funcs": "long int tnode_nthhookof (TYPE_1__ * j, int e) {\n\tlong int returnv;\n\tlong int temp_variable = 113;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n\n#define MAX_STRING_SIZE 32\nint nocc_pinternal (char * z, char * y, int c) {\n\tint returnv;\n\tint temp_variable = 80;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n",
        "dummy_funcs_seed": 2
      },
      {
        "input": {
          "bename": {
            "tag": 48
          },
          "tcptr": [
            15,
            50,
            39,
            6,
            12,
            52,
            77,
            6,
            31,
            65,
            115,
            39,
            70,
            119,
            66,
            26,
            115,
            56,
            63,
            30,
            99,
            62,
            61,
            59,
            91,
            49,
            48,
            93,
            46,
            32,
            94,
            10
          ],
          "krocetc_target": {
            "tag_NAMEREF": 121,
            "tag_NAME": 124
          }
        },
        "output": {
          "bename": {
            "tag": 48
          },
          "krocetc_target": {
            "tag_NAME": 124,
            "tag_NAMEREF": 121
          },
          "tcptr": [
            15,
            50,
            39,
            6,
            12,
            52,
            77,
            6,
            31,
            65,
            115,
            39,
            70,
            119,
            66,
            26,
            115,
            56,
            63,
            30,
            99,
            62,
            61,
            59,
            91,
            49,
            48,
            93,
            46,
            32,
            94,
            10
          ]
        },
        "dummy_funcs": "long int tnode_nthhookof (TYPE_1__ * j, int e) {\n\tlong int returnv;\n\tlong int temp_variable = 113;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n\n#define MAX_STRING_SIZE 32\nint nocc_pinternal (char * z, char * y, int c) {\n\tint returnv;\n\tint temp_variable = 80;\n\treturnv = temp_variable;\n\treturn returnv;\n}\n",
        "dummy_funcs_seed": 2
      }
    ],
    "real_io_pairs": null,
    "angha_io_error": null,
    "real_io_error": null,
    "angha_exe_wrapper": "extern \"C\" {\n#include \"/run/user/1000/pytmpfile_jordiws_3577745dm1d8z_o.c\"\n}\n\n#include <vector>\n#include <nlohmann/json.hpp>\n#include <fstream>\n#include <iomanip>\n#include <clib/synthesizer.h>\n#include <time.h>\n#include <math.h>\n#include <iostream>\nchar* output_file;\nchar* pre_accel_dump_file;  // optional dump file.\nusing json = nlohmann::json;\nconst char* __asan_default_options() {\n  return \"detect_leaks=0\";\n}\n\nclock_t AcceleratorStart;\nclock_t AcceleratorTotalNanos = 0;\nvoid StartAcceleratorTimer() {\n  AcceleratorStart = clock();\n}\n\nvoid StopAcceleratorTimer() {\n  AcceleratorTotalNanos += (clock()) - AcceleratorStart;\n}\n\nvoid write_output(TYPE_1__* bename, int* tcptr) {\n  json output_json;\n  TYPE_1__ output_temp_2 = *bename;\n  json output_temp_3;\n\n  output_temp_3[\"tag\"] = output_temp_2.tag;\n  output_json[\"bename\"] = output_temp_3;\n  std::vector<json> output_temp_4;\n  for (unsigned int i5 = 0; i5 < 32; i5++) {\n    int output_temp_6 = tcptr[i5];\n\n    output_temp_4.push_back(output_temp_6);\n  }\n  output_json[\"tcptr\"] = output_temp_4;\n  json output_temp_7;\n\n  output_temp_7[\"tag_NAME\"] = krocetc_target.tag_NAME;\n\n  output_temp_7[\"tag_NAMEREF\"] = krocetc_target.tag_NAMEREF;\n  output_json[\"krocetc_target\"] = output_temp_7;\n  std::ofstream out_str(output_file);\n  out_str << std::setw(4) << output_json << std::endl;\n}\nint main(int argc, char** argv) {\n  char* inpname = argv[1];\n  output_file = argv[2];\n\n  std::ifstream ifs(inpname);\n  json input_json = json::parse(ifs);\n  long int bename_pointer__tag = input_json[\"bename\"][\"tag\"];\n  TYPE_1__ bename_pointer = {bename_pointer__tag};\n  TYPE_1__* bename = &bename_pointer;\n  std::vector<int> input_temp_1_vec;\n  for (auto& elem : input_json[\"tcptr\"]) {\n    int input_temp_1_inner = elem;\n    input_temp_1_vec.push_back(input_temp_1_inner);\n  }\n  int* tcptr = &input_temp_1_vec[0];\n  long int krocetc_target__tag_NAME = input_json[\"krocetc_target\"][\"tag_NAME\"];\n  long int krocetc_target__tag_NAMEREF = input_json[\"krocetc_target\"][\"tag_NAMEREF\"];\n  krocetc_target = {krocetc_target__tag_NAME, krocetc_target__tag_NAMEREF};\n  clock_t begin = clock();\n  krocetc_be_gettypecat(bename, tcptr);\n  clock_t end = clock();\n  std::cout << \"Time: \" << (double)(end - begin) / CLOCKS_PER_SEC << std::endl;\n  std::cout << \"AccTime: \" << (double)AcceleratorTotalNanos / CLOCKS_PER_SEC << std::endl;\n  write_output(bename, tcptr);\n}",
    "real_exe_wrapper": null,
    "angha_io_pairs_are_trivial": true,
    "real_io_pairs_are_trivial": true,
    "angha_iospec": {
      "livein": [
        "bename",
        "tcptr",
        "krocetc_target"
      ],
      "liveout": [
        "bename",
        "tcptr",
        "krocetc_target"
      ],
      "returnvarname": [],
      "execcmd": "",
      "funname": "krocetc_be_gettypecat",
      "funargs": [
        "bename",
        "tcptr"
      ],
      "typemap": {
        "bename": "pointer(TYPE_1__)",
        "tcptr": "array(int32#32)",
        "krocetc_target": "TYPE_4__"
      },
      "required_includes": [
        "/run/user/1000/pytmpfile_jordiws_3577745dm1d8z_o.c"
      ],
      "classmap": {
        "TYPE_1__": {
          "type": "struct",
          "symbols": [
            "tag"
          ],
          "typemap": {
            "tag": "int64"
          }
        },
        "TYPE_4__": {
          "type": "struct",
          "symbols": [
            "tag_NAME",
            "tag_NAMEREF"
          ],
          "typemap": {
            "tag_NAME": "int64",
            "tag_NAMEREF": "int64"
          }
        }
      },
      "range": {},
      "needs_cast": {},
      "globals": [
        "krocetc_target"
      ]
    },
    "real_iospec": null,
    "ref": "master",
    "func_head_types": "void krocetc_be_gettypecat (tnode_t *bename, typecat_e *tcptr)"
  },
  "meta": {}
}
----------------------------------------
