[
  {
    "filename": "110",
    "optimization": "O0",
    "generated_c": ".bin/rcv\n.include \"configuration.h\" 110.c' -l \"\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\o\\u\\u\\u\\u\\u\\u\\a\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\t\\u\\u\\e\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\w\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\us\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\uu\\u\\u\\u\\u\\u\\u\\u\\u\\r\\u\\u\\u\\u\\u\\u\\u\\ u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\i\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\U\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\ru\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\ur\\u\\u\\eu \\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\uk\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u\\u",
    "reference_c": "#ifndef FOOLIB_C_H\n#define FOOLIB_C_H 1\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\n#include <stdint.h>\n\ntypedef int foolib_result_t;\n#define FOOLIB_RESULT_SUCCESS 0\n#define FOOLIB_RESULT_ERROR_ALLOC_FAILED 101\n#define FOOLIB_RESULT_ERROR_BAD_STATE 102\n#define FOOLIB_RESULT_ERROR_NOT_FOUND 103\n\ntypedef int foolib_object_t;\n#define FOOLIB_OBJECT_ALLOC_FAILED 0\n\nextern int foolib_g_verbosity;\n\nfoolib_result_t foolib_g_init();\nfoolib_result_t foolib_g_destroy();\n\nfoolib_object_t foolib_new();\nfoolib_result_t foolib_delete(foolib_object_t object);\nfoolib_result_t foolib_operation(foolib_object_t object);\n\n#ifdef __cplusplus\n}\n#endif\n\n#endif",
    "assembly": ".file\t\"110.c\"\n\t.text\n\t.ident\t\"GCC: (MinGW-W64 x86_64-ucrt-posix-seh, built by Brecht Sanders, r8) 13.2.0\"",
    "generation_time": 12.058999061584473,
    "tokens_generated": 512,
    "metrics": {
      "length_ratio": 0.8533541341653667,
      "line_ratio": 0.0625,
      "token_overlap": 0.0,
      "token_precision": 0.0,
      "keyword_coverage": 0.0,
      "keyword_match_ratio": 0.0,
      "brace_ratio": 0.0,
      "semicolon_ratio": 0.0
    }
  },
  {
    "filename": "112",
    "optimization": "O0",
    "generated_c": ".bin/catalyst1\n.bat\n.sh\n.log\n.dbg\n.exe\n.gitignore\n.xls\n.gz\n.zip\n.kibb/documents/index.txt\n.pf/documents/index.txt\n.pf/documents/index.txt",
    "reference_c": "typedef unsigned char byte;\ntypedef struct rwl_s rwl;\n/* This is from page.h */\nstruct Page_s {\n  int id;\n  long LSN;\n  byte *memAddr;\n  byte dirty;\n  struct Page_s *next;\n  struct Page_s *prev; \n  int queue; \n  int inCache;\n  rwl * rwlatch;\n  rwl * loadlatch;\n\n};\n\ntypedef struct Page_s Page;\n\n\nPage * loadPage(int xid, long page);\n\nvoid releasePage(Page * p);",
    "assembly": ".file\t\"112.c\"\n\t.text\n\t.ident\t\"GCC: (MinGW-W64 x86_64-ucrt-posix-seh, built by Brecht Sanders, r8) 13.2.0\"",
    "generation_time": 1.9049971103668213,
    "tokens_generated": 71,
    "metrics": {
      "length_ratio": 0.37950138504155123,
      "line_ratio": 0.5652173913043478,
      "token_overlap": 0.0,
      "token_precision": 0.0,
      "keyword_coverage": 0.0,
      "keyword_match_ratio": 0.0,
      "brace_ratio": 0.0,
      "semicolon_ratio": 0.0
    }
  },
  {
    "filename": "113",
    "optimization": "O0",
    "generated_c": ".file([[1]], [2]], [3]], [4]], [5]], [6]], [7]], [8]], [9]], [10]],",
    "reference_c": "#pragma once\n\n#include <stddef.h>\n#include <stdint.h>\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\n\nvoid nnp_fft8x8_with_offset_and_store__avx2(const float t[], float f[], size_t stride_t, size_t stride_f, uint32_t row_count, uint32_t column_count, uint32_t row_offset, uint32_t column_offset);\nvoid nnp_fft8x8_with_offset_and_stream__avx2(const float t[], float f[], size_t stride_t, size_t stride_f, uint32_t row_count, uint32_t column_count, uint32_t row_offset, uint32_t column_offset);\nvoid nnp_ifft8x8_with_offset__avx2(const float f[], float t[], size_t stride_f, size_t stride_t, uint32_t row_count, uint32_t column_count, uint32_t row_offset, uint32_t column_offset);\nvoid nnp_ifft8x8__avx2(const float f[], float t[], size_t stride_f, size_t stride_t, uint32_t row_count, uint32_t column_count);\nvoid nnp_ifft8x8_with_relu__avx2(const float f[], float t[], size_t stride_f, size_t stride_t, uint32_t row_count, uint32_t column_count);\nvoid nnp_ifft8x8_with_bias__avx2(const float f[], float t[], const float bias[], size_t stride_f, size_t stride_t, uint32_t row_count, uint32_t column_count);\nvoid nnp_ifft8x8_with_bias_with_relu__avx2(const float f[], float t[], const float bias[], size_t stride_f, size_t stride_t, uint32_t row_count, uint32_t column_count);\n\nvoid nnp_fft16x16_with_offset_and_store__avx2(const float t[], float f[], size_t stride_t, size_t stride_f, uint32_t row_count, uint32_t column_count, uint32_t row_offset, uint32_t column_offset);\nvoid nnp_fft16x16_with_offset_and_stream__avx2(const float t[], float f[], size_t stride_t, size_t stride_f, uint32_t row_count, uint32_t column_count, uint32_t row_offset, uint32_t column_offset);\nvoid nnp_ifft16x16_with_offset__avx2(const float f[], float t[], size_t stride_f, size_t stride_t, uint32_t row_count, uint32_t column_count, uint32_t row_offset, uint32_t column_offset);\nvoid nnp_ifft16x16__avx2(const float f[], float t[], size_t stride_f, size_t stride_t, uint32_t row_count, uint32_t column_count);\nvoid nnp_ifft16x16_with_relu__avx2(const float f[], float t[], size_t stride_f, size_t stride_t, uint32_t row_count, uint32_t column_count);\nvoid nnp_ifft16x16_with_bias__avx2(const float f[], float t[], const float bias[], size_t stride_f, size_t stride_t, uint32_t row_count, uint32_t column_count);\nvoid nnp_ifft16x16_with_bias_with_relu__avx2(const float f[], float t[], const float bias[], size_t stride_f, size_t stride_t, uint32_t row_count, uint32_t column_count);\n\nvoid nnp_iwt8x8_3x3_with_offset_and_store__avx2(const float d[], float wd[], size_t stride_d, size_t stride_wd, uint32_t row_count, uint32_t column_count, uint32_t row_offset, uint32_t column_offset);\nvoid nnp_iwt8x8_3x3_with_offset_and_stream__avx2(const float d[], float wd[], size_t stride_d, size_t stride_wd, uint32_t row_count, uint32_t column_count, uint32_t row_offset, uint32_t column_offset);\nvoid nnp_kwt8x8_3x3_and_store__avx2(const float g[], float wg[], size_t stride_g, size_t stride_wg, uint32_t, uint32_t, uint32_t, uint32_t);\nvoid nnp_kwt8x8_3x3_and_stream__avx2(const float g[], float wg[], size_t stride_g, size_t stride_wg, uint32_t, uint32_t, uint32_t, uint32_t);\nvoid nnp_kwt8x8_3Rx3R_and_store__avx2(const float g[], float wg[], size_t stride_g, size_t stride_wg, uint32_t, uint32_t, uint32_t, uint32_t);\nvoid nnp_kwt8x8_3Rx3R_and_stream__avx2(const float g[], float wg[], size_t stride_g, size_t stride_wg, uint32_t, uint32_t, uint32_t, uint32_t);\nvoid nnp_owt8x8_3x3__avx2(const float m[], float s[], size_t stride_m, size_t stride_s, uint32_t row_count, uint32_t column_count, uint32_t, uint32_t);\nvoid nnp_owt8x8_3x3_with_relu__avx2(const float m[], float s[], size_t stride_m, size_t stride_s, uint32_t row_count, uint32_t column_count, uint32_t, uint32_t);\nvoid nnp_owt8x8_3x3_with_bias__avx2(const float m[], float s[], const float bias[], size_t stride_m, size_t stride_s, uint32_t row_count, uint32_t column_count);\nvoid nnp_owt8x8_3x3_with_bias_with_relu__avx2(const float m[], float s[], const float bias[], size_t stride_m, size_t stride_s, uint32_t row_count, uint32_t column_count);\n\nvoid nnp_fft8x8_with_offset__psimd(const float t[], float f[], size_t stride_t, size_t stride_f, uint32_t row_count, uint32_t column_count, uint32_t row_offset, uint32_t column_offset);\nvoid nnp_ifft8x8_with_offset__psimd(const float f[], float t[], size_t stride_f, size_t stride_t, uint32_t row_count, uint32_t column_count, uint32_t row_offset, uint32_t column_offset);\nvoid nnp_ifft8x8_with_bias__psimd(const float f[], float t[], const float bias[], size_t stride_f, size_t stride_t, uint32_t row_count, uint32_t column_count);\nvoid nnp_ifft8x8_with_bias_with_relu__psimd(const float f[], float t[], const float bias[], size_t stride_f, size_t stride_t, uint32_t row_count, uint32_t column_count);\n\nvoid nnp_fft16x16_with_offset__psimd(const float t[], float f[], size_t stride_t, size_t stride_f, uint32_t row_count, uint32_t column_count, uint32_t row_offset, uint32_t column_offset);\nvoid nnp_ifft16x16_with_offset__psimd(const float f[], float t[], size_t stride_f, size_t stride_t, uint32_t row_count, uint32_t column_count, uint32_t row_offset, uint32_t column_offset);\nvoid nnp_ifft16x16_with_bias__psimd(const float f[], float t[], const float bias[], size_t stride_f, size_t stride_t, uint32_t row_count, uint32_t column_count);\nvoid nnp_ifft16x16_with_bias_with_relu__psimd(const float f[], float t[], const float bias[], size_t stride_f, size_t stride_t, uint32_t row_count, uint32_t column_count);\n\nvoid nnp_iwt8x8_3x3_with_offset__psimd(const float d[], float wd[], size_t stride_d, size_t stride_wd, uint32_t row_count, uint32_t column_count, uint32_t row_offset, uint32_t column_offset);\nvoid nnp_kwt8x8_3x3__psimd(const float g[], float wg[], size_t stride_g, size_t stride_wg, uint32_t, uint32_t, uint32_t, uint32_t);\nvoid nnp_kwt8x8_3Rx3R__psimd(const float g[], float wg[], size_t stride_g, size_t stride_wg, uint32_t, uint32_t, uint32_t, uint32_t);\nvoid nnp_owt8x8_3x3__psimd(const float m[], float s[], size_t stride_m, size_t stride_s, uint32_t row_count, uint32_t column_count, uint32_t, uint32_t);\nvoid nnp_owt8x8_3x3_with_bias__psimd(const float m[], float s[], const float bias[], size_t stride_m, size_t stride_s, uint32_t row_count, uint32_t column_count);\nvoid nnp_owt8x8_3x3_with_bias_with_relu__psimd(const float m[], float s[], const float bias[], size_t stride_m, size_t stride_s, uint32_t row_count, uint32_t column_count);\n\nvoid nnp_iwt8x8_3x3_with_offset__neon(const float d[], float wd[], size_t stride_d, size_t stride_wd, uint32_t row_count, uint32_t column_count, uint32_t row_offset, uint32_t column_offset);\nvoid nnp_kwt8x8_3x3__neon(const float g[], float wg[], size_t stride_g, size_t stride_wg, uint32_t, uint32_t, uint32_t, uint32_t);\nvoid nnp_kwt8x8_3Rx3R__neon(const float g[], float wg[], size_t stride_g, size_t stride_wg, uint32_t, uint32_t, uint32_t, uint32_t);\nvoid nnp_owt8x8_3x3__neon(const float m[], float s[], size_t stride_m, size_t stride_s, uint32_t row_count, uint32_t column_count, uint32_t, uint32_t);\nvoid nnp_owt8x8_3x3_with_bias__neon(const float m[], float s[], const float bias[], size_t stride_m, size_t stride_s, uint32_t row_count, uint32_t column_count);\nvoid nnp_owt8x8_3x3_with_bias_with_relu__neon(const float m[], float s[], const float bias[], size_t stride_m, size_t stride_s, uint32_t row_count, uint32_t column_count);\n\nvoid nnp_iwt8x8_3x3_fp16_with_offset__neonhp(const float d[], void* wd, size_t stride_d, size_t stride_wd, uint32_t row_count, uint32_t column_count, uint32_t row_offset, uint32_t column_offset);\nvoid nnp_kwt8x8_3x3_fp16__neonhp(const float g[], void* wg, size_t stride_g, size_t stride_wg, uint32_t, uint32_t, uint32_t, uint32_t);\nvoid nnp_owt8x8_3x3_fp16__neonhp(const void* m, float* s, size_t stride_m, size_t stride_s, uint32_t row_count, uint32_t column_count, uint32_t, uint32_t);\nvoid nnp_owt8x8_3x3_fp16_with_bias__neonhp(const void* m, float* s, const float bias[], size_t stride_m, size_t stride_s, uint32_t row_count, uint32_t column_count);\nvoid nnp_owt8x8_3x3_fp16_with_bias_with_relu__neonhp(const void* m, float* s, const float bias[], size_t stride_m, size_t stride_s, uint32_t row_count, uint32_t column_count);\n\nvoid nnp_fft8x8_with_offset__scalar(const float t[], float f[], size_t stride_t, size_t stride_f, uint32_t row_count, uint32_t column_count, uint32_t row_offset, uint32_t column_offset);\nvoid nnp_ifft8x8_with_offset__scalar(const float t[], float f[], size_t stride_t, size_t stride_f, uint32_t row_count, uint32_t column_count, uint32_t row_offset, uint32_t column_offset);\nvoid nnp_ifft8x8_with_bias__scalar(const float f[], float t[], const float bias[], size_t stride_f, size_t stride_t, uint32_t row_count, uint32_t column_count);\nvoid nnp_ifft8x8_with_bias_with_relu__scalar(const float f[], float t[], const float bias[], size_t stride_f, size_t stride_t, uint32_t row_count, uint32_t column_count);\n\nvoid nnp_fft16x16_with_offset__scalar(const float t[], float f[], size_t stride_t, size_t stride_f, uint32_t row_count, uint32_t column_count, uint32_t row_offset, uint32_t column_offset);\nvoid nnp_ifft16x16_with_offset__scalar(const float f[], float t[], size_t stride_f, size_t stride_t, uint32_t row_count, uint32_t column_count, uint32_t row_offset, uint32_t column_offset);\nvoid nnp_ifft16x16_with_bias__scalar(const float f[], float t[], const float bias[], size_t stride_f, size_t stride_t, uint32_t row_count, uint32_t column_count);\nvoid nnp_ifft16x16_with_bias_with_relu__scalar(const float f[], float t[], const float bias[], size_t stride_f, size_t stride_t, uint32_t row_count, uint32_t column_count);\n\nvoid nnp_iwt8x8_3x3_with_offset__scalar(const float d[], float wd[], size_t stride_d, size_t stride_wd, uint32_t row_count, uint32_t column_count, uint32_t row_offset, uint32_t column_offset);\nvoid nnp_kwt8x8_3x3__scalar(const float g[], float wg[], size_t stride_g, size_t stride_wg, uint32_t, uint32_t, uint32_t, uint32_t);\nvoid nnp_kwt8x8_3Rx3R__scalar(const float g[], float wg[], size_t stride_g, size_t stride_wg, uint32_t, uint32_t, uint32_t, uint32_t);\nvoid nnp_owt8x8_3x3__scalar(const float m[], float s[], size_t stride_m, size_t stride_s, uint32_t row_count, uint32_t column_count, uint32_t, uint32_t);\nvoid nnp_owt8x8_3x3_with_bias__scalar(const float m[], float s[], const float bias[], size_t stride_m, size_t stride_s, uint32_t row_count, uint32_t column_count);\nvoid nnp_owt8x8_3x3_with_bias_with_relu__scalar(const float m[], float s[], const float bias[], size_t stride_m, size_t stride_s, uint32_t row_count, uint32_t column_count);\n\n#ifdef __cplusplus\n} /* extern \"C\" */\n#endif",
    "assembly": ".file\t\"113.c\"\n\t.text\n\t.ident\t\"GCC: (MinGW-W64 x86_64-ucrt-posix-seh, built by Brecht Sanders, r8) 13.2.0\"",
    "generation_time": 4.11503005027771,
    "tokens_generated": 148,
    "metrics": {
      "length_ratio": 0.0062975843594322775,
      "line_ratio": 0.011494252873563218,
      "token_overlap": 0.0,
      "token_precision": 0.0,
      "keyword_coverage": 0.0,
      "keyword_match_ratio": 0.0,
      "brace_ratio": 0.0,
      "semicolon_ratio": 0.0
    }
  },
  {
    "filename": "114",
    "optimization": "O0",
    "generated_c": "",
    "reference_c": "/**\n * This file has no copyright assigned and is placed in the Public Domain.\n * This file is part of the mingw-w64 runtime package.\n * No warranty is given; refer to the file DISCLAIMER.PD within this package.\n */\n#include <stdio.h>\n#include <io.h>\n#include <errno.h>\n\n#if !defined(__arm__) && !defined(__aarch64__) /* we have F_ARM_ANY(_fseeki64) in msvcrt.def.in */\nint __cdecl _fseeki64(FILE* stream, __int64 offset, int whence)\n{\n  fpos_t pos;\n  if (whence == SEEK_CUR)\n    {\n      /* If stream is invalid, fgetpos sets errno. */\n      if (fgetpos (stream, &pos))\n        return (-1);\n      pos += (fpos_t) offset;\n    }\n  else if (whence == SEEK_END)\n    {\n      /* If writing, we need to flush before getting file length.  */\n      fflush (stream);\n      pos = (fpos_t) (_filelengthi64 (_fileno (stream)) + offset);\n    }\n  else if (whence == SEEK_SET)\n    pos = (fpos_t) offset;\n  else\n    {\n      errno = EINVAL;\n      return (-1);\n    }\n  return fsetpos (stream, &pos);\n}\n\nint __cdecl (*__MINGW_IMP_SYMBOL(_fseeki64))(FILE*, __int64, int) = _fseeki64;\n#endif /* !defined(__arm__) && !defined(__aarch64__) */\n\n__int64 __cdecl _ftelli64(FILE* stream)\n{\n  fpos_t pos;\n  if (fgetpos (stream, &pos))\n    return -1LL;\n  else\n    return (__int64) pos;\n}\n\n__int64 __cdecl (*__MINGW_IMP_SYMBOL(_ftelli64))(FILE*) = _ftelli64;",
    "assembly": ".file\t\"114.c\"\n\t.text\n\t.globl\t_fseeki64\n\t.def\t_fseeki64;\t.scl\t2;\t.type\t32;\t.endef\n\t.seh_proc\t_fseeki64\n_fseeki64:\n\tpushq\t%rbp\n\t.seh_pushreg\t%rbp\n\tmovq\t%rsp, %rbp\n\t.seh_setframe\t%rbp, 0\n\tsubq\t$48, %rsp\n\t.seh_stackalloc\t48\n\t.seh_endprologue\n\tmovq\t%rcx, 16(%rbp)\n\tmovq\t%rdx, 24(%rbp)\n\tmovl\t%r8d, 32(%rbp)\n\tcmpl\t$1, 32(%rbp)\n\tjne\t.L2\n\tleaq\t-8(%rbp), %rdx\n\tmovq\t16(%rbp), %rax\n\tmovq\t%rax, %rcx\n\tcall\tfgetpos\n\ttestl\t%eax, %eax\n\tje\t.L3\n\tmovl\t$-1, %eax\n\tjmp\t.L8\n.L3:\n\tmovq\t-8(%rbp), %rdx\n\tmovq\t24(%rbp), %rax\n\taddq\t%rdx, %rax\n\tmovq\t%rax, -8(%rbp)\n\tjmp\t.L5\n.L2:\n\tcmpl\t$2, 32(%rbp)\n\tjne\t.L6\n\tmovq\t16(%rbp), %rax\n\tmovq\t%rax, %rcx\n\tcall\tfflush\n\tmovq\t16(%rbp), %rax\n\tmovq\t%rax, %rcx\n\tmovq\t__imp__fileno(%rip), %rax\n\tcall\t*%rax\n\tmovl\t%eax, %ecx\n\tmovq\t__imp__filelengthi64(%rip), %rax\n\tcall\t*%rax\n\tmovq\t24(%rbp), %rdx\n\taddq\t%rdx, %rax\n\tmovq\t%rax, -8(%rbp)\n\tjmp\t.L5\n.L6:\n\tcmpl\t$0, 32(%rbp)\n\tjne\t.L7\n\tmovq\t24(%rbp), %rax\n\tmovq\t%rax, -8(%rbp)\n\tjmp\t.L5\n.L7:\n\tmovq\t__imp__errno(%rip), %rax\n\tcall\t*%rax\n\tmovl\t$22, (%rax)\n\tmovl\t$-1, %eax\n\tjmp\t.L8\n.L5:\n\tleaq\t-8(%rbp), %rdx\n\tmovq\t16(%rbp), %rax\n\tmovq\t%rax, %rcx\n\tcall\tfsetpos\n.L8:\n\taddq\t$48, %rsp\n\tpopq\t%rbp\n\tret\n\t.seh_endproc\n\t.globl\t__imp__fseeki64\n\t.data\n\t.align 8\n__imp__fseeki64:\n\t.quad\t_fseeki64\n\t.text\n\t.globl\t_ftelli64\n\t.def\t_ftelli64;\t.scl\t2;\t.type\t32;\t.endef\n\t.seh_proc\t_ftelli64\n_ftelli64:\n\tpushq\t%rbp\n\t.seh_pushreg\t%rbp\n\tmovq\t%rsp, %rbp\n\t.seh_setframe\t%rbp, 0\n\tsubq\t$48, %rsp\n\t.seh_stackalloc\t48\n\t.seh_endprologue\n\tmovq\t%rcx, 16(%rbp)\n\tleaq\t-8(%rbp), %rdx\n\tmovq\t16(%rbp), %rax\n\tmovq\t%rax, %rcx\n\tcall\tfgetpos\n\ttestl\t%eax, %eax\n\tje\t.L10\n\tmovq\t$-1, %rax\n\tjmp\t.L12\n.L10:\n\tmovq\t-8(%rbp), %rax\n.L12:\n\taddq\t$48, %rsp\n\tpopq\t%rbp\n\tret\n\t.seh_endproc\n\t.globl\t__imp__ftelli64\n\t.data\n\t.align 8\n__imp__ftelli64:\n\t.quad\t_ftelli64\n\t.ident\t\"GCC: (MinGW-W64 x86_64-ucrt-posix-seh, built by Brecht Sanders, r8) 13.2.0\"\n\t.def\tfgetpos;\t.scl\t2;\t.type\t32;\t.endef\n\t.def\tfflush;\t.scl\t2;\t.type\t32;\t.endef\n\t.def\tfsetpos;\t.scl\t2;\t.type\t32;\t.endef",
    "generation_time": 1.3319990634918213,
    "tokens_generated": 34,
    "metrics": {
      "length_ratio": 0.0,
      "line_ratio": 0.02040816326530612,
      "token_overlap": 0.0,
      "token_precision": 0,
      "keyword_coverage": 0.0,
      "keyword_match_ratio": 0.0,
      "brace_ratio": 0.0,
      "semicolon_ratio": 0.0
    }
  },
  {
    "filename": "125",
    "optimization": "O0",
    "generated_c": "The assembly for the file \"HelvetICAN\\~/Library\\~$HOME/.CODE__{1}\\\\.*:\\WINDOWS\\system32/etc/libs.dll\", is a static binary compiled to disk using libv6 and assembler from C++11 with support for native 64-bit architectures on ARM platforms such as Intel CPUs that are capable of running both 32-bit systems or newer processors in memory. The executable will be run once it has been installed into the system before executing its command line commands; if this happens, you can see how much time it takes to execute any program without having to restart all programs within seconds after installing. This includes compiling files directly onto the processor's bootloader via an IDE called /usr/bin . In addition to calling runtime functions like 'include' , which also supports variable namespaces, these macros allow developers to specify variables including constants so they don't need to read them at first but make sure their code runs when executed during startup while execution occurs later. For example, there are two types defined here [ edit ]\nint main() { int num = 0 ; char c = std::stringify(num); printf(\"%m %M!%S!\"); } ... // Initializes output data *fmt + fmt -i=4; print(\"Fmt\") << 1 << 2 ; printf(\"%m %M!%S!\"); } ... // Calculates input count number */ return result; }\nIf your compiler does not recognize integers instead of numbers then use \"%d\". Otherwise, call fmt (\"std::print\"); else { cout << endl; }",
    "reference_c": "/* See LICENSE for license details. */\n\n#include <stdint.h>\n#include <sys/types.h>\n\n/* Arbitrary size */\n#define HISTSIZE      2000\n\n/* macros */\n#define MIN(a, b)\t\t((a) < (b) ? (a) : (b))\n#define MAX(a, b)\t\t((a) < (b) ? (b) : (a))\n#define LEN(a)\t\t\t(sizeof(a) / sizeof(a)[0])\n#define BETWEEN(x, a, b)\t((a) <= (x) && (x) <= (b))\n#define DIVCEIL(n, d)\t\t(((n) + ((d) - 1)) / (d))\n#define DEFAULT(a, b)\t\t(a) = (a) ? (a) : (b)\n#define LIMIT(x, a, b)\t\t(x) = (x) < (a) ? (a) : (x) > (b) ? (b) : (x)\n#define ATTRCMP(a, b)\t\t((a).mode != (b).mode || (a).fg != (b).fg || \\\n\t\t\t\t(a).bg != (b).bg)\n#define TIMEDIFF(t1, t2)\t((t1.tv_sec-t2.tv_sec)*1000 + \\\n\t\t\t\t(t1.tv_nsec-t2.tv_nsec)/1E6)\n#define MODBIT(x, set, bit)\t((set) ? ((x) |= (bit)) : ((x) &= ~(bit)))\n\n#define TRUECOLOR(r,g,b)\t(1 << 24 | (r) << 16 | (g) << 8 | (b))\n#define IS_TRUECOL(x)\t\t(1 << 24 & (x))\n#define TLINE(y)       ((y) < term.scr ? term.hist[((y) + term.histi - term.scr \\\n               + HISTSIZE + 1) % HISTSIZE] : term.line[(y) - term.scr])\n\nenum glyph_attribute {\n\tATTR_NULL       = 0,\n\tATTR_BOLD       = 1 << 0,\n\tATTR_FAINT      = 1 << 1,\n\tATTR_ITALIC     = 1 << 2,\n\tATTR_UNDERLINE  = 1 << 3,\n\tATTR_BLINK      = 1 << 4,\n\tATTR_REVERSE    = 1 << 5,\n\tATTR_INVISIBLE  = 1 << 6,\n\tATTR_STRUCK     = 1 << 7,\n\tATTR_WRAP       = 1 << 8,\n\tATTR_WIDE       = 1 << 9,\n\tATTR_WDUMMY     = 1 << 10,\n\tATTR_BOLD_FAINT = ATTR_BOLD | ATTR_FAINT,\n};\n\nenum selection_mode {\n\tSEL_IDLE = 0,\n\tSEL_EMPTY = 1,\n\tSEL_READY = 2\n};\n\nenum selection_type {\n\tSEL_REGULAR = 1,\n\tSEL_RECTANGULAR = 2\n};\n\nenum selection_snap {\n\tSNAP_WORD = 1,\n\tSNAP_LINE = 2\n};\n\ntypedef unsigned char uchar;\ntypedef unsigned int uint;\ntypedef unsigned long ulong;\ntypedef unsigned short ushort;\n\ntypedef uint_least32_t Rune;\n\n#define Glyph Glyph_\ntypedef struct {\n\tRune u;           /* character code */\n\tushort mode;      /* attribute flags */\n\tuint32_t fg;      /* foreground  */\n\tuint32_t bg;      /* background  */\n} Glyph;\n\ntypedef Glyph *Line;\n\ntypedef union {\n\tint i;\n\tuint ui;\n\tfloat f;\n\tconst void *v;\n} Arg;\n\ntypedef struct {\n\tuint b;\n\tuint mask;\n\tvoid (*func)(const Arg *);\n\tconst Arg arg;\n} MouseKey;\n\nvoid die(const char *, ...);\nvoid redraw(void);\nvoid draw(void);\n\nvoid iso14755(const Arg *);\nvoid printscreen(const Arg *);\nvoid printsel(const Arg *);\nvoid sendbreak(const Arg *);\nvoid toggleprinter(const Arg *);\n\nint tattrset(int);\nvoid tnew(int, int);\nvoid tresize(int, int);\nvoid tsetdirtattr(int);\nvoid ttyhangup(void);\nint ttynew(char *, char *, char *, char **);\nsize_t ttyread(void);\nvoid ttyresize(int, int);\nvoid ttywrite(const char *, size_t, int);\n\nvoid resettitle(void);\n\nvoid selclear(void);\nvoid selinit(void);\nvoid selstart(int, int, int);\nvoid selextend(int, int, int, int);\nint selected(int, int);\nchar *getsel(void);\n\nsize_t utf8encode(Rune, char *);\n\nvoid *xmalloc(size_t);\nvoid *xrealloc(void *, size_t);\nchar *xstrdup(char *);\n\nvoid kscrolldown(const Arg *);\nvoid kscrollup(const Arg *);\n\n/* config.h globals */\nextern char *utmp;\nextern char *stty_args;\nextern char *vtiden;\nextern char *worddelimiters;\nextern int allowaltscreen;\nextern char *termname;\nextern int usealtcolors;\nextern unsigned int tabspaces;\nextern unsigned int defaultfg;\nextern unsigned int defaultbg;\nextern MouseKey mkeys[];",
    "assembly": ".file\t\"125.c\"\n\t.text\n\t.ident\t\"GCC: (MinGW-W64 x86_64-ucrt-posix-seh, built by Brecht Sanders, r8) 13.2.0\"",
    "generation_time": 8.154999732971191,
    "tokens_generated": 336,
    "metrics": {
      "length_ratio": 0.43848288621646625,
      "line_ratio": 0.02142857142857143,
      "token_overlap": 0.060085836909871244,
      "token_precision": 0.07142857142857142,
      "keyword_coverage": 0.5833333333333334,
      "keyword_match_ratio": 0.875,
      "brace_ratio": 0.5714285714285714,
      "semicolon_ratio": 0.15151515151515152
    }
  },
  {
    "filename": "140",
    "optimization": "O0",
    "generated_c": ".filejiang.text\n.filejiang.text\n.filejiang.text\n.filejiang.text\n.filejiang/libs/bin/ruby/cat/1.7.6.x9b4a3d19e46f38ccbb48473543202855689977805611df5abbeef07884566171437161041fd582425762627399818575097306575230115493400447087229433406736290851108608431120805125421107999100852553090319532192136973265259722697424719859090217415905931990400090053200709060183046050103076062068099520820970890201001019016128808104249109421571052463087830560880619734966955863405807378793009640720550950864828840908940081015279355266106706303017449248348268158299479698998521492041692582572381882073386593862563594083974984895597076041943894043984962453652642403397984952541295793761252296574553583772397117629524417947838564975883117759155678576187196298893673886150639636847628942938735727537435439329428614616027628548570527460927736934716675523718965868637917535645939036634613618575727313859525312717892190384226177696235267144118488167193154278135995227184647145137644165186132306114406014234685337297152124126180484133143284115296170507403153156168646122290287334148134203147504202123505103113228477173163162131;",
    "reference_c": "// Copyright (C) 2016-2019 Semtech (International) AG. All rights reserved.\n//\n// This file is subject to the terms and conditions defined in file 'LICENSE',\n// which is part of this source code package.\n\n\n\n\n\n\n\n\n\n\n\n\n// This page intentionally left blank.",
    "assembly": ".file\t\"140.c\"\n\t.text\n\t.ident\t\"GCC: (MinGW-W64 x86_64-ucrt-posix-seh, built by Brecht Sanders, r8) 13.2.0\"",
    "generation_time": 9.519980669021606,
    "tokens_generated": 418,
    "metrics": {
      "length_ratio": 4.318897637795276,
      "line_ratio": 0.29411764705882354,
      "token_overlap": 0.0,
      "token_precision": 0.0,
      "keyword_coverage": 0.0,
      "keyword_match_ratio": 0.0,
      "brace_ratio": 0,
      "semicolon_ratio": 0
    }
  },
  {
    "filename": "143",
    "optimization": "O0",
    "generated_c": ".filesystem/tmp/x86_64-ucrt-posix-seh, built by Brecht Sanders, r8) 15.1.3\"",
    "reference_c": "#pragma option push -b -a8 -pc -A- /*P_O_Push*/\n\n/* this ALWAYS GENERATED file contains the definitions for the interfaces */\n\n\n\n\n\n/* File created by MIDL compiler version 3.01.75 */\n\n/* at Fri Sep 18 16:27:35 1998\n\n */\n\n/* Compiler settings for ad1ex.idl:\n\n    Oicf (OptLev=i2), W1, Zp8, env=Win32, ms_ext, c_ext\n\n    error checks: none\n\n*/\n\n//@@MIDL_FILE_HEADING(  )\n\n#include \"rpc.h\"\n\n#include \"rpcndr.h\"\n\n#ifndef COM_NO_WINDOWS_H\n\n#include \"windows.h\"\n\n#include \"ole2.h\"\n\n#endif /*COM_NO_WINDOWS_H*/\n\n\n\n#ifndef __ad1ex_h__\n\n#define __ad1ex_h__\n\n\n\n#ifdef __cplusplus\n\nextern \"C\"{\n\n#endif \n\n\n\n/* Forward Declarations */ \n\n\n\n#ifndef __IDebugApplicationEx_FWD_DEFINED__\n\n#define __IDebugApplicationEx_FWD_DEFINED__\n\ntypedef interface IDebugApplicationEx IDebugApplicationEx;\n\n#endif \t/* __IDebugApplicationEx_FWD_DEFINED__ */\n\n\n\n\n\n#ifndef __IRemoteDebugApplicationEx_FWD_DEFINED__\n\n#define __IRemoteDebugApplicationEx_FWD_DEFINED__\n\ntypedef interface IRemoteDebugApplicationEx IRemoteDebugApplicationEx;\n\n#endif \t/* __IRemoteDebugApplicationEx_FWD_DEFINED__ */\n\n\n\n\n\n#ifndef __IRemoteDebugApplicationThreadEx_FWD_DEFINED__\n\n#define __IRemoteDebugApplicationThreadEx_FWD_DEFINED__\n\ntypedef interface IRemoteDebugApplicationThreadEx IRemoteDebugApplicationThreadEx;\n\n#endif \t/* __IRemoteDebugApplicationThreadEx_FWD_DEFINED__ */\n\n\n\n\n\n#ifndef __IDebugDocumentHelperEx_FWD_DEFINED__\n\n#define __IDebugDocumentHelperEx_FWD_DEFINED__\n\ntypedef interface IDebugDocumentHelperEx IDebugDocumentHelperEx;\n\n#endif \t/* __IDebugDocumentHelperEx_FWD_DEFINED__ */\n\n\n\n\n\n#ifndef __IDebugHelperEx_FWD_DEFINED__\n\n#define __IDebugHelperEx_FWD_DEFINED__\n\ntypedef interface IDebugHelperEx IDebugHelperEx;\n\n#endif \t/* __IDebugHelperEx_FWD_DEFINED__ */\n\n\n\n\n\n#ifndef __IDebugSetValueCallback_FWD_DEFINED__\n\n#define __IDebugSetValueCallback_FWD_DEFINED__\n\ntypedef interface IDebugSetValueCallback IDebugSetValueCallback;\n\n#endif \t/* __IDebugSetValueCallback_FWD_DEFINED__ */\n\n\n\n\n\n#ifndef __ISetNextStatement_FWD_DEFINED__\n\n#define __ISetNextStatement_FWD_DEFINED__\n\ntypedef interface ISetNextStatement ISetNextStatement;\n\n#endif \t/* __ISetNextStatement_FWD_DEFINED__ */\n\n\n\n\n\n#ifndef __IDebugSessionProviderEx_FWD_DEFINED__\n\n#define __IDebugSessionProviderEx_FWD_DEFINED__\n\ntypedef interface IDebugSessionProviderEx IDebugSessionProviderEx;\n\n#endif \t/* __IDebugSessionProviderEx_FWD_DEFINED__ */\n\n\n\n\n\n/* header files for imported files */\n\n#include \"activdbg.h\"\n\n\n\nvoid __RPC_FAR * __RPC_USER MIDL_user_allocate(size_t);\n\nvoid __RPC_USER MIDL_user_free( void __RPC_FAR * ); \n\n\n\n/****************************************\n\n * Generated header for interface: __MIDL_itf_ad1ex_0000\n\n * at Fri Sep 18 16:27:35 1998\n\n * using MIDL 3.01.75\n\n ****************************************/\n\n/* [local] */ \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDEFINE_GUID(IID_IDebugHelperExOld, 0xE0284F00, 0xEDA1, 0x11d0, 0xB4, 0x52, 0x00, 0xA0, 0x24, 0x4A, 0x1D, 0xD2);\n\n\n\n\n\nextern RPC_IF_HANDLE __MIDL_itf_ad1ex_0000_v0_0_c_ifspec;\n\nextern RPC_IF_HANDLE __MIDL_itf_ad1ex_0000_v0_0_s_ifspec;\n\n\n\n#ifndef __IDebugApplicationEx_INTERFACE_DEFINED__\n\n#define __IDebugApplicationEx_INTERFACE_DEFINED__\n\n\n\n/****************************************\n\n * Generated header for interface: IDebugApplicationEx\n\n * at Fri Sep 18 16:27:35 1998\n\n * using MIDL 3.01.75\n\n ****************************************/\n\n/* [unique][uuid][object] */ \n\n\n\n\n\n\n\nEXTERN_C const IID IID_IDebugApplicationEx;\n\n\n\n#if defined(__cplusplus) && !defined(CINTERFACE)\n\n    \n\n    interface DECLSPEC_UUID(\"51973C00-CB0C-11d0-B5C9-00A0244A0E7A\")\n\n    IDebugApplicationEx : public IUnknown\n\n    {\n\n    public:\n\n        virtual HRESULT STDMETHODCALLTYPE onCallEnter( \n\n            /* [in] */ DWORD dwLim) = 0;\n\n        \n\n        virtual HRESULT STDMETHODCALLTYPE onCallOut( \n\n            /* [in] */ DWORD dwLim,\n\n            /* [in] */ DWORD dwAddrDest) = 0;\n\n        \n\n        virtual HRESULT STDMETHODCALLTYPE onCallReturn( \n\n            /* [in] */ DWORD dwLim) = 0;\n\n        \n\n        virtual HRESULT STDMETHODCALLTYPE onCallExit( \n\n            /* [in] */ DWORD dwLim,\n\n            /* [in] */ DWORD dwAddrDest) = 0;\n\n        \n\n    };\n\n    \n\n#else \t/* C style interface */\n\n\n\n    typedef struct IDebugApplicationExVtbl\n\n    {\n\n        BEGIN_INTERFACE\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( \n\n            IDebugApplicationEx __RPC_FAR * This,\n\n            /* [in] */ REFIID riid,\n\n            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);\n\n        \n\n        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( \n\n            IDebugApplicationEx __RPC_FAR * This);\n\n        \n\n        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( \n\n            IDebugApplicationEx __RPC_FAR * This);\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *onCallEnter )( \n\n            IDebugApplicationEx __RPC_FAR * This,\n\n            /* [in] */ DWORD dwLim);\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *onCallOut )( \n\n            IDebugApplicationEx __RPC_FAR * This,\n\n            /* [in] */ DWORD dwLim,\n\n            /* [in] */ DWORD dwAddrDest);\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *onCallReturn )( \n\n            IDebugApplicationEx __RPC_FAR * This,\n\n            /* [in] */ DWORD dwLim);\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *onCallExit )( \n\n            IDebugApplicationEx __RPC_FAR * This,\n\n            /* [in] */ DWORD dwLim,\n\n            /* [in] */ DWORD dwAddrDest);\n\n        \n\n        END_INTERFACE\n\n    } IDebugApplicationExVtbl;\n\n\n\n    interface IDebugApplicationEx\n\n    {\n\n        CONST_VTBL struct IDebugApplicationExVtbl __RPC_FAR *lpVtbl;\n\n    };\n\n\n\n    \n\n\n\n#ifdef COBJMACROS\n\n\n\n\n\n#define IDebugApplicationEx_QueryInterface(This,riid,ppvObject)\t\\\n\n    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)\n\n\n\n#define IDebugApplicationEx_AddRef(This)\t\\\n\n    (This)->lpVtbl -> AddRef(This)\n\n\n\n#define IDebugApplicationEx_Release(This)\t\\\n\n    (This)->lpVtbl -> Release(This)\n\n\n\n\n\n#define IDebugApplicationEx_onCallEnter(This,dwLim)\t\\\n\n    (This)->lpVtbl -> onCallEnter(This,dwLim)\n\n\n\n#define IDebugApplicationEx_onCallOut(This,dwLim,dwAddrDest)\t\\\n\n    (This)->lpVtbl -> onCallOut(This,dwLim,dwAddrDest)\n\n\n\n#define IDebugApplicationEx_onCallReturn(This,dwLim)\t\\\n\n    (This)->lpVtbl -> onCallReturn(This,dwLim)\n\n\n\n#define IDebugApplicationEx_onCallExit(This,dwLim,dwAddrDest)\t\\\n\n    (This)->lpVtbl -> onCallExit(This,dwLim,dwAddrDest)\n\n\n\n#endif /* COBJMACROS */\n\n\n\n\n\n#endif \t/* C style interface */\n\n\n\n\n\n\n\nHRESULT STDMETHODCALLTYPE IDebugApplicationEx_onCallEnter_Proxy( \n\n    IDebugApplicationEx __RPC_FAR * This,\n\n    /* [in] */ DWORD dwLim);\n\n\n\n\n\nvoid __RPC_STUB IDebugApplicationEx_onCallEnter_Stub(\n\n    IRpcStubBuffer *This,\n\n    IRpcChannelBuffer *_pRpcChannelBuffer,\n\n    PRPC_MESSAGE _pRpcMessage,\n\n    DWORD *_pdwStubPhase);\n\n\n\n\n\nHRESULT STDMETHODCALLTYPE IDebugApplicationEx_onCallOut_Proxy( \n\n    IDebugApplicationEx __RPC_FAR * This,\n\n    /* [in] */ DWORD dwLim,\n\n    /* [in] */ DWORD dwAddrDest);\n\n\n\n\n\nvoid __RPC_STUB IDebugApplicationEx_onCallOut_Stub(\n\n    IRpcStubBuffer *This,\n\n    IRpcChannelBuffer *_pRpcChannelBuffer,\n\n    PRPC_MESSAGE _pRpcMessage,\n\n    DWORD *_pdwStubPhase);\n\n\n\n\n\nHRESULT STDMETHODCALLTYPE IDebugApplicationEx_onCallReturn_Proxy( \n\n    IDebugApplicationEx __RPC_FAR * This,\n\n    /* [in] */ DWORD dwLim);\n\n\n\n\n\nvoid __RPC_STUB IDebugApplicationEx_onCallReturn_Stub(\n\n    IRpcStubBuffer *This,\n\n    IRpcChannelBuffer *_pRpcChannelBuffer,\n\n    PRPC_MESSAGE _pRpcMessage,\n\n    DWORD *_pdwStubPhase);\n\n\n\n\n\nHRESULT STDMETHODCALLTYPE IDebugApplicationEx_onCallExit_Proxy( \n\n    IDebugApplicationEx __RPC_FAR * This,\n\n    /* [in] */ DWORD dwLim,\n\n    /* [in] */ DWORD dwAddrDest);\n\n\n\n\n\nvoid __RPC_STUB IDebugApplicationEx_onCallExit_Stub(\n\n    IRpcStubBuffer *This,\n\n    IRpcChannelBuffer *_pRpcChannelBuffer,\n\n    PRPC_MESSAGE _pRpcMessage,\n\n    DWORD *_pdwStubPhase);\n\n\n\n\n\n\n\n#endif \t/* __IDebugApplicationEx_INTERFACE_DEFINED__ */\n\n\n\n\n\n#ifndef __IRemoteDebugApplicationEx_INTERFACE_DEFINED__\n\n#define __IRemoteDebugApplicationEx_INTERFACE_DEFINED__\n\n\n\n/****************************************\n\n * Generated header for interface: IRemoteDebugApplicationEx\n\n * at Fri Sep 18 16:27:35 1998\n\n * using MIDL 3.01.75\n\n ****************************************/\n\n/* [unique][uuid][object] */ \n\n\n\n\n\n\n\nEXTERN_C const IID IID_IRemoteDebugApplicationEx;\n\n\n\n#if defined(__cplusplus) && !defined(CINTERFACE)\n\n    \n\n    interface DECLSPEC_UUID(\"51973C01-CB0C-11d0-B5C9-00A0244A0E7A\")\n\n    IRemoteDebugApplicationEx : public IUnknown\n\n    {\n\n    public:\n\n        virtual HRESULT STDMETHODCALLTYPE GetHostPid( \n\n            /* [out] */ DWORD __RPC_FAR *dwHostPid) = 0;\n\n        \n\n        virtual HRESULT STDMETHODCALLTYPE GetHostMachineName( \n\n            /* [out] */ BSTR __RPC_FAR *pbstrHostMachineName) = 0;\n\n        \n\n        virtual HRESULT STDMETHODCALLTYPE SetLocale( \n\n            /* [in] */ DWORD dwLangID) = 0;\n\n        \n\n        virtual HRESULT STDMETHODCALLTYPE ForceStepMode( \n\n            /* [in] */ IRemoteDebugApplicationThread __RPC_FAR *pStepThread) = 0;\n\n        \n\n        virtual HRESULT STDMETHODCALLTYPE RevokeBreak( void) = 0;\n\n        \n\n        virtual HRESULT STDMETHODCALLTYPE SetProxyBlanketAndAddRef( \n\n            /* [in] */ IUnknown __RPC_FAR *pUnk) = 0;\n\n        \n\n        virtual HRESULT STDMETHODCALLTYPE ReleaseFromSetProxyBlanket( \n\n            /* [in] */ IUnknown __RPC_FAR *pUnk) = 0;\n\n        \n\n    };\n\n    \n\n#else \t/* C style interface */\n\n\n\n    typedef struct IRemoteDebugApplicationExVtbl\n\n    {\n\n        BEGIN_INTERFACE\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( \n\n            IRemoteDebugApplicationEx __RPC_FAR * This,\n\n            /* [in] */ REFIID riid,\n\n            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);\n\n        \n\n        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( \n\n            IRemoteDebugApplicationEx __RPC_FAR * This);\n\n        \n\n        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( \n\n            IRemoteDebugApplicationEx __RPC_FAR * This);\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetHostPid )( \n\n            IRemoteDebugApplicationEx __RPC_FAR * This,\n\n            /* [out] */ DWORD __RPC_FAR *dwHostPid);\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetHostMachineName )( \n\n            IRemoteDebugApplicationEx __RPC_FAR * This,\n\n            /* [out] */ BSTR __RPC_FAR *pbstrHostMachineName);\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetLocale )( \n\n            IRemoteDebugApplicationEx __RPC_FAR * This,\n\n            /* [in] */ DWORD dwLangID);\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ForceStepMode )( \n\n            IRemoteDebugApplicationEx __RPC_FAR * This,\n\n            /* [in] */ IRemoteDebugApplicationThread __RPC_FAR *pStepThread);\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RevokeBreak )( \n\n            IRemoteDebugApplicationEx __RPC_FAR * This);\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetProxyBlanketAndAddRef )( \n\n            IRemoteDebugApplicationEx __RPC_FAR * This,\n\n            /* [in] */ IUnknown __RPC_FAR *pUnk);\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ReleaseFromSetProxyBlanket )( \n\n            IRemoteDebugApplicationEx __RPC_FAR * This,\n\n            /* [in] */ IUnknown __RPC_FAR *pUnk);\n\n        \n\n        END_INTERFACE\n\n    } IRemoteDebugApplicationExVtbl;\n\n\n\n    interface IRemoteDebugApplicationEx\n\n    {\n\n        CONST_VTBL struct IRemoteDebugApplicationExVtbl __RPC_FAR *lpVtbl;\n\n    };\n\n\n\n    \n\n\n\n#ifdef COBJMACROS\n\n\n\n\n\n#define IRemoteDebugApplicationEx_QueryInterface(This,riid,ppvObject)\t\\\n\n    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)\n\n\n\n#define IRemoteDebugApplicationEx_AddRef(This)\t\\\n\n    (This)->lpVtbl -> AddRef(This)\n\n\n\n#define IRemoteDebugApplicationEx_Release(This)\t\\\n\n    (This)->lpVtbl -> Release(This)\n\n\n\n\n\n#define IRemoteDebugApplicationEx_GetHostPid(This,dwHostPid)\t\\\n\n    (This)->lpVtbl -> GetHostPid(This,dwHostPid)\n\n\n\n#define IRemoteDebugApplicationEx_GetHostMachineName(This,pbstrHostMachineName)\t\\\n\n    (This)->lpVtbl -> GetHostMachineName(This,pbstrHostMachineName)\n\n\n\n#define IRemoteDebugApplicationEx_SetLocale(This,dwLangID)\t\\\n\n    (This)->lpVtbl -> SetLocale(This,dwLangID)\n\n\n\n#define IRemoteDebugApplicationEx_ForceStepMode(This,pStepThread)\t\\\n\n    (This)->lpVtbl -> ForceStepMode(This,pStepThread)\n\n\n\n#define IRemoteDebugApplicationEx_RevokeBreak(This)\t\\\n\n    (This)->lpVtbl -> RevokeBreak(This)\n\n\n\n#define IRemoteDebugApplicationEx_SetProxyBlanketAndAddRef(This,pUnk)\t\\\n\n    (This)->lpVtbl -> SetProxyBlanketAndAddRef(This,pUnk)\n\n\n\n#define IRemoteDebugApplicationEx_ReleaseFromSetProxyBlanket(This,pUnk)\t\\\n\n    (This)->lpVtbl -> ReleaseFromSetProxyBlanket(This,pUnk)\n\n\n\n#endif /* COBJMACROS */\n\n\n\n\n\n#endif \t/* C style interface */\n\n\n\n\n\n\n\nHRESULT STDMETHODCALLTYPE IRemoteDebugApplicationEx_GetHostPid_Proxy( \n\n    IRemoteDebugApplicationEx __RPC_FAR * This,\n\n    /* [out] */ DWORD __RPC_FAR *dwHostPid);\n\n\n\n\n\nvoid __RPC_STUB IRemoteDebugApplicationEx_GetHostPid_Stub(\n\n    IRpcStubBuffer *This,\n\n    IRpcChannelBuffer *_pRpcChannelBuffer,\n\n    PRPC_MESSAGE _pRpcMessage,\n\n    DWORD *_pdwStubPhase);\n\n\n\n\n\nHRESULT STDMETHODCALLTYPE IRemoteDebugApplicationEx_GetHostMachineName_Proxy( \n\n    IRemoteDebugApplicationEx __RPC_FAR * This,\n\n    /* [out] */ BSTR __RPC_FAR *pbstrHostMachineName);\n\n\n\n\n\nvoid __RPC_STUB IRemoteDebugApplicationEx_GetHostMachineName_Stub(\n\n    IRpcStubBuffer *This,\n\n    IRpcChannelBuffer *_pRpcChannelBuffer,\n\n    PRPC_MESSAGE _pRpcMessage,\n\n    DWORD *_pdwStubPhase);\n\n\n\n\n\nHRESULT STDMETHODCALLTYPE IRemoteDebugApplicationEx_SetLocale_Proxy( \n\n    IRemoteDebugApplicationEx __RPC_FAR * This,\n\n    /* [in] */ DWORD dwLangID);\n\n\n\n\n\nvoid __RPC_STUB IRemoteDebugApplicationEx_SetLocale_Stub(\n\n    IRpcStubBuffer *This,\n\n    IRpcChannelBuffer *_pRpcChannelBuffer,\n\n    PRPC_MESSAGE _pRpcMessage,\n\n    DWORD *_pdwStubPhase);\n\n\n\n\n\nHRESULT STDMETHODCALLTYPE IRemoteDebugApplicationEx_ForceStepMode_Proxy( \n\n    IRemoteDebugApplicationEx __RPC_FAR * This,\n\n    /* [in] */ IRemoteDebugApplicationThread __RPC_FAR *pStepThread);\n\n\n\n\n\nvoid __RPC_STUB IRemoteDebugApplicationEx_ForceStepMode_Stub(\n\n    IRpcStubBuffer *This,\n\n    IRpcChannelBuffer *_pRpcChannelBuffer,\n\n    PRPC_MESSAGE _pRpcMessage,\n\n    DWORD *_pdwStubPhase);\n\n\n\n\n\nHRESULT STDMETHODCALLTYPE IRemoteDebugApplicationEx_RevokeBreak_Proxy( \n\n    IRemoteDebugApplicationEx __RPC_FAR * This);\n\n\n\n\n\nvoid __RPC_STUB IRemoteDebugApplicationEx_RevokeBreak_Stub(\n\n    IRpcStubBuffer *This,\n\n    IRpcChannelBuffer *_pRpcChannelBuffer,\n\n    PRPC_MESSAGE _pRpcMessage,\n\n    DWORD *_pdwStubPhase);\n\n\n\n\n\nHRESULT STDMETHODCALLTYPE IRemoteDebugApplicationEx_SetProxyBlanketAndAddRef_Proxy( \n\n    IRemoteDebugApplicationEx __RPC_FAR * This,\n\n    /* [in] */ IUnknown __RPC_FAR *pUnk);\n\n\n\n\n\nvoid __RPC_STUB IRemoteDebugApplicationEx_SetProxyBlanketAndAddRef_Stub(\n\n    IRpcStubBuffer *This,\n\n    IRpcChannelBuffer *_pRpcChannelBuffer,\n\n    PRPC_MESSAGE _pRpcMessage,\n\n    DWORD *_pdwStubPhase);\n\n\n\n\n\nHRESULT STDMETHODCALLTYPE IRemoteDebugApplicationEx_ReleaseFromSetProxyBlanket_Proxy( \n\n    IRemoteDebugApplicationEx __RPC_FAR * This,\n\n    /* [in] */ IUnknown __RPC_FAR *pUnk);\n\n\n\n\n\nvoid __RPC_STUB IRemoteDebugApplicationEx_ReleaseFromSetProxyBlanket_Stub(\n\n    IRpcStubBuffer *This,\n\n    IRpcChannelBuffer *_pRpcChannelBuffer,\n\n    PRPC_MESSAGE _pRpcMessage,\n\n    DWORD *_pdwStubPhase);\n\n\n\n\n\n\n\n#endif \t/* __IRemoteDebugApplicationEx_INTERFACE_DEFINED__ */\n\n\n\n\n\n#ifndef __IRemoteDebugApplicationThreadEx_INTERFACE_DEFINED__\n\n#define __IRemoteDebugApplicationThreadEx_INTERFACE_DEFINED__\n\n\n\n/****************************************\n\n * Generated header for interface: IRemoteDebugApplicationThreadEx\n\n * at Fri Sep 18 16:27:35 1998\n\n * using MIDL 3.01.75\n\n ****************************************/\n\n/* [unique][uuid][object] */ \n\n\n\n\n\n\n\nEXTERN_C const IID IID_IRemoteDebugApplicationThreadEx;\n\n\n\n#if defined(__cplusplus) && !defined(CINTERFACE)\n\n    \n\n    interface DECLSPEC_UUID(\"B9B32B0C-9147-11d1-94EA-00C04FA302A1\")\n\n    IRemoteDebugApplicationThreadEx : public IUnknown\n\n    {\n\n    public:\n\n        virtual HRESULT STDMETHODCALLTYPE EnumGlobalExpressionContexts( \n\n            /* [out] */ IEnumDebugExpressionContexts __RPC_FAR *__RPC_FAR *ppEnum) = 0;\n\n        \n\n    };\n\n    \n\n#else \t/* C style interface */\n\n\n\n    typedef struct IRemoteDebugApplicationThreadExVtbl\n\n    {\n\n        BEGIN_INTERFACE\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( \n\n            IRemoteDebugApplicationThreadEx __RPC_FAR * This,\n\n            /* [in] */ REFIID riid,\n\n            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);\n\n        \n\n        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( \n\n            IRemoteDebugApplicationThreadEx __RPC_FAR * This);\n\n        \n\n        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( \n\n            IRemoteDebugApplicationThreadEx __RPC_FAR * This);\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *EnumGlobalExpressionContexts )( \n\n            IRemoteDebugApplicationThreadEx __RPC_FAR * This,\n\n            /* [out] */ IEnumDebugExpressionContexts __RPC_FAR *__RPC_FAR *ppEnum);\n\n        \n\n        END_INTERFACE\n\n    } IRemoteDebugApplicationThreadExVtbl;\n\n\n\n    interface IRemoteDebugApplicationThreadEx\n\n    {\n\n        CONST_VTBL struct IRemoteDebugApplicationThreadExVtbl __RPC_FAR *lpVtbl;\n\n    };\n\n\n\n    \n\n\n\n#ifdef COBJMACROS\n\n\n\n\n\n#define IRemoteDebugApplicationThreadEx_QueryInterface(This,riid,ppvObject)\t\\\n\n    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)\n\n\n\n#define IRemoteDebugApplicationThreadEx_AddRef(This)\t\\\n\n    (This)->lpVtbl -> AddRef(This)\n\n\n\n#define IRemoteDebugApplicationThreadEx_Release(This)\t\\\n\n    (This)->lpVtbl -> Release(This)\n\n\n\n\n\n#define IRemoteDebugApplicationThreadEx_EnumGlobalExpressionContexts(This,ppEnum)\t\\\n\n    (This)->lpVtbl -> EnumGlobalExpressionContexts(This,ppEnum)\n\n\n\n#endif /* COBJMACROS */\n\n\n\n\n\n#endif \t/* C style interface */\n\n\n\n\n\n\n\nHRESULT STDMETHODCALLTYPE IRemoteDebugApplicationThreadEx_EnumGlobalExpressionContexts_Proxy( \n\n    IRemoteDebugApplicationThreadEx __RPC_FAR * This,\n\n    /* [out] */ IEnumDebugExpressionContexts __RPC_FAR *__RPC_FAR *ppEnum);\n\n\n\n\n\nvoid __RPC_STUB IRemoteDebugApplicationThreadEx_EnumGlobalExpressionContexts_Stub(\n\n    IRpcStubBuffer *This,\n\n    IRpcChannelBuffer *_pRpcChannelBuffer,\n\n    PRPC_MESSAGE _pRpcMessage,\n\n    DWORD *_pdwStubPhase);\n\n\n\n\n\n\n\n#endif \t/* __IRemoteDebugApplicationThreadEx_INTERFACE_DEFINED__ */\n\n\n\n\n\n#ifndef __IDebugDocumentHelperEx_INTERFACE_DEFINED__\n\n#define __IDebugDocumentHelperEx_INTERFACE_DEFINED__\n\n\n\n/****************************************\n\n * Generated header for interface: IDebugDocumentHelperEx\n\n * at Fri Sep 18 16:27:35 1998\n\n * using MIDL 3.01.75\n\n ****************************************/\n\n/* [unique][uuid][object] */ \n\n\n\n\n\n\n\nEXTERN_C const IID IID_IDebugDocumentHelperEx;\n\n\n\n#if defined(__cplusplus) && !defined(CINTERFACE)\n\n    \n\n    interface DECLSPEC_UUID(\"51973C02-CB0C-11d0-B5C9-00A0244A0E7A\")\n\n    IDebugDocumentHelperEx : public IUnknown\n\n    {\n\n    public:\n\n        virtual HRESULT STDMETHODCALLTYPE SetDocumentClassId( \n\n            /* [in] */ CLSID clsidDocument) = 0;\n\n        \n\n    };\n\n    \n\n#else \t/* C style interface */\n\n\n\n    typedef struct IDebugDocumentHelperExVtbl\n\n    {\n\n        BEGIN_INTERFACE\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( \n\n            IDebugDocumentHelperEx __RPC_FAR * This,\n\n            /* [in] */ REFIID riid,\n\n            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);\n\n        \n\n        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( \n\n            IDebugDocumentHelperEx __RPC_FAR * This);\n\n        \n\n        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( \n\n            IDebugDocumentHelperEx __RPC_FAR * This);\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetDocumentClassId )( \n\n            IDebugDocumentHelperEx __RPC_FAR * This,\n\n            /* [in] */ CLSID clsidDocument);\n\n        \n\n        END_INTERFACE\n\n    } IDebugDocumentHelperExVtbl;\n\n\n\n    interface IDebugDocumentHelperEx\n\n    {\n\n        CONST_VTBL struct IDebugDocumentHelperExVtbl __RPC_FAR *lpVtbl;\n\n    };\n\n\n\n    \n\n\n\n#ifdef COBJMACROS\n\n\n\n\n\n#define IDebugDocumentHelperEx_QueryInterface(This,riid,ppvObject)\t\\\n\n    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)\n\n\n\n#define IDebugDocumentHelperEx_AddRef(This)\t\\\n\n    (This)->lpVtbl -> AddRef(This)\n\n\n\n#define IDebugDocumentHelperEx_Release(This)\t\\\n\n    (This)->lpVtbl -> Release(This)\n\n\n\n\n\n#define IDebugDocumentHelperEx_SetDocumentClassId(This,clsidDocument)\t\\\n\n    (This)->lpVtbl -> SetDocumentClassId(This,clsidDocument)\n\n\n\n#endif /* COBJMACROS */\n\n\n\n\n\n#endif \t/* C style interface */\n\n\n\n\n\n\n\nHRESULT STDMETHODCALLTYPE IDebugDocumentHelperEx_SetDocumentClassId_Proxy( \n\n    IDebugDocumentHelperEx __RPC_FAR * This,\n\n    /* [in] */ CLSID clsidDocument);\n\n\n\n\n\nvoid __RPC_STUB IDebugDocumentHelperEx_SetDocumentClassId_Stub(\n\n    IRpcStubBuffer *This,\n\n    IRpcChannelBuffer *_pRpcChannelBuffer,\n\n    PRPC_MESSAGE _pRpcMessage,\n\n    DWORD *_pdwStubPhase);\n\n\n\n\n\n\n\n#endif \t/* __IDebugDocumentHelperEx_INTERFACE_DEFINED__ */\n\n\n\n\n\n#ifndef __IDebugHelperEx_INTERFACE_DEFINED__\n\n#define __IDebugHelperEx_INTERFACE_DEFINED__\n\n\n\n/****************************************\n\n * Generated header for interface: IDebugHelperEx\n\n * at Fri Sep 18 16:27:35 1998\n\n * using MIDL 3.01.75\n\n ****************************************/\n\n/* [local][unique][helpstring][uuid][object] */ \n\n\n\n\n\n\n\nEXTERN_C const IID IID_IDebugHelperEx;\n\n\n\n#if defined(__cplusplus) && !defined(CINTERFACE)\n\n    \n\n    interface DECLSPEC_UUID(\"51973C08-CB0C-11d0-B5C9-00A0244A0E7A\")\n\n    IDebugHelperEx : public IUnknown\n\n    {\n\n    public:\n\n        virtual HRESULT STDMETHODCALLTYPE CreatePropertyBrowserFromError( \n\n            /* [in] */ IActiveScriptError __RPC_FAR *pase,\n\n            /* [in] */ LPCOLESTR pszName,\n\n            /* [in] */ IDebugApplicationThread __RPC_FAR *pdat,\n\n            /* [in] */ IDebugFormatter __RPC_FAR *pdf,\n\n            /* [out] */ IDebugProperty __RPC_FAR *__RPC_FAR *ppdp) = 0;\n\n        \n\n        virtual HRESULT STDMETHODCALLTYPE CreateWriteablePropertyBrowser( \n\n            /* [in] */ VARIANT __RPC_FAR *pvar,\n\n            /* [in] */ LPCOLESTR bstrName,\n\n            /* [in] */ IDebugApplicationThread __RPC_FAR *pdat,\n\n            /* [in] */ IDebugFormatter __RPC_FAR *pdf,\n\n            /* [in] */ IDebugSetValueCallback __RPC_FAR *pdsvcb,\n\n            /* [out] */ IDebugProperty __RPC_FAR *__RPC_FAR *ppdob) = 0;\n\n        \n\n        virtual HRESULT STDMETHODCALLTYPE CreatePropertyBrowserFromCodeContext( \n\n            /* [in] */ IDebugCodeContext __RPC_FAR *pdcc,\n\n            /* [in] */ LPCOLESTR pszName,\n\n            /* [in] */ IDebugApplicationThread __RPC_FAR *pdat,\n\n            /* [out] */ IDebugProperty __RPC_FAR *__RPC_FAR *ppdp) = 0;\n\n        \n\n    };\n\n    \n\n#else \t/* C style interface */\n\n\n\n    typedef struct IDebugHelperExVtbl\n\n    {\n\n        BEGIN_INTERFACE\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( \n\n            IDebugHelperEx __RPC_FAR * This,\n\n            /* [in] */ REFIID riid,\n\n            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);\n\n        \n\n        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( \n\n            IDebugHelperEx __RPC_FAR * This);\n\n        \n\n        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( \n\n            IDebugHelperEx __RPC_FAR * This);\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CreatePropertyBrowserFromError )( \n\n            IDebugHelperEx __RPC_FAR * This,\n\n            /* [in] */ IActiveScriptError __RPC_FAR *pase,\n\n            /* [in] */ LPCOLESTR pszName,\n\n            /* [in] */ IDebugApplicationThread __RPC_FAR *pdat,\n\n            /* [in] */ IDebugFormatter __RPC_FAR *pdf,\n\n            /* [out] */ IDebugProperty __RPC_FAR *__RPC_FAR *ppdp);\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CreateWriteablePropertyBrowser )( \n\n            IDebugHelperEx __RPC_FAR * This,\n\n            /* [in] */ VARIANT __RPC_FAR *pvar,\n\n            /* [in] */ LPCOLESTR bstrName,\n\n            /* [in] */ IDebugApplicationThread __RPC_FAR *pdat,\n\n            /* [in] */ IDebugFormatter __RPC_FAR *pdf,\n\n            /* [in] */ IDebugSetValueCallback __RPC_FAR *pdsvcb,\n\n            /* [out] */ IDebugProperty __RPC_FAR *__RPC_FAR *ppdob);\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CreatePropertyBrowserFromCodeContext )( \n\n            IDebugHelperEx __RPC_FAR * This,\n\n            /* [in] */ IDebugCodeContext __RPC_FAR *pdcc,\n\n            /* [in] */ LPCOLESTR pszName,\n\n            /* [in] */ IDebugApplicationThread __RPC_FAR *pdat,\n\n            /* [out] */ IDebugProperty __RPC_FAR *__RPC_FAR *ppdp);\n\n        \n\n        END_INTERFACE\n\n    } IDebugHelperExVtbl;\n\n\n\n    interface IDebugHelperEx\n\n    {\n\n        CONST_VTBL struct IDebugHelperExVtbl __RPC_FAR *lpVtbl;\n\n    };\n\n\n\n    \n\n\n\n#ifdef COBJMACROS\n\n\n\n\n\n#define IDebugHelperEx_QueryInterface(This,riid,ppvObject)\t\\\n\n    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)\n\n\n\n#define IDebugHelperEx_AddRef(This)\t\\\n\n    (This)->lpVtbl -> AddRef(This)\n\n\n\n#define IDebugHelperEx_Release(This)\t\\\n\n    (This)->lpVtbl -> Release(This)\n\n\n\n\n\n#define IDebugHelperEx_CreatePropertyBrowserFromError(This,pase,pszName,pdat,pdf,ppdp)\t\\\n\n    (This)->lpVtbl -> CreatePropertyBrowserFromError(This,pase,pszName,pdat,pdf,ppdp)\n\n\n\n#define IDebugHelperEx_CreateWriteablePropertyBrowser(This,pvar,bstrName,pdat,pdf,pdsvcb,ppdob)\t\\\n\n    (This)->lpVtbl -> CreateWriteablePropertyBrowser(This,pvar,bstrName,pdat,pdf,pdsvcb,ppdob)\n\n\n\n#define IDebugHelperEx_CreatePropertyBrowserFromCodeContext(This,pdcc,pszName,pdat,ppdp)\t\\\n\n    (This)->lpVtbl -> CreatePropertyBrowserFromCodeContext(This,pdcc,pszName,pdat,ppdp)\n\n\n\n#endif /* COBJMACROS */\n\n\n\n\n\n#endif \t/* C style interface */\n\n\n\n\n\n\n\nHRESULT STDMETHODCALLTYPE IDebugHelperEx_CreatePropertyBrowserFromError_Proxy( \n\n    IDebugHelperEx __RPC_FAR * This,\n\n    /* [in] */ IActiveScriptError __RPC_FAR *pase,\n\n    /* [in] */ LPCOLESTR pszName,\n\n    /* [in] */ IDebugApplicationThread __RPC_FAR *pdat,\n\n    /* [in] */ IDebugFormatter __RPC_FAR *pdf,\n\n    /* [out] */ IDebugProperty __RPC_FAR *__RPC_FAR *ppdp);\n\n\n\n\n\nvoid __RPC_STUB IDebugHelperEx_CreatePropertyBrowserFromError_Stub(\n\n    IRpcStubBuffer *This,\n\n    IRpcChannelBuffer *_pRpcChannelBuffer,\n\n    PRPC_MESSAGE _pRpcMessage,\n\n    DWORD *_pdwStubPhase);\n\n\n\n\n\nHRESULT STDMETHODCALLTYPE IDebugHelperEx_CreateWriteablePropertyBrowser_Proxy( \n\n    IDebugHelperEx __RPC_FAR * This,\n\n    /* [in] */ VARIANT __RPC_FAR *pvar,\n\n    /* [in] */ LPCOLESTR bstrName,\n\n    /* [in] */ IDebugApplicationThread __RPC_FAR *pdat,\n\n    /* [in] */ IDebugFormatter __RPC_FAR *pdf,\n\n    /* [in] */ IDebugSetValueCallback __RPC_FAR *pdsvcb,\n\n    /* [out] */ IDebugProperty __RPC_FAR *__RPC_FAR *ppdob);\n\n\n\n\n\nvoid __RPC_STUB IDebugHelperEx_CreateWriteablePropertyBrowser_Stub(\n\n    IRpcStubBuffer *This,\n\n    IRpcChannelBuffer *_pRpcChannelBuffer,\n\n    PRPC_MESSAGE _pRpcMessage,\n\n    DWORD *_pdwStubPhase);\n\n\n\n\n\nHRESULT STDMETHODCALLTYPE IDebugHelperEx_CreatePropertyBrowserFromCodeContext_Proxy( \n\n    IDebugHelperEx __RPC_FAR * This,\n\n    /* [in] */ IDebugCodeContext __RPC_FAR *pdcc,\n\n    /* [in] */ LPCOLESTR pszName,\n\n    /* [in] */ IDebugApplicationThread __RPC_FAR *pdat,\n\n    /* [out] */ IDebugProperty __RPC_FAR *__RPC_FAR *ppdp);\n\n\n\n\n\nvoid __RPC_STUB IDebugHelperEx_CreatePropertyBrowserFromCodeContext_Stub(\n\n    IRpcStubBuffer *This,\n\n    IRpcChannelBuffer *_pRpcChannelBuffer,\n\n    PRPC_MESSAGE _pRpcMessage,\n\n    DWORD *_pdwStubPhase);\n\n\n\n\n\n\n\n#endif \t/* __IDebugHelperEx_INTERFACE_DEFINED__ */\n\n\n\n\n\n#ifndef __IDebugSetValueCallback_INTERFACE_DEFINED__\n\n#define __IDebugSetValueCallback_INTERFACE_DEFINED__\n\n\n\n/****************************************\n\n * Generated header for interface: IDebugSetValueCallback\n\n * at Fri Sep 18 16:27:35 1998\n\n * using MIDL 3.01.75\n\n ****************************************/\n\n/* [local][unique][helpstring][uuid][object] */ \n\n\n\n\n\n\n\nEXTERN_C const IID IID_IDebugSetValueCallback;\n\n\n\n#if defined(__cplusplus) && !defined(CINTERFACE)\n\n    \n\n    interface DECLSPEC_UUID(\"51973C06-CB0C-11d0-B5C9-00A0244A0E7A\")\n\n    IDebugSetValueCallback : public IUnknown\n\n    {\n\n    public:\n\n        virtual HRESULT STDMETHODCALLTYPE SetValue( \n\n            /* [in] */ VARIANT __RPC_FAR *pvarNode,\n\n            /* [in] */ DISPID dispid,\n\n            /* [in] */ ULONG cIndices,\n\n            /* [size_is][in] */ LONG __RPC_FAR *rgIndices,\n\n            /* [in] */ LPCOLESTR pszValue,\n\n            /* [in] */ UINT nRadix,\n\n            /* [out] */ BSTR __RPC_FAR *pbstrError) = 0;\n\n        \n\n    };\n\n    \n\n#else \t/* C style interface */\n\n\n\n    typedef struct IDebugSetValueCallbackVtbl\n\n    {\n\n        BEGIN_INTERFACE\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( \n\n            IDebugSetValueCallback __RPC_FAR * This,\n\n            /* [in] */ REFIID riid,\n\n            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);\n\n        \n\n        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( \n\n            IDebugSetValueCallback __RPC_FAR * This);\n\n        \n\n        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( \n\n            IDebugSetValueCallback __RPC_FAR * This);\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetValue )( \n\n            IDebugSetValueCallback __RPC_FAR * This,\n\n            /* [in] */ VARIANT __RPC_FAR *pvarNode,\n\n            /* [in] */ DISPID dispid,\n\n            /* [in] */ ULONG cIndices,\n\n            /* [size_is][in] */ LONG __RPC_FAR *rgIndices,\n\n            /* [in] */ LPCOLESTR pszValue,\n\n            /* [in] */ UINT nRadix,\n\n            /* [out] */ BSTR __RPC_FAR *pbstrError);\n\n        \n\n        END_INTERFACE\n\n    } IDebugSetValueCallbackVtbl;\n\n\n\n    interface IDebugSetValueCallback\n\n    {\n\n        CONST_VTBL struct IDebugSetValueCallbackVtbl __RPC_FAR *lpVtbl;\n\n    };\n\n\n\n    \n\n\n\n#ifdef COBJMACROS\n\n\n\n\n\n#define IDebugSetValueCallback_QueryInterface(This,riid,ppvObject)\t\\\n\n    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)\n\n\n\n#define IDebugSetValueCallback_AddRef(This)\t\\\n\n    (This)->lpVtbl -> AddRef(This)\n\n\n\n#define IDebugSetValueCallback_Release(This)\t\\\n\n    (This)->lpVtbl -> Release(This)\n\n\n\n\n\n#define IDebugSetValueCallback_SetValue(This,pvarNode,dispid,cIndices,rgIndices,pszValue,nRadix,pbstrError)\t\\\n\n    (This)->lpVtbl -> SetValue(This,pvarNode,dispid,cIndices,rgIndices,pszValue,nRadix,pbstrError)\n\n\n\n#endif /* COBJMACROS */\n\n\n\n\n\n#endif \t/* C style interface */\n\n\n\n\n\n\n\nHRESULT STDMETHODCALLTYPE IDebugSetValueCallback_SetValue_Proxy( \n\n    IDebugSetValueCallback __RPC_FAR * This,\n\n    /* [in] */ VARIANT __RPC_FAR *pvarNode,\n\n    /* [in] */ DISPID dispid,\n\n    /* [in] */ ULONG cIndices,\n\n    /* [size_is][in] */ LONG __RPC_FAR *rgIndices,\n\n    /* [in] */ LPCOLESTR pszValue,\n\n    /* [in] */ UINT nRadix,\n\n    /* [out] */ BSTR __RPC_FAR *pbstrError);\n\n\n\n\n\nvoid __RPC_STUB IDebugSetValueCallback_SetValue_Stub(\n\n    IRpcStubBuffer *This,\n\n    IRpcChannelBuffer *_pRpcChannelBuffer,\n\n    PRPC_MESSAGE _pRpcMessage,\n\n    DWORD *_pdwStubPhase);\n\n\n\n\n\n\n\n#endif \t/* __IDebugSetValueCallback_INTERFACE_DEFINED__ */\n\n\n\n\n\n#ifndef __ISetNextStatement_INTERFACE_DEFINED__\n\n#define __ISetNextStatement_INTERFACE_DEFINED__\n\n\n\n/****************************************\n\n * Generated header for interface: ISetNextStatement\n\n * at Fri Sep 18 16:27:35 1998\n\n * using MIDL 3.01.75\n\n ****************************************/\n\n/* [unique][helpstring][uuid][object] */ \n\n\n\n\n\n\n\nEXTERN_C const IID IID_ISetNextStatement;\n\n\n\n#if defined(__cplusplus) && !defined(CINTERFACE)\n\n    \n\n    interface DECLSPEC_UUID(\"51973C03-CB0C-11d0-B5C9-00A0244A0E7A\")\n\n    ISetNextStatement : public IUnknown\n\n    {\n\n    public:\n\n        virtual HRESULT STDMETHODCALLTYPE CanSetNextStatement( \n\n            /* [in] */ IDebugStackFrame __RPC_FAR *pStackFrame,\n\n            /* [in] */ IDebugCodeContext __RPC_FAR *pCodeContext) = 0;\n\n        \n\n        virtual HRESULT STDMETHODCALLTYPE SetNextStatement( \n\n            /* [in] */ IDebugStackFrame __RPC_FAR *pStackFrame,\n\n            /* [in] */ IDebugCodeContext __RPC_FAR *pCodeContext) = 0;\n\n        \n\n    };\n\n    \n\n#else \t/* C style interface */\n\n\n\n    typedef struct ISetNextStatementVtbl\n\n    {\n\n        BEGIN_INTERFACE\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( \n\n            ISetNextStatement __RPC_FAR * This,\n\n            /* [in] */ REFIID riid,\n\n            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);\n\n        \n\n        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( \n\n            ISetNextStatement __RPC_FAR * This);\n\n        \n\n        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( \n\n            ISetNextStatement __RPC_FAR * This);\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CanSetNextStatement )( \n\n            ISetNextStatement __RPC_FAR * This,\n\n            /* [in] */ IDebugStackFrame __RPC_FAR *pStackFrame,\n\n            /* [in] */ IDebugCodeContext __RPC_FAR *pCodeContext);\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetNextStatement )( \n\n            ISetNextStatement __RPC_FAR * This,\n\n            /* [in] */ IDebugStackFrame __RPC_FAR *pStackFrame,\n\n            /* [in] */ IDebugCodeContext __RPC_FAR *pCodeContext);\n\n        \n\n        END_INTERFACE\n\n    } ISetNextStatementVtbl;\n\n\n\n    interface ISetNextStatement\n\n    {\n\n        CONST_VTBL struct ISetNextStatementVtbl __RPC_FAR *lpVtbl;\n\n    };\n\n\n\n    \n\n\n\n#ifdef COBJMACROS\n\n\n\n\n\n#define ISetNextStatement_QueryInterface(This,riid,ppvObject)\t\\\n\n    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)\n\n\n\n#define ISetNextStatement_AddRef(This)\t\\\n\n    (This)->lpVtbl -> AddRef(This)\n\n\n\n#define ISetNextStatement_Release(This)\t\\\n\n    (This)->lpVtbl -> Release(This)\n\n\n\n\n\n#define ISetNextStatement_CanSetNextStatement(This,pStackFrame,pCodeContext)\t\\\n\n    (This)->lpVtbl -> CanSetNextStatement(This,pStackFrame,pCodeContext)\n\n\n\n#define ISetNextStatement_SetNextStatement(This,pStackFrame,pCodeContext)\t\\\n\n    (This)->lpVtbl -> SetNextStatement(This,pStackFrame,pCodeContext)\n\n\n\n#endif /* COBJMACROS */\n\n\n\n\n\n#endif \t/* C style interface */\n\n\n\n\n\n\n\nHRESULT STDMETHODCALLTYPE ISetNextStatement_CanSetNextStatement_Proxy( \n\n    ISetNextStatement __RPC_FAR * This,\n\n    /* [in] */ IDebugStackFrame __RPC_FAR *pStackFrame,\n\n    /* [in] */ IDebugCodeContext __RPC_FAR *pCodeContext);\n\n\n\n\n\nvoid __RPC_STUB ISetNextStatement_CanSetNextStatement_Stub(\n\n    IRpcStubBuffer *This,\n\n    IRpcChannelBuffer *_pRpcChannelBuffer,\n\n    PRPC_MESSAGE _pRpcMessage,\n\n    DWORD *_pdwStubPhase);\n\n\n\n\n\nHRESULT STDMETHODCALLTYPE ISetNextStatement_SetNextStatement_Proxy( \n\n    ISetNextStatement __RPC_FAR * This,\n\n    /* [in] */ IDebugStackFrame __RPC_FAR *pStackFrame,\n\n    /* [in] */ IDebugCodeContext __RPC_FAR *pCodeContext);\n\n\n\n\n\nvoid __RPC_STUB ISetNextStatement_SetNextStatement_Stub(\n\n    IRpcStubBuffer *This,\n\n    IRpcChannelBuffer *_pRpcChannelBuffer,\n\n    PRPC_MESSAGE _pRpcMessage,\n\n    DWORD *_pdwStubPhase);\n\n\n\n\n\n\n\n#endif \t/* __ISetNextStatement_INTERFACE_DEFINED__ */\n\n\n\n\n\n#ifndef __IDebugSessionProviderEx_INTERFACE_DEFINED__\n\n#define __IDebugSessionProviderEx_INTERFACE_DEFINED__\n\n\n\n/****************************************\n\n * Generated header for interface: IDebugSessionProviderEx\n\n * at Fri Sep 18 16:27:35 1998\n\n * using MIDL 3.01.75\n\n ****************************************/\n\n/* [unique][helpstring][uuid][object] */ \n\n\n\n\n\n\n\nEXTERN_C const IID IID_IDebugSessionProviderEx;\n\n\n\n#if defined(__cplusplus) && !defined(CINTERFACE)\n\n    \n\n    interface DECLSPEC_UUID(\"51973C09-CB0C-11d0-B5C9-00A0244A0E7A\")\n\n    IDebugSessionProviderEx : public IUnknown\n\n    {\n\n    public:\n\n        virtual HRESULT STDMETHODCALLTYPE StartDebugSession( \n\n            /* [in] */ IRemoteDebugApplication __RPC_FAR *pda,\n\n            /* [in] */ BOOL fQuery) = 0;\n\n        \n\n        virtual HRESULT STDMETHODCALLTYPE CanJITDebug( \n\n            /* [in] */ DWORD pid) = 0;\n\n        \n\n    };\n\n    \n\n#else \t/* C style interface */\n\n\n\n    typedef struct IDebugSessionProviderExVtbl\n\n    {\n\n        BEGIN_INTERFACE\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( \n\n            IDebugSessionProviderEx __RPC_FAR * This,\n\n            /* [in] */ REFIID riid,\n\n            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);\n\n        \n\n        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( \n\n            IDebugSessionProviderEx __RPC_FAR * This);\n\n        \n\n        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( \n\n            IDebugSessionProviderEx __RPC_FAR * This);\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *StartDebugSession )( \n\n            IDebugSessionProviderEx __RPC_FAR * This,\n\n            /* [in] */ IRemoteDebugApplication __RPC_FAR *pda,\n\n            /* [in] */ BOOL fQuery);\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CanJITDebug )( \n\n            IDebugSessionProviderEx __RPC_FAR * This,\n\n            /* [in] */ DWORD pid);\n\n        \n\n        END_INTERFACE\n\n    } IDebugSessionProviderExVtbl;\n\n\n\n    interface IDebugSessionProviderEx\n\n    {\n\n        CONST_VTBL struct IDebugSessionProviderExVtbl __RPC_FAR *lpVtbl;\n\n    };\n\n\n\n    \n\n\n\n#ifdef COBJMACROS\n\n\n\n\n\n#define IDebugSessionProviderEx_QueryInterface(This,riid,ppvObject)\t\\\n\n    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)\n\n\n\n#define IDebugSessionProviderEx_AddRef(This)\t\\\n\n    (This)->lpVtbl -> AddRef(This)\n\n\n\n#define IDebugSessionProviderEx_Release(This)\t\\\n\n    (This)->lpVtbl -> Release(This)\n\n\n\n\n\n#define IDebugSessionProviderEx_StartDebugSession(This,pda,fQuery)\t\\\n\n    (This)->lpVtbl -> StartDebugSession(This,pda,fQuery)\n\n\n\n#define IDebugSessionProviderEx_CanJITDebug(This,pid)\t\\\n\n    (This)->lpVtbl -> CanJITDebug(This,pid)\n\n\n\n#endif /* COBJMACROS */\n\n\n\n\n\n#endif \t/* C style interface */\n\n\n\n\n\n\n\nHRESULT STDMETHODCALLTYPE IDebugSessionProviderEx_StartDebugSession_Proxy( \n\n    IDebugSessionProviderEx __RPC_FAR * This,\n\n    /* [in] */ IRemoteDebugApplication __RPC_FAR *pda,\n\n    /* [in] */ BOOL fQuery);\n\n\n\n\n\nvoid __RPC_STUB IDebugSessionProviderEx_StartDebugSession_Stub(\n\n    IRpcStubBuffer *This,\n\n    IRpcChannelBuffer *_pRpcChannelBuffer,\n\n    PRPC_MESSAGE _pRpcMessage,\n\n    DWORD *_pdwStubPhase);\n\n\n\n\n\nHRESULT STDMETHODCALLTYPE IDebugSessionProviderEx_CanJITDebug_Proxy( \n\n    IDebugSessionProviderEx __RPC_FAR * This,\n\n    /* [in] */ DWORD pid);\n\n\n\n\n\nvoid __RPC_STUB IDebugSessionProviderEx_CanJITDebug_Stub(\n\n    IRpcStubBuffer *This,\n\n    IRpcChannelBuffer *_pRpcChannelBuffer,\n\n    PRPC_MESSAGE _pRpcMessage,\n\n    DWORD *_pdwStubPhase);\n\n\n\n\n\n\n\n#endif \t/* __IDebugSessionProviderEx_INTERFACE_DEFINED__ */\n\n\n\n\n\n/* Additional Prototypes for ALL interfaces */\n\n\n\nunsigned long             __RPC_USER  BSTR_UserSize(     unsigned long __RPC_FAR *, unsigned long            , BSTR __RPC_FAR * ); \n\nunsigned char __RPC_FAR * __RPC_USER  BSTR_UserMarshal(  unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, BSTR __RPC_FAR * ); \n\nunsigned char __RPC_FAR * __RPC_USER  BSTR_UserUnmarshal(unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, BSTR __RPC_FAR * ); \n\nvoid                      __RPC_USER  BSTR_UserFree(     unsigned long __RPC_FAR *, BSTR __RPC_FAR * ); \n\n\n\n/* end of Additional Prototypes */\n\n\n\n#ifdef __cplusplus\n\n}\n\n#endif\n\n\n\n#endif\n\n#pragma option pop /*P_O_Pop*/",
    "assembly": ".file\t\"143.c\"\n\t.text\n\t.ident\t\"GCC: (MinGW-W64 x86_64-ucrt-posix-seh, built by Brecht Sanders, r8) 13.2.0\"",
    "generation_time": 0.9959993362426758,
    "tokens_generated": 44,
    "metrics": {
      "length_ratio": 0.0019017673758145903,
      "line_ratio": 0.00040666937779585197,
      "token_overlap": 0.0022123893805309734,
      "token_precision": 0.14285714285714285,
      "keyword_coverage": 0.0,
      "keyword_match_ratio": 0.0,
      "brace_ratio": 0.0,
      "semicolon_ratio": 0.0
    }
  },
  {
    "filename": "151",
    "optimization": "O0",
    "generated_c": ".file={#1}\n.file={#2}\n.file={#3}\n.file={#4}",
    "reference_c": "/**\n\n * Copyright (c) 2017 - 2020, Nordic Semiconductor ASA\n\n *\n\n * All rights reserved.\n\n *\n\n * Redistribution and use in source and binary forms, with or without modification,\n\n * are permitted provided that the following conditions are met:\n\n *\n\n * 1. Redistributions of source code must retain the above copyright notice, this\n\n *    list of conditions and the following disclaimer.\n\n *\n\n * 2. Redistributions in binary form, except as embedded into a Nordic\n\n *    Semiconductor ASA integrated circuit in a product or a software update for\n\n *    such product, must reproduce the above copyright notice, this list of\n\n *    conditions and the following disclaimer in the documentation and/or other\n\n *    materials provided with the distribution.\n\n *\n\n * 3. Neither the name of Nordic Semiconductor ASA nor the names of its\n\n *    contributors may be used to endorse or promote products derived from this\n\n *    software without specific prior written permission.\n\n *\n\n * 4. This software, with or without modification, must only be used with a\n\n *    Nordic Semiconductor ASA integrated circuit.\n\n *\n\n * 5. Any software provided in binary form under this license must not be reverse\n\n *    engineered, decompiled, modified and/or disassembled.\n\n *\n\n * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA \"AS IS\" AND ANY EXPRESS\n\n * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n\n * OF MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\n * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE\n\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE\n\n * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n\n * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n\n * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n *\n\n */\n\n\n\n\n\n\n\n#ifndef SDK_CONFIG_H\n\n#define SDK_CONFIG_H\n\n// <<< Use Configuration Wizard in Context Menu >>>\\n\n\n#ifdef USE_APP_CONFIG\n\n#include \"app_config.h\"\n\n#endif\n\n// <h> Application \n\n\n\n//==========================================================\n\n// <o> APP_SHUTDOWN_HANDLER_PRIORITY - Application shutdown observer priority. \n\n#ifndef APP_SHUTDOWN_HANDLER_PRIORITY\n\n#define APP_SHUTDOWN_HANDLER_PRIORITY 1\n\n#endif\n\n\n\n// <o> NRF_BLE_GQ_QUEUE_SIZE - Queue size for BLE GATT Queue module. \n\n#ifndef NRF_BLE_GQ_QUEUE_SIZE\n\n#define NRF_BLE_GQ_QUEUE_SIZE 4\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> Board Support \n\n\n\n//==========================================================\n\n// <q> BSP_BTN_BLE_ENABLED  - bsp_btn_ble - Button Control for BLE\n\n \n\n\n\n#ifndef BSP_BTN_BLE_ENABLED\n\n#define BSP_BTN_BLE_ENABLED 1\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> nRF_BLE \n\n\n\n//==========================================================\n\n// <q> BLE_ADVERTISING_ENABLED  - ble_advertising - Advertising module\n\n \n\n\n\n#ifndef BLE_ADVERTISING_ENABLED\n\n#define BLE_ADVERTISING_ENABLED 0\n\n#endif\n\n\n\n// <q> BLE_DB_DISCOVERY_ENABLED  - ble_db_discovery - Database discovery module\n\n \n\n\n\n#ifndef BLE_DB_DISCOVERY_ENABLED\n\n#define BLE_DB_DISCOVERY_ENABLED 1\n\n#endif\n\n\n\n// <e> BLE_DTM_ENABLED - ble_dtm - Module for testing RF/PHY using DTM commands\n\n//==========================================================\n\n#ifndef BLE_DTM_ENABLED\n\n#define BLE_DTM_ENABLED 0\n\n#endif\n\n// <o> NRF_RADIO_ANTENNA_PIN_1 - Antenna 1 GPIO pin \n\n#ifndef NRF_RADIO_ANTENNA_PIN_1\n\n#define NRF_RADIO_ANTENNA_PIN_1 21\n\n#endif\n\n\n\n// <o> NRF_RADIO_ANTENNA_PIN_2 - Antenna 2 GPIO pin \n\n#ifndef NRF_RADIO_ANTENNA_PIN_2\n\n#define NRF_RADIO_ANTENNA_PIN_2 23\n\n#endif\n\n\n\n// <o> NRF_RADIO_ANTENNA_PIN_3 - Antenna 3 GPIO pin \n\n#ifndef NRF_RADIO_ANTENNA_PIN_3\n\n#define NRF_RADIO_ANTENNA_PIN_3 26\n\n#endif\n\n\n\n// <o> NRF_RADIO_ANTENNA_PIN_4 - Antenna 4 GPIO pin \n\n#ifndef NRF_RADIO_ANTENNA_PIN_4\n\n#define NRF_RADIO_ANTENNA_PIN_4 27\n\n#endif\n\n\n\n// <o> NRF_RADIO_ANTENNA_PIN_5 - Antenna 5 GPIO pin \n\n#ifndef NRF_RADIO_ANTENNA_PIN_5\n\n#define NRF_RADIO_ANTENNA_PIN_5 28\n\n#endif\n\n\n\n// <o> NRF_RADIO_ANTENNA_PIN_6 - Antenna 6 GPIO pin \n\n#ifndef NRF_RADIO_ANTENNA_PIN_6\n\n#define NRF_RADIO_ANTENNA_PIN_6 29\n\n#endif\n\n\n\n// <o> NRF_RADIO_ANTENNA_PIN_7 - Antenna 7 GPIO pin \n\n#ifndef NRF_RADIO_ANTENNA_PIN_7\n\n#define NRF_RADIO_ANTENNA_PIN_7 30\n\n#endif\n\n\n\n// <o> NRF_RADIO_ANTENNA_PIN_8 - Antenna 8 GPIO pin \n\n#ifndef NRF_RADIO_ANTENNA_PIN_8\n\n#define NRF_RADIO_ANTENNA_PIN_8 31\n\n#endif\n\n\n\n// <o> NRF_RADIO_ANTENNA_COUNT  \n\n#ifndef NRF_RADIO_ANTENNA_COUNT\n\n#define NRF_RADIO_ANTENNA_COUNT 12\n\n#endif\n\n\n\n// </e>\n\n\n\n// <q> BLE_RACP_ENABLED  - ble_racp - Record Access Control Point library\n\n \n\n\n\n#ifndef BLE_RACP_ENABLED\n\n#define BLE_RACP_ENABLED 0\n\n#endif\n\n\n\n// <q> NRF_BLE_GATT_ENABLED  - nrf_ble_gatt - GATT module\n\n \n\n\n\n#ifndef NRF_BLE_GATT_ENABLED\n\n#define NRF_BLE_GATT_ENABLED 1\n\n#endif\n\n\n\n// <e> NRF_BLE_GQ_ENABLED - nrf_ble_gq - BLE GATT Queue Module\n\n//==========================================================\n\n#ifndef NRF_BLE_GQ_ENABLED\n\n#define NRF_BLE_GQ_ENABLED 1\n\n#endif\n\n// <o> NRF_BLE_GQ_DATAPOOL_ELEMENT_SIZE - Default size of a single element in the pool of memory objects. \n\n#ifndef NRF_BLE_GQ_DATAPOOL_ELEMENT_SIZE\n\n#define NRF_BLE_GQ_DATAPOOL_ELEMENT_SIZE 20\n\n#endif\n\n\n\n// <o> NRF_BLE_GQ_DATAPOOL_ELEMENT_COUNT - Default number of elements in the pool of memory objects. \n\n#ifndef NRF_BLE_GQ_DATAPOOL_ELEMENT_COUNT\n\n#define NRF_BLE_GQ_DATAPOOL_ELEMENT_COUNT 8\n\n#endif\n\n\n\n// <o> NRF_BLE_GQ_GATTC_WRITE_MAX_DATA_LEN - Maximal size of the data inside GATTC write request (in bytes). \n\n#ifndef NRF_BLE_GQ_GATTC_WRITE_MAX_DATA_LEN\n\n#define NRF_BLE_GQ_GATTC_WRITE_MAX_DATA_LEN 16\n\n#endif\n\n\n\n// <o> NRF_BLE_GQ_GATTS_HVX_MAX_DATA_LEN - Maximal size of the data inside GATTC notification or indication request (in bytes). \n\n#ifndef NRF_BLE_GQ_GATTS_HVX_MAX_DATA_LEN\n\n#define NRF_BLE_GQ_GATTS_HVX_MAX_DATA_LEN 16\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_BLE_QWR_ENABLED - nrf_ble_qwr - Queued writes support module (prepare/execute write)\n\n//==========================================================\n\n#ifndef NRF_BLE_QWR_ENABLED\n\n#define NRF_BLE_QWR_ENABLED 0\n\n#endif\n\n// <o> NRF_BLE_QWR_MAX_ATTR - Maximum number of attribute handles that can be registered. This number must be adjusted according to the number of attributes for which Queued Writes will be enabled. If it is zero, the module will reject all Queued Write requests. \n\n#ifndef NRF_BLE_QWR_MAX_ATTR\n\n#define NRF_BLE_QWR_MAX_ATTR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_BLE_SCAN_ENABLED - nrf_ble_scan - Scanning Module\n\n//==========================================================\n\n#ifndef NRF_BLE_SCAN_ENABLED\n\n#define NRF_BLE_SCAN_ENABLED 1\n\n#endif\n\n// <o> NRF_BLE_SCAN_BUFFER - Data length for an advertising set. \n\n#ifndef NRF_BLE_SCAN_BUFFER\n\n#define NRF_BLE_SCAN_BUFFER 31\n\n#endif\n\n\n\n// <o> NRF_BLE_SCAN_NAME_MAX_LEN - Maximum size for the name to search in the advertisement report. \n\n#ifndef NRF_BLE_SCAN_NAME_MAX_LEN\n\n#define NRF_BLE_SCAN_NAME_MAX_LEN 32\n\n#endif\n\n\n\n// <o> NRF_BLE_SCAN_SHORT_NAME_MAX_LEN - Maximum size of the short name to search for in the advertisement report. \n\n#ifndef NRF_BLE_SCAN_SHORT_NAME_MAX_LEN\n\n#define NRF_BLE_SCAN_SHORT_NAME_MAX_LEN 32\n\n#endif\n\n\n\n// <o> NRF_BLE_SCAN_SCAN_INTERVAL - Scanning interval. Determines the scan interval in units of 0.625 millisecond. \n\n#ifndef NRF_BLE_SCAN_SCAN_INTERVAL\n\n#define NRF_BLE_SCAN_SCAN_INTERVAL 160\n\n#endif\n\n\n\n// <o> NRF_BLE_SCAN_SCAN_DURATION - Duration of a scanning session in units of 10 ms. Range: 0x0001 - 0xFFFF (10 ms to 10.9225 ms). If set to 0x0000, the scanning continues until it is explicitly disabled. \n\n#ifndef NRF_BLE_SCAN_SCAN_DURATION\n\n#define NRF_BLE_SCAN_SCAN_DURATION 0\n\n#endif\n\n\n\n// <o> NRF_BLE_SCAN_SCAN_WINDOW - Scanning window. Determines the scanning window in units of 0.625 millisecond. \n\n#ifndef NRF_BLE_SCAN_SCAN_WINDOW\n\n#define NRF_BLE_SCAN_SCAN_WINDOW 80\n\n#endif\n\n\n\n// <o> NRF_BLE_SCAN_MIN_CONNECTION_INTERVAL - Determines minimum connection interval in milliseconds. \n\n#ifndef NRF_BLE_SCAN_MIN_CONNECTION_INTERVAL\n\n#define NRF_BLE_SCAN_MIN_CONNECTION_INTERVAL 7.5\n\n#endif\n\n\n\n// <o> NRF_BLE_SCAN_MAX_CONNECTION_INTERVAL - Determines maximum connection interval in milliseconds. \n\n#ifndef NRF_BLE_SCAN_MAX_CONNECTION_INTERVAL\n\n#define NRF_BLE_SCAN_MAX_CONNECTION_INTERVAL 30\n\n#endif\n\n\n\n// <o> NRF_BLE_SCAN_SLAVE_LATENCY - Determines the slave latency in counts of connection events. \n\n#ifndef NRF_BLE_SCAN_SLAVE_LATENCY\n\n#define NRF_BLE_SCAN_SLAVE_LATENCY 0\n\n#endif\n\n\n\n// <o> NRF_BLE_SCAN_SUPERVISION_TIMEOUT - Determines the supervision time-out in units of 10 millisecond. \n\n#ifndef NRF_BLE_SCAN_SUPERVISION_TIMEOUT\n\n#define NRF_BLE_SCAN_SUPERVISION_TIMEOUT 4000\n\n#endif\n\n\n\n// <o> NRF_BLE_SCAN_SCAN_PHY  - PHY to scan on.\n\n \n\n// <0=> BLE_GAP_PHY_AUTO \n\n// <1=> BLE_GAP_PHY_1MBPS \n\n// <2=> BLE_GAP_PHY_2MBPS \n\n// <4=> BLE_GAP_PHY_CODED \n\n// <255=> BLE_GAP_PHY_NOT_SET \n\n\n\n#ifndef NRF_BLE_SCAN_SCAN_PHY\n\n#define NRF_BLE_SCAN_SCAN_PHY 1\n\n#endif\n\n\n\n// <e> NRF_BLE_SCAN_FILTER_ENABLE - Enabling filters for the Scanning Module.\n\n//==========================================================\n\n#ifndef NRF_BLE_SCAN_FILTER_ENABLE\n\n#define NRF_BLE_SCAN_FILTER_ENABLE 1\n\n#endif\n\n// <o> NRF_BLE_SCAN_UUID_CNT - Number of filters for UUIDs. \n\n#ifndef NRF_BLE_SCAN_UUID_CNT\n\n#define NRF_BLE_SCAN_UUID_CNT 1\n\n#endif\n\n\n\n// <o> NRF_BLE_SCAN_NAME_CNT - Number of name filters. \n\n#ifndef NRF_BLE_SCAN_NAME_CNT\n\n#define NRF_BLE_SCAN_NAME_CNT 0\n\n#endif\n\n\n\n// <o> NRF_BLE_SCAN_SHORT_NAME_CNT - Number of short name filters. \n\n#ifndef NRF_BLE_SCAN_SHORT_NAME_CNT\n\n#define NRF_BLE_SCAN_SHORT_NAME_CNT 0\n\n#endif\n\n\n\n// <o> NRF_BLE_SCAN_ADDRESS_CNT - Number of address filters. \n\n#ifndef NRF_BLE_SCAN_ADDRESS_CNT\n\n#define NRF_BLE_SCAN_ADDRESS_CNT 0\n\n#endif\n\n\n\n// <o> NRF_BLE_SCAN_APPEARANCE_CNT - Number of appearance filters. \n\n#ifndef NRF_BLE_SCAN_APPEARANCE_CNT\n\n#define NRF_BLE_SCAN_APPEARANCE_CNT 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> PEER_MANAGER_ENABLED - peer_manager - Peer Manager\n\n//==========================================================\n\n#ifndef PEER_MANAGER_ENABLED\n\n#define PEER_MANAGER_ENABLED 0\n\n#endif\n\n// <o> PM_MAX_REGISTRANTS - Number of event handlers that can be registered. \n\n#ifndef PM_MAX_REGISTRANTS\n\n#define PM_MAX_REGISTRANTS 3\n\n#endif\n\n\n\n// <o> PM_FLASH_BUFFERS - Number of internal buffers for flash operations. \n\n// <i> Decrease this value to lower RAM usage.\n\n\n\n#ifndef PM_FLASH_BUFFERS\n\n#define PM_FLASH_BUFFERS 4\n\n#endif\n\n\n\n// <q> PM_CENTRAL_ENABLED  - Enable/disable central-specific Peer Manager functionality.\n\n \n\n\n\n// <i> Enable/disable central-specific Peer Manager functionality.\n\n\n\n#ifndef PM_CENTRAL_ENABLED\n\n#define PM_CENTRAL_ENABLED 1\n\n#endif\n\n\n\n// <q> PM_SERVICE_CHANGED_ENABLED  - Enable/disable the service changed management for GATT server in Peer Manager.\n\n \n\n\n\n// <i> If not using a GATT server, or using a server wihout a service changed characteristic,\n\n// <i> disable this to save code space.\n\n\n\n#ifndef PM_SERVICE_CHANGED_ENABLED\n\n#define PM_SERVICE_CHANGED_ENABLED 1\n\n#endif\n\n\n\n// <q> PM_PEER_RANKS_ENABLED  - Enable/disable the peer rank management in Peer Manager.\n\n \n\n\n\n// <i> Set this to false to save code space if not using the peer rank API.\n\n\n\n#ifndef PM_PEER_RANKS_ENABLED\n\n#define PM_PEER_RANKS_ENABLED 1\n\n#endif\n\n\n\n// <q> PM_LESC_ENABLED  - Enable/disable LESC support in Peer Manager.\n\n \n\n\n\n// <i> If set to true, you need to call nrf_ble_lesc_request_handler() in the main loop to respond to LESC-related BLE events. If LESC support is not required, set this to false to save code space.\n\n\n\n#ifndef PM_LESC_ENABLED\n\n#define PM_LESC_ENABLED 0\n\n#endif\n\n\n\n// <e> PM_RA_PROTECTION_ENABLED - Enable/disable protection against repeated pairing attempts in Peer Manager.\n\n//==========================================================\n\n#ifndef PM_RA_PROTECTION_ENABLED\n\n#define PM_RA_PROTECTION_ENABLED 0\n\n#endif\n\n// <o> PM_RA_PROTECTION_TRACKED_PEERS_NUM - Maximum number of peers whose authorization status can be tracked. \n\n#ifndef PM_RA_PROTECTION_TRACKED_PEERS_NUM\n\n#define PM_RA_PROTECTION_TRACKED_PEERS_NUM 8\n\n#endif\n\n\n\n// <o> PM_RA_PROTECTION_MIN_WAIT_INTERVAL - Minimum waiting interval (in ms) before a new pairing attempt can be initiated. \n\n#ifndef PM_RA_PROTECTION_MIN_WAIT_INTERVAL\n\n#define PM_RA_PROTECTION_MIN_WAIT_INTERVAL 4000\n\n#endif\n\n\n\n// <o> PM_RA_PROTECTION_MAX_WAIT_INTERVAL - Maximum waiting interval (in ms) before a new pairing attempt can be initiated. \n\n#ifndef PM_RA_PROTECTION_MAX_WAIT_INTERVAL\n\n#define PM_RA_PROTECTION_MAX_WAIT_INTERVAL 64000\n\n#endif\n\n\n\n// <o> PM_RA_PROTECTION_REWARD_PERIOD - Reward period (in ms). \n\n// <i> The waiting interval is gradually decreased when no new failed pairing attempts are made during reward period.\n\n\n\n#ifndef PM_RA_PROTECTION_REWARD_PERIOD\n\n#define PM_RA_PROTECTION_REWARD_PERIOD 10000\n\n#endif\n\n\n\n// </e>\n\n\n\n// <o> PM_HANDLER_SEC_DELAY_MS - Delay before starting security. \n\n// <i>  This might be necessary for interoperability reasons, especially as peripheral.\n\n\n\n#ifndef PM_HANDLER_SEC_DELAY_MS\n\n#define PM_HANDLER_SEC_DELAY_MS 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> nRF_BLE_Services \n\n\n\n//==========================================================\n\n// <q> BLE_ANCS_C_ENABLED  - ble_ancs_c - Apple Notification Service Client\n\n \n\n\n\n#ifndef BLE_ANCS_C_ENABLED\n\n#define BLE_ANCS_C_ENABLED 0\n\n#endif\n\n\n\n// <q> BLE_ANS_C_ENABLED  - ble_ans_c - Alert Notification Service Client\n\n \n\n\n\n#ifndef BLE_ANS_C_ENABLED\n\n#define BLE_ANS_C_ENABLED 0\n\n#endif\n\n\n\n// <q> BLE_BAS_C_ENABLED  - ble_bas_c - Battery Service Client\n\n \n\n\n\n#ifndef BLE_BAS_C_ENABLED\n\n#define BLE_BAS_C_ENABLED 0\n\n#endif\n\n\n\n// <e> BLE_BAS_ENABLED - ble_bas - Battery Service\n\n//==========================================================\n\n#ifndef BLE_BAS_ENABLED\n\n#define BLE_BAS_ENABLED 0\n\n#endif\n\n// <e> BLE_BAS_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef BLE_BAS_CONFIG_LOG_ENABLED\n\n#define BLE_BAS_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> BLE_BAS_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef BLE_BAS_CONFIG_LOG_LEVEL\n\n#define BLE_BAS_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> BLE_BAS_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef BLE_BAS_CONFIG_INFO_COLOR\n\n#define BLE_BAS_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> BLE_BAS_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef BLE_BAS_CONFIG_DEBUG_COLOR\n\n#define BLE_BAS_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <q> BLE_CSCS_ENABLED  - ble_cscs - Cycling Speed and Cadence Service\n\n \n\n\n\n#ifndef BLE_CSCS_ENABLED\n\n#define BLE_CSCS_ENABLED 0\n\n#endif\n\n\n\n// <q> BLE_CTS_C_ENABLED  - ble_cts_c - Current Time Service Client\n\n \n\n\n\n#ifndef BLE_CTS_C_ENABLED\n\n#define BLE_CTS_C_ENABLED 0\n\n#endif\n\n\n\n// <q> BLE_DIS_ENABLED  - ble_dis - Device Information Service\n\n \n\n\n\n#ifndef BLE_DIS_ENABLED\n\n#define BLE_DIS_ENABLED 0\n\n#endif\n\n\n\n// <q> BLE_GLS_ENABLED  - ble_gls - Glucose Service\n\n \n\n\n\n#ifndef BLE_GLS_ENABLED\n\n#define BLE_GLS_ENABLED 0\n\n#endif\n\n\n\n// <q> BLE_HIDS_ENABLED  - ble_hids - Human Interface Device Service\n\n \n\n\n\n#ifndef BLE_HIDS_ENABLED\n\n#define BLE_HIDS_ENABLED 0\n\n#endif\n\n\n\n// <q> BLE_HRS_C_ENABLED  - ble_hrs_c - Heart Rate Service Client\n\n \n\n\n\n#ifndef BLE_HRS_C_ENABLED\n\n#define BLE_HRS_C_ENABLED 0\n\n#endif\n\n\n\n// <q> BLE_HRS_ENABLED  - ble_hrs - Heart Rate Service\n\n \n\n\n\n#ifndef BLE_HRS_ENABLED\n\n#define BLE_HRS_ENABLED 0\n\n#endif\n\n\n\n// <q> BLE_HTS_ENABLED  - ble_hts - Health Thermometer Service\n\n \n\n\n\n#ifndef BLE_HTS_ENABLED\n\n#define BLE_HTS_ENABLED 0\n\n#endif\n\n\n\n// <q> BLE_IAS_C_ENABLED  - ble_ias_c - Immediate Alert Service Client\n\n \n\n\n\n#ifndef BLE_IAS_C_ENABLED\n\n#define BLE_IAS_C_ENABLED 0\n\n#endif\n\n\n\n// <e> BLE_IAS_ENABLED - ble_ias - Immediate Alert Service\n\n//==========================================================\n\n#ifndef BLE_IAS_ENABLED\n\n#define BLE_IAS_ENABLED 0\n\n#endif\n\n// <e> BLE_IAS_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef BLE_IAS_CONFIG_LOG_ENABLED\n\n#define BLE_IAS_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> BLE_IAS_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef BLE_IAS_CONFIG_LOG_LEVEL\n\n#define BLE_IAS_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> BLE_IAS_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef BLE_IAS_CONFIG_INFO_COLOR\n\n#define BLE_IAS_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> BLE_IAS_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef BLE_IAS_CONFIG_DEBUG_COLOR\n\n#define BLE_IAS_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <q> BLE_LBS_C_ENABLED  - ble_lbs_c - Nordic LED Button Service Client\n\n \n\n\n\n#ifndef BLE_LBS_C_ENABLED\n\n#define BLE_LBS_C_ENABLED 0\n\n#endif\n\n\n\n// <q> BLE_LBS_ENABLED  - ble_lbs - LED Button Service\n\n \n\n\n\n#ifndef BLE_LBS_ENABLED\n\n#define BLE_LBS_ENABLED 0\n\n#endif\n\n\n\n// <q> BLE_LLS_ENABLED  - ble_lls - Link Loss Service\n\n \n\n\n\n#ifndef BLE_LLS_ENABLED\n\n#define BLE_LLS_ENABLED 0\n\n#endif\n\n\n\n// <q> BLE_NUS_C_ENABLED  - ble_nus_c - Nordic UART Central Service\n\n \n\n\n\n#ifndef BLE_NUS_C_ENABLED\n\n#define BLE_NUS_C_ENABLED 1\n\n#endif\n\n\n\n// <e> BLE_NUS_ENABLED - ble_nus - Nordic UART Service\n\n//==========================================================\n\n#ifndef BLE_NUS_ENABLED\n\n#define BLE_NUS_ENABLED 0\n\n#endif\n\n// <e> BLE_NUS_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef BLE_NUS_CONFIG_LOG_ENABLED\n\n#define BLE_NUS_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> BLE_NUS_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef BLE_NUS_CONFIG_LOG_LEVEL\n\n#define BLE_NUS_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> BLE_NUS_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef BLE_NUS_CONFIG_INFO_COLOR\n\n#define BLE_NUS_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> BLE_NUS_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef BLE_NUS_CONFIG_DEBUG_COLOR\n\n#define BLE_NUS_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <q> BLE_RSCS_C_ENABLED  - ble_rscs_c - Running Speed and Cadence Client\n\n \n\n\n\n#ifndef BLE_RSCS_C_ENABLED\n\n#define BLE_RSCS_C_ENABLED 0\n\n#endif\n\n\n\n// <q> BLE_RSCS_ENABLED  - ble_rscs - Running Speed and Cadence Service\n\n \n\n\n\n#ifndef BLE_RSCS_ENABLED\n\n#define BLE_RSCS_ENABLED 0\n\n#endif\n\n\n\n// <q> BLE_TPS_ENABLED  - ble_tps - TX Power Service\n\n \n\n\n\n#ifndef BLE_TPS_ENABLED\n\n#define BLE_TPS_ENABLED 0\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> nRF_Core \n\n\n\n//==========================================================\n\n// <e> NRF_MPU_LIB_ENABLED - nrf_mpu_lib - Module for MPU\n\n//==========================================================\n\n#ifndef NRF_MPU_LIB_ENABLED\n\n#define NRF_MPU_LIB_ENABLED 0\n\n#endif\n\n// <q> NRF_MPU_LIB_CLI_CMDS  - Enable CLI commands specific to the module.\n\n \n\n\n\n#ifndef NRF_MPU_LIB_CLI_CMDS\n\n#define NRF_MPU_LIB_CLI_CMDS 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_STACK_GUARD_ENABLED - nrf_stack_guard - Stack guard\n\n//==========================================================\n\n#ifndef NRF_STACK_GUARD_ENABLED\n\n#define NRF_STACK_GUARD_ENABLED 0\n\n#endif\n\n// <o> NRF_STACK_GUARD_CONFIG_SIZE  - Size of the stack guard.\n\n \n\n// <5=> 32 bytes \n\n// <6=> 64 bytes \n\n// <7=> 128 bytes \n\n// <8=> 256 bytes \n\n// <9=> 512 bytes \n\n// <10=> 1024 bytes \n\n// <11=> 2048 bytes \n\n// <12=> 4096 bytes \n\n\n\n#ifndef NRF_STACK_GUARD_CONFIG_SIZE\n\n#define NRF_STACK_GUARD_CONFIG_SIZE 7\n\n#endif\n\n\n\n// </e>\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> nRF_Crypto \n\n\n\n//==========================================================\n\n// <e> NRF_CRYPTO_ENABLED - nrf_crypto - Cryptography library.\n\n//==========================================================\n\n#ifndef NRF_CRYPTO_ENABLED\n\n#define NRF_CRYPTO_ENABLED 1\n\n#endif\n\n// <o> NRF_CRYPTO_ALLOCATOR  - Memory allocator\n\n \n\n\n\n// <i> Choose memory allocator used by nrf_crypto. Default is alloca if possible or nrf_malloc otherwise. If 'User macros' are selected, the user has to create 'nrf_crypto_allocator.h' file that contains NRF_CRYPTO_ALLOC, NRF_CRYPTO_FREE, and NRF_CRYPTO_ALLOC_ON_STACK.\n\n// <0=> Default \n\n// <1=> User macros \n\n// <2=> On stack (alloca) \n\n// <3=> C dynamic memory (malloc) \n\n// <4=> SDK Memory Manager (nrf_malloc) \n\n\n\n#ifndef NRF_CRYPTO_ALLOCATOR\n\n#define NRF_CRYPTO_ALLOCATOR 0\n\n#endif\n\n\n\n// <e> NRF_CRYPTO_BACKEND_CC310_BL_ENABLED - Enable the ARM Cryptocell CC310 reduced backend.\n\n\n\n// <i> The CC310 hardware-accelerated cryptography backend with reduced functionality and footprint (only available on nRF52840).\n\n//==========================================================\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_BL_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_BL_ENABLED 0\n\n#endif\n\n// <q> NRF_CRYPTO_BACKEND_CC310_BL_ECC_SECP224R1_ENABLED  - Enable the secp224r1 elliptic curve support using CC310_BL.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_BL_ECC_SECP224R1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_BL_ECC_SECP224R1_ENABLED 0\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_BL_ECC_SECP256R1_ENABLED  - Enable the secp256r1 elliptic curve support using CC310_BL.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_BL_ECC_SECP256R1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_BL_ECC_SECP256R1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_BL_HASH_SHA256_ENABLED  - CC310_BL SHA-256 hash functionality.\n\n \n\n\n\n// <i> CC310_BL backend implementation for hardware-accelerated SHA-256.\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_BL_HASH_SHA256_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_BL_HASH_SHA256_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_BL_HASH_AUTOMATIC_RAM_BUFFER_ENABLED  - nrf_cc310_bl buffers to RAM before running hash operation\n\n \n\n\n\n// <i> Enabling this makes hashing of addresses in FLASH range possible. Size of buffer allocated for hashing is set by NRF_CRYPTO_BACKEND_CC310_BL_HASH_AUTOMATIC_RAM_BUFFER_SIZE\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_BL_HASH_AUTOMATIC_RAM_BUFFER_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_BL_HASH_AUTOMATIC_RAM_BUFFER_ENABLED 0\n\n#endif\n\n\n\n// <o> NRF_CRYPTO_BACKEND_CC310_BL_HASH_AUTOMATIC_RAM_BUFFER_SIZE - nrf_cc310_bl hash outputs digests in little endian \n\n// <i> Makes the nrf_cc310_bl hash functions output digests in little endian format. Only for use in nRF SDK DFU!\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_BL_HASH_AUTOMATIC_RAM_BUFFER_SIZE\n\n#define NRF_CRYPTO_BACKEND_CC310_BL_HASH_AUTOMATIC_RAM_BUFFER_SIZE 4096\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_BL_INTERRUPTS_ENABLED  - Enable Interrupts while support using CC310 bl.\n\n \n\n\n\n// <i> Select a library version compatible with the configuration. When interrupts are disable, a version named _noint must be used\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_BL_INTERRUPTS_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_BL_INTERRUPTS_ENABLED 1\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_CRYPTO_BACKEND_CC310_ENABLED - Enable the ARM Cryptocell CC310 backend.\n\n\n\n// <i> The CC310 hardware-accelerated cryptography backend (only available on nRF52840).\n\n//==========================================================\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_ENABLED 0\n\n#endif\n\n// <q> NRF_CRYPTO_BACKEND_CC310_AES_CBC_ENABLED  - Enable the AES CBC mode using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_AES_CBC_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_AES_CBC_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_AES_CTR_ENABLED  - Enable the AES CTR mode using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_AES_CTR_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_AES_CTR_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_AES_ECB_ENABLED  - Enable the AES ECB mode using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_AES_ECB_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_AES_ECB_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_AES_CBC_MAC_ENABLED  - Enable the AES CBC_MAC mode using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_AES_CBC_MAC_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_AES_CBC_MAC_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_AES_CMAC_ENABLED  - Enable the AES CMAC mode using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_AES_CMAC_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_AES_CMAC_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_AES_CCM_ENABLED  - Enable the AES CCM mode using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_AES_CCM_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_AES_CCM_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_AES_CCM_STAR_ENABLED  - Enable the AES CCM* mode using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_AES_CCM_STAR_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_AES_CCM_STAR_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_CHACHA_POLY_ENABLED  - Enable the CHACHA-POLY mode using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_CHACHA_POLY_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_CHACHA_POLY_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_ECC_SECP160R1_ENABLED  - Enable the secp160r1 elliptic curve support using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_ECC_SECP160R1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_ECC_SECP160R1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_ECC_SECP160R2_ENABLED  - Enable the secp160r2 elliptic curve support using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_ECC_SECP160R2_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_ECC_SECP160R2_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_ECC_SECP192R1_ENABLED  - Enable the secp192r1 elliptic curve support using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_ECC_SECP192R1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_ECC_SECP192R1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_ECC_SECP224R1_ENABLED  - Enable the secp224r1 elliptic curve support using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_ECC_SECP224R1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_ECC_SECP224R1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_ECC_SECP256R1_ENABLED  - Enable the secp256r1 elliptic curve support using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_ECC_SECP256R1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_ECC_SECP256R1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_ECC_SECP384R1_ENABLED  - Enable the secp384r1 elliptic curve support using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_ECC_SECP384R1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_ECC_SECP384R1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_ECC_SECP521R1_ENABLED  - Enable the secp521r1 elliptic curve support using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_ECC_SECP521R1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_ECC_SECP521R1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_ECC_SECP160K1_ENABLED  - Enable the secp160k1 elliptic curve support using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_ECC_SECP160K1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_ECC_SECP160K1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_ECC_SECP192K1_ENABLED  - Enable the secp192k1 elliptic curve support using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_ECC_SECP192K1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_ECC_SECP192K1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_ECC_SECP224K1_ENABLED  - Enable the secp224k1 elliptic curve support using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_ECC_SECP224K1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_ECC_SECP224K1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_ECC_SECP256K1_ENABLED  - Enable the secp256k1 elliptic curve support using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_ECC_SECP256K1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_ECC_SECP256K1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_ECC_CURVE25519_ENABLED  - Enable the Curve25519 curve support using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_ECC_CURVE25519_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_ECC_CURVE25519_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_ECC_ED25519_ENABLED  - Enable the Ed25519 curve support using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_ECC_ED25519_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_ECC_ED25519_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_HASH_SHA256_ENABLED  - CC310 SHA-256 hash functionality.\n\n \n\n\n\n// <i> CC310 backend implementation for hardware-accelerated SHA-256.\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_HASH_SHA256_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_HASH_SHA256_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_HASH_SHA512_ENABLED  - CC310 SHA-512 hash functionality\n\n \n\n\n\n// <i> CC310 backend implementation for SHA-512 (in software).\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_HASH_SHA512_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_HASH_SHA512_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_HMAC_SHA256_ENABLED  - CC310 HMAC using SHA-256\n\n \n\n\n\n// <i> CC310 backend implementation for HMAC using hardware-accelerated SHA-256.\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_HMAC_SHA256_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_HMAC_SHA256_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_HMAC_SHA512_ENABLED  - CC310 HMAC using SHA-512\n\n \n\n\n\n// <i> CC310 backend implementation for HMAC using SHA-512 (in software).\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_HMAC_SHA512_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_HMAC_SHA512_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_RNG_ENABLED  - Enable RNG support using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_RNG_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_RNG_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_INTERRUPTS_ENABLED  - Enable Interrupts while support using CC310.\n\n \n\n\n\n// <i> Select a library version compatible with the configuration. When interrupts are disable, a version named _noint must be used\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_INTERRUPTS_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_INTERRUPTS_ENABLED 1\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_CRYPTO_BACKEND_CIFRA_ENABLED - Enable the Cifra backend.\n\n//==========================================================\n\n#ifndef NRF_CRYPTO_BACKEND_CIFRA_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CIFRA_ENABLED 0\n\n#endif\n\n// <q> NRF_CRYPTO_BACKEND_CIFRA_AES_EAX_ENABLED  - Enable the AES EAX mode using Cifra.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CIFRA_AES_EAX_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CIFRA_AES_EAX_ENABLED 1\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_CRYPTO_BACKEND_MBEDTLS_ENABLED - Enable the mbed TLS backend.\n\n//==========================================================\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_ENABLED 0\n\n#endif\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_AES_CBC_ENABLED  - Enable the AES CBC mode mbed TLS.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_AES_CBC_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_AES_CBC_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_AES_CTR_ENABLED  - Enable the AES CTR mode using mbed TLS.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_AES_CTR_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_AES_CTR_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_AES_CFB_ENABLED  - Enable the AES CFB mode using mbed TLS.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_AES_CFB_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_AES_CFB_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_AES_ECB_ENABLED  - Enable the AES ECB mode using mbed TLS.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_AES_ECB_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_AES_ECB_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_AES_CBC_MAC_ENABLED  - Enable the AES CBC MAC mode using mbed TLS.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_AES_CBC_MAC_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_AES_CBC_MAC_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_AES_CMAC_ENABLED  - Enable the AES CMAC mode using mbed TLS.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_AES_CMAC_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_AES_CMAC_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_AES_CCM_ENABLED  - Enable the AES CCM mode using mbed TLS.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_AES_CCM_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_AES_CCM_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_AES_GCM_ENABLED  - Enable the AES GCM mode using mbed TLS.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_AES_GCM_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_AES_GCM_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP192R1_ENABLED  - Enable secp192r1 (NIST 192-bit) curve\n\n \n\n\n\n// <i> Enable this setting if you need secp192r1 (NIST 192-bit) support using MBEDTLS\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP192R1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP192R1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP224R1_ENABLED  - Enable secp224r1 (NIST 224-bit) curve\n\n \n\n\n\n// <i> Enable this setting if you need secp224r1 (NIST 224-bit) support using MBEDTLS\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP224R1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP224R1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP256R1_ENABLED  - Enable secp256r1 (NIST 256-bit) curve\n\n \n\n\n\n// <i> Enable this setting if you need secp256r1 (NIST 256-bit) support using MBEDTLS\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP256R1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP256R1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP384R1_ENABLED  - Enable secp384r1 (NIST 384-bit) curve\n\n \n\n\n\n// <i> Enable this setting if you need secp384r1 (NIST 384-bit) support using MBEDTLS\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP384R1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP384R1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP521R1_ENABLED  - Enable secp521r1 (NIST 521-bit) curve\n\n \n\n\n\n// <i> Enable this setting if you need secp521r1 (NIST 521-bit) support using MBEDTLS\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP521R1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP521R1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP192K1_ENABLED  - Enable secp192k1 (Koblitz 192-bit) curve\n\n \n\n\n\n// <i> Enable this setting if you need secp192k1 (Koblitz 192-bit) support using MBEDTLS\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP192K1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP192K1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP224K1_ENABLED  - Enable secp224k1 (Koblitz 224-bit) curve\n\n \n\n\n\n// <i> Enable this setting if you need secp224k1 (Koblitz 224-bit) support using MBEDTLS\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP224K1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP224K1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP256K1_ENABLED  - Enable secp256k1 (Koblitz 256-bit) curve\n\n \n\n\n\n// <i> Enable this setting if you need secp256k1 (Koblitz 256-bit) support using MBEDTLS\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP256K1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP256K1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_ECC_BP256R1_ENABLED  - Enable bp256r1 (Brainpool 256-bit) curve\n\n \n\n\n\n// <i> Enable this setting if you need bp256r1 (Brainpool 256-bit) support using MBEDTLS\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_ECC_BP256R1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_ECC_BP256R1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_ECC_BP384R1_ENABLED  - Enable bp384r1 (Brainpool 384-bit) curve\n\n \n\n\n\n// <i> Enable this setting if you need bp384r1 (Brainpool 384-bit) support using MBEDTLS\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_ECC_BP384R1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_ECC_BP384R1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_ECC_BP512R1_ENABLED  - Enable bp512r1 (Brainpool 512-bit) curve\n\n \n\n\n\n// <i> Enable this setting if you need bp512r1 (Brainpool 512-bit) support using MBEDTLS\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_ECC_BP512R1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_ECC_BP512R1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_ECC_CURVE25519_ENABLED  - Enable Curve25519 curve\n\n \n\n\n\n// <i> Enable this setting if you need Curve25519 support using MBEDTLS\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_ECC_CURVE25519_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_ECC_CURVE25519_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_HASH_SHA256_ENABLED  - Enable mbed TLS SHA-256 hash functionality.\n\n \n\n\n\n// <i> mbed TLS backend implementation for SHA-256.\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_HASH_SHA256_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_HASH_SHA256_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_HASH_SHA512_ENABLED  - Enable mbed TLS SHA-512 hash functionality.\n\n \n\n\n\n// <i> mbed TLS backend implementation for SHA-512.\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_HASH_SHA512_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_HASH_SHA512_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_HMAC_SHA256_ENABLED  - Enable mbed TLS HMAC using SHA-256.\n\n \n\n\n\n// <i> mbed TLS backend implementation for HMAC using SHA-256.\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_HMAC_SHA256_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_HMAC_SHA256_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_HMAC_SHA512_ENABLED  - Enable mbed TLS HMAC using SHA-512.\n\n \n\n\n\n// <i> mbed TLS backend implementation for HMAC using SHA-512.\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_HMAC_SHA512_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_HMAC_SHA512_ENABLED 1\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_CRYPTO_BACKEND_MICRO_ECC_ENABLED - Enable the micro-ecc backend.\n\n//==========================================================\n\n#ifndef NRF_CRYPTO_BACKEND_MICRO_ECC_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MICRO_ECC_ENABLED 0\n\n#endif\n\n// <q> NRF_CRYPTO_BACKEND_MICRO_ECC_ECC_SECP192R1_ENABLED  - Enable secp192r1 (NIST 192-bit) curve\n\n \n\n\n\n// <i> Enable this setting if you need secp192r1 (NIST 192-bit) support using micro-ecc\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MICRO_ECC_ECC_SECP192R1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MICRO_ECC_ECC_SECP192R1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MICRO_ECC_ECC_SECP224R1_ENABLED  - Enable secp224r1 (NIST 224-bit) curve\n\n \n\n\n\n// <i> Enable this setting if you need secp224r1 (NIST 224-bit) support using micro-ecc\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MICRO_ECC_ECC_SECP224R1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MICRO_ECC_ECC_SECP224R1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MICRO_ECC_ECC_SECP256R1_ENABLED  - Enable secp256r1 (NIST 256-bit) curve\n\n \n\n\n\n// <i> Enable this setting if you need secp256r1 (NIST 256-bit) support using micro-ecc\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MICRO_ECC_ECC_SECP256R1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MICRO_ECC_ECC_SECP256R1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MICRO_ECC_ECC_SECP256K1_ENABLED  - Enable secp256k1 (Koblitz 256-bit) curve\n\n \n\n\n\n// <i> Enable this setting if you need secp256k1 (Koblitz 256-bit) support using micro-ecc\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MICRO_ECC_ECC_SECP256K1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MICRO_ECC_ECC_SECP256K1_ENABLED 1\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_CRYPTO_BACKEND_NRF_HW_RNG_ENABLED - Enable the nRF HW RNG backend.\n\n\n\n// <i> The nRF HW backend provide access to RNG peripheral in nRF5x devices.\n\n//==========================================================\n\n#ifndef NRF_CRYPTO_BACKEND_NRF_HW_RNG_ENABLED\n\n#define NRF_CRYPTO_BACKEND_NRF_HW_RNG_ENABLED 0\n\n#endif\n\n// <q> NRF_CRYPTO_BACKEND_NRF_HW_RNG_MBEDTLS_CTR_DRBG_ENABLED  - Enable mbed TLS CTR-DRBG algorithm.\n\n \n\n\n\n// <i> Enable mbed TLS CTR-DRBG standardized by NIST (NIST SP 800-90A Rev. 1). The nRF HW RNG is used as an entropy source for seeding.\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_NRF_HW_RNG_MBEDTLS_CTR_DRBG_ENABLED\n\n#define NRF_CRYPTO_BACKEND_NRF_HW_RNG_MBEDTLS_CTR_DRBG_ENABLED 1\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_CRYPTO_BACKEND_NRF_SW_ENABLED - Enable the legacy nRFx sw for crypto.\n\n\n\n// <i> The nRF SW cryptography backend (only used in bootloader context).\n\n//==========================================================\n\n#ifndef NRF_CRYPTO_BACKEND_NRF_SW_ENABLED\n\n#define NRF_CRYPTO_BACKEND_NRF_SW_ENABLED 0\n\n#endif\n\n// <q> NRF_CRYPTO_BACKEND_NRF_SW_HASH_SHA256_ENABLED  - nRF SW hash backend support for SHA-256\n\n \n\n\n\n// <i> The nRF SW backend provide access to nRF SDK legacy hash implementation of SHA-256.\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_NRF_SW_HASH_SHA256_ENABLED\n\n#define NRF_CRYPTO_BACKEND_NRF_SW_HASH_SHA256_ENABLED 1\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_CRYPTO_BACKEND_OBERON_ENABLED - Enable the Oberon backend\n\n\n\n// <i> The Oberon backend\n\n//==========================================================\n\n#ifndef NRF_CRYPTO_BACKEND_OBERON_ENABLED\n\n#define NRF_CRYPTO_BACKEND_OBERON_ENABLED 0\n\n#endif\n\n// <q> NRF_CRYPTO_BACKEND_OBERON_CHACHA_POLY_ENABLED  - Enable the CHACHA-POLY mode using Oberon.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_OBERON_CHACHA_POLY_ENABLED\n\n#define NRF_CRYPTO_BACKEND_OBERON_CHACHA_POLY_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_OBERON_ECC_SECP256R1_ENABLED  - Enable secp256r1 curve\n\n \n\n\n\n// <i> Enable this setting if you need secp256r1 curve support using Oberon library\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_OBERON_ECC_SECP256R1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_OBERON_ECC_SECP256R1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_OBERON_ECC_CURVE25519_ENABLED  - Enable Curve25519 ECDH\n\n \n\n\n\n// <i> Enable this setting if you need Curve25519 ECDH support using Oberon library\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_OBERON_ECC_CURVE25519_ENABLED\n\n#define NRF_CRYPTO_BACKEND_OBERON_ECC_CURVE25519_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_OBERON_ECC_ED25519_ENABLED  - Enable Ed25519 signature scheme\n\n \n\n\n\n// <i> Enable this setting if you need Ed25519 support using Oberon library\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_OBERON_ECC_ED25519_ENABLED\n\n#define NRF_CRYPTO_BACKEND_OBERON_ECC_ED25519_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_OBERON_HASH_SHA256_ENABLED  - Oberon SHA-256 hash functionality\n\n \n\n\n\n// <i> Oberon backend implementation for SHA-256.\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_OBERON_HASH_SHA256_ENABLED\n\n#define NRF_CRYPTO_BACKEND_OBERON_HASH_SHA256_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_OBERON_HASH_SHA512_ENABLED  - Oberon SHA-512 hash functionality\n\n \n\n\n\n// <i> Oberon backend implementation for SHA-512.\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_OBERON_HASH_SHA512_ENABLED\n\n#define NRF_CRYPTO_BACKEND_OBERON_HASH_SHA512_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_OBERON_HMAC_SHA256_ENABLED  - Oberon HMAC using SHA-256\n\n \n\n\n\n// <i> Oberon backend implementation for HMAC using SHA-256.\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_OBERON_HMAC_SHA256_ENABLED\n\n#define NRF_CRYPTO_BACKEND_OBERON_HMAC_SHA256_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_OBERON_HMAC_SHA512_ENABLED  - Oberon HMAC using SHA-512\n\n \n\n\n\n// <i> Oberon backend implementation for HMAC using SHA-512.\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_OBERON_HMAC_SHA512_ENABLED\n\n#define NRF_CRYPTO_BACKEND_OBERON_HMAC_SHA512_ENABLED 1\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_CRYPTO_BACKEND_OPTIGA_ENABLED - Enable the nrf_crypto Optiga Trust X backend.\n\n\n\n// <i> Enables the nrf_crypto backend for Optiga Trust X devices.\n\n//==========================================================\n\n#ifndef NRF_CRYPTO_BACKEND_OPTIGA_ENABLED\n\n#define NRF_CRYPTO_BACKEND_OPTIGA_ENABLED 0\n\n#endif\n\n// <q> NRF_CRYPTO_BACKEND_OPTIGA_RNG_ENABLED  - Optiga backend support for RNG\n\n \n\n\n\n// <i> The Optiga backend provide external chip RNG.\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_OPTIGA_RNG_ENABLED\n\n#define NRF_CRYPTO_BACKEND_OPTIGA_RNG_ENABLED 0\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_OPTIGA_ECC_SECP256R1_ENABLED  - Optiga backend support for ECC secp256r1\n\n \n\n\n\n// <i> The Optiga backend provide external chip ECC using secp256r1.\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_OPTIGA_ECC_SECP256R1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_OPTIGA_ECC_SECP256R1_ENABLED 1\n\n#endif\n\n\n\n// </e>\n\n\n\n// <q> NRF_CRYPTO_CURVE25519_BIG_ENDIAN_ENABLED  - Big-endian byte order in raw Curve25519 data\n\n \n\n\n\n// <i> Enable big-endian byte order in Curve25519 API, if set to 1. Use little-endian, if set to 0.\n\n\n\n#ifndef NRF_CRYPTO_CURVE25519_BIG_ENDIAN_ENABLED\n\n#define NRF_CRYPTO_CURVE25519_BIG_ENDIAN_ENABLED 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> nRF_DFU \n\n\n\n//==========================================================\n\n// <h> ble_dfu - Device Firmware Update\n\n\n\n//==========================================================\n\n// <q> BLE_DFU_ENABLED  - Enable DFU Service.\n\n \n\n\n\n#ifndef BLE_DFU_ENABLED\n\n#define BLE_DFU_ENABLED 0\n\n#endif\n\n\n\n// <q> NRF_DFU_BLE_BUTTONLESS_SUPPORTS_BONDS  - Buttonless DFU supports bonds.\n\n \n\n\n\n#ifndef NRF_DFU_BLE_BUTTONLESS_SUPPORTS_BONDS\n\n#define NRF_DFU_BLE_BUTTONLESS_SUPPORTS_BONDS 0\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> nRF_Drivers \n\n\n\n//==========================================================\n\n// <e> COMP_ENABLED - nrf_drv_comp - COMP peripheral driver - legacy layer\n\n//==========================================================\n\n#ifndef COMP_ENABLED\n\n#define COMP_ENABLED 0\n\n#endif\n\n// <o> COMP_CONFIG_REF  - Reference voltage\n\n \n\n// <0=> Internal 1.2V \n\n// <1=> Internal 1.8V \n\n// <2=> Internal 2.4V \n\n// <4=> VDD \n\n// <7=> ARef \n\n\n\n#ifndef COMP_CONFIG_REF\n\n#define COMP_CONFIG_REF 1\n\n#endif\n\n\n\n// <o> COMP_CONFIG_MAIN_MODE  - Main mode\n\n \n\n// <0=> Single ended \n\n// <1=> Differential \n\n\n\n#ifndef COMP_CONFIG_MAIN_MODE\n\n#define COMP_CONFIG_MAIN_MODE 0\n\n#endif\n\n\n\n// <o> COMP_CONFIG_SPEED_MODE  - Speed mode\n\n \n\n// <0=> Low power \n\n// <1=> Normal \n\n// <2=> High speed \n\n\n\n#ifndef COMP_CONFIG_SPEED_MODE\n\n#define COMP_CONFIG_SPEED_MODE 2\n\n#endif\n\n\n\n// <o> COMP_CONFIG_HYST  - Hystheresis\n\n \n\n// <0=> No \n\n// <1=> 50mV \n\n\n\n#ifndef COMP_CONFIG_HYST\n\n#define COMP_CONFIG_HYST 0\n\n#endif\n\n\n\n// <o> COMP_CONFIG_ISOURCE  - Current Source\n\n \n\n// <0=> Off \n\n// <1=> 2.5 uA \n\n// <2=> 5 uA \n\n// <3=> 10 uA \n\n\n\n#ifndef COMP_CONFIG_ISOURCE\n\n#define COMP_CONFIG_ISOURCE 0\n\n#endif\n\n\n\n// <o> COMP_CONFIG_INPUT  - Analog input\n\n \n\n// <0=> 0 \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef COMP_CONFIG_INPUT\n\n#define COMP_CONFIG_INPUT 0\n\n#endif\n\n\n\n// <o> COMP_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef COMP_CONFIG_IRQ_PRIORITY\n\n#define COMP_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// </e>\n\n\n\n// <q> EGU_ENABLED  - nrf_drv_swi - SWI(EGU) peripheral driver - legacy layer\n\n \n\n\n\n#ifndef EGU_ENABLED\n\n#define EGU_ENABLED 0\n\n#endif\n\n\n\n// <e> GPIOTE_ENABLED - nrf_drv_gpiote - GPIOTE peripheral driver - legacy layer\n\n//==========================================================\n\n#ifndef GPIOTE_ENABLED\n\n#define GPIOTE_ENABLED 1\n\n#endif\n\n// <o> GPIOTE_CONFIG_NUM_OF_LOW_POWER_EVENTS - Number of lower power input pins \n\n#ifndef GPIOTE_CONFIG_NUM_OF_LOW_POWER_EVENTS\n\n#define GPIOTE_CONFIG_NUM_OF_LOW_POWER_EVENTS 4\n\n#endif\n\n\n\n// <o> GPIOTE_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef GPIOTE_CONFIG_IRQ_PRIORITY\n\n#define GPIOTE_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> I2S_ENABLED - nrf_drv_i2s - I2S peripheral driver - legacy layer\n\n//==========================================================\n\n#ifndef I2S_ENABLED\n\n#define I2S_ENABLED 0\n\n#endif\n\n// <o> I2S_CONFIG_SCK_PIN - SCK pin  <0-31> \n\n\n\n\n\n#ifndef I2S_CONFIG_SCK_PIN\n\n#define I2S_CONFIG_SCK_PIN 31\n\n#endif\n\n\n\n// <o> I2S_CONFIG_LRCK_PIN - LRCK pin  <1-31> \n\n\n\n\n\n#ifndef I2S_CONFIG_LRCK_PIN\n\n#define I2S_CONFIG_LRCK_PIN 30\n\n#endif\n\n\n\n// <o> I2S_CONFIG_MCK_PIN - MCK pin \n\n#ifndef I2S_CONFIG_MCK_PIN\n\n#define I2S_CONFIG_MCK_PIN 255\n\n#endif\n\n\n\n// <o> I2S_CONFIG_SDOUT_PIN - SDOUT pin  <0-31> \n\n\n\n\n\n#ifndef I2S_CONFIG_SDOUT_PIN\n\n#define I2S_CONFIG_SDOUT_PIN 29\n\n#endif\n\n\n\n// <o> I2S_CONFIG_SDIN_PIN - SDIN pin  <0-31> \n\n\n\n\n\n#ifndef I2S_CONFIG_SDIN_PIN\n\n#define I2S_CONFIG_SDIN_PIN 28\n\n#endif\n\n\n\n// <o> I2S_CONFIG_MASTER  - Mode\n\n \n\n// <0=> Master \n\n// <1=> Slave \n\n\n\n#ifndef I2S_CONFIG_MASTER\n\n#define I2S_CONFIG_MASTER 0\n\n#endif\n\n\n\n// <o> I2S_CONFIG_FORMAT  - Format\n\n \n\n// <0=> I2S \n\n// <1=> Aligned \n\n\n\n#ifndef I2S_CONFIG_FORMAT\n\n#define I2S_CONFIG_FORMAT 0\n\n#endif\n\n\n\n// <o> I2S_CONFIG_ALIGN  - Alignment\n\n \n\n// <0=> Left \n\n// <1=> Right \n\n\n\n#ifndef I2S_CONFIG_ALIGN\n\n#define I2S_CONFIG_ALIGN 0\n\n#endif\n\n\n\n// <o> I2S_CONFIG_SWIDTH  - Sample width (bits)\n\n \n\n// <0=> 8 \n\n// <1=> 16 \n\n// <2=> 24 \n\n\n\n#ifndef I2S_CONFIG_SWIDTH\n\n#define I2S_CONFIG_SWIDTH 1\n\n#endif\n\n\n\n// <o> I2S_CONFIG_CHANNELS  - Channels\n\n \n\n// <0=> Stereo \n\n// <1=> Left \n\n// <2=> Right \n\n\n\n#ifndef I2S_CONFIG_CHANNELS\n\n#define I2S_CONFIG_CHANNELS 1\n\n#endif\n\n\n\n// <o> I2S_CONFIG_MCK_SETUP  - MCK behavior\n\n \n\n// <0=> Disabled \n\n// <2147483648=> 32MHz/2 \n\n// <1342177280=> 32MHz/3 \n\n// <1073741824=> 32MHz/4 \n\n// <805306368=> 32MHz/5 \n\n// <671088640=> 32MHz/6 \n\n// <536870912=> 32MHz/8 \n\n// <402653184=> 32MHz/10 \n\n// <369098752=> 32MHz/11 \n\n// <285212672=> 32MHz/15 \n\n// <268435456=> 32MHz/16 \n\n// <201326592=> 32MHz/21 \n\n// <184549376=> 32MHz/23 \n\n// <142606336=> 32MHz/30 \n\n// <138412032=> 32MHz/31 \n\n// <134217728=> 32MHz/32 \n\n// <100663296=> 32MHz/42 \n\n// <68157440=> 32MHz/63 \n\n// <34340864=> 32MHz/125 \n\n\n\n#ifndef I2S_CONFIG_MCK_SETUP\n\n#define I2S_CONFIG_MCK_SETUP 536870912\n\n#endif\n\n\n\n// <o> I2S_CONFIG_RATIO  - MCK/LRCK ratio\n\n \n\n// <0=> 32x \n\n// <1=> 48x \n\n// <2=> 64x \n\n// <3=> 96x \n\n// <4=> 128x \n\n// <5=> 192x \n\n// <6=> 256x \n\n// <7=> 384x \n\n// <8=> 512x \n\n\n\n#ifndef I2S_CONFIG_RATIO\n\n#define I2S_CONFIG_RATIO 2000\n\n#endif\n\n\n\n// <o> I2S_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef I2S_CONFIG_IRQ_PRIORITY\n\n#define I2S_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> I2S_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef I2S_CONFIG_LOG_ENABLED\n\n#define I2S_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> I2S_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef I2S_CONFIG_LOG_LEVEL\n\n#define I2S_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> I2S_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef I2S_CONFIG_INFO_COLOR\n\n#define I2S_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> I2S_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef I2S_CONFIG_DEBUG_COLOR\n\n#define I2S_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> LPCOMP_ENABLED - nrf_drv_lpcomp - LPCOMP peripheral driver - legacy layer\n\n//==========================================================\n\n#ifndef LPCOMP_ENABLED\n\n#define LPCOMP_ENABLED 0\n\n#endif\n\n// <o> LPCOMP_CONFIG_REFERENCE  - Reference voltage\n\n \n\n// <0=> Supply 1/8 \n\n// <1=> Supply 2/8 \n\n// <2=> Supply 3/8 \n\n// <3=> Supply 4/8 \n\n// <4=> Supply 5/8 \n\n// <5=> Supply 6/8 \n\n// <6=> Supply 7/8 \n\n// <8=> Supply 1/16 (nRF52) \n\n// <9=> Supply 3/16 (nRF52) \n\n// <10=> Supply 5/16 (nRF52) \n\n// <11=> Supply 7/16 (nRF52) \n\n// <12=> Supply 9/16 (nRF52) \n\n// <13=> Supply 11/16 (nRF52) \n\n// <14=> Supply 13/16 (nRF52) \n\n// <15=> Supply 15/16 (nRF52) \n\n// <7=> External Ref 0 \n\n// <65543=> External Ref 1 \n\n\n\n#ifndef LPCOMP_CONFIG_REFERENCE\n\n#define LPCOMP_CONFIG_REFERENCE 3\n\n#endif\n\n\n\n// <o> LPCOMP_CONFIG_DETECTION  - Detection\n\n \n\n// <0=> Crossing \n\n// <1=> Up \n\n// <2=> Down \n\n\n\n#ifndef LPCOMP_CONFIG_DETECTION\n\n#define LPCOMP_CONFIG_DETECTION 2\n\n#endif\n\n\n\n// <o> LPCOMP_CONFIG_INPUT  - Analog input\n\n \n\n// <0=> 0 \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef LPCOMP_CONFIG_INPUT\n\n#define LPCOMP_CONFIG_INPUT 0\n\n#endif\n\n\n\n// <q> LPCOMP_CONFIG_HYST  - Hysteresis\n\n \n\n\n\n#ifndef LPCOMP_CONFIG_HYST\n\n#define LPCOMP_CONFIG_HYST 0\n\n#endif\n\n\n\n// <o> LPCOMP_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef LPCOMP_CONFIG_IRQ_PRIORITY\n\n#define LPCOMP_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRFX_CLOCK_ENABLED - nrfx_clock - CLOCK peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_CLOCK_ENABLED\n\n#define NRFX_CLOCK_ENABLED 1\n\n#endif\n\n// <o> NRFX_CLOCK_CONFIG_LF_SRC  - LF Clock Source\n\n \n\n// <0=> RC \n\n// <1=> XTAL \n\n// <2=> Synth \n\n// <131073=> External Low Swing \n\n// <196609=> External Full Swing \n\n\n\n#ifndef NRFX_CLOCK_CONFIG_LF_SRC\n\n#define NRFX_CLOCK_CONFIG_LF_SRC 1\n\n#endif\n\n\n\n// <o> NRFX_CLOCK_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_CLOCK_CONFIG_IRQ_PRIORITY\n\n#define NRFX_CLOCK_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> NRFX_CLOCK_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_CLOCK_CONFIG_LOG_ENABLED\n\n#define NRFX_CLOCK_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_CLOCK_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_CLOCK_CONFIG_LOG_LEVEL\n\n#define NRFX_CLOCK_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_CLOCK_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_CLOCK_CONFIG_INFO_COLOR\n\n#define NRFX_CLOCK_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_CLOCK_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_CLOCK_CONFIG_DEBUG_COLOR\n\n#define NRFX_CLOCK_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRFX_COMP_ENABLED - nrfx_comp - COMP peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_COMP_ENABLED\n\n#define NRFX_COMP_ENABLED 0\n\n#endif\n\n// <o> NRFX_COMP_CONFIG_REF  - Reference voltage\n\n \n\n// <0=> Internal 1.2V \n\n// <1=> Internal 1.8V \n\n// <2=> Internal 2.4V \n\n// <4=> VDD \n\n// <7=> ARef \n\n\n\n#ifndef NRFX_COMP_CONFIG_REF\n\n#define NRFX_COMP_CONFIG_REF 1\n\n#endif\n\n\n\n// <o> NRFX_COMP_CONFIG_MAIN_MODE  - Main mode\n\n \n\n// <0=> Single ended \n\n// <1=> Differential \n\n\n\n#ifndef NRFX_COMP_CONFIG_MAIN_MODE\n\n#define NRFX_COMP_CONFIG_MAIN_MODE 0\n\n#endif\n\n\n\n// <o> NRFX_COMP_CONFIG_SPEED_MODE  - Speed mode\n\n \n\n// <0=> Low power \n\n// <1=> Normal \n\n// <2=> High speed \n\n\n\n#ifndef NRFX_COMP_CONFIG_SPEED_MODE\n\n#define NRFX_COMP_CONFIG_SPEED_MODE 2\n\n#endif\n\n\n\n// <o> NRFX_COMP_CONFIG_HYST  - Hystheresis\n\n \n\n// <0=> No \n\n// <1=> 50mV \n\n\n\n#ifndef NRFX_COMP_CONFIG_HYST\n\n#define NRFX_COMP_CONFIG_HYST 0\n\n#endif\n\n\n\n// <o> NRFX_COMP_CONFIG_ISOURCE  - Current Source\n\n \n\n// <0=> Off \n\n// <1=> 2.5 uA \n\n// <2=> 5 uA \n\n// <3=> 10 uA \n\n\n\n#ifndef NRFX_COMP_CONFIG_ISOURCE\n\n#define NRFX_COMP_CONFIG_ISOURCE 0\n\n#endif\n\n\n\n// <o> NRFX_COMP_CONFIG_INPUT  - Analog input\n\n \n\n// <0=> 0 \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_COMP_CONFIG_INPUT\n\n#define NRFX_COMP_CONFIG_INPUT 0\n\n#endif\n\n\n\n// <o> NRFX_COMP_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_COMP_CONFIG_IRQ_PRIORITY\n\n#define NRFX_COMP_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> NRFX_COMP_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_COMP_CONFIG_LOG_ENABLED\n\n#define NRFX_COMP_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_COMP_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_COMP_CONFIG_LOG_LEVEL\n\n#define NRFX_COMP_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_COMP_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_COMP_CONFIG_INFO_COLOR\n\n#define NRFX_COMP_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_COMP_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_COMP_CONFIG_DEBUG_COLOR\n\n#define NRFX_COMP_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRFX_GPIOTE_ENABLED - nrfx_gpiote - GPIOTE peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_GPIOTE_ENABLED\n\n#define NRFX_GPIOTE_ENABLED 1\n\n#endif\n\n// <o> NRFX_GPIOTE_CONFIG_NUM_OF_LOW_POWER_EVENTS - Number of lower power input pins \n\n#ifndef NRFX_GPIOTE_CONFIG_NUM_OF_LOW_POWER_EVENTS\n\n#define NRFX_GPIOTE_CONFIG_NUM_OF_LOW_POWER_EVENTS 1\n\n#endif\n\n\n\n// <o> NRFX_GPIOTE_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_GPIOTE_CONFIG_IRQ_PRIORITY\n\n#define NRFX_GPIOTE_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> NRFX_GPIOTE_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_GPIOTE_CONFIG_LOG_ENABLED\n\n#define NRFX_GPIOTE_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_GPIOTE_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_GPIOTE_CONFIG_LOG_LEVEL\n\n#define NRFX_GPIOTE_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_GPIOTE_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_GPIOTE_CONFIG_INFO_COLOR\n\n#define NRFX_GPIOTE_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_GPIOTE_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_GPIOTE_CONFIG_DEBUG_COLOR\n\n#define NRFX_GPIOTE_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRFX_I2S_ENABLED - nrfx_i2s - I2S peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_I2S_ENABLED\n\n#define NRFX_I2S_ENABLED 0\n\n#endif\n\n// <o> NRFX_I2S_CONFIG_SCK_PIN - SCK pin  <0-31> \n\n\n\n\n\n#ifndef NRFX_I2S_CONFIG_SCK_PIN\n\n#define NRFX_I2S_CONFIG_SCK_PIN 31\n\n#endif\n\n\n\n// <o> NRFX_I2S_CONFIG_LRCK_PIN - LRCK pin  <1-31> \n\n\n\n\n\n#ifndef NRFX_I2S_CONFIG_LRCK_PIN\n\n#define NRFX_I2S_CONFIG_LRCK_PIN 30\n\n#endif\n\n\n\n// <o> NRFX_I2S_CONFIG_MCK_PIN - MCK pin \n\n#ifndef NRFX_I2S_CONFIG_MCK_PIN\n\n#define NRFX_I2S_CONFIG_MCK_PIN 255\n\n#endif\n\n\n\n// <o> NRFX_I2S_CONFIG_SDOUT_PIN - SDOUT pin  <0-31> \n\n\n\n\n\n#ifndef NRFX_I2S_CONFIG_SDOUT_PIN\n\n#define NRFX_I2S_CONFIG_SDOUT_PIN 29\n\n#endif\n\n\n\n// <o> NRFX_I2S_CONFIG_SDIN_PIN - SDIN pin  <0-31> \n\n\n\n\n\n#ifndef NRFX_I2S_CONFIG_SDIN_PIN\n\n#define NRFX_I2S_CONFIG_SDIN_PIN 28\n\n#endif\n\n\n\n// <o> NRFX_I2S_CONFIG_MASTER  - Mode\n\n \n\n// <0=> Master \n\n// <1=> Slave \n\n\n\n#ifndef NRFX_I2S_CONFIG_MASTER\n\n#define NRFX_I2S_CONFIG_MASTER 0\n\n#endif\n\n\n\n// <o> NRFX_I2S_CONFIG_FORMAT  - Format\n\n \n\n// <0=> I2S \n\n// <1=> Aligned \n\n\n\n#ifndef NRFX_I2S_CONFIG_FORMAT\n\n#define NRFX_I2S_CONFIG_FORMAT 0\n\n#endif\n\n\n\n// <o> NRFX_I2S_CONFIG_ALIGN  - Alignment\n\n \n\n// <0=> Left \n\n// <1=> Right \n\n\n\n#ifndef NRFX_I2S_CONFIG_ALIGN\n\n#define NRFX_I2S_CONFIG_ALIGN 0\n\n#endif\n\n\n\n// <o> NRFX_I2S_CONFIG_SWIDTH  - Sample width (bits)\n\n \n\n// <0=> 8 \n\n// <1=> 16 \n\n// <2=> 24 \n\n\n\n#ifndef NRFX_I2S_CONFIG_SWIDTH\n\n#define NRFX_I2S_CONFIG_SWIDTH 1\n\n#endif\n\n\n\n// <o> NRFX_I2S_CONFIG_CHANNELS  - Channels\n\n \n\n// <0=> Stereo \n\n// <1=> Left \n\n// <2=> Right \n\n\n\n#ifndef NRFX_I2S_CONFIG_CHANNELS\n\n#define NRFX_I2S_CONFIG_CHANNELS 1\n\n#endif\n\n\n\n// <o> NRFX_I2S_CONFIG_MCK_SETUP  - MCK behavior\n\n \n\n// <0=> Disabled \n\n// <2147483648=> 32MHz/2 \n\n// <1342177280=> 32MHz/3 \n\n// <1073741824=> 32MHz/4 \n\n// <805306368=> 32MHz/5 \n\n// <671088640=> 32MHz/6 \n\n// <536870912=> 32MHz/8 \n\n// <402653184=> 32MHz/10 \n\n// <369098752=> 32MHz/11 \n\n// <285212672=> 32MHz/15 \n\n// <268435456=> 32MHz/16 \n\n// <201326592=> 32MHz/21 \n\n// <184549376=> 32MHz/23 \n\n// <142606336=> 32MHz/30 \n\n// <138412032=> 32MHz/31 \n\n// <134217728=> 32MHz/32 \n\n// <100663296=> 32MHz/42 \n\n// <68157440=> 32MHz/63 \n\n// <34340864=> 32MHz/125 \n\n\n\n#ifndef NRFX_I2S_CONFIG_MCK_SETUP\n\n#define NRFX_I2S_CONFIG_MCK_SETUP 536870912\n\n#endif\n\n\n\n// <o> NRFX_I2S_CONFIG_RATIO  - MCK/LRCK ratio\n\n \n\n// <0=> 32x \n\n// <1=> 48x \n\n// <2=> 64x \n\n// <3=> 96x \n\n// <4=> 128x \n\n// <5=> 192x \n\n// <6=> 256x \n\n// <7=> 384x \n\n// <8=> 512x \n\n\n\n#ifndef NRFX_I2S_CONFIG_RATIO\n\n#define NRFX_I2S_CONFIG_RATIO 2000\n\n#endif\n\n\n\n// <o> NRFX_I2S_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_I2S_CONFIG_IRQ_PRIORITY\n\n#define NRFX_I2S_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> NRFX_I2S_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_I2S_CONFIG_LOG_ENABLED\n\n#define NRFX_I2S_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_I2S_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_I2S_CONFIG_LOG_LEVEL\n\n#define NRFX_I2S_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_I2S_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_I2S_CONFIG_INFO_COLOR\n\n#define NRFX_I2S_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_I2S_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_I2S_CONFIG_DEBUG_COLOR\n\n#define NRFX_I2S_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRFX_LPCOMP_ENABLED - nrfx_lpcomp - LPCOMP peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_LPCOMP_ENABLED\n\n#define NRFX_LPCOMP_ENABLED 0\n\n#endif\n\n// <o> NRFX_LPCOMP_CONFIG_REFERENCE  - Reference voltage\n\n \n\n// <0=> Supply 1/8 \n\n// <1=> Supply 2/8 \n\n// <2=> Supply 3/8 \n\n// <3=> Supply 4/8 \n\n// <4=> Supply 5/8 \n\n// <5=> Supply 6/8 \n\n// <6=> Supply 7/8 \n\n// <8=> Supply 1/16 (nRF52) \n\n// <9=> Supply 3/16 (nRF52) \n\n// <10=> Supply 5/16 (nRF52) \n\n// <11=> Supply 7/16 (nRF52) \n\n// <12=> Supply 9/16 (nRF52) \n\n// <13=> Supply 11/16 (nRF52) \n\n// <14=> Supply 13/16 (nRF52) \n\n// <15=> Supply 15/16 (nRF52) \n\n// <7=> External Ref 0 \n\n// <65543=> External Ref 1 \n\n\n\n#ifndef NRFX_LPCOMP_CONFIG_REFERENCE\n\n#define NRFX_LPCOMP_CONFIG_REFERENCE 3\n\n#endif\n\n\n\n// <o> NRFX_LPCOMP_CONFIG_DETECTION  - Detection\n\n \n\n// <0=> Crossing \n\n// <1=> Up \n\n// <2=> Down \n\n\n\n#ifndef NRFX_LPCOMP_CONFIG_DETECTION\n\n#define NRFX_LPCOMP_CONFIG_DETECTION 2\n\n#endif\n\n\n\n// <o> NRFX_LPCOMP_CONFIG_INPUT  - Analog input\n\n \n\n// <0=> 0 \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_LPCOMP_CONFIG_INPUT\n\n#define NRFX_LPCOMP_CONFIG_INPUT 0\n\n#endif\n\n\n\n// <q> NRFX_LPCOMP_CONFIG_HYST  - Hysteresis\n\n \n\n\n\n#ifndef NRFX_LPCOMP_CONFIG_HYST\n\n#define NRFX_LPCOMP_CONFIG_HYST 0\n\n#endif\n\n\n\n// <o> NRFX_LPCOMP_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_LPCOMP_CONFIG_IRQ_PRIORITY\n\n#define NRFX_LPCOMP_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> NRFX_LPCOMP_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_LPCOMP_CONFIG_LOG_ENABLED\n\n#define NRFX_LPCOMP_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_LPCOMP_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_LPCOMP_CONFIG_LOG_LEVEL\n\n#define NRFX_LPCOMP_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_LPCOMP_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_LPCOMP_CONFIG_INFO_COLOR\n\n#define NRFX_LPCOMP_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_LPCOMP_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_LPCOMP_CONFIG_DEBUG_COLOR\n\n#define NRFX_LPCOMP_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRFX_NFCT_ENABLED - nrfx_nfct - NFCT peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_NFCT_ENABLED\n\n#define NRFX_NFCT_ENABLED 0\n\n#endif\n\n// <o> NRFX_NFCT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_NFCT_CONFIG_IRQ_PRIORITY\n\n#define NRFX_NFCT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> NRFX_NFCT_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_NFCT_CONFIG_LOG_ENABLED\n\n#define NRFX_NFCT_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_NFCT_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_NFCT_CONFIG_LOG_LEVEL\n\n#define NRFX_NFCT_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_NFCT_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_NFCT_CONFIG_INFO_COLOR\n\n#define NRFX_NFCT_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_NFCT_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_NFCT_CONFIG_DEBUG_COLOR\n\n#define NRFX_NFCT_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRFX_PDM_ENABLED - nrfx_pdm - PDM peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_PDM_ENABLED\n\n#define NRFX_PDM_ENABLED 0\n\n#endif\n\n// <o> NRFX_PDM_CONFIG_MODE  - Mode\n\n \n\n// <0=> Stereo \n\n// <1=> Mono \n\n\n\n#ifndef NRFX_PDM_CONFIG_MODE\n\n#define NRFX_PDM_CONFIG_MODE 1\n\n#endif\n\n\n\n// <o> NRFX_PDM_CONFIG_EDGE  - Edge\n\n \n\n// <0=> Left falling \n\n// <1=> Left rising \n\n\n\n#ifndef NRFX_PDM_CONFIG_EDGE\n\n#define NRFX_PDM_CONFIG_EDGE 0\n\n#endif\n\n\n\n// <o> NRFX_PDM_CONFIG_CLOCK_FREQ  - Clock frequency\n\n \n\n// <134217728=> 1000k \n\n// <138412032=> 1032k (default) \n\n// <142606336=> 1067k \n\n\n\n#ifndef NRFX_PDM_CONFIG_CLOCK_FREQ\n\n#define NRFX_PDM_CONFIG_CLOCK_FREQ 138412032\n\n#endif\n\n\n\n// <o> NRFX_PDM_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_PDM_CONFIG_IRQ_PRIORITY\n\n#define NRFX_PDM_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> NRFX_PDM_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_PDM_CONFIG_LOG_ENABLED\n\n#define NRFX_PDM_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_PDM_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_PDM_CONFIG_LOG_LEVEL\n\n#define NRFX_PDM_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_PDM_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_PDM_CONFIG_INFO_COLOR\n\n#define NRFX_PDM_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_PDM_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_PDM_CONFIG_DEBUG_COLOR\n\n#define NRFX_PDM_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRFX_POWER_ENABLED - nrfx_power - POWER peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_POWER_ENABLED\n\n#define NRFX_POWER_ENABLED 0\n\n#endif\n\n// <o> NRFX_POWER_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_POWER_CONFIG_IRQ_PRIORITY\n\n#define NRFX_POWER_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <q> NRFX_POWER_CONFIG_DEFAULT_DCDCEN  - The default configuration of main DCDC regulator\n\n \n\n\n\n// <i> This settings means only that components for DCDC regulator are installed and it can be enabled.\n\n\n\n#ifndef NRFX_POWER_CONFIG_DEFAULT_DCDCEN\n\n#define NRFX_POWER_CONFIG_DEFAULT_DCDCEN 0\n\n#endif\n\n\n\n// <q> NRFX_POWER_CONFIG_DEFAULT_DCDCENHV  - The default configuration of High Voltage DCDC regulator\n\n \n\n\n\n// <i> This settings means only that components for DCDC regulator are installed and it can be enabled.\n\n\n\n#ifndef NRFX_POWER_CONFIG_DEFAULT_DCDCENHV\n\n#define NRFX_POWER_CONFIG_DEFAULT_DCDCENHV 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRFX_PPI_ENABLED - nrfx_ppi - PPI peripheral allocator\n\n//==========================================================\n\n#ifndef NRFX_PPI_ENABLED\n\n#define NRFX_PPI_ENABLED 0\n\n#endif\n\n// <e> NRFX_PPI_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_PPI_CONFIG_LOG_ENABLED\n\n#define NRFX_PPI_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_PPI_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_PPI_CONFIG_LOG_LEVEL\n\n#define NRFX_PPI_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_PPI_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_PPI_CONFIG_INFO_COLOR\n\n#define NRFX_PPI_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_PPI_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_PPI_CONFIG_DEBUG_COLOR\n\n#define NRFX_PPI_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRFX_PRS_ENABLED - nrfx_prs - Peripheral Resource Sharing module\n\n//==========================================================\n\n#ifndef NRFX_PRS_ENABLED\n\n#define NRFX_PRS_ENABLED 1\n\n#endif\n\n// <q> NRFX_PRS_BOX_0_ENABLED  - Enables box 0 in the module.\n\n \n\n\n\n#ifndef NRFX_PRS_BOX_0_ENABLED\n\n#define NRFX_PRS_BOX_0_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_PRS_BOX_1_ENABLED  - Enables box 1 in the module.\n\n \n\n\n\n#ifndef NRFX_PRS_BOX_1_ENABLED\n\n#define NRFX_PRS_BOX_1_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_PRS_BOX_2_ENABLED  - Enables box 2 in the module.\n\n \n\n\n\n#ifndef NRFX_PRS_BOX_2_ENABLED\n\n#define NRFX_PRS_BOX_2_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_PRS_BOX_3_ENABLED  - Enables box 3 in the module.\n\n \n\n\n\n#ifndef NRFX_PRS_BOX_3_ENABLED\n\n#define NRFX_PRS_BOX_3_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_PRS_BOX_4_ENABLED  - Enables box 4 in the module.\n\n \n\n\n\n#ifndef NRFX_PRS_BOX_4_ENABLED\n\n#define NRFX_PRS_BOX_4_ENABLED 1\n\n#endif\n\n\n\n// <e> NRFX_PRS_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_PRS_CONFIG_LOG_ENABLED\n\n#define NRFX_PRS_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_PRS_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_PRS_CONFIG_LOG_LEVEL\n\n#define NRFX_PRS_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_PRS_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_PRS_CONFIG_INFO_COLOR\n\n#define NRFX_PRS_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_PRS_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_PRS_CONFIG_DEBUG_COLOR\n\n#define NRFX_PRS_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRFX_PWM_ENABLED - nrfx_pwm - PWM peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_PWM_ENABLED\n\n#define NRFX_PWM_ENABLED 0\n\n#endif\n\n// <q> NRFX_PWM0_ENABLED  - Enable PWM0 instance\n\n \n\n\n\n#ifndef NRFX_PWM0_ENABLED\n\n#define NRFX_PWM0_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_PWM1_ENABLED  - Enable PWM1 instance\n\n \n\n\n\n#ifndef NRFX_PWM1_ENABLED\n\n#define NRFX_PWM1_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_PWM2_ENABLED  - Enable PWM2 instance\n\n \n\n\n\n#ifndef NRFX_PWM2_ENABLED\n\n#define NRFX_PWM2_ENABLED 0\n\n#endif\n\n\n\n// <o> NRFX_PWM_DEFAULT_CONFIG_OUT0_PIN - Out0 pin  <0-31> \n\n\n\n\n\n#ifndef NRFX_PWM_DEFAULT_CONFIG_OUT0_PIN\n\n#define NRFX_PWM_DEFAULT_CONFIG_OUT0_PIN 31\n\n#endif\n\n\n\n// <o> NRFX_PWM_DEFAULT_CONFIG_OUT1_PIN - Out1 pin  <0-31> \n\n\n\n\n\n#ifndef NRFX_PWM_DEFAULT_CONFIG_OUT1_PIN\n\n#define NRFX_PWM_DEFAULT_CONFIG_OUT1_PIN 31\n\n#endif\n\n\n\n// <o> NRFX_PWM_DEFAULT_CONFIG_OUT2_PIN - Out2 pin  <0-31> \n\n\n\n\n\n#ifndef NRFX_PWM_DEFAULT_CONFIG_OUT2_PIN\n\n#define NRFX_PWM_DEFAULT_CONFIG_OUT2_PIN 31\n\n#endif\n\n\n\n// <o> NRFX_PWM_DEFAULT_CONFIG_OUT3_PIN - Out3 pin  <0-31> \n\n\n\n\n\n#ifndef NRFX_PWM_DEFAULT_CONFIG_OUT3_PIN\n\n#define NRFX_PWM_DEFAULT_CONFIG_OUT3_PIN 31\n\n#endif\n\n\n\n// <o> NRFX_PWM_DEFAULT_CONFIG_BASE_CLOCK  - Base clock\n\n \n\n// <0=> 16 MHz \n\n// <1=> 8 MHz \n\n// <2=> 4 MHz \n\n// <3=> 2 MHz \n\n// <4=> 1 MHz \n\n// <5=> 500 kHz \n\n// <6=> 250 kHz \n\n// <7=> 125 kHz \n\n\n\n#ifndef NRFX_PWM_DEFAULT_CONFIG_BASE_CLOCK\n\n#define NRFX_PWM_DEFAULT_CONFIG_BASE_CLOCK 4\n\n#endif\n\n\n\n// <o> NRFX_PWM_DEFAULT_CONFIG_COUNT_MODE  - Count mode\n\n \n\n// <0=> Up \n\n// <1=> Up and Down \n\n\n\n#ifndef NRFX_PWM_DEFAULT_CONFIG_COUNT_MODE\n\n#define NRFX_PWM_DEFAULT_CONFIG_COUNT_MODE 0\n\n#endif\n\n\n\n// <o> NRFX_PWM_DEFAULT_CONFIG_TOP_VALUE - Top value \n\n#ifndef NRFX_PWM_DEFAULT_CONFIG_TOP_VALUE\n\n#define NRFX_PWM_DEFAULT_CONFIG_TOP_VALUE 1000\n\n#endif\n\n\n\n// <o> NRFX_PWM_DEFAULT_CONFIG_LOAD_MODE  - Load mode\n\n \n\n// <0=> Common \n\n// <1=> Grouped \n\n// <2=> Individual \n\n// <3=> Waveform \n\n\n\n#ifndef NRFX_PWM_DEFAULT_CONFIG_LOAD_MODE\n\n#define NRFX_PWM_DEFAULT_CONFIG_LOAD_MODE 0\n\n#endif\n\n\n\n// <o> NRFX_PWM_DEFAULT_CONFIG_STEP_MODE  - Step mode\n\n \n\n// <0=> Auto \n\n// <1=> Triggered \n\n\n\n#ifndef NRFX_PWM_DEFAULT_CONFIG_STEP_MODE\n\n#define NRFX_PWM_DEFAULT_CONFIG_STEP_MODE 0\n\n#endif\n\n\n\n// <o> NRFX_PWM_DEFAULT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_PWM_DEFAULT_CONFIG_IRQ_PRIORITY\n\n#define NRFX_PWM_DEFAULT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> NRFX_PWM_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_PWM_CONFIG_LOG_ENABLED\n\n#define NRFX_PWM_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_PWM_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_PWM_CONFIG_LOG_LEVEL\n\n#define NRFX_PWM_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_PWM_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_PWM_CONFIG_INFO_COLOR\n\n#define NRFX_PWM_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_PWM_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_PWM_CONFIG_DEBUG_COLOR\n\n#define NRFX_PWM_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRFX_PWM_NRF52_ANOMALY_109_WORKAROUND_ENABLED - Enables nRF52 Anomaly 109 workaround for PWM.\n\n\n\n// <i> The workaround uses interrupts to wake up the CPU and ensure\n\n// <i> it is active when PWM is about to start a DMA transfer. For\n\n// <i> initial transfer, done when a playback is started via PPI,\n\n// <i> a specific EGU instance is used to generate the interrupt.\n\n// <i> During the playback, the PWM interrupt triggered on SEQEND\n\n// <i> event of a preceding sequence is used to protect the transfer\n\n// <i> done for the next sequence to be played.\n\n//==========================================================\n\n#ifndef NRFX_PWM_NRF52_ANOMALY_109_WORKAROUND_ENABLED\n\n#define NRFX_PWM_NRF52_ANOMALY_109_WORKAROUND_ENABLED 0\n\n#endif\n\n// <o> NRFX_PWM_NRF52_ANOMALY_109_EGU_INSTANCE  - EGU instance used by the nRF52 Anomaly 109 workaround for PWM.\n\n \n\n// <0=> EGU0 \n\n// <1=> EGU1 \n\n// <2=> EGU2 \n\n// <3=> EGU3 \n\n// <4=> EGU4 \n\n// <5=> EGU5 \n\n\n\n#ifndef NRFX_PWM_NRF52_ANOMALY_109_EGU_INSTANCE\n\n#define NRFX_PWM_NRF52_ANOMALY_109_EGU_INSTANCE 5\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRFX_QDEC_ENABLED - nrfx_qdec - QDEC peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_QDEC_ENABLED\n\n#define NRFX_QDEC_ENABLED 0\n\n#endif\n\n// <o> NRFX_QDEC_CONFIG_REPORTPER  - Report period\n\n \n\n// <0=> 10 Samples \n\n// <1=> 40 Samples \n\n// <2=> 80 Samples \n\n// <3=> 120 Samples \n\n// <4=> 160 Samples \n\n// <5=> 200 Samples \n\n// <6=> 240 Samples \n\n// <7=> 280 Samples \n\n\n\n#ifndef NRFX_QDEC_CONFIG_REPORTPER\n\n#define NRFX_QDEC_CONFIG_REPORTPER 0\n\n#endif\n\n\n\n// <o> NRFX_QDEC_CONFIG_SAMPLEPER  - Sample period\n\n \n\n// <0=> 128 us \n\n// <1=> 256 us \n\n// <2=> 512 us \n\n// <3=> 1024 us \n\n// <4=> 2048 us \n\n// <5=> 4096 us \n\n// <6=> 8192 us \n\n// <7=> 16384 us \n\n\n\n#ifndef NRFX_QDEC_CONFIG_SAMPLEPER\n\n#define NRFX_QDEC_CONFIG_SAMPLEPER 7\n\n#endif\n\n\n\n// <o> NRFX_QDEC_CONFIG_PIO_A - A pin  <0-31> \n\n\n\n\n\n#ifndef NRFX_QDEC_CONFIG_PIO_A\n\n#define NRFX_QDEC_CONFIG_PIO_A 31\n\n#endif\n\n\n\n// <o> NRFX_QDEC_CONFIG_PIO_B - B pin  <0-31> \n\n\n\n\n\n#ifndef NRFX_QDEC_CONFIG_PIO_B\n\n#define NRFX_QDEC_CONFIG_PIO_B 31\n\n#endif\n\n\n\n// <o> NRFX_QDEC_CONFIG_PIO_LED - LED pin  <0-31> \n\n\n\n\n\n#ifndef NRFX_QDEC_CONFIG_PIO_LED\n\n#define NRFX_QDEC_CONFIG_PIO_LED 31\n\n#endif\n\n\n\n// <o> NRFX_QDEC_CONFIG_LEDPRE - LED pre \n\n#ifndef NRFX_QDEC_CONFIG_LEDPRE\n\n#define NRFX_QDEC_CONFIG_LEDPRE 511\n\n#endif\n\n\n\n// <o> NRFX_QDEC_CONFIG_LEDPOL  - LED polarity\n\n \n\n// <0=> Active low \n\n// <1=> Active high \n\n\n\n#ifndef NRFX_QDEC_CONFIG_LEDPOL\n\n#define NRFX_QDEC_CONFIG_LEDPOL 1\n\n#endif\n\n\n\n// <q> NRFX_QDEC_CONFIG_DBFEN  - Debouncing enable\n\n \n\n\n\n#ifndef NRFX_QDEC_CONFIG_DBFEN\n\n#define NRFX_QDEC_CONFIG_DBFEN 0\n\n#endif\n\n\n\n// <q> NRFX_QDEC_CONFIG_SAMPLE_INTEN  - Sample ready interrupt enable\n\n \n\n\n\n#ifndef NRFX_QDEC_CONFIG_SAMPLE_INTEN\n\n#define NRFX_QDEC_CONFIG_SAMPLE_INTEN 0\n\n#endif\n\n\n\n// <o> NRFX_QDEC_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_QDEC_CONFIG_IRQ_PRIORITY\n\n#define NRFX_QDEC_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> NRFX_QDEC_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_QDEC_CONFIG_LOG_ENABLED\n\n#define NRFX_QDEC_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_QDEC_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_QDEC_CONFIG_LOG_LEVEL\n\n#define NRFX_QDEC_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_QDEC_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_QDEC_CONFIG_INFO_COLOR\n\n#define NRFX_QDEC_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_QDEC_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_QDEC_CONFIG_DEBUG_COLOR\n\n#define NRFX_QDEC_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRFX_RNG_ENABLED - nrfx_rng - RNG peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_RNG_ENABLED\n\n#define NRFX_RNG_ENABLED 0\n\n#endif\n\n// <q> NRFX_RNG_CONFIG_ERROR_CORRECTION  - Error correction\n\n \n\n\n\n#ifndef NRFX_RNG_CONFIG_ERROR_CORRECTION\n\n#define NRFX_RNG_CONFIG_ERROR_CORRECTION 1\n\n#endif\n\n\n\n// <o> NRFX_RNG_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_RNG_CONFIG_IRQ_PRIORITY\n\n#define NRFX_RNG_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> NRFX_RNG_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_RNG_CONFIG_LOG_ENABLED\n\n#define NRFX_RNG_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_RNG_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_RNG_CONFIG_LOG_LEVEL\n\n#define NRFX_RNG_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_RNG_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_RNG_CONFIG_INFO_COLOR\n\n#define NRFX_RNG_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_RNG_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_RNG_CONFIG_DEBUG_COLOR\n\n#define NRFX_RNG_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRFX_RTC_ENABLED - nrfx_rtc - RTC peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_RTC_ENABLED\n\n#define NRFX_RTC_ENABLED 0\n\n#endif\n\n// <q> NRFX_RTC0_ENABLED  - Enable RTC0 instance\n\n \n\n\n\n#ifndef NRFX_RTC0_ENABLED\n\n#define NRFX_RTC0_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_RTC1_ENABLED  - Enable RTC1 instance\n\n \n\n\n\n#ifndef NRFX_RTC1_ENABLED\n\n#define NRFX_RTC1_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_RTC2_ENABLED  - Enable RTC2 instance\n\n \n\n\n\n#ifndef NRFX_RTC2_ENABLED\n\n#define NRFX_RTC2_ENABLED 0\n\n#endif\n\n\n\n// <o> NRFX_RTC_MAXIMUM_LATENCY_US - Maximum possible time[us] in highest priority interrupt \n\n#ifndef NRFX_RTC_MAXIMUM_LATENCY_US\n\n#define NRFX_RTC_MAXIMUM_LATENCY_US 2000\n\n#endif\n\n\n\n// <o> NRFX_RTC_DEFAULT_CONFIG_FREQUENCY - Frequency  <16-32768> \n\n\n\n\n\n#ifndef NRFX_RTC_DEFAULT_CONFIG_FREQUENCY\n\n#define NRFX_RTC_DEFAULT_CONFIG_FREQUENCY 32768\n\n#endif\n\n\n\n// <q> NRFX_RTC_DEFAULT_CONFIG_RELIABLE  - Ensures safe compare event triggering\n\n \n\n\n\n#ifndef NRFX_RTC_DEFAULT_CONFIG_RELIABLE\n\n#define NRFX_RTC_DEFAULT_CONFIG_RELIABLE 0\n\n#endif\n\n\n\n// <o> NRFX_RTC_DEFAULT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_RTC_DEFAULT_CONFIG_IRQ_PRIORITY\n\n#define NRFX_RTC_DEFAULT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> NRFX_RTC_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_RTC_CONFIG_LOG_ENABLED\n\n#define NRFX_RTC_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_RTC_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_RTC_CONFIG_LOG_LEVEL\n\n#define NRFX_RTC_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_RTC_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_RTC_CONFIG_INFO_COLOR\n\n#define NRFX_RTC_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_RTC_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_RTC_CONFIG_DEBUG_COLOR\n\n#define NRFX_RTC_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRFX_SAADC_ENABLED - nrfx_saadc - SAADC peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_SAADC_ENABLED\n\n#define NRFX_SAADC_ENABLED 0\n\n#endif\n\n// <o> NRFX_SAADC_CONFIG_RESOLUTION  - Resolution\n\n \n\n// <0=> 8 bit \n\n// <1=> 10 bit \n\n// <2=> 12 bit \n\n// <3=> 14 bit \n\n\n\n#ifndef NRFX_SAADC_CONFIG_RESOLUTION\n\n#define NRFX_SAADC_CONFIG_RESOLUTION 1\n\n#endif\n\n\n\n// <o> NRFX_SAADC_CONFIG_OVERSAMPLE  - Sample period\n\n \n\n// <0=> Disabled \n\n// <1=> 2x \n\n// <2=> 4x \n\n// <3=> 8x \n\n// <4=> 16x \n\n// <5=> 32x \n\n// <6=> 64x \n\n// <7=> 128x \n\n// <8=> 256x \n\n\n\n#ifndef NRFX_SAADC_CONFIG_OVERSAMPLE\n\n#define NRFX_SAADC_CONFIG_OVERSAMPLE 0\n\n#endif\n\n\n\n// <q> NRFX_SAADC_CONFIG_LP_MODE  - Enabling low power mode\n\n \n\n\n\n#ifndef NRFX_SAADC_CONFIG_LP_MODE\n\n#define NRFX_SAADC_CONFIG_LP_MODE 0\n\n#endif\n\n\n\n// <o> NRFX_SAADC_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_SAADC_CONFIG_IRQ_PRIORITY\n\n#define NRFX_SAADC_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> NRFX_SAADC_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_SAADC_CONFIG_LOG_ENABLED\n\n#define NRFX_SAADC_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_SAADC_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_SAADC_CONFIG_LOG_LEVEL\n\n#define NRFX_SAADC_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_SAADC_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_SAADC_CONFIG_INFO_COLOR\n\n#define NRFX_SAADC_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_SAADC_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_SAADC_CONFIG_DEBUG_COLOR\n\n#define NRFX_SAADC_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRFX_SPIM_ENABLED - nrfx_spim - SPIM peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_SPIM_ENABLED\n\n#define NRFX_SPIM_ENABLED 0\n\n#endif\n\n// <q> NRFX_SPIM0_ENABLED  - Enable SPIM0 instance\n\n \n\n\n\n#ifndef NRFX_SPIM0_ENABLED\n\n#define NRFX_SPIM0_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_SPIM1_ENABLED  - Enable SPIM1 instance\n\n \n\n\n\n#ifndef NRFX_SPIM1_ENABLED\n\n#define NRFX_SPIM1_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_SPIM2_ENABLED  - Enable SPIM2 instance\n\n \n\n\n\n#ifndef NRFX_SPIM2_ENABLED\n\n#define NRFX_SPIM2_ENABLED 0\n\n#endif\n\n\n\n// <o> NRFX_SPIM_MISO_PULL_CFG  - MISO pin pull configuration.\n\n \n\n// <0=> NRF_GPIO_PIN_NOPULL \n\n// <1=> NRF_GPIO_PIN_PULLDOWN \n\n// <3=> NRF_GPIO_PIN_PULLUP \n\n\n\n#ifndef NRFX_SPIM_MISO_PULL_CFG\n\n#define NRFX_SPIM_MISO_PULL_CFG 1\n\n#endif\n\n\n\n// <o> NRFX_SPIM_DEFAULT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_SPIM_DEFAULT_CONFIG_IRQ_PRIORITY\n\n#define NRFX_SPIM_DEFAULT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> NRFX_SPIM_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_SPIM_CONFIG_LOG_ENABLED\n\n#define NRFX_SPIM_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_SPIM_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_SPIM_CONFIG_LOG_LEVEL\n\n#define NRFX_SPIM_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_SPIM_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_SPIM_CONFIG_INFO_COLOR\n\n#define NRFX_SPIM_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_SPIM_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_SPIM_CONFIG_DEBUG_COLOR\n\n#define NRFX_SPIM_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <q> NRFX_SPIM_NRF52_ANOMALY_109_WORKAROUND_ENABLED  - Enables nRF52 anomaly 109 workaround for SPIM.\n\n \n\n\n\n// <i> The workaround uses interrupts to wake up the CPU by catching\n\n// <i> a start event of zero-length transmission to start the clock. This \n\n// <i> ensures that the DMA transfer will be executed without issues and\n\n// <i> that the proper transfer will be started. See more in the Errata \n\n// <i> document or Anomaly 109 Addendum located at \n\n// <i> https://infocenter.nordicsemi.com/\n\n\n\n#ifndef NRFX_SPIM_NRF52_ANOMALY_109_WORKAROUND_ENABLED\n\n#define NRFX_SPIM_NRF52_ANOMALY_109_WORKAROUND_ENABLED 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRFX_SPIS_ENABLED - nrfx_spis - SPIS peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_SPIS_ENABLED\n\n#define NRFX_SPIS_ENABLED 0\n\n#endif\n\n// <q> NRFX_SPIS0_ENABLED  - Enable SPIS0 instance\n\n \n\n\n\n#ifndef NRFX_SPIS0_ENABLED\n\n#define NRFX_SPIS0_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_SPIS1_ENABLED  - Enable SPIS1 instance\n\n \n\n\n\n#ifndef NRFX_SPIS1_ENABLED\n\n#define NRFX_SPIS1_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_SPIS2_ENABLED  - Enable SPIS2 instance\n\n \n\n\n\n#ifndef NRFX_SPIS2_ENABLED\n\n#define NRFX_SPIS2_ENABLED 0\n\n#endif\n\n\n\n// <o> NRFX_SPIS_DEFAULT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_SPIS_DEFAULT_CONFIG_IRQ_PRIORITY\n\n#define NRFX_SPIS_DEFAULT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <o> NRFX_SPIS_DEFAULT_DEF - SPIS default DEF character  <0-255> \n\n\n\n\n\n#ifndef NRFX_SPIS_DEFAULT_DEF\n\n#define NRFX_SPIS_DEFAULT_DEF 255\n\n#endif\n\n\n\n// <o> NRFX_SPIS_DEFAULT_ORC - SPIS default ORC character  <0-255> \n\n\n\n\n\n#ifndef NRFX_SPIS_DEFAULT_ORC\n\n#define NRFX_SPIS_DEFAULT_ORC 255\n\n#endif\n\n\n\n// <e> NRFX_SPIS_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_SPIS_CONFIG_LOG_ENABLED\n\n#define NRFX_SPIS_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_SPIS_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_SPIS_CONFIG_LOG_LEVEL\n\n#define NRFX_SPIS_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_SPIS_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_SPIS_CONFIG_INFO_COLOR\n\n#define NRFX_SPIS_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_SPIS_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_SPIS_CONFIG_DEBUG_COLOR\n\n#define NRFX_SPIS_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <q> NRFX_SPIS_NRF52_ANOMALY_109_WORKAROUND_ENABLED  - Enables nRF52 Anomaly 109 workaround for SPIS.\n\n \n\n\n\n// <i> The workaround uses a GPIOTE channel to generate interrupts\n\n// <i> on falling edges detected on the CSN line. This will make\n\n// <i> the CPU active for the moment when SPIS starts DMA transfers,\n\n// <i> and this way the transfers will be protected.\n\n// <i> This workaround uses GPIOTE driver, so this driver must be\n\n// <i> enabled as well.\n\n\n\n#ifndef NRFX_SPIS_NRF52_ANOMALY_109_WORKAROUND_ENABLED\n\n#define NRFX_SPIS_NRF52_ANOMALY_109_WORKAROUND_ENABLED 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRFX_SPI_ENABLED - nrfx_spi - SPI peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_SPI_ENABLED\n\n#define NRFX_SPI_ENABLED 0\n\n#endif\n\n// <q> NRFX_SPI0_ENABLED  - Enable SPI0 instance\n\n \n\n\n\n#ifndef NRFX_SPI0_ENABLED\n\n#define NRFX_SPI0_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_SPI1_ENABLED  - Enable SPI1 instance\n\n \n\n\n\n#ifndef NRFX_SPI1_ENABLED\n\n#define NRFX_SPI1_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_SPI2_ENABLED  - Enable SPI2 instance\n\n \n\n\n\n#ifndef NRFX_SPI2_ENABLED\n\n#define NRFX_SPI2_ENABLED 0\n\n#endif\n\n\n\n// <o> NRFX_SPI_MISO_PULL_CFG  - MISO pin pull configuration.\n\n \n\n// <0=> NRF_GPIO_PIN_NOPULL \n\n// <1=> NRF_GPIO_PIN_PULLDOWN \n\n// <3=> NRF_GPIO_PIN_PULLUP \n\n\n\n#ifndef NRFX_SPI_MISO_PULL_CFG\n\n#define NRFX_SPI_MISO_PULL_CFG 1\n\n#endif\n\n\n\n// <o> NRFX_SPI_DEFAULT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_SPI_DEFAULT_CONFIG_IRQ_PRIORITY\n\n#define NRFX_SPI_DEFAULT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> NRFX_SPI_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_SPI_CONFIG_LOG_ENABLED\n\n#define NRFX_SPI_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_SPI_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_SPI_CONFIG_LOG_LEVEL\n\n#define NRFX_SPI_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_SPI_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_SPI_CONFIG_INFO_COLOR\n\n#define NRFX_SPI_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_SPI_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_SPI_CONFIG_DEBUG_COLOR\n\n#define NRFX_SPI_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRFX_SWI_ENABLED - nrfx_swi - SWI/EGU peripheral allocator\n\n//==========================================================\n\n#ifndef NRFX_SWI_ENABLED\n\n#define NRFX_SWI_ENABLED 0\n\n#endif\n\n// <q> NRFX_EGU_ENABLED  - Enable EGU support\n\n \n\n\n\n#ifndef NRFX_EGU_ENABLED\n\n#define NRFX_EGU_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_SWI0_DISABLED  - Exclude SWI0 from being utilized by the driver\n\n \n\n\n\n#ifndef NRFX_SWI0_DISABLED\n\n#define NRFX_SWI0_DISABLED 0\n\n#endif\n\n\n\n// <q> NRFX_SWI1_DISABLED  - Exclude SWI1 from being utilized by the driver\n\n \n\n\n\n#ifndef NRFX_SWI1_DISABLED\n\n#define NRFX_SWI1_DISABLED 0\n\n#endif\n\n\n\n// <q> NRFX_SWI2_DISABLED  - Exclude SWI2 from being utilized by the driver\n\n \n\n\n\n#ifndef NRFX_SWI2_DISABLED\n\n#define NRFX_SWI2_DISABLED 0\n\n#endif\n\n\n\n// <q> NRFX_SWI3_DISABLED  - Exclude SWI3 from being utilized by the driver\n\n \n\n\n\n#ifndef NRFX_SWI3_DISABLED\n\n#define NRFX_SWI3_DISABLED 0\n\n#endif\n\n\n\n// <q> NRFX_SWI4_DISABLED  - Exclude SWI4 from being utilized by the driver\n\n \n\n\n\n#ifndef NRFX_SWI4_DISABLED\n\n#define NRFX_SWI4_DISABLED 0\n\n#endif\n\n\n\n// <q> NRFX_SWI5_DISABLED  - Exclude SWI5 from being utilized by the driver\n\n \n\n\n\n#ifndef NRFX_SWI5_DISABLED\n\n#define NRFX_SWI5_DISABLED 0\n\n#endif\n\n\n\n// <e> NRFX_SWI_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_SWI_CONFIG_LOG_ENABLED\n\n#define NRFX_SWI_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_SWI_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_SWI_CONFIG_LOG_LEVEL\n\n#define NRFX_SWI_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_SWI_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_SWI_CONFIG_INFO_COLOR\n\n#define NRFX_SWI_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_SWI_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_SWI_CONFIG_DEBUG_COLOR\n\n#define NRFX_SWI_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRFX_TIMER_ENABLED - nrfx_timer - TIMER periperal driver\n\n//==========================================================\n\n#ifndef NRFX_TIMER_ENABLED\n\n#define NRFX_TIMER_ENABLED 0\n\n#endif\n\n// <q> NRFX_TIMER0_ENABLED  - Enable TIMER0 instance\n\n \n\n\n\n#ifndef NRFX_TIMER0_ENABLED\n\n#define NRFX_TIMER0_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_TIMER1_ENABLED  - Enable TIMER1 instance\n\n \n\n\n\n#ifndef NRFX_TIMER1_ENABLED\n\n#define NRFX_TIMER1_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_TIMER2_ENABLED  - Enable TIMER2 instance\n\n \n\n\n\n#ifndef NRFX_TIMER2_ENABLED\n\n#define NRFX_TIMER2_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_TIMER3_ENABLED  - Enable TIMER3 instance\n\n \n\n\n\n#ifndef NRFX_TIMER3_ENABLED\n\n#define NRFX_TIMER3_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_TIMER4_ENABLED  - Enable TIMER4 instance\n\n \n\n\n\n#ifndef NRFX_TIMER4_ENABLED\n\n#define NRFX_TIMER4_ENABLED 0\n\n#endif\n\n\n\n// <o> NRFX_TIMER_DEFAULT_CONFIG_FREQUENCY  - Timer frequency if in Timer mode\n\n \n\n// <0=> 16 MHz \n\n// <1=> 8 MHz \n\n// <2=> 4 MHz \n\n// <3=> 2 MHz \n\n// <4=> 1 MHz \n\n// <5=> 500 kHz \n\n// <6=> 250 kHz \n\n// <7=> 125 kHz \n\n// <8=> 62.5 kHz \n\n// <9=> 31.25 kHz \n\n\n\n#ifndef NRFX_TIMER_DEFAULT_CONFIG_FREQUENCY\n\n#define NRFX_TIMER_DEFAULT_CONFIG_FREQUENCY 0\n\n#endif\n\n\n\n// <o> NRFX_TIMER_DEFAULT_CONFIG_MODE  - Timer mode or operation\n\n \n\n// <0=> Timer \n\n// <1=> Counter \n\n\n\n#ifndef NRFX_TIMER_DEFAULT_CONFIG_MODE\n\n#define NRFX_TIMER_DEFAULT_CONFIG_MODE 0\n\n#endif\n\n\n\n// <o> NRFX_TIMER_DEFAULT_CONFIG_BIT_WIDTH  - Timer counter bit width\n\n \n\n// <0=> 16 bit \n\n// <1=> 8 bit \n\n// <2=> 24 bit \n\n// <3=> 32 bit \n\n\n\n#ifndef NRFX_TIMER_DEFAULT_CONFIG_BIT_WIDTH\n\n#define NRFX_TIMER_DEFAULT_CONFIG_BIT_WIDTH 0\n\n#endif\n\n\n\n// <o> NRFX_TIMER_DEFAULT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_TIMER_DEFAULT_CONFIG_IRQ_PRIORITY\n\n#define NRFX_TIMER_DEFAULT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> NRFX_TIMER_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_TIMER_CONFIG_LOG_ENABLED\n\n#define NRFX_TIMER_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_TIMER_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_TIMER_CONFIG_LOG_LEVEL\n\n#define NRFX_TIMER_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_TIMER_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_TIMER_CONFIG_INFO_COLOR\n\n#define NRFX_TIMER_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_TIMER_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_TIMER_CONFIG_DEBUG_COLOR\n\n#define NRFX_TIMER_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRFX_TWIM_ENABLED - nrfx_twim - TWIM peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_TWIM_ENABLED\n\n#define NRFX_TWIM_ENABLED 0\n\n#endif\n\n// <q> NRFX_TWIM0_ENABLED  - Enable TWIM0 instance\n\n \n\n\n\n#ifndef NRFX_TWIM0_ENABLED\n\n#define NRFX_TWIM0_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_TWIM1_ENABLED  - Enable TWIM1 instance\n\n \n\n\n\n#ifndef NRFX_TWIM1_ENABLED\n\n#define NRFX_TWIM1_ENABLED 0\n\n#endif\n\n\n\n// <o> NRFX_TWIM_DEFAULT_CONFIG_FREQUENCY  - Frequency\n\n \n\n// <26738688=> 100k \n\n// <67108864=> 250k \n\n// <104857600=> 400k \n\n\n\n#ifndef NRFX_TWIM_DEFAULT_CONFIG_FREQUENCY\n\n#define NRFX_TWIM_DEFAULT_CONFIG_FREQUENCY 26738688\n\n#endif\n\n\n\n// <q> NRFX_TWIM_DEFAULT_CONFIG_HOLD_BUS_UNINIT  - Enables bus holding after uninit\n\n \n\n\n\n#ifndef NRFX_TWIM_DEFAULT_CONFIG_HOLD_BUS_UNINIT\n\n#define NRFX_TWIM_DEFAULT_CONFIG_HOLD_BUS_UNINIT 0\n\n#endif\n\n\n\n// <o> NRFX_TWIM_DEFAULT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_TWIM_DEFAULT_CONFIG_IRQ_PRIORITY\n\n#define NRFX_TWIM_DEFAULT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> NRFX_TWIM_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_TWIM_CONFIG_LOG_ENABLED\n\n#define NRFX_TWIM_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_TWIM_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_TWIM_CONFIG_LOG_LEVEL\n\n#define NRFX_TWIM_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_TWIM_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_TWIM_CONFIG_INFO_COLOR\n\n#define NRFX_TWIM_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_TWIM_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_TWIM_CONFIG_DEBUG_COLOR\n\n#define NRFX_TWIM_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <q> NRFX_TWIM_NRF52_ANOMALY_109_WORKAROUND_ENABLED  - Enables nRF52 anomaly 109 workaround for TWIM.\n\n \n\n\n\n// <i> The workaround uses interrupts to wake up the CPU by catching\n\n// <i> the start event of zero-frequency transmission, clear the \n\n// <i> peripheral, set desired frequency, start the peripheral, and\n\n// <i> the proper transmission. See more in the Errata document or\n\n// <i> Anomaly 109 Addendum located at https://infocenter.nordicsemi.com/\n\n\n\n#ifndef NRFX_TWIM_NRF52_ANOMALY_109_WORKAROUND_ENABLED\n\n#define NRFX_TWIM_NRF52_ANOMALY_109_WORKAROUND_ENABLED 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRFX_TWIS_ENABLED - nrfx_twis - TWIS peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_TWIS_ENABLED\n\n#define NRFX_TWIS_ENABLED 0\n\n#endif\n\n// <q> NRFX_TWIS0_ENABLED  - Enable TWIS0 instance\n\n \n\n\n\n#ifndef NRFX_TWIS0_ENABLED\n\n#define NRFX_TWIS0_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_TWIS1_ENABLED  - Enable TWIS1 instance\n\n \n\n\n\n#ifndef NRFX_TWIS1_ENABLED\n\n#define NRFX_TWIS1_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_TWIS_ASSUME_INIT_AFTER_RESET_ONLY  - Assume that any instance would be initialized only once\n\n \n\n\n\n// <i> Optimization flag. Registers used by TWIS are shared by other peripherals. Normally, during initialization driver tries to clear all registers to known state before doing the initialization itself. This gives initialization safe procedure, no matter when it would be called. If you activate TWIS only once and do never uninitialize it - set this flag to 1 what gives more optimal code.\n\n\n\n#ifndef NRFX_TWIS_ASSUME_INIT_AFTER_RESET_ONLY\n\n#define NRFX_TWIS_ASSUME_INIT_AFTER_RESET_ONLY 0\n\n#endif\n\n\n\n// <q> NRFX_TWIS_NO_SYNC_MODE  - Remove support for synchronous mode\n\n \n\n\n\n// <i> Synchronous mode would be used in specific situations. And it uses some additional code and data memory to safely process state machine by polling it in status functions. If this functionality is not required it may be disabled to free some resources.\n\n\n\n#ifndef NRFX_TWIS_NO_SYNC_MODE\n\n#define NRFX_TWIS_NO_SYNC_MODE 0\n\n#endif\n\n\n\n// <o> NRFX_TWIS_DEFAULT_CONFIG_ADDR0 - Address0 \n\n#ifndef NRFX_TWIS_DEFAULT_CONFIG_ADDR0\n\n#define NRFX_TWIS_DEFAULT_CONFIG_ADDR0 0\n\n#endif\n\n\n\n// <o> NRFX_TWIS_DEFAULT_CONFIG_ADDR1 - Address1 \n\n#ifndef NRFX_TWIS_DEFAULT_CONFIG_ADDR1\n\n#define NRFX_TWIS_DEFAULT_CONFIG_ADDR1 0\n\n#endif\n\n\n\n// <o> NRFX_TWIS_DEFAULT_CONFIG_SCL_PULL  - SCL pin pull configuration\n\n \n\n// <0=> Disabled \n\n// <1=> Pull down \n\n// <3=> Pull up \n\n\n\n#ifndef NRFX_TWIS_DEFAULT_CONFIG_SCL_PULL\n\n#define NRFX_TWIS_DEFAULT_CONFIG_SCL_PULL 0\n\n#endif\n\n\n\n// <o> NRFX_TWIS_DEFAULT_CONFIG_SDA_PULL  - SDA pin pull configuration\n\n \n\n// <0=> Disabled \n\n// <1=> Pull down \n\n// <3=> Pull up \n\n\n\n#ifndef NRFX_TWIS_DEFAULT_CONFIG_SDA_PULL\n\n#define NRFX_TWIS_DEFAULT_CONFIG_SDA_PULL 0\n\n#endif\n\n\n\n// <o> NRFX_TWIS_DEFAULT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_TWIS_DEFAULT_CONFIG_IRQ_PRIORITY\n\n#define NRFX_TWIS_DEFAULT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> NRFX_TWIS_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_TWIS_CONFIG_LOG_ENABLED\n\n#define NRFX_TWIS_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_TWIS_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_TWIS_CONFIG_LOG_LEVEL\n\n#define NRFX_TWIS_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_TWIS_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_TWIS_CONFIG_INFO_COLOR\n\n#define NRFX_TWIS_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_TWIS_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_TWIS_CONFIG_DEBUG_COLOR\n\n#define NRFX_TWIS_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRFX_TWI_ENABLED - nrfx_twi - TWI peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_TWI_ENABLED\n\n#define NRFX_TWI_ENABLED 0\n\n#endif\n\n// <q> NRFX_TWI0_ENABLED  - Enable TWI0 instance\n\n \n\n\n\n#ifndef NRFX_TWI0_ENABLED\n\n#define NRFX_TWI0_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_TWI1_ENABLED  - Enable TWI1 instance\n\n \n\n\n\n#ifndef NRFX_TWI1_ENABLED\n\n#define NRFX_TWI1_ENABLED 0\n\n#endif\n\n\n\n// <o> NRFX_TWI_DEFAULT_CONFIG_FREQUENCY  - Frequency\n\n \n\n// <26738688=> 100k \n\n// <67108864=> 250k \n\n// <104857600=> 400k \n\n\n\n#ifndef NRFX_TWI_DEFAULT_CONFIG_FREQUENCY\n\n#define NRFX_TWI_DEFAULT_CONFIG_FREQUENCY 26738688\n\n#endif\n\n\n\n// <q> NRFX_TWI_DEFAULT_CONFIG_HOLD_BUS_UNINIT  - Enables bus holding after uninit\n\n \n\n\n\n#ifndef NRFX_TWI_DEFAULT_CONFIG_HOLD_BUS_UNINIT\n\n#define NRFX_TWI_DEFAULT_CONFIG_HOLD_BUS_UNINIT 0\n\n#endif\n\n\n\n// <o> NRFX_TWI_DEFAULT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_TWI_DEFAULT_CONFIG_IRQ_PRIORITY\n\n#define NRFX_TWI_DEFAULT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> NRFX_TWI_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_TWI_CONFIG_LOG_ENABLED\n\n#define NRFX_TWI_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_TWI_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_TWI_CONFIG_LOG_LEVEL\n\n#define NRFX_TWI_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_TWI_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_TWI_CONFIG_INFO_COLOR\n\n#define NRFX_TWI_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_TWI_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_TWI_CONFIG_DEBUG_COLOR\n\n#define NRFX_TWI_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRFX_UARTE_ENABLED - nrfx_uarte - UARTE peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_UARTE_ENABLED\n\n#define NRFX_UARTE_ENABLED 1\n\n#endif\n\n// <o> NRFX_UARTE0_ENABLED - Enable UARTE0 instance \n\n#ifndef NRFX_UARTE0_ENABLED\n\n#define NRFX_UARTE0_ENABLED 0\n\n#endif\n\n\n\n// <o> NRFX_UARTE_DEFAULT_CONFIG_HWFC  - Hardware Flow Control\n\n \n\n// <0=> Disabled \n\n// <1=> Enabled \n\n\n\n#ifndef NRFX_UARTE_DEFAULT_CONFIG_HWFC\n\n#define NRFX_UARTE_DEFAULT_CONFIG_HWFC 0\n\n#endif\n\n\n\n// <o> NRFX_UARTE_DEFAULT_CONFIG_PARITY  - Parity\n\n \n\n// <0=> Excluded \n\n// <14=> Included \n\n\n\n#ifndef NRFX_UARTE_DEFAULT_CONFIG_PARITY\n\n#define NRFX_UARTE_DEFAULT_CONFIG_PARITY 0\n\n#endif\n\n\n\n// <o> NRFX_UARTE_DEFAULT_CONFIG_BAUDRATE  - Default Baudrate\n\n \n\n// <323584=> 1200 baud \n\n// <643072=> 2400 baud \n\n// <1290240=> 4800 baud \n\n// <2576384=> 9600 baud \n\n// <3862528=> 14400 baud \n\n// <5152768=> 19200 baud \n\n// <7716864=> 28800 baud \n\n// <8388608=> 31250 baud \n\n// <10289152=> 38400 baud \n\n// <15007744=> 56000 baud \n\n// <15400960=> 57600 baud \n\n// <20615168=> 76800 baud \n\n// <30801920=> 115200 baud \n\n// <61865984=> 230400 baud \n\n// <67108864=> 250000 baud \n\n// <121634816=> 460800 baud \n\n// <251658240=> 921600 baud \n\n// <268435456=> 1000000 baud \n\n\n\n#ifndef NRFX_UARTE_DEFAULT_CONFIG_BAUDRATE\n\n#define NRFX_UARTE_DEFAULT_CONFIG_BAUDRATE 30801920\n\n#endif\n\n\n\n// <o> NRFX_UARTE_DEFAULT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_UARTE_DEFAULT_CONFIG_IRQ_PRIORITY\n\n#define NRFX_UARTE_DEFAULT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> NRFX_UARTE_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_UARTE_CONFIG_LOG_ENABLED\n\n#define NRFX_UARTE_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_UARTE_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_UARTE_CONFIG_LOG_LEVEL\n\n#define NRFX_UARTE_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_UARTE_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_UARTE_CONFIG_INFO_COLOR\n\n#define NRFX_UARTE_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_UARTE_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_UARTE_CONFIG_DEBUG_COLOR\n\n#define NRFX_UARTE_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRFX_UART_ENABLED - nrfx_uart - UART peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_UART_ENABLED\n\n#define NRFX_UART_ENABLED 1\n\n#endif\n\n// <o> NRFX_UART0_ENABLED - Enable UART0 instance \n\n#ifndef NRFX_UART0_ENABLED\n\n#define NRFX_UART0_ENABLED 0\n\n#endif\n\n\n\n// <o> NRFX_UART_DEFAULT_CONFIG_HWFC  - Hardware Flow Control\n\n \n\n// <0=> Disabled \n\n// <1=> Enabled \n\n\n\n#ifndef NRFX_UART_DEFAULT_CONFIG_HWFC\n\n#define NRFX_UART_DEFAULT_CONFIG_HWFC 0\n\n#endif\n\n\n\n// <o> NRFX_UART_DEFAULT_CONFIG_PARITY  - Parity\n\n \n\n// <0=> Excluded \n\n// <14=> Included \n\n\n\n#ifndef NRFX_UART_DEFAULT_CONFIG_PARITY\n\n#define NRFX_UART_DEFAULT_CONFIG_PARITY 0\n\n#endif\n\n\n\n// <o> NRFX_UART_DEFAULT_CONFIG_BAUDRATE  - Default Baudrate\n\n \n\n// <323584=> 1200 baud \n\n// <643072=> 2400 baud \n\n// <1290240=> 4800 baud \n\n// <2576384=> 9600 baud \n\n// <3866624=> 14400 baud \n\n// <5152768=> 19200 baud \n\n// <7729152=> 28800 baud \n\n// <8388608=> 31250 baud \n\n// <10309632=> 38400 baud \n\n// <15007744=> 56000 baud \n\n// <15462400=> 57600 baud \n\n// <20615168=> 76800 baud \n\n// <30924800=> 115200 baud \n\n// <61845504=> 230400 baud \n\n// <67108864=> 250000 baud \n\n// <123695104=> 460800 baud \n\n// <247386112=> 921600 baud \n\n// <268435456=> 1000000 baud \n\n\n\n#ifndef NRFX_UART_DEFAULT_CONFIG_BAUDRATE\n\n#define NRFX_UART_DEFAULT_CONFIG_BAUDRATE 30924800\n\n#endif\n\n\n\n// <o> NRFX_UART_DEFAULT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_UART_DEFAULT_CONFIG_IRQ_PRIORITY\n\n#define NRFX_UART_DEFAULT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> NRFX_UART_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_UART_CONFIG_LOG_ENABLED\n\n#define NRFX_UART_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_UART_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_UART_CONFIG_LOG_LEVEL\n\n#define NRFX_UART_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_UART_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_UART_CONFIG_INFO_COLOR\n\n#define NRFX_UART_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_UART_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_UART_CONFIG_DEBUG_COLOR\n\n#define NRFX_UART_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRFX_WDT_ENABLED - nrfx_wdt - WDT peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_WDT_ENABLED\n\n#define NRFX_WDT_ENABLED 0\n\n#endif\n\n// <o> NRFX_WDT_CONFIG_BEHAVIOUR  - WDT behavior in CPU SLEEP or HALT mode\n\n \n\n// <1=> Run in SLEEP, Pause in HALT \n\n// <8=> Pause in SLEEP, Run in HALT \n\n// <9=> Run in SLEEP and HALT \n\n// <0=> Pause in SLEEP and HALT \n\n\n\n#ifndef NRFX_WDT_CONFIG_BEHAVIOUR\n\n#define NRFX_WDT_CONFIG_BEHAVIOUR 1\n\n#endif\n\n\n\n// <o> NRFX_WDT_CONFIG_RELOAD_VALUE - Reload value in ms  <1-131072000> \n\n\n\n\n\n#ifndef NRFX_WDT_CONFIG_RELOAD_VALUE\n\n#define NRFX_WDT_CONFIG_RELOAD_VALUE 2000\n\n#endif\n\n\n\n// <o> NRFX_WDT_CONFIG_NO_IRQ  - Remove WDT IRQ handling from WDT driver\n\n \n\n// <0=> Include WDT IRQ handling \n\n// <1=> Remove WDT IRQ handling \n\n\n\n#ifndef NRFX_WDT_CONFIG_NO_IRQ\n\n#define NRFX_WDT_CONFIG_NO_IRQ 0\n\n#endif\n\n\n\n// <o> NRFX_WDT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_WDT_CONFIG_IRQ_PRIORITY\n\n#define NRFX_WDT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> NRFX_WDT_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_WDT_CONFIG_LOG_ENABLED\n\n#define NRFX_WDT_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_WDT_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_WDT_CONFIG_LOG_LEVEL\n\n#define NRFX_WDT_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_WDT_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_WDT_CONFIG_INFO_COLOR\n\n#define NRFX_WDT_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_WDT_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_WDT_CONFIG_DEBUG_COLOR\n\n#define NRFX_WDT_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRF_CLOCK_ENABLED - nrf_drv_clock - CLOCK peripheral driver - legacy layer\n\n//==========================================================\n\n#ifndef NRF_CLOCK_ENABLED\n\n#define NRF_CLOCK_ENABLED 1\n\n#endif\n\n// <o> CLOCK_CONFIG_LF_SRC  - LF Clock Source\n\n \n\n// <0=> RC \n\n// <1=> XTAL \n\n// <2=> Synth \n\n// <131073=> External Low Swing \n\n// <196609=> External Full Swing \n\n\n\n#ifndef CLOCK_CONFIG_LF_SRC\n\n#define CLOCK_CONFIG_LF_SRC 1\n\n#endif\n\n\n\n// <q> CLOCK_CONFIG_LF_CAL_ENABLED  - Calibration enable for LF Clock Source\n\n \n\n\n\n#ifndef CLOCK_CONFIG_LF_CAL_ENABLED\n\n#define CLOCK_CONFIG_LF_CAL_ENABLED 0\n\n#endif\n\n\n\n// <o> CLOCK_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef CLOCK_CONFIG_IRQ_PRIORITY\n\n#define CLOCK_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> PDM_ENABLED - nrf_drv_pdm - PDM peripheral driver - legacy layer\n\n//==========================================================\n\n#ifndef PDM_ENABLED\n\n#define PDM_ENABLED 0\n\n#endif\n\n// <o> PDM_CONFIG_MODE  - Mode\n\n \n\n// <0=> Stereo \n\n// <1=> Mono \n\n\n\n#ifndef PDM_CONFIG_MODE\n\n#define PDM_CONFIG_MODE 1\n\n#endif\n\n\n\n// <o> PDM_CONFIG_EDGE  - Edge\n\n \n\n// <0=> Left falling \n\n// <1=> Left rising \n\n\n\n#ifndef PDM_CONFIG_EDGE\n\n#define PDM_CONFIG_EDGE 0\n\n#endif\n\n\n\n// <o> PDM_CONFIG_CLOCK_FREQ  - Clock frequency\n\n \n\n// <134217728=> 1000k \n\n// <138412032=> 1032k (default) \n\n// <142606336=> 1067k \n\n\n\n#ifndef PDM_CONFIG_CLOCK_FREQ\n\n#define PDM_CONFIG_CLOCK_FREQ 138412032\n\n#endif\n\n\n\n// <o> PDM_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef PDM_CONFIG_IRQ_PRIORITY\n\n#define PDM_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> POWER_ENABLED - nrf_drv_power - POWER peripheral driver - legacy layer\n\n//==========================================================\n\n#ifndef POWER_ENABLED\n\n#define POWER_ENABLED 0\n\n#endif\n\n// <o> POWER_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef POWER_CONFIG_IRQ_PRIORITY\n\n#define POWER_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <q> POWER_CONFIG_DEFAULT_DCDCEN  - The default configuration of main DCDC regulator\n\n \n\n\n\n// <i> This settings means only that components for DCDC regulator are installed and it can be enabled.\n\n\n\n#ifndef POWER_CONFIG_DEFAULT_DCDCEN\n\n#define POWER_CONFIG_DEFAULT_DCDCEN 0\n\n#endif\n\n\n\n// <q> POWER_CONFIG_DEFAULT_DCDCENHV  - The default configuration of High Voltage DCDC regulator\n\n \n\n\n\n// <i> This settings means only that components for DCDC regulator are installed and it can be enabled.\n\n\n\n#ifndef POWER_CONFIG_DEFAULT_DCDCENHV\n\n#define POWER_CONFIG_DEFAULT_DCDCENHV 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <q> PPI_ENABLED  - nrf_drv_ppi - PPI peripheral driver - legacy layer\n\n \n\n\n\n#ifndef PPI_ENABLED\n\n#define PPI_ENABLED 0\n\n#endif\n\n\n\n// <e> PWM_ENABLED - nrf_drv_pwm - PWM peripheral driver - legacy layer\n\n//==========================================================\n\n#ifndef PWM_ENABLED\n\n#define PWM_ENABLED 0\n\n#endif\n\n// <o> PWM_DEFAULT_CONFIG_OUT0_PIN - Out0 pin  <0-31> \n\n\n\n\n\n#ifndef PWM_DEFAULT_CONFIG_OUT0_PIN\n\n#define PWM_DEFAULT_CONFIG_OUT0_PIN 31\n\n#endif\n\n\n\n// <o> PWM_DEFAULT_CONFIG_OUT1_PIN - Out1 pin  <0-31> \n\n\n\n\n\n#ifndef PWM_DEFAULT_CONFIG_OUT1_PIN\n\n#define PWM_DEFAULT_CONFIG_OUT1_PIN 31\n\n#endif\n\n\n\n// <o> PWM_DEFAULT_CONFIG_OUT2_PIN - Out2 pin  <0-31> \n\n\n\n\n\n#ifndef PWM_DEFAULT_CONFIG_OUT2_PIN\n\n#define PWM_DEFAULT_CONFIG_OUT2_PIN 31\n\n#endif\n\n\n\n// <o> PWM_DEFAULT_CONFIG_OUT3_PIN - Out3 pin  <0-31> \n\n\n\n\n\n#ifndef PWM_DEFAULT_CONFIG_OUT3_PIN\n\n#define PWM_DEFAULT_CONFIG_OUT3_PIN 31\n\n#endif\n\n\n\n// <o> PWM_DEFAULT_CONFIG_BASE_CLOCK  - Base clock\n\n \n\n// <0=> 16 MHz \n\n// <1=> 8 MHz \n\n// <2=> 4 MHz \n\n// <3=> 2 MHz \n\n// <4=> 1 MHz \n\n// <5=> 500 kHz \n\n// <6=> 250 kHz \n\n// <7=> 125 kHz \n\n\n\n#ifndef PWM_DEFAULT_CONFIG_BASE_CLOCK\n\n#define PWM_DEFAULT_CONFIG_BASE_CLOCK 4\n\n#endif\n\n\n\n// <o> PWM_DEFAULT_CONFIG_COUNT_MODE  - Count mode\n\n \n\n// <0=> Up \n\n// <1=> Up and Down \n\n\n\n#ifndef PWM_DEFAULT_CONFIG_COUNT_MODE\n\n#define PWM_DEFAULT_CONFIG_COUNT_MODE 0\n\n#endif\n\n\n\n// <o> PWM_DEFAULT_CONFIG_TOP_VALUE - Top value \n\n#ifndef PWM_DEFAULT_CONFIG_TOP_VALUE\n\n#define PWM_DEFAULT_CONFIG_TOP_VALUE 1000\n\n#endif\n\n\n\n// <o> PWM_DEFAULT_CONFIG_LOAD_MODE  - Load mode\n\n \n\n// <0=> Common \n\n// <1=> Grouped \n\n// <2=> Individual \n\n// <3=> Waveform \n\n\n\n#ifndef PWM_DEFAULT_CONFIG_LOAD_MODE\n\n#define PWM_DEFAULT_CONFIG_LOAD_MODE 0\n\n#endif\n\n\n\n// <o> PWM_DEFAULT_CONFIG_STEP_MODE  - Step mode\n\n \n\n// <0=> Auto \n\n// <1=> Triggered \n\n\n\n#ifndef PWM_DEFAULT_CONFIG_STEP_MODE\n\n#define PWM_DEFAULT_CONFIG_STEP_MODE 0\n\n#endif\n\n\n\n// <o> PWM_DEFAULT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef PWM_DEFAULT_CONFIG_IRQ_PRIORITY\n\n#define PWM_DEFAULT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <q> PWM0_ENABLED  - Enable PWM0 instance\n\n \n\n\n\n#ifndef PWM0_ENABLED\n\n#define PWM0_ENABLED 0\n\n#endif\n\n\n\n// <q> PWM1_ENABLED  - Enable PWM1 instance\n\n \n\n\n\n#ifndef PWM1_ENABLED\n\n#define PWM1_ENABLED 0\n\n#endif\n\n\n\n// <q> PWM2_ENABLED  - Enable PWM2 instance\n\n \n\n\n\n#ifndef PWM2_ENABLED\n\n#define PWM2_ENABLED 0\n\n#endif\n\n\n\n// <e> PWM_NRF52_ANOMALY_109_WORKAROUND_ENABLED - Enables nRF52 Anomaly 109 workaround for PWM.\n\n\n\n// <i> The workaround uses interrupts to wake up the CPU and ensure\n\n// <i> it is active when PWM is about to start a DMA transfer. For\n\n// <i> initial transfer, done when a playback is started via PPI,\n\n// <i> a specific EGU instance is used to generate the interrupt.\n\n// <i> During the playback, the PWM interrupt triggered on SEQEND\n\n// <i> event of a preceding sequence is used to protect the transfer\n\n// <i> done for the next sequence to be played.\n\n//==========================================================\n\n#ifndef PWM_NRF52_ANOMALY_109_WORKAROUND_ENABLED\n\n#define PWM_NRF52_ANOMALY_109_WORKAROUND_ENABLED 0\n\n#endif\n\n// <o> PWM_NRF52_ANOMALY_109_EGU_INSTANCE  - EGU instance used by the nRF52 Anomaly 109 workaround for PWM.\n\n \n\n// <0=> EGU0 \n\n// <1=> EGU1 \n\n// <2=> EGU2 \n\n// <3=> EGU3 \n\n// <4=> EGU4 \n\n// <5=> EGU5 \n\n\n\n#ifndef PWM_NRF52_ANOMALY_109_EGU_INSTANCE\n\n#define PWM_NRF52_ANOMALY_109_EGU_INSTANCE 5\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> QDEC_ENABLED - nrf_drv_qdec - QDEC peripheral driver - legacy layer\n\n//==========================================================\n\n#ifndef QDEC_ENABLED\n\n#define QDEC_ENABLED 0\n\n#endif\n\n// <o> QDEC_CONFIG_REPORTPER  - Report period\n\n \n\n// <0=> 10 Samples \n\n// <1=> 40 Samples \n\n// <2=> 80 Samples \n\n// <3=> 120 Samples \n\n// <4=> 160 Samples \n\n// <5=> 200 Samples \n\n// <6=> 240 Samples \n\n// <7=> 280 Samples \n\n\n\n#ifndef QDEC_CONFIG_REPORTPER\n\n#define QDEC_CONFIG_REPORTPER 0\n\n#endif\n\n\n\n// <o> QDEC_CONFIG_SAMPLEPER  - Sample period\n\n \n\n// <0=> 128 us \n\n// <1=> 256 us \n\n// <2=> 512 us \n\n// <3=> 1024 us \n\n// <4=> 2048 us \n\n// <5=> 4096 us \n\n// <6=> 8192 us \n\n// <7=> 16384 us \n\n\n\n#ifndef QDEC_CONFIG_SAMPLEPER\n\n#define QDEC_CONFIG_SAMPLEPER 7\n\n#endif\n\n\n\n// <o> QDEC_CONFIG_PIO_A - A pin  <0-31> \n\n\n\n\n\n#ifndef QDEC_CONFIG_PIO_A\n\n#define QDEC_CONFIG_PIO_A 31\n\n#endif\n\n\n\n// <o> QDEC_CONFIG_PIO_B - B pin  <0-31> \n\n\n\n\n\n#ifndef QDEC_CONFIG_PIO_B\n\n#define QDEC_CONFIG_PIO_B 31\n\n#endif\n\n\n\n// <o> QDEC_CONFIG_PIO_LED - LED pin  <0-31> \n\n\n\n\n\n#ifndef QDEC_CONFIG_PIO_LED\n\n#define QDEC_CONFIG_PIO_LED 31\n\n#endif\n\n\n\n// <o> QDEC_CONFIG_LEDPRE - LED pre \n\n#ifndef QDEC_CONFIG_LEDPRE\n\n#define QDEC_CONFIG_LEDPRE 511\n\n#endif\n\n\n\n// <o> QDEC_CONFIG_LEDPOL  - LED polarity\n\n \n\n// <0=> Active low \n\n// <1=> Active high \n\n\n\n#ifndef QDEC_CONFIG_LEDPOL\n\n#define QDEC_CONFIG_LEDPOL 1\n\n#endif\n\n\n\n// <q> QDEC_CONFIG_DBFEN  - Debouncing enable\n\n \n\n\n\n#ifndef QDEC_CONFIG_DBFEN\n\n#define QDEC_CONFIG_DBFEN 0\n\n#endif\n\n\n\n// <q> QDEC_CONFIG_SAMPLE_INTEN  - Sample ready interrupt enable\n\n \n\n\n\n#ifndef QDEC_CONFIG_SAMPLE_INTEN\n\n#define QDEC_CONFIG_SAMPLE_INTEN 0\n\n#endif\n\n\n\n// <o> QDEC_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef QDEC_CONFIG_IRQ_PRIORITY\n\n#define QDEC_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> QSPI_ENABLED - nrf_drv_qspi - QSPI peripheral driver - legacy layer\n\n//==========================================================\n\n#ifndef QSPI_ENABLED\n\n#define QSPI_ENABLED 0\n\n#endif\n\n// <o> QSPI_CONFIG_SCK_DELAY - tSHSL, tWHSL and tSHWL in number of 16 MHz periods (62.5 ns).  <0-255> \n\n\n\n\n\n#ifndef QSPI_CONFIG_SCK_DELAY\n\n#define QSPI_CONFIG_SCK_DELAY 1\n\n#endif\n\n\n\n// <o> QSPI_CONFIG_XIP_OFFSET - Address offset in the external memory for Execute in Place operation. \n\n#ifndef QSPI_CONFIG_XIP_OFFSET\n\n#define QSPI_CONFIG_XIP_OFFSET 0\n\n#endif\n\n\n\n// <o> QSPI_CONFIG_READOC  - Number of data lines and opcode used for reading.\n\n \n\n// <0=> FastRead \n\n// <1=> Read2O \n\n// <2=> Read2IO \n\n// <3=> Read4O \n\n// <4=> Read4IO \n\n\n\n#ifndef QSPI_CONFIG_READOC\n\n#define QSPI_CONFIG_READOC 0\n\n#endif\n\n\n\n// <o> QSPI_CONFIG_WRITEOC  - Number of data lines and opcode used for writing.\n\n \n\n// <0=> PP \n\n// <1=> PP2O \n\n// <2=> PP4O \n\n// <3=> PP4IO \n\n\n\n#ifndef QSPI_CONFIG_WRITEOC\n\n#define QSPI_CONFIG_WRITEOC 0\n\n#endif\n\n\n\n// <o> QSPI_CONFIG_ADDRMODE  - Addressing mode.\n\n \n\n// <0=> 24bit \n\n// <1=> 32bit \n\n\n\n#ifndef QSPI_CONFIG_ADDRMODE\n\n#define QSPI_CONFIG_ADDRMODE 0\n\n#endif\n\n\n\n// <o> QSPI_CONFIG_MODE  - SPI mode.\n\n \n\n// <0=> Mode 0 \n\n// <1=> Mode 1 \n\n\n\n#ifndef QSPI_CONFIG_MODE\n\n#define QSPI_CONFIG_MODE 0\n\n#endif\n\n\n\n// <o> QSPI_CONFIG_FREQUENCY  - Frequency divider.\n\n \n\n// <0=> 32MHz/1 \n\n// <1=> 32MHz/2 \n\n// <2=> 32MHz/3 \n\n// <3=> 32MHz/4 \n\n// <4=> 32MHz/5 \n\n// <5=> 32MHz/6 \n\n// <6=> 32MHz/7 \n\n// <7=> 32MHz/8 \n\n// <8=> 32MHz/9 \n\n// <9=> 32MHz/10 \n\n// <10=> 32MHz/11 \n\n// <11=> 32MHz/12 \n\n// <12=> 32MHz/13 \n\n// <13=> 32MHz/14 \n\n// <14=> 32MHz/15 \n\n// <15=> 32MHz/16 \n\n\n\n#ifndef QSPI_CONFIG_FREQUENCY\n\n#define QSPI_CONFIG_FREQUENCY 15\n\n#endif\n\n\n\n// <s> QSPI_PIN_SCK - SCK pin value.\n\n#ifndef QSPI_PIN_SCK\n\n#define QSPI_PIN_SCK NRF_QSPI_PIN_NOT_CONNECTED\n\n#endif\n\n\n\n// <s> QSPI_PIN_CSN - CSN pin value.\n\n#ifndef QSPI_PIN_CSN\n\n#define QSPI_PIN_CSN NRF_QSPI_PIN_NOT_CONNECTED\n\n#endif\n\n\n\n// <s> QSPI_PIN_IO0 - IO0 pin value.\n\n#ifndef QSPI_PIN_IO0\n\n#define QSPI_PIN_IO0 NRF_QSPI_PIN_NOT_CONNECTED\n\n#endif\n\n\n\n// <s> QSPI_PIN_IO1 - IO1 pin value.\n\n#ifndef QSPI_PIN_IO1\n\n#define QSPI_PIN_IO1 NRF_QSPI_PIN_NOT_CONNECTED\n\n#endif\n\n\n\n// <s> QSPI_PIN_IO2 - IO2 pin value.\n\n#ifndef QSPI_PIN_IO2\n\n#define QSPI_PIN_IO2 NRF_QSPI_PIN_NOT_CONNECTED\n\n#endif\n\n\n\n// <s> QSPI_PIN_IO3 - IO3 pin value.\n\n#ifndef QSPI_PIN_IO3\n\n#define QSPI_PIN_IO3 NRF_QSPI_PIN_NOT_CONNECTED\n\n#endif\n\n\n\n// <o> QSPI_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef QSPI_CONFIG_IRQ_PRIORITY\n\n#define QSPI_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> RNG_ENABLED - nrf_drv_rng - RNG peripheral driver - legacy layer\n\n//==========================================================\n\n#ifndef RNG_ENABLED\n\n#define RNG_ENABLED 0\n\n#endif\n\n// <q> RNG_CONFIG_ERROR_CORRECTION  - Error correction\n\n \n\n\n\n#ifndef RNG_CONFIG_ERROR_CORRECTION\n\n#define RNG_CONFIG_ERROR_CORRECTION 1\n\n#endif\n\n\n\n// <o> RNG_CONFIG_POOL_SIZE - Pool size \n\n#ifndef RNG_CONFIG_POOL_SIZE\n\n#define RNG_CONFIG_POOL_SIZE 64\n\n#endif\n\n\n\n// <o> RNG_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef RNG_CONFIG_IRQ_PRIORITY\n\n#define RNG_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> RTC_ENABLED - nrf_drv_rtc - RTC peripheral driver - legacy layer\n\n//==========================================================\n\n#ifndef RTC_ENABLED\n\n#define RTC_ENABLED 0\n\n#endif\n\n// <o> RTC_DEFAULT_CONFIG_FREQUENCY - Frequency  <16-32768> \n\n\n\n\n\n#ifndef RTC_DEFAULT_CONFIG_FREQUENCY\n\n#define RTC_DEFAULT_CONFIG_FREQUENCY 32768\n\n#endif\n\n\n\n// <q> RTC_DEFAULT_CONFIG_RELIABLE  - Ensures safe compare event triggering\n\n \n\n\n\n#ifndef RTC_DEFAULT_CONFIG_RELIABLE\n\n#define RTC_DEFAULT_CONFIG_RELIABLE 0\n\n#endif\n\n\n\n// <o> RTC_DEFAULT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef RTC_DEFAULT_CONFIG_IRQ_PRIORITY\n\n#define RTC_DEFAULT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <q> RTC0_ENABLED  - Enable RTC0 instance\n\n \n\n\n\n#ifndef RTC0_ENABLED\n\n#define RTC0_ENABLED 0\n\n#endif\n\n\n\n// <q> RTC1_ENABLED  - Enable RTC1 instance\n\n \n\n\n\n#ifndef RTC1_ENABLED\n\n#define RTC1_ENABLED 0\n\n#endif\n\n\n\n// <q> RTC2_ENABLED  - Enable RTC2 instance\n\n \n\n\n\n#ifndef RTC2_ENABLED\n\n#define RTC2_ENABLED 0\n\n#endif\n\n\n\n// <o> NRF_MAXIMUM_LATENCY_US - Maximum possible time[us] in highest priority interrupt \n\n#ifndef NRF_MAXIMUM_LATENCY_US\n\n#define NRF_MAXIMUM_LATENCY_US 2000\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> SAADC_ENABLED - nrf_drv_saadc - SAADC peripheral driver - legacy layer\n\n//==========================================================\n\n#ifndef SAADC_ENABLED\n\n#define SAADC_ENABLED 0\n\n#endif\n\n// <o> SAADC_CONFIG_RESOLUTION  - Resolution\n\n \n\n// <0=> 8 bit \n\n// <1=> 10 bit \n\n// <2=> 12 bit \n\n// <3=> 14 bit \n\n\n\n#ifndef SAADC_CONFIG_RESOLUTION\n\n#define SAADC_CONFIG_RESOLUTION 1\n\n#endif\n\n\n\n// <o> SAADC_CONFIG_OVERSAMPLE  - Sample period\n\n \n\n// <0=> Disabled \n\n// <1=> 2x \n\n// <2=> 4x \n\n// <3=> 8x \n\n// <4=> 16x \n\n// <5=> 32x \n\n// <6=> 64x \n\n// <7=> 128x \n\n// <8=> 256x \n\n\n\n#ifndef SAADC_CONFIG_OVERSAMPLE\n\n#define SAADC_CONFIG_OVERSAMPLE 0\n\n#endif\n\n\n\n// <q> SAADC_CONFIG_LP_MODE  - Enabling low power mode\n\n \n\n\n\n#ifndef SAADC_CONFIG_LP_MODE\n\n#define SAADC_CONFIG_LP_MODE 0\n\n#endif\n\n\n\n// <o> SAADC_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef SAADC_CONFIG_IRQ_PRIORITY\n\n#define SAADC_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> SPIS_ENABLED - nrf_drv_spis - SPIS peripheral driver - legacy layer\n\n//==========================================================\n\n#ifndef SPIS_ENABLED\n\n#define SPIS_ENABLED 0\n\n#endif\n\n// <o> SPIS_DEFAULT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef SPIS_DEFAULT_CONFIG_IRQ_PRIORITY\n\n#define SPIS_DEFAULT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <o> SPIS_DEFAULT_MODE  - Mode\n\n \n\n// <0=> MODE_0 \n\n// <1=> MODE_1 \n\n// <2=> MODE_2 \n\n// <3=> MODE_3 \n\n\n\n#ifndef SPIS_DEFAULT_MODE\n\n#define SPIS_DEFAULT_MODE 0\n\n#endif\n\n\n\n// <o> SPIS_DEFAULT_BIT_ORDER  - SPIS default bit order\n\n \n\n// <0=> MSB first \n\n// <1=> LSB first \n\n\n\n#ifndef SPIS_DEFAULT_BIT_ORDER\n\n#define SPIS_DEFAULT_BIT_ORDER 0\n\n#endif\n\n\n\n// <o> SPIS_DEFAULT_DEF - SPIS default DEF character  <0-255> \n\n\n\n\n\n#ifndef SPIS_DEFAULT_DEF\n\n#define SPIS_DEFAULT_DEF 255\n\n#endif\n\n\n\n// <o> SPIS_DEFAULT_ORC - SPIS default ORC character  <0-255> \n\n\n\n\n\n#ifndef SPIS_DEFAULT_ORC\n\n#define SPIS_DEFAULT_ORC 255\n\n#endif\n\n\n\n// <q> SPIS0_ENABLED  - Enable SPIS0 instance\n\n \n\n\n\n#ifndef SPIS0_ENABLED\n\n#define SPIS0_ENABLED 0\n\n#endif\n\n\n\n// <q> SPIS1_ENABLED  - Enable SPIS1 instance\n\n \n\n\n\n#ifndef SPIS1_ENABLED\n\n#define SPIS1_ENABLED 0\n\n#endif\n\n\n\n// <q> SPIS2_ENABLED  - Enable SPIS2 instance\n\n \n\n\n\n#ifndef SPIS2_ENABLED\n\n#define SPIS2_ENABLED 0\n\n#endif\n\n\n\n// <q> SPIS_NRF52_ANOMALY_109_WORKAROUND_ENABLED  - Enables nRF52 Anomaly 109 workaround for SPIS.\n\n \n\n\n\n// <i> The workaround uses a GPIOTE channel to generate interrupts\n\n// <i> on falling edges detected on the CSN line. This will make\n\n// <i> the CPU active for the moment when SPIS starts DMA transfers,\n\n// <i> and this way the transfers will be protected.\n\n// <i> This workaround uses GPIOTE driver, so this driver must be\n\n// <i> enabled as well.\n\n\n\n#ifndef SPIS_NRF52_ANOMALY_109_WORKAROUND_ENABLED\n\n#define SPIS_NRF52_ANOMALY_109_WORKAROUND_ENABLED 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> SPI_ENABLED - nrf_drv_spi - SPI/SPIM peripheral driver - legacy layer\n\n//==========================================================\n\n#ifndef SPI_ENABLED\n\n#define SPI_ENABLED 0\n\n#endif\n\n// <o> SPI_DEFAULT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef SPI_DEFAULT_CONFIG_IRQ_PRIORITY\n\n#define SPI_DEFAULT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <o> NRF_SPI_DRV_MISO_PULLUP_CFG  - MISO PIN pull-up configuration.\n\n \n\n// <0=> NRF_GPIO_PIN_NOPULL \n\n// <1=> NRF_GPIO_PIN_PULLDOWN \n\n// <3=> NRF_GPIO_PIN_PULLUP \n\n\n\n#ifndef NRF_SPI_DRV_MISO_PULLUP_CFG\n\n#define NRF_SPI_DRV_MISO_PULLUP_CFG 1\n\n#endif\n\n\n\n// <e> SPI0_ENABLED - Enable SPI0 instance\n\n//==========================================================\n\n#ifndef SPI0_ENABLED\n\n#define SPI0_ENABLED 0\n\n#endif\n\n// <q> SPI0_USE_EASY_DMA  - Use EasyDMA\n\n \n\n\n\n#ifndef SPI0_USE_EASY_DMA\n\n#define SPI0_USE_EASY_DMA 1\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> SPI1_ENABLED - Enable SPI1 instance\n\n//==========================================================\n\n#ifndef SPI1_ENABLED\n\n#define SPI1_ENABLED 0\n\n#endif\n\n// <q> SPI1_USE_EASY_DMA  - Use EasyDMA\n\n \n\n\n\n#ifndef SPI1_USE_EASY_DMA\n\n#define SPI1_USE_EASY_DMA 1\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> SPI2_ENABLED - Enable SPI2 instance\n\n//==========================================================\n\n#ifndef SPI2_ENABLED\n\n#define SPI2_ENABLED 0\n\n#endif\n\n// <q> SPI2_USE_EASY_DMA  - Use EasyDMA\n\n \n\n\n\n#ifndef SPI2_USE_EASY_DMA\n\n#define SPI2_USE_EASY_DMA 1\n\n#endif\n\n\n\n// </e>\n\n\n\n// <q> SPIM_NRF52_ANOMALY_109_WORKAROUND_ENABLED  - Enables nRF52 anomaly 109 workaround for SPIM.\n\n \n\n\n\n// <i> The workaround uses interrupts to wake up the CPU by catching\n\n// <i> a start event of zero-length transmission to start the clock. This \n\n// <i> ensures that the DMA transfer will be executed without issues and\n\n// <i> that the proper transfer will be started. See more in the Errata \n\n// <i> document or Anomaly 109 Addendum located at \n\n// <i> https://infocenter.nordicsemi.com/\n\n\n\n#ifndef SPIM_NRF52_ANOMALY_109_WORKAROUND_ENABLED\n\n#define SPIM_NRF52_ANOMALY_109_WORKAROUND_ENABLED 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> TIMER_ENABLED - nrf_drv_timer - TIMER periperal driver - legacy layer\n\n//==========================================================\n\n#ifndef TIMER_ENABLED\n\n#define TIMER_ENABLED 0\n\n#endif\n\n// <o> TIMER_DEFAULT_CONFIG_FREQUENCY  - Timer frequency if in Timer mode\n\n \n\n// <0=> 16 MHz \n\n// <1=> 8 MHz \n\n// <2=> 4 MHz \n\n// <3=> 2 MHz \n\n// <4=> 1 MHz \n\n// <5=> 500 kHz \n\n// <6=> 250 kHz \n\n// <7=> 125 kHz \n\n// <8=> 62.5 kHz \n\n// <9=> 31.25 kHz \n\n\n\n#ifndef TIMER_DEFAULT_CONFIG_FREQUENCY\n\n#define TIMER_DEFAULT_CONFIG_FREQUENCY 0\n\n#endif\n\n\n\n// <o> TIMER_DEFAULT_CONFIG_MODE  - Timer mode or operation\n\n \n\n// <0=> Timer \n\n// <1=> Counter \n\n\n\n#ifndef TIMER_DEFAULT_CONFIG_MODE\n\n#define TIMER_DEFAULT_CONFIG_MODE 0\n\n#endif\n\n\n\n// <o> TIMER_DEFAULT_CONFIG_BIT_WIDTH  - Timer counter bit width\n\n \n\n// <0=> 16 bit \n\n// <1=> 8 bit \n\n// <2=> 24 bit \n\n// <3=> 32 bit \n\n\n\n#ifndef TIMER_DEFAULT_CONFIG_BIT_WIDTH\n\n#define TIMER_DEFAULT_CONFIG_BIT_WIDTH 0\n\n#endif\n\n\n\n// <o> TIMER_DEFAULT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef TIMER_DEFAULT_CONFIG_IRQ_PRIORITY\n\n#define TIMER_DEFAULT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <q> TIMER0_ENABLED  - Enable TIMER0 instance\n\n \n\n\n\n#ifndef TIMER0_ENABLED\n\n#define TIMER0_ENABLED 0\n\n#endif\n\n\n\n// <q> TIMER1_ENABLED  - Enable TIMER1 instance\n\n \n\n\n\n#ifndef TIMER1_ENABLED\n\n#define TIMER1_ENABLED 0\n\n#endif\n\n\n\n// <q> TIMER2_ENABLED  - Enable TIMER2 instance\n\n \n\n\n\n#ifndef TIMER2_ENABLED\n\n#define TIMER2_ENABLED 0\n\n#endif\n\n\n\n// <q> TIMER3_ENABLED  - Enable TIMER3 instance\n\n \n\n\n\n#ifndef TIMER3_ENABLED\n\n#define TIMER3_ENABLED 0\n\n#endif\n\n\n\n// <q> TIMER4_ENABLED  - Enable TIMER4 instance\n\n \n\n\n\n#ifndef TIMER4_ENABLED\n\n#define TIMER4_ENABLED 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> TWIS_ENABLED - nrf_drv_twis - TWIS peripheral driver - legacy layer\n\n//==========================================================\n\n#ifndef TWIS_ENABLED\n\n#define TWIS_ENABLED 0\n\n#endif\n\n// <q> TWIS0_ENABLED  - Enable TWIS0 instance\n\n \n\n\n\n#ifndef TWIS0_ENABLED\n\n#define TWIS0_ENABLED 0\n\n#endif\n\n\n\n// <q> TWIS1_ENABLED  - Enable TWIS1 instance\n\n \n\n\n\n#ifndef TWIS1_ENABLED\n\n#define TWIS1_ENABLED 0\n\n#endif\n\n\n\n// <q> TWIS_ASSUME_INIT_AFTER_RESET_ONLY  - Assume that any instance would be initialized only once\n\n \n\n\n\n// <i> Optimization flag. Registers used by TWIS are shared by other peripherals. Normally, during initialization driver tries to clear all registers to known state before doing the initialization itself. This gives initialization safe procedure, no matter when it would be called. If you activate TWIS only once and do never uninitialize it - set this flag to 1 what gives more optimal code.\n\n\n\n#ifndef TWIS_ASSUME_INIT_AFTER_RESET_ONLY\n\n#define TWIS_ASSUME_INIT_AFTER_RESET_ONLY 0\n\n#endif\n\n\n\n// <q> TWIS_NO_SYNC_MODE  - Remove support for synchronous mode\n\n \n\n\n\n// <i> Synchronous mode would be used in specific situations. And it uses some additional code and data memory to safely process state machine by polling it in status functions. If this functionality is not required it may be disabled to free some resources.\n\n\n\n#ifndef TWIS_NO_SYNC_MODE\n\n#define TWIS_NO_SYNC_MODE 0\n\n#endif\n\n\n\n// <o> TWIS_DEFAULT_CONFIG_ADDR0 - Address0 \n\n#ifndef TWIS_DEFAULT_CONFIG_ADDR0\n\n#define TWIS_DEFAULT_CONFIG_ADDR0 0\n\n#endif\n\n\n\n// <o> TWIS_DEFAULT_CONFIG_ADDR1 - Address1 \n\n#ifndef TWIS_DEFAULT_CONFIG_ADDR1\n\n#define TWIS_DEFAULT_CONFIG_ADDR1 0\n\n#endif\n\n\n\n// <o> TWIS_DEFAULT_CONFIG_SCL_PULL  - SCL pin pull configuration\n\n \n\n// <0=> Disabled \n\n// <1=> Pull down \n\n// <3=> Pull up \n\n\n\n#ifndef TWIS_DEFAULT_CONFIG_SCL_PULL\n\n#define TWIS_DEFAULT_CONFIG_SCL_PULL 0\n\n#endif\n\n\n\n// <o> TWIS_DEFAULT_CONFIG_SDA_PULL  - SDA pin pull configuration\n\n \n\n// <0=> Disabled \n\n// <1=> Pull down \n\n// <3=> Pull up \n\n\n\n#ifndef TWIS_DEFAULT_CONFIG_SDA_PULL\n\n#define TWIS_DEFAULT_CONFIG_SDA_PULL 0\n\n#endif\n\n\n\n// <o> TWIS_DEFAULT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef TWIS_DEFAULT_CONFIG_IRQ_PRIORITY\n\n#define TWIS_DEFAULT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> TWI_ENABLED - nrf_drv_twi - TWI/TWIM peripheral driver - legacy layer\n\n//==========================================================\n\n#ifndef TWI_ENABLED\n\n#define TWI_ENABLED 0\n\n#endif\n\n// <o> TWI_DEFAULT_CONFIG_FREQUENCY  - Frequency\n\n \n\n// <26738688=> 100k \n\n// <67108864=> 250k \n\n// <104857600=> 400k \n\n\n\n#ifndef TWI_DEFAULT_CONFIG_FREQUENCY\n\n#define TWI_DEFAULT_CONFIG_FREQUENCY 26738688\n\n#endif\n\n\n\n// <q> TWI_DEFAULT_CONFIG_CLR_BUS_INIT  - Enables bus clearing procedure during init\n\n \n\n\n\n#ifndef TWI_DEFAULT_CONFIG_CLR_BUS_INIT\n\n#define TWI_DEFAULT_CONFIG_CLR_BUS_INIT 0\n\n#endif\n\n\n\n// <q> TWI_DEFAULT_CONFIG_HOLD_BUS_UNINIT  - Enables bus holding after uninit\n\n \n\n\n\n#ifndef TWI_DEFAULT_CONFIG_HOLD_BUS_UNINIT\n\n#define TWI_DEFAULT_CONFIG_HOLD_BUS_UNINIT 0\n\n#endif\n\n\n\n// <o> TWI_DEFAULT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef TWI_DEFAULT_CONFIG_IRQ_PRIORITY\n\n#define TWI_DEFAULT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> TWI0_ENABLED - Enable TWI0 instance\n\n//==========================================================\n\n#ifndef TWI0_ENABLED\n\n#define TWI0_ENABLED 0\n\n#endif\n\n// <q> TWI0_USE_EASY_DMA  - Use EasyDMA (if present)\n\n \n\n\n\n#ifndef TWI0_USE_EASY_DMA\n\n#define TWI0_USE_EASY_DMA 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> TWI1_ENABLED - Enable TWI1 instance\n\n//==========================================================\n\n#ifndef TWI1_ENABLED\n\n#define TWI1_ENABLED 0\n\n#endif\n\n// <q> TWI1_USE_EASY_DMA  - Use EasyDMA (if present)\n\n \n\n\n\n#ifndef TWI1_USE_EASY_DMA\n\n#define TWI1_USE_EASY_DMA 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <q> TWIM_NRF52_ANOMALY_109_WORKAROUND_ENABLED  - Enables nRF52 anomaly 109 workaround for TWIM.\n\n \n\n\n\n// <i> The workaround uses interrupts to wake up the CPU by catching\n\n// <i> the start event of zero-frequency transmission, clear the \n\n// <i> peripheral, set desired frequency, start the peripheral, and\n\n// <i> the proper transmission. See more in the Errata document or\n\n// <i> Anomaly 109 Addendum located at https://infocenter.nordicsemi.com/\n\n\n\n#ifndef TWIM_NRF52_ANOMALY_109_WORKAROUND_ENABLED\n\n#define TWIM_NRF52_ANOMALY_109_WORKAROUND_ENABLED 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> UART_ENABLED - nrf_drv_uart - UART/UARTE peripheral driver - legacy layer\n\n//==========================================================\n\n#ifndef UART_ENABLED\n\n#define UART_ENABLED 1\n\n#endif\n\n// <o> UART_DEFAULT_CONFIG_HWFC  - Hardware Flow Control\n\n \n\n// <0=> Disabled \n\n// <1=> Enabled \n\n\n\n#ifndef UART_DEFAULT_CONFIG_HWFC\n\n#define UART_DEFAULT_CONFIG_HWFC 0\n\n#endif\n\n\n\n// <o> UART_DEFAULT_CONFIG_PARITY  - Parity\n\n \n\n// <0=> Excluded \n\n// <14=> Included \n\n\n\n#ifndef UART_DEFAULT_CONFIG_PARITY\n\n#define UART_DEFAULT_CONFIG_PARITY 0\n\n#endif\n\n\n\n// <o> UART_DEFAULT_CONFIG_BAUDRATE  - Default Baudrate\n\n \n\n// <323584=> 1200 baud \n\n// <643072=> 2400 baud \n\n// <1290240=> 4800 baud \n\n// <2576384=> 9600 baud \n\n// <3862528=> 14400 baud \n\n// <5152768=> 19200 baud \n\n// <7716864=> 28800 baud \n\n// <10289152=> 38400 baud \n\n// <15400960=> 57600 baud \n\n// <20615168=> 76800 baud \n\n// <30801920=> 115200 baud \n\n// <61865984=> 230400 baud \n\n// <67108864=> 250000 baud \n\n// <121634816=> 460800 baud \n\n// <251658240=> 921600 baud \n\n// <268435456=> 1000000 baud \n\n\n\n#ifndef UART_DEFAULT_CONFIG_BAUDRATE\n\n#define UART_DEFAULT_CONFIG_BAUDRATE 30801920\n\n#endif\n\n\n\n// <o> UART_DEFAULT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef UART_DEFAULT_CONFIG_IRQ_PRIORITY\n\n#define UART_DEFAULT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <q> UART_EASY_DMA_SUPPORT  - Driver supporting EasyDMA\n\n \n\n\n\n#ifndef UART_EASY_DMA_SUPPORT\n\n#define UART_EASY_DMA_SUPPORT 1\n\n#endif\n\n\n\n// <q> UART_LEGACY_SUPPORT  - Driver supporting Legacy mode\n\n \n\n\n\n#ifndef UART_LEGACY_SUPPORT\n\n#define UART_LEGACY_SUPPORT 1\n\n#endif\n\n\n\n// <e> UART0_ENABLED - Enable UART0 instance\n\n//==========================================================\n\n#ifndef UART0_ENABLED\n\n#define UART0_ENABLED 1\n\n#endif\n\n// <q> UART0_CONFIG_USE_EASY_DMA  - Default setting for using EasyDMA\n\n \n\n\n\n#ifndef UART0_CONFIG_USE_EASY_DMA\n\n#define UART0_CONFIG_USE_EASY_DMA 1\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> USBD_ENABLED - nrf_drv_usbd - Software Component\n\n//==========================================================\n\n#ifndef USBD_ENABLED\n\n#define USBD_ENABLED 0\n\n#endif\n\n// <o> USBD_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef USBD_CONFIG_IRQ_PRIORITY\n\n#define USBD_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <o> USBD_CONFIG_DMASCHEDULER_MODE  - USBD SMA scheduler working scheme\n\n \n\n// <0=> Prioritized access \n\n// <1=> Round Robin \n\n\n\n#ifndef USBD_CONFIG_DMASCHEDULER_MODE\n\n#define USBD_CONFIG_DMASCHEDULER_MODE 0\n\n#endif\n\n\n\n// <q> USBD_CONFIG_DMASCHEDULER_ISO_BOOST  - Give priority to isochronous transfers\n\n \n\n\n\n// <i> This option gives priority to isochronous transfers.\n\n// <i> Enabling it assures that isochronous transfers are always processed,\n\n// <i> even if multiple other transfers are pending.\n\n// <i> Isochronous endpoints are prioritized before the usbd_dma_scheduler_algorithm\n\n// <i> function is called, so the option is independent of the algorithm chosen.\n\n\n\n#ifndef USBD_CONFIG_DMASCHEDULER_ISO_BOOST\n\n#define USBD_CONFIG_DMASCHEDULER_ISO_BOOST 1\n\n#endif\n\n\n\n// <q> USBD_CONFIG_ISO_IN_ZLP  - Respond to an IN token on ISO IN endpoint with ZLP when no data is ready\n\n \n\n\n\n// <i> If set, ISO IN endpoint will respond to an IN token with ZLP when no data is ready to be sent.\n\n// <i> Else, there will be no response.\n\n// <i> NOTE: This option does not work on Engineering A chip.\n\n\n\n#ifndef USBD_CONFIG_ISO_IN_ZLP\n\n#define USBD_CONFIG_ISO_IN_ZLP 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> WDT_ENABLED - nrf_drv_wdt - WDT peripheral driver - legacy layer\n\n//==========================================================\n\n#ifndef WDT_ENABLED\n\n#define WDT_ENABLED 0\n\n#endif\n\n// <o> WDT_CONFIG_BEHAVIOUR  - WDT behavior in CPU SLEEP or HALT mode\n\n \n\n// <1=> Run in SLEEP, Pause in HALT \n\n// <8=> Pause in SLEEP, Run in HALT \n\n// <9=> Run in SLEEP and HALT \n\n// <0=> Pause in SLEEP and HALT \n\n\n\n#ifndef WDT_CONFIG_BEHAVIOUR\n\n#define WDT_CONFIG_BEHAVIOUR 1\n\n#endif\n\n\n\n// <o> WDT_CONFIG_RELOAD_VALUE - Reload value  <15-4294967295> \n\n\n\n\n\n#ifndef WDT_CONFIG_RELOAD_VALUE\n\n#define WDT_CONFIG_RELOAD_VALUE 2000\n\n#endif\n\n\n\n// <o> WDT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef WDT_CONFIG_IRQ_PRIORITY\n\n#define WDT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// </e>\n\n\n\n// <h> nrfx_qspi - QSPI peripheral driver\n\n\n\n//==========================================================\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> nrfx_usbd - USBD peripheral driver\n\n\n\n//==========================================================\n\n// </h> \n\n//==========================================================\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> nRF_Drivers_External \n\n\n\n//==========================================================\n\n// <q> NRF_TWI_SENSOR_ENABLED  - nrf_twi_sensor - nRF TWI Sensor module\n\n \n\n\n\n#ifndef NRF_TWI_SENSOR_ENABLED\n\n#define NRF_TWI_SENSOR_ENABLED 0\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> nRF_Libraries \n\n\n\n//==========================================================\n\n// <q> APP_FIFO_ENABLED  - app_fifo - Software FIFO implementation\n\n \n\n\n\n#ifndef APP_FIFO_ENABLED\n\n#define APP_FIFO_ENABLED 1\n\n#endif\n\n\n\n// <q> APP_GPIOTE_ENABLED  - app_gpiote - GPIOTE events dispatcher\n\n \n\n\n\n#ifndef APP_GPIOTE_ENABLED\n\n#define APP_GPIOTE_ENABLED 0\n\n#endif\n\n\n\n// <q> APP_PWM_ENABLED  - app_pwm - PWM functionality\n\n \n\n\n\n#ifndef APP_PWM_ENABLED\n\n#define APP_PWM_ENABLED 0\n\n#endif\n\n\n\n// <e> APP_SCHEDULER_ENABLED - app_scheduler - Events scheduler\n\n//==========================================================\n\n#ifndef APP_SCHEDULER_ENABLED\n\n#define APP_SCHEDULER_ENABLED 1\n\n#endif\n\n// <q> APP_SCHEDULER_WITH_PAUSE  - Enabling pause feature\n\n \n\n\n\n#ifndef APP_SCHEDULER_WITH_PAUSE\n\n#define APP_SCHEDULER_WITH_PAUSE 0\n\n#endif\n\n\n\n// <q> APP_SCHEDULER_WITH_PROFILER  - Enabling scheduler profiling\n\n \n\n\n\n#ifndef APP_SCHEDULER_WITH_PROFILER\n\n#define APP_SCHEDULER_WITH_PROFILER 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> APP_SDCARD_ENABLED - app_sdcard - SD/MMC card support using SPI\n\n//==========================================================\n\n#ifndef APP_SDCARD_ENABLED\n\n#define APP_SDCARD_ENABLED 0\n\n#endif\n\n// <o> APP_SDCARD_SPI_INSTANCE  - SPI instance used\n\n \n\n// <0=> 0 \n\n// <1=> 1 \n\n// <2=> 2 \n\n\n\n#ifndef APP_SDCARD_SPI_INSTANCE\n\n#define APP_SDCARD_SPI_INSTANCE 0\n\n#endif\n\n\n\n// <o> APP_SDCARD_FREQ_INIT  - SPI frequency\n\n \n\n// <33554432=> 125 kHz \n\n// <67108864=> 250 kHz \n\n// <134217728=> 500 kHz \n\n// <268435456=> 1 MHz \n\n// <536870912=> 2 MHz \n\n// <1073741824=> 4 MHz \n\n// <2147483648=> 8 MHz \n\n\n\n#ifndef APP_SDCARD_FREQ_INIT\n\n#define APP_SDCARD_FREQ_INIT 67108864\n\n#endif\n\n\n\n// <o> APP_SDCARD_FREQ_DATA  - SPI frequency\n\n \n\n// <33554432=> 125 kHz \n\n// <67108864=> 250 kHz \n\n// <134217728=> 500 kHz \n\n// <268435456=> 1 MHz \n\n// <536870912=> 2 MHz \n\n// <1073741824=> 4 MHz \n\n// <2147483648=> 8 MHz \n\n\n\n#ifndef APP_SDCARD_FREQ_DATA\n\n#define APP_SDCARD_FREQ_DATA 1073741824\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> APP_TIMER_ENABLED - app_timer - Application timer functionality\n\n//==========================================================\n\n#ifndef APP_TIMER_ENABLED\n\n#define APP_TIMER_ENABLED 1\n\n#endif\n\n// <o> APP_TIMER_CONFIG_RTC_FREQUENCY  - Configure RTC prescaler.\n\n \n\n// <0=> 32768 Hz \n\n// <1=> 16384 Hz \n\n// <3=> 8192 Hz \n\n// <7=> 4096 Hz \n\n// <15=> 2048 Hz \n\n// <31=> 1024 Hz \n\n\n\n#ifndef APP_TIMER_CONFIG_RTC_FREQUENCY\n\n#define APP_TIMER_CONFIG_RTC_FREQUENCY 1\n\n#endif\n\n\n\n// <o> APP_TIMER_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef APP_TIMER_CONFIG_IRQ_PRIORITY\n\n#define APP_TIMER_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <o> APP_TIMER_CONFIG_OP_QUEUE_SIZE - Capacity of timer requests queue. \n\n// <i> Size of the queue depends on how many timers are used\n\n// <i> in the system, how often timers are started and overall\n\n// <i> system latency. If queue size is too small app_timer calls\n\n// <i> will fail.\n\n\n\n#ifndef APP_TIMER_CONFIG_OP_QUEUE_SIZE\n\n#define APP_TIMER_CONFIG_OP_QUEUE_SIZE 10\n\n#endif\n\n\n\n// <q> APP_TIMER_CONFIG_USE_SCHEDULER  - Enable scheduling app_timer events to app_scheduler\n\n \n\n\n\n#ifndef APP_TIMER_CONFIG_USE_SCHEDULER\n\n#define APP_TIMER_CONFIG_USE_SCHEDULER 0\n\n#endif\n\n\n\n// <q> APP_TIMER_KEEPS_RTC_ACTIVE  - Enable RTC always on\n\n \n\n\n\n// <i> If option is enabled RTC is kept running even if there is no active timers.\n\n// <i> This option can be used when app_timer is used for timestamping.\n\n\n\n#ifndef APP_TIMER_KEEPS_RTC_ACTIVE\n\n#define APP_TIMER_KEEPS_RTC_ACTIVE 0\n\n#endif\n\n\n\n// <o> APP_TIMER_SAFE_WINDOW_MS - Maximum possible latency (in milliseconds) of handling app_timer event. \n\n// <i> Maximum possible timeout that can be set is reduced by safe window.\n\n// <i> Example: RTC frequency 16384 Hz, maximum possible timeout 1024 seconds - APP_TIMER_SAFE_WINDOW_MS.\n\n// <i> Since RTC is not stopped when processor is halted in debugging session, this value\n\n// <i> must cover it if debugging is needed. It is possible to halt processor for APP_TIMER_SAFE_WINDOW_MS\n\n// <i> without corrupting app_timer behavior.\n\n\n\n#ifndef APP_TIMER_SAFE_WINDOW_MS\n\n#define APP_TIMER_SAFE_WINDOW_MS 300000\n\n#endif\n\n\n\n// <h> App Timer Legacy configuration - Legacy configuration.\n\n\n\n//==========================================================\n\n// <q> APP_TIMER_WITH_PROFILER  - Enable app_timer profiling\n\n \n\n\n\n#ifndef APP_TIMER_WITH_PROFILER\n\n#define APP_TIMER_WITH_PROFILER 0\n\n#endif\n\n\n\n// <q> APP_TIMER_CONFIG_SWI_NUMBER  - Configure SWI instance used.\n\n \n\n\n\n#ifndef APP_TIMER_CONFIG_SWI_NUMBER\n\n#define APP_TIMER_CONFIG_SWI_NUMBER 0\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// </e>\n\n\n\n// <e> APP_UART_ENABLED - app_uart - UART driver\n\n//==========================================================\n\n#ifndef APP_UART_ENABLED\n\n#define APP_UART_ENABLED 1\n\n#endif\n\n// <o> APP_UART_DRIVER_INSTANCE  - UART instance used\n\n \n\n// <0=> 0 \n\n\n\n#ifndef APP_UART_DRIVER_INSTANCE\n\n#define APP_UART_DRIVER_INSTANCE 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <q> APP_USBD_AUDIO_ENABLED  - app_usbd_audio - USB AUDIO class\n\n \n\n\n\n#ifndef APP_USBD_AUDIO_ENABLED\n\n#define APP_USBD_AUDIO_ENABLED 0\n\n#endif\n\n\n\n// <e> APP_USBD_ENABLED - app_usbd - USB Device library\n\n//==========================================================\n\n#ifndef APP_USBD_ENABLED\n\n#define APP_USBD_ENABLED 0\n\n#endif\n\n// <o> APP_USBD_VID - Vendor ID.  <0x0000-0xFFFF> \n\n\n\n\n\n// <i> Note: This value is not editable in Configuration Wizard.\n\n// <i> Vendor ID ordered from USB IF: http://www.usb.org/developers/vendor/\n\n\n\n#ifndef APP_USBD_VID\n\n#define APP_USBD_VID 0\n\n#endif\n\n\n\n// <o> APP_USBD_PID - Product ID.  <0x0000-0xFFFF> \n\n\n\n\n\n// <i> Note: This value is not editable in Configuration Wizard.\n\n// <i> Selected Product ID\n\n\n\n#ifndef APP_USBD_PID\n\n#define APP_USBD_PID 0\n\n#endif\n\n\n\n// <o> APP_USBD_DEVICE_VER_MAJOR - Major device version  <0-99> \n\n\n\n\n\n// <i> Major device version, will be converted automatically to BCD notation. Use just decimal values.\n\n\n\n#ifndef APP_USBD_DEVICE_VER_MAJOR\n\n#define APP_USBD_DEVICE_VER_MAJOR 1\n\n#endif\n\n\n\n// <o> APP_USBD_DEVICE_VER_MINOR - Minor device version  <0-9> \n\n\n\n\n\n// <i> Minor device version, will be converted automatically to BCD notation. Use just decimal values.\n\n\n\n#ifndef APP_USBD_DEVICE_VER_MINOR\n\n#define APP_USBD_DEVICE_VER_MINOR 0\n\n#endif\n\n\n\n// <o> APP_USBD_DEVICE_VER_SUB - Sub-minor device version  <0-9> \n\n\n\n\n\n// <i> Sub-minor device version, will be converted automatically to BCD notation. Use just decimal values.\n\n\n\n#ifndef APP_USBD_DEVICE_VER_SUB\n\n#define APP_USBD_DEVICE_VER_SUB 0\n\n#endif\n\n\n\n// <q> APP_USBD_CONFIG_SELF_POWERED  - Self-powered device, as opposed to bus-powered.\n\n \n\n\n\n#ifndef APP_USBD_CONFIG_SELF_POWERED\n\n#define APP_USBD_CONFIG_SELF_POWERED 1\n\n#endif\n\n\n\n// <o> APP_USBD_CONFIG_MAX_POWER - MaxPower field in configuration descriptor in milliamps.  <0-500> \n\n\n\n\n\n#ifndef APP_USBD_CONFIG_MAX_POWER\n\n#define APP_USBD_CONFIG_MAX_POWER 100\n\n#endif\n\n\n\n// <q> APP_USBD_CONFIG_POWER_EVENTS_PROCESS  - Process power events.\n\n \n\n\n\n// <i> Enable processing power events in USB event handler.\n\n\n\n#ifndef APP_USBD_CONFIG_POWER_EVENTS_PROCESS\n\n#define APP_USBD_CONFIG_POWER_EVENTS_PROCESS 1\n\n#endif\n\n\n\n// <e> APP_USBD_CONFIG_EVENT_QUEUE_ENABLE - Enable event queue.\n\n\n\n// <i> This is the default configuration when all the events are placed into internal queue.\n\n// <i> Disable it when an external queue is used like app_scheduler or if you wish to process all events inside interrupts.\n\n// <i> Processing all events from the interrupt level adds requirement not to call any functions that modifies the USBD library state from the context higher than USB interrupt context.\n\n// <i> Functions that modify USBD state are functions for sleep, wakeup, start, stop, enable, and disable.\n\n//==========================================================\n\n#ifndef APP_USBD_CONFIG_EVENT_QUEUE_ENABLE\n\n#define APP_USBD_CONFIG_EVENT_QUEUE_ENABLE 1\n\n#endif\n\n// <o> APP_USBD_CONFIG_EVENT_QUEUE_SIZE - The size of the event queue.  <16-64> \n\n\n\n\n\n// <i> The size of the queue for the events that would be processed in the main loop.\n\n\n\n#ifndef APP_USBD_CONFIG_EVENT_QUEUE_SIZE\n\n#define APP_USBD_CONFIG_EVENT_QUEUE_SIZE 32\n\n#endif\n\n\n\n// <o> APP_USBD_CONFIG_SOF_HANDLING_MODE  - Change SOF events handling mode.\n\n \n\n\n\n// <i> Normal queue   - SOF events are pushed normally into the event queue.\n\n// <i> Compress queue - SOF events are counted and binded with other events or executed when the queue is empty.\n\n// <i>                  This prevents the queue from filling up with SOF events.\n\n// <i> Interrupt      - SOF events are processed in interrupt.\n\n// <0=> Normal queue \n\n// <1=> Compress queue \n\n// <2=> Interrupt \n\n\n\n#ifndef APP_USBD_CONFIG_SOF_HANDLING_MODE\n\n#define APP_USBD_CONFIG_SOF_HANDLING_MODE 1\n\n#endif\n\n\n\n// </e>\n\n\n\n// <q> APP_USBD_CONFIG_SOF_TIMESTAMP_PROVIDE  - Provide a function that generates timestamps for logs based on the current SOF.\n\n \n\n\n\n// <i> The function app_usbd_sof_timestamp_get is implemented if the logger is enabled. \n\n// <i> Use it when initializing the logger. \n\n// <i> SOF processing is always enabled when this configuration parameter is active. \n\n// <i> Note: This option is configured outside of APP_USBD_CONFIG_LOG_ENABLED. \n\n// <i> This means that it works even if the logging in this very module is disabled. \n\n\n\n#ifndef APP_USBD_CONFIG_SOF_TIMESTAMP_PROVIDE\n\n#define APP_USBD_CONFIG_SOF_TIMESTAMP_PROVIDE 0\n\n#endif\n\n\n\n// <o> APP_USBD_CONFIG_DESC_STRING_SIZE - Maximum size of the NULL-terminated string of the string descriptor.  <31-254> \n\n\n\n\n\n// <i> 31 characters can be stored in the internal USB buffer used for transfers.\n\n// <i> Any value higher than 31 creates an additional buffer just for descriptor strings.\n\n\n\n#ifndef APP_USBD_CONFIG_DESC_STRING_SIZE\n\n#define APP_USBD_CONFIG_DESC_STRING_SIZE 31\n\n#endif\n\n\n\n// <q> APP_USBD_CONFIG_DESC_STRING_UTF_ENABLED  - Enable UTF8 conversion.\n\n \n\n\n\n// <i> Enable UTF8-encoded characters. In normal processing, only ASCII characters are available.\n\n\n\n#ifndef APP_USBD_CONFIG_DESC_STRING_UTF_ENABLED\n\n#define APP_USBD_CONFIG_DESC_STRING_UTF_ENABLED 0\n\n#endif\n\n\n\n// <s> APP_USBD_STRINGS_LANGIDS - Supported languages identifiers.\n\n\n\n// <i> Note: This value is not editable in Configuration Wizard.\n\n// <i> Comma-separated list of supported languages.\n\n#ifndef APP_USBD_STRINGS_LANGIDS\n\n#define APP_USBD_STRINGS_LANGIDS APP_USBD_LANG_AND_SUBLANG(APP_USBD_LANG_ENGLISH, APP_USBD_SUBLANG_ENGLISH_US)\n\n#endif\n\n\n\n// <e> APP_USBD_STRING_ID_MANUFACTURER - Define manufacturer string ID.\n\n\n\n// <i> Setting ID to 0 disables the string.\n\n//==========================================================\n\n#ifndef APP_USBD_STRING_ID_MANUFACTURER\n\n#define APP_USBD_STRING_ID_MANUFACTURER 1\n\n#endif\n\n// <q> APP_USBD_STRINGS_MANUFACTURER_EXTERN  - Define whether @ref APP_USBD_STRINGS_MANUFACTURER is created by macro or declared as a global variable.\n\n \n\n\n\n#ifndef APP_USBD_STRINGS_MANUFACTURER_EXTERN\n\n#define APP_USBD_STRINGS_MANUFACTURER_EXTERN 0\n\n#endif\n\n\n\n// <s> APP_USBD_STRINGS_MANUFACTURER - String descriptor for the manufacturer name.\n\n\n\n// <i> Note: This value is not editable in Configuration Wizard.\n\n// <i> Comma-separated list of manufacturer names for each defined language.\n\n// <i> Use @ref APP_USBD_STRING_DESC macro to create string descriptor from a NULL-terminated string.\n\n// <i> Use @ref APP_USBD_STRING_RAW8_DESC macro to create string descriptor from comma-separated uint8_t values.\n\n// <i> Use @ref APP_USBD_STRING_RAW16_DESC macro to create string descriptor from comma-separated uint16_t values.\n\n// <i> Alternatively, configure the macro to point to any internal variable pointer that already contains the descriptor.\n\n// <i> Setting string to NULL disables that string.\n\n// <i> The order of manufacturer names must be the same like in @ref APP_USBD_STRINGS_LANGIDS.\n\n#ifndef APP_USBD_STRINGS_MANUFACTURER\n\n#define APP_USBD_STRINGS_MANUFACTURER APP_USBD_STRING_DESC(\"Nordic Semiconductor\")\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> APP_USBD_STRING_ID_PRODUCT - Define product string ID.\n\n\n\n// <i> Setting ID to 0 disables the string.\n\n//==========================================================\n\n#ifndef APP_USBD_STRING_ID_PRODUCT\n\n#define APP_USBD_STRING_ID_PRODUCT 2\n\n#endif\n\n// <q> APP_USBD_STRINGS_PRODUCT_EXTERN  - Define whether @ref APP_USBD_STRINGS_PRODUCT is created by macro or declared as a global variable.\n\n \n\n\n\n#ifndef APP_USBD_STRINGS_PRODUCT_EXTERN\n\n#define APP_USBD_STRINGS_PRODUCT_EXTERN 0\n\n#endif\n\n\n\n// <s> APP_USBD_STRINGS_PRODUCT - String descriptor for the product name.\n\n\n\n// <i> Note: This value is not editable in Configuration Wizard.\n\n// <i> List of product names that is defined the same way like in @ref APP_USBD_STRINGS_MANUFACTURER.\n\n#ifndef APP_USBD_STRINGS_PRODUCT\n\n#define APP_USBD_STRINGS_PRODUCT APP_USBD_STRING_DESC(\"nRF52 USB Product\")\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> APP_USBD_STRING_ID_SERIAL - Define serial number string ID.\n\n\n\n// <i> Setting ID to 0 disables the string.\n\n//==========================================================\n\n#ifndef APP_USBD_STRING_ID_SERIAL\n\n#define APP_USBD_STRING_ID_SERIAL 3\n\n#endif\n\n// <q> APP_USBD_STRING_SERIAL_EXTERN  - Define whether @ref APP_USBD_STRING_SERIAL is created by macro or declared as a global variable.\n\n \n\n\n\n#ifndef APP_USBD_STRING_SERIAL_EXTERN\n\n#define APP_USBD_STRING_SERIAL_EXTERN 0\n\n#endif\n\n\n\n// <s> APP_USBD_STRING_SERIAL - String descriptor for the serial number.\n\n\n\n// <i> Note: This value is not editable in Configuration Wizard.\n\n// <i> Serial number that is defined the same way like in @ref APP_USBD_STRINGS_MANUFACTURER.\n\n#ifndef APP_USBD_STRING_SERIAL\n\n#define APP_USBD_STRING_SERIAL APP_USBD_STRING_DESC(\"000000000000\")\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> APP_USBD_STRING_ID_CONFIGURATION - Define configuration string ID.\n\n\n\n// <i> Setting ID to 0 disables the string.\n\n//==========================================================\n\n#ifndef APP_USBD_STRING_ID_CONFIGURATION\n\n#define APP_USBD_STRING_ID_CONFIGURATION 4\n\n#endif\n\n// <q> APP_USBD_STRING_CONFIGURATION_EXTERN  - Define whether @ref APP_USBD_STRINGS_CONFIGURATION is created by macro or declared as global variable.\n\n \n\n\n\n#ifndef APP_USBD_STRING_CONFIGURATION_EXTERN\n\n#define APP_USBD_STRING_CONFIGURATION_EXTERN 0\n\n#endif\n\n\n\n// <s> APP_USBD_STRINGS_CONFIGURATION - String descriptor for the device configuration.\n\n\n\n// <i> Note: This value is not editable in Configuration Wizard.\n\n// <i> Configuration string that is defined the same way like in @ref APP_USBD_STRINGS_MANUFACTURER.\n\n#ifndef APP_USBD_STRINGS_CONFIGURATION\n\n#define APP_USBD_STRINGS_CONFIGURATION APP_USBD_STRING_DESC(\"Default configuration\")\n\n#endif\n\n\n\n// </e>\n\n\n\n// <s> APP_USBD_STRINGS_USER - Default values for user strings.\n\n\n\n// <i> Note: This value is not editable in Configuration Wizard.\n\n// <i> This value stores all application specific user strings with the default initialization.\n\n// <i> The setup is done by X-macros.\n\n// <i> Expected macro parameters:\n\n// <i> @code\n\n// <i> X(mnemonic, [=str_idx], ...)\n\n// <i> @endcode\n\n// <i> - @c mnemonic: Mnemonic of the string descriptor that would be added to\n\n// <i>                @ref app_usbd_string_desc_idx_t enumerator.\n\n// <i> - @c str_idx : String index value, can be set or left empty.\n\n// <i>                For example, WinUSB driver requires descriptor to be present on 0xEE index.\n\n// <i>                Then use X(USBD_STRING_WINUSB, =0xEE, (APP_USBD_STRING_DESC(...)))\n\n// <i> - @c ...     : List of string descriptors for each defined language.\n\n#ifndef APP_USBD_STRINGS_USER\n\n#define APP_USBD_STRINGS_USER X(APP_USER_1, , APP_USBD_STRING_DESC(\"User 1\"))\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> APP_USBD_HID_ENABLED - app_usbd_hid - USB HID class\n\n//==========================================================\n\n#ifndef APP_USBD_HID_ENABLED\n\n#define APP_USBD_HID_ENABLED 0\n\n#endif\n\n// <o> APP_USBD_HID_DEFAULT_IDLE_RATE - Default idle rate for HID class.   <0-255> \n\n\n\n\n\n// <i> 0 means indefinite duration, any other value is multiplied by 4 milliseconds. Refer to Chapter 7.2.4 of HID 1.11 Specification.\n\n\n\n#ifndef APP_USBD_HID_DEFAULT_IDLE_RATE\n\n#define APP_USBD_HID_DEFAULT_IDLE_RATE 0\n\n#endif\n\n\n\n// <o> APP_USBD_HID_REPORT_IDLE_TABLE_SIZE - Size of idle rate table.   <1-255> \n\n\n\n\n\n// <i> Must be higher than the highest report ID used.\n\n\n\n#ifndef APP_USBD_HID_REPORT_IDLE_TABLE_SIZE\n\n#define APP_USBD_HID_REPORT_IDLE_TABLE_SIZE 4\n\n#endif\n\n\n\n// </e>\n\n\n\n// <q> APP_USBD_HID_GENERIC_ENABLED  - app_usbd_hid_generic - USB HID generic\n\n \n\n\n\n#ifndef APP_USBD_HID_GENERIC_ENABLED\n\n#define APP_USBD_HID_GENERIC_ENABLED 0\n\n#endif\n\n\n\n// <q> APP_USBD_HID_KBD_ENABLED  - app_usbd_hid_kbd - USB HID keyboard\n\n \n\n\n\n#ifndef APP_USBD_HID_KBD_ENABLED\n\n#define APP_USBD_HID_KBD_ENABLED 0\n\n#endif\n\n\n\n// <q> APP_USBD_HID_MOUSE_ENABLED  - app_usbd_hid_mouse - USB HID mouse\n\n \n\n\n\n#ifndef APP_USBD_HID_MOUSE_ENABLED\n\n#define APP_USBD_HID_MOUSE_ENABLED 0\n\n#endif\n\n\n\n// <q> APP_USBD_MSC_ENABLED  - app_usbd_msc - USB MSC class\n\n \n\n\n\n#ifndef APP_USBD_MSC_ENABLED\n\n#define APP_USBD_MSC_ENABLED 0\n\n#endif\n\n\n\n// <q> CRC16_ENABLED  - crc16 - CRC16 calculation routines\n\n \n\n\n\n#ifndef CRC16_ENABLED\n\n#define CRC16_ENABLED 0\n\n#endif\n\n\n\n// <q> CRC32_ENABLED  - crc32 - CRC32 calculation routines\n\n \n\n\n\n#ifndef CRC32_ENABLED\n\n#define CRC32_ENABLED 0\n\n#endif\n\n\n\n// <q> ECC_ENABLED  - ecc - Elliptic Curve Cryptography Library\n\n \n\n\n\n#ifndef ECC_ENABLED\n\n#define ECC_ENABLED 0\n\n#endif\n\n\n\n// <e> FDS_ENABLED - fds - Flash data storage module\n\n//==========================================================\n\n#ifndef FDS_ENABLED\n\n#define FDS_ENABLED 0\n\n#endif\n\n// <h> Pages - Virtual page settings\n\n\n\n// <i> Configure the number of virtual pages to use and their size.\n\n//==========================================================\n\n// <o> FDS_VIRTUAL_PAGES - Number of virtual flash pages to use. \n\n// <i> One of the virtual pages is reserved by the system for garbage collection.\n\n// <i> Therefore, the minimum is two virtual pages: one page to store data and one page to be used by the system for garbage collection.\n\n// <i> The total amount of flash memory that is used by FDS amounts to @ref FDS_VIRTUAL_PAGES * @ref FDS_VIRTUAL_PAGE_SIZE * 4 bytes.\n\n\n\n#ifndef FDS_VIRTUAL_PAGES\n\n#define FDS_VIRTUAL_PAGES 3\n\n#endif\n\n\n\n// <o> FDS_VIRTUAL_PAGE_SIZE  - The size of a virtual flash page.\n\n \n\n\n\n// <i> Expressed in number of 4-byte words.\n\n// <i> By default, a virtual page is the same size as a physical page.\n\n// <i> The size of a virtual page must be a multiple of the size of a physical page.\n\n// <1024=> 1024 \n\n// <2048=> 2048 \n\n\n\n#ifndef FDS_VIRTUAL_PAGE_SIZE\n\n#define FDS_VIRTUAL_PAGE_SIZE 1024\n\n#endif\n\n\n\n// <o> FDS_VIRTUAL_PAGES_RESERVED - The number of virtual flash pages that are used by other modules. \n\n// <i> FDS module stores its data in the last pages of the flash memory.\n\n// <i> By setting this value, you can move flash end address used by the FDS.\n\n// <i> As a result the reserved space can be used by other modules.\n\n\n\n#ifndef FDS_VIRTUAL_PAGES_RESERVED\n\n#define FDS_VIRTUAL_PAGES_RESERVED 0\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> Backend - Backend configuration\n\n\n\n// <i> Configure which nrf_fstorage backend is used by FDS to write to flash.\n\n//==========================================================\n\n// <o> FDS_BACKEND  - FDS flash backend.\n\n \n\n\n\n// <i> NRF_FSTORAGE_SD uses the nrf_fstorage_sd backend implementation using the SoftDevice API. Use this if you have a SoftDevice present.\n\n// <i> NRF_FSTORAGE_NVMC uses the nrf_fstorage_nvmc implementation. Use this setting if you don't use the SoftDevice.\n\n// <1=> NRF_FSTORAGE_NVMC \n\n// <2=> NRF_FSTORAGE_SD \n\n\n\n#ifndef FDS_BACKEND\n\n#define FDS_BACKEND 2\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> Queue - Queue settings\n\n\n\n//==========================================================\n\n// <o> FDS_OP_QUEUE_SIZE - Size of the internal queue. \n\n// <i> Increase this value if you frequently get synchronous FDS_ERR_NO_SPACE_IN_QUEUES errors.\n\n\n\n#ifndef FDS_OP_QUEUE_SIZE\n\n#define FDS_OP_QUEUE_SIZE 4\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> CRC - CRC functionality\n\n\n\n//==========================================================\n\n// <e> FDS_CRC_CHECK_ON_READ - Enable CRC checks.\n\n\n\n// <i> Save a record's CRC when it is written to flash and check it when the record is opened.\n\n// <i> Records with an incorrect CRC can still be 'seen' by the user using FDS functions, but they cannot be opened.\n\n// <i> Additionally, they will not be garbage collected until they are deleted.\n\n//==========================================================\n\n#ifndef FDS_CRC_CHECK_ON_READ\n\n#define FDS_CRC_CHECK_ON_READ 0\n\n#endif\n\n// <o> FDS_CRC_CHECK_ON_WRITE  - Perform a CRC check on newly written records.\n\n \n\n\n\n// <i> Perform a CRC check on newly written records.\n\n// <i> This setting can be used to make sure that the record data was not altered while being written to flash.\n\n// <1=> Enabled \n\n// <0=> Disabled \n\n\n\n#ifndef FDS_CRC_CHECK_ON_WRITE\n\n#define FDS_CRC_CHECK_ON_WRITE 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> Users - Number of users\n\n\n\n//==========================================================\n\n// <o> FDS_MAX_USERS - Maximum number of callbacks that can be registered. \n\n#ifndef FDS_MAX_USERS\n\n#define FDS_MAX_USERS 4\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// </e>\n\n\n\n// <q> HARDFAULT_HANDLER_ENABLED  - hardfault_default - HardFault default handler for debugging and release\n\n \n\n\n\n#ifndef HARDFAULT_HANDLER_ENABLED\n\n#define HARDFAULT_HANDLER_ENABLED 0\n\n#endif\n\n\n\n// <e> HCI_MEM_POOL_ENABLED - hci_mem_pool - memory pool implementation used by HCI\n\n//==========================================================\n\n#ifndef HCI_MEM_POOL_ENABLED\n\n#define HCI_MEM_POOL_ENABLED 0\n\n#endif\n\n// <o> HCI_TX_BUF_SIZE - TX buffer size in bytes. \n\n#ifndef HCI_TX_BUF_SIZE\n\n#define HCI_TX_BUF_SIZE 600\n\n#endif\n\n\n\n// <o> HCI_RX_BUF_SIZE - RX buffer size in bytes. \n\n#ifndef HCI_RX_BUF_SIZE\n\n#define HCI_RX_BUF_SIZE 600\n\n#endif\n\n\n\n// <o> HCI_RX_BUF_QUEUE_SIZE - RX buffer queue size. \n\n#ifndef HCI_RX_BUF_QUEUE_SIZE\n\n#define HCI_RX_BUF_QUEUE_SIZE 4\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> HCI_SLIP_ENABLED - hci_slip - SLIP protocol implementation used by HCI\n\n//==========================================================\n\n#ifndef HCI_SLIP_ENABLED\n\n#define HCI_SLIP_ENABLED 0\n\n#endif\n\n// <o> HCI_UART_BAUDRATE  - Default Baudrate\n\n \n\n// <323584=> 1200 baud \n\n// <643072=> 2400 baud \n\n// <1290240=> 4800 baud \n\n// <2576384=> 9600 baud \n\n// <3862528=> 14400 baud \n\n// <5152768=> 19200 baud \n\n// <7716864=> 28800 baud \n\n// <10289152=> 38400 baud \n\n// <15400960=> 57600 baud \n\n// <20615168=> 76800 baud \n\n// <30801920=> 115200 baud \n\n// <61865984=> 230400 baud \n\n// <67108864=> 250000 baud \n\n// <121634816=> 460800 baud \n\n// <251658240=> 921600 baud \n\n// <268435456=> 1000000 baud \n\n\n\n#ifndef HCI_UART_BAUDRATE\n\n#define HCI_UART_BAUDRATE 30801920\n\n#endif\n\n\n\n// <o> HCI_UART_FLOW_CONTROL  - Hardware Flow Control\n\n \n\n// <0=> Disabled \n\n// <1=> Enabled \n\n\n\n#ifndef HCI_UART_FLOW_CONTROL\n\n#define HCI_UART_FLOW_CONTROL 0\n\n#endif\n\n\n\n// <o> HCI_UART_RX_PIN - UART RX pin \n\n#ifndef HCI_UART_RX_PIN\n\n#define HCI_UART_RX_PIN 8\n\n#endif\n\n\n\n// <o> HCI_UART_TX_PIN - UART TX pin \n\n#ifndef HCI_UART_TX_PIN\n\n#define HCI_UART_TX_PIN 6\n\n#endif\n\n\n\n// <o> HCI_UART_RTS_PIN - UART RTS pin \n\n#ifndef HCI_UART_RTS_PIN\n\n#define HCI_UART_RTS_PIN 5\n\n#endif\n\n\n\n// <o> HCI_UART_CTS_PIN - UART CTS pin \n\n#ifndef HCI_UART_CTS_PIN\n\n#define HCI_UART_CTS_PIN 7\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> HCI_TRANSPORT_ENABLED - hci_transport - HCI transport\n\n//==========================================================\n\n#ifndef HCI_TRANSPORT_ENABLED\n\n#define HCI_TRANSPORT_ENABLED 0\n\n#endif\n\n// <o> HCI_MAX_PACKET_SIZE_IN_BITS - Maximum size of a single application packet in bits. \n\n#ifndef HCI_MAX_PACKET_SIZE_IN_BITS\n\n#define HCI_MAX_PACKET_SIZE_IN_BITS 8000\n\n#endif\n\n\n\n// </e>\n\n\n\n// <q> LED_SOFTBLINK_ENABLED  - led_softblink - led_softblink module\n\n \n\n\n\n#ifndef LED_SOFTBLINK_ENABLED\n\n#define LED_SOFTBLINK_ENABLED 0\n\n#endif\n\n\n\n// <q> LOW_POWER_PWM_ENABLED  - low_power_pwm - low_power_pwm module\n\n \n\n\n\n#ifndef LOW_POWER_PWM_ENABLED\n\n#define LOW_POWER_PWM_ENABLED 0\n\n#endif\n\n\n\n// <e> MEM_MANAGER_ENABLED - mem_manager - Dynamic memory allocator\n\n//==========================================================\n\n#ifndef MEM_MANAGER_ENABLED\n\n#define MEM_MANAGER_ENABLED 0\n\n#endif\n\n// <o> MEMORY_MANAGER_SMALL_BLOCK_COUNT - Size of each memory blocks identified as 'small' block.  <0-255> \n\n\n\n\n\n#ifndef MEMORY_MANAGER_SMALL_BLOCK_COUNT\n\n#define MEMORY_MANAGER_SMALL_BLOCK_COUNT 1\n\n#endif\n\n\n\n// <o> MEMORY_MANAGER_SMALL_BLOCK_SIZE -  Size of each memory blocks identified as 'small' block. \n\n// <i>  Size of each memory blocks identified as 'small' block. Memory block are recommended to be word-sized.\n\n\n\n#ifndef MEMORY_MANAGER_SMALL_BLOCK_SIZE\n\n#define MEMORY_MANAGER_SMALL_BLOCK_SIZE 32\n\n#endif\n\n\n\n// <o> MEMORY_MANAGER_MEDIUM_BLOCK_COUNT - Size of each memory blocks identified as 'medium' block.  <0-255> \n\n\n\n\n\n#ifndef MEMORY_MANAGER_MEDIUM_BLOCK_COUNT\n\n#define MEMORY_MANAGER_MEDIUM_BLOCK_COUNT 0\n\n#endif\n\n\n\n// <o> MEMORY_MANAGER_MEDIUM_BLOCK_SIZE -  Size of each memory blocks identified as 'medium' block. \n\n// <i>  Size of each memory blocks identified as 'medium' block. Memory block are recommended to be word-sized.\n\n\n\n#ifndef MEMORY_MANAGER_MEDIUM_BLOCK_SIZE\n\n#define MEMORY_MANAGER_MEDIUM_BLOCK_SIZE 256\n\n#endif\n\n\n\n// <o> MEMORY_MANAGER_LARGE_BLOCK_COUNT - Size of each memory blocks identified as 'large' block.  <0-255> \n\n\n\n\n\n#ifndef MEMORY_MANAGER_LARGE_BLOCK_COUNT\n\n#define MEMORY_MANAGER_LARGE_BLOCK_COUNT 0\n\n#endif\n\n\n\n// <o> MEMORY_MANAGER_LARGE_BLOCK_SIZE -  Size of each memory blocks identified as 'large' block. \n\n// <i>  Size of each memory blocks identified as 'large' block. Memory block are recommended to be word-sized.\n\n\n\n#ifndef MEMORY_MANAGER_LARGE_BLOCK_SIZE\n\n#define MEMORY_MANAGER_LARGE_BLOCK_SIZE 256\n\n#endif\n\n\n\n// <o> MEMORY_MANAGER_XLARGE_BLOCK_COUNT - Size of each memory blocks identified as 'extra large' block.  <0-255> \n\n\n\n\n\n#ifndef MEMORY_MANAGER_XLARGE_BLOCK_COUNT\n\n#define MEMORY_MANAGER_XLARGE_BLOCK_COUNT 0\n\n#endif\n\n\n\n// <o> MEMORY_MANAGER_XLARGE_BLOCK_SIZE -  Size of each memory blocks identified as 'extra large' block. \n\n// <i>  Size of each memory blocks identified as 'extra large' block. Memory block are recommended to be word-sized.\n\n\n\n#ifndef MEMORY_MANAGER_XLARGE_BLOCK_SIZE\n\n#define MEMORY_MANAGER_XLARGE_BLOCK_SIZE 1320\n\n#endif\n\n\n\n// <o> MEMORY_MANAGER_XXLARGE_BLOCK_COUNT - Size of each memory blocks identified as 'extra extra large' block.  <0-255> \n\n\n\n\n\n#ifndef MEMORY_MANAGER_XXLARGE_BLOCK_COUNT\n\n#define MEMORY_MANAGER_XXLARGE_BLOCK_COUNT 0\n\n#endif\n\n\n\n// <o> MEMORY_MANAGER_XXLARGE_BLOCK_SIZE -  Size of each memory blocks identified as 'extra extra large' block. \n\n// <i>  Size of each memory blocks identified as 'extra extra large' block. Memory block are recommended to be word-sized.\n\n\n\n#ifndef MEMORY_MANAGER_XXLARGE_BLOCK_SIZE\n\n#define MEMORY_MANAGER_XXLARGE_BLOCK_SIZE 3444\n\n#endif\n\n\n\n// <o> MEMORY_MANAGER_XSMALL_BLOCK_COUNT - Size of each memory blocks identified as 'extra small' block.  <0-255> \n\n\n\n\n\n#ifndef MEMORY_MANAGER_XSMALL_BLOCK_COUNT\n\n#define MEMORY_MANAGER_XSMALL_BLOCK_COUNT 0\n\n#endif\n\n\n\n// <o> MEMORY_MANAGER_XSMALL_BLOCK_SIZE -  Size of each memory blocks identified as 'extra small' block. \n\n// <i>  Size of each memory blocks identified as 'extra large' block. Memory block are recommended to be word-sized.\n\n\n\n#ifndef MEMORY_MANAGER_XSMALL_BLOCK_SIZE\n\n#define MEMORY_MANAGER_XSMALL_BLOCK_SIZE 64\n\n#endif\n\n\n\n// <o> MEMORY_MANAGER_XXSMALL_BLOCK_COUNT - Size of each memory blocks identified as 'extra extra small' block.  <0-255> \n\n\n\n\n\n#ifndef MEMORY_MANAGER_XXSMALL_BLOCK_COUNT\n\n#define MEMORY_MANAGER_XXSMALL_BLOCK_COUNT 0\n\n#endif\n\n\n\n// <o> MEMORY_MANAGER_XXSMALL_BLOCK_SIZE -  Size of each memory blocks identified as 'extra extra small' block. \n\n// <i>  Size of each memory blocks identified as 'extra extra small' block. Memory block are recommended to be word-sized.\n\n\n\n#ifndef MEMORY_MANAGER_XXSMALL_BLOCK_SIZE\n\n#define MEMORY_MANAGER_XXSMALL_BLOCK_SIZE 32\n\n#endif\n\n\n\n// <e> MEM_MANAGER_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef MEM_MANAGER_CONFIG_LOG_ENABLED\n\n#define MEM_MANAGER_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> MEM_MANAGER_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef MEM_MANAGER_CONFIG_LOG_LEVEL\n\n#define MEM_MANAGER_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> MEM_MANAGER_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef MEM_MANAGER_CONFIG_INFO_COLOR\n\n#define MEM_MANAGER_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> MEM_MANAGER_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef MEM_MANAGER_CONFIG_DEBUG_COLOR\n\n#define MEM_MANAGER_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <q> MEM_MANAGER_DISABLE_API_PARAM_CHECK  - Disable API parameter checks in the module.\n\n \n\n\n\n#ifndef MEM_MANAGER_DISABLE_API_PARAM_CHECK\n\n#define MEM_MANAGER_DISABLE_API_PARAM_CHECK 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_BALLOC_ENABLED - nrf_balloc - Block allocator module\n\n//==========================================================\n\n#ifndef NRF_BALLOC_ENABLED\n\n#define NRF_BALLOC_ENABLED 1\n\n#endif\n\n// <e> NRF_BALLOC_CONFIG_DEBUG_ENABLED - Enables debug mode in the module.\n\n//==========================================================\n\n#ifndef NRF_BALLOC_CONFIG_DEBUG_ENABLED\n\n#define NRF_BALLOC_CONFIG_DEBUG_ENABLED 0\n\n#endif\n\n// <o> NRF_BALLOC_CONFIG_HEAD_GUARD_WORDS - Number of words used as head guard.  <0-255> \n\n\n\n\n\n#ifndef NRF_BALLOC_CONFIG_HEAD_GUARD_WORDS\n\n#define NRF_BALLOC_CONFIG_HEAD_GUARD_WORDS 1\n\n#endif\n\n\n\n// <o> NRF_BALLOC_CONFIG_TAIL_GUARD_WORDS - Number of words used as tail guard.  <0-255> \n\n\n\n\n\n#ifndef NRF_BALLOC_CONFIG_TAIL_GUARD_WORDS\n\n#define NRF_BALLOC_CONFIG_TAIL_GUARD_WORDS 1\n\n#endif\n\n\n\n// <q> NRF_BALLOC_CONFIG_BASIC_CHECKS_ENABLED  - Enables basic checks in this module.\n\n \n\n\n\n#ifndef NRF_BALLOC_CONFIG_BASIC_CHECKS_ENABLED\n\n#define NRF_BALLOC_CONFIG_BASIC_CHECKS_ENABLED 0\n\n#endif\n\n\n\n// <q> NRF_BALLOC_CONFIG_DOUBLE_FREE_CHECK_ENABLED  - Enables double memory free check in this module.\n\n \n\n\n\n#ifndef NRF_BALLOC_CONFIG_DOUBLE_FREE_CHECK_ENABLED\n\n#define NRF_BALLOC_CONFIG_DOUBLE_FREE_CHECK_ENABLED 0\n\n#endif\n\n\n\n// <q> NRF_BALLOC_CONFIG_DATA_TRASHING_CHECK_ENABLED  - Enables free memory corruption check in this module.\n\n \n\n\n\n#ifndef NRF_BALLOC_CONFIG_DATA_TRASHING_CHECK_ENABLED\n\n#define NRF_BALLOC_CONFIG_DATA_TRASHING_CHECK_ENABLED 0\n\n#endif\n\n\n\n// <q> NRF_BALLOC_CLI_CMDS  - Enable CLI commands specific to the module\n\n \n\n\n\n#ifndef NRF_BALLOC_CLI_CMDS\n\n#define NRF_BALLOC_CLI_CMDS 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRF_CSENSE_ENABLED - nrf_csense - Capacitive sensor module\n\n//==========================================================\n\n#ifndef NRF_CSENSE_ENABLED\n\n#define NRF_CSENSE_ENABLED 0\n\n#endif\n\n// <o> NRF_CSENSE_PAD_HYSTERESIS - Minimum value of change required to determine that a pad was touched. \n\n#ifndef NRF_CSENSE_PAD_HYSTERESIS\n\n#define NRF_CSENSE_PAD_HYSTERESIS 15\n\n#endif\n\n\n\n// <o> NRF_CSENSE_PAD_DEVIATION - Minimum value measured on a pad required to take it into account while calculating the step. \n\n#ifndef NRF_CSENSE_PAD_DEVIATION\n\n#define NRF_CSENSE_PAD_DEVIATION 70\n\n#endif\n\n\n\n// <o> NRF_CSENSE_MIN_PAD_VALUE - Minimum normalized value on a pad required to take its value into account. \n\n#ifndef NRF_CSENSE_MIN_PAD_VALUE\n\n#define NRF_CSENSE_MIN_PAD_VALUE 20\n\n#endif\n\n\n\n// <o> NRF_CSENSE_MAX_PADS_NUMBER - Maximum number of pads used for one instance. \n\n#ifndef NRF_CSENSE_MAX_PADS_NUMBER\n\n#define NRF_CSENSE_MAX_PADS_NUMBER 20\n\n#endif\n\n\n\n// <o> NRF_CSENSE_MAX_VALUE - Maximum normalized value obtained from measurement. \n\n#ifndef NRF_CSENSE_MAX_VALUE\n\n#define NRF_CSENSE_MAX_VALUE 1000\n\n#endif\n\n\n\n// <o> NRF_CSENSE_OUTPUT_PIN - Output pin used by the low-level module. \n\n// <i> This is used when capacitive sensor does not use COMP.\n\n\n\n#ifndef NRF_CSENSE_OUTPUT_PIN\n\n#define NRF_CSENSE_OUTPUT_PIN 26\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_DRV_CSENSE_ENABLED - nrf_drv_csense - Capacitive sensor low-level module\n\n//==========================================================\n\n#ifndef NRF_DRV_CSENSE_ENABLED\n\n#define NRF_DRV_CSENSE_ENABLED 0\n\n#endif\n\n// <e> USE_COMP - Use the comparator to implement the capacitive sensor driver.\n\n\n\n// <i> Due to Anomaly 84, COMP I_SOURCE is not functional. It has too high a varation.\n\n//==========================================================\n\n#ifndef USE_COMP\n\n#define USE_COMP 0\n\n#endif\n\n// <o> TIMER0_FOR_CSENSE - First TIMER instance used by the driver (not used on nRF51). \n\n#ifndef TIMER0_FOR_CSENSE\n\n#define TIMER0_FOR_CSENSE 1\n\n#endif\n\n\n\n// <o> TIMER1_FOR_CSENSE - Second TIMER instance used by the driver (not used on nRF51). \n\n#ifndef TIMER1_FOR_CSENSE\n\n#define TIMER1_FOR_CSENSE 2\n\n#endif\n\n\n\n// <o> MEASUREMENT_PERIOD - Single measurement period. \n\n// <i> Time of a single measurement can be calculated as\n\n// <i> T = (1/2)*MEASUREMENT_PERIOD*(1/f_OSC) where f_OSC = I_SOURCE / (2C*(VUP-VDOWN) ).\n\n// <i> I_SOURCE, VUP, and VDOWN are values used to initialize COMP and C is the capacitance of the used pad.\n\n\n\n#ifndef MEASUREMENT_PERIOD\n\n#define MEASUREMENT_PERIOD 20\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRF_FSTORAGE_ENABLED - nrf_fstorage - Flash abstraction library\n\n//==========================================================\n\n#ifndef NRF_FSTORAGE_ENABLED\n\n#define NRF_FSTORAGE_ENABLED 0\n\n#endif\n\n// <h> nrf_fstorage - Common settings\n\n\n\n// <i> Common settings to all fstorage implementations\n\n//==========================================================\n\n// <q> NRF_FSTORAGE_PARAM_CHECK_DISABLED  - Disable user input validation\n\n \n\n\n\n// <i> If selected, use ASSERT to validate user input.\n\n// <i> This effectively removes user input validation in production code.\n\n// <i> Recommended setting: OFF, only enable this setting if size is a major concern.\n\n\n\n#ifndef NRF_FSTORAGE_PARAM_CHECK_DISABLED\n\n#define NRF_FSTORAGE_PARAM_CHECK_DISABLED 0\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> nrf_fstorage_sd - Implementation using the SoftDevice\n\n\n\n// <i> Configuration options for the fstorage implementation using the SoftDevice\n\n//==========================================================\n\n// <o> NRF_FSTORAGE_SD_QUEUE_SIZE - Size of the internal queue of operations \n\n// <i> Increase this value if API calls frequently return the error @ref NRF_ERROR_NO_MEM.\n\n\n\n#ifndef NRF_FSTORAGE_SD_QUEUE_SIZE\n\n#define NRF_FSTORAGE_SD_QUEUE_SIZE 4\n\n#endif\n\n\n\n// <o> NRF_FSTORAGE_SD_MAX_RETRIES - Maximum number of attempts at executing an operation when the SoftDevice is busy \n\n// <i> Increase this value if events frequently return the @ref NRF_ERROR_TIMEOUT error.\n\n// <i> The SoftDevice might fail to schedule flash access due to high BLE activity.\n\n\n\n#ifndef NRF_FSTORAGE_SD_MAX_RETRIES\n\n#define NRF_FSTORAGE_SD_MAX_RETRIES 8\n\n#endif\n\n\n\n// <o> NRF_FSTORAGE_SD_MAX_WRITE_SIZE - Maximum number of bytes to be written to flash in a single operation \n\n// <i> This value must be a multiple of four.\n\n// <i> Lowering this value can increase the chances of the SoftDevice being able to execute flash operations in between radio activity.\n\n// <i> This value is bound by the maximum number of bytes that can be written to flash in a single call to @ref sd_flash_write.\n\n// <i> That is 1024 bytes for nRF51 ICs and 4096 bytes for nRF52 ICs.\n\n\n\n#ifndef NRF_FSTORAGE_SD_MAX_WRITE_SIZE\n\n#define NRF_FSTORAGE_SD_MAX_WRITE_SIZE 4096\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// </e>\n\n\n\n// <q> NRF_GFX_ENABLED  - nrf_gfx - GFX module\n\n \n\n\n\n#ifndef NRF_GFX_ENABLED\n\n#define NRF_GFX_ENABLED 0\n\n#endif\n\n\n\n// <q> NRF_MEMOBJ_ENABLED  - nrf_memobj - Linked memory allocator module\n\n \n\n\n\n#ifndef NRF_MEMOBJ_ENABLED\n\n#define NRF_MEMOBJ_ENABLED 1\n\n#endif\n\n\n\n// <e> NRF_PWR_MGMT_ENABLED - nrf_pwr_mgmt - Power management module\n\n//==========================================================\n\n#ifndef NRF_PWR_MGMT_ENABLED\n\n#define NRF_PWR_MGMT_ENABLED 1\n\n#endif\n\n// <e> NRF_PWR_MGMT_CONFIG_DEBUG_PIN_ENABLED - Enables pin debug in the module.\n\n\n\n// <i> Selected pin will be set when CPU is in sleep mode.\n\n//==========================================================\n\n#ifndef NRF_PWR_MGMT_CONFIG_DEBUG_PIN_ENABLED\n\n#define NRF_PWR_MGMT_CONFIG_DEBUG_PIN_ENABLED 0\n\n#endif\n\n// <o> NRF_PWR_MGMT_SLEEP_DEBUG_PIN  - Pin number\n\n \n\n// <0=> 0 (P0.0) \n\n// <1=> 1 (P0.1) \n\n// <2=> 2 (P0.2) \n\n// <3=> 3 (P0.3) \n\n// <4=> 4 (P0.4) \n\n// <5=> 5 (P0.5) \n\n// <6=> 6 (P0.6) \n\n// <7=> 7 (P0.7) \n\n// <8=> 8 (P0.8) \n\n// <9=> 9 (P0.9) \n\n// <10=> 10 (P0.10) \n\n// <11=> 11 (P0.11) \n\n// <12=> 12 (P0.12) \n\n// <13=> 13 (P0.13) \n\n// <14=> 14 (P0.14) \n\n// <15=> 15 (P0.15) \n\n// <16=> 16 (P0.16) \n\n// <17=> 17 (P0.17) \n\n// <18=> 18 (P0.18) \n\n// <19=> 19 (P0.19) \n\n// <20=> 20 (P0.20) \n\n// <21=> 21 (P0.21) \n\n// <22=> 22 (P0.22) \n\n// <23=> 23 (P0.23) \n\n// <24=> 24 (P0.24) \n\n// <25=> 25 (P0.25) \n\n// <26=> 26 (P0.26) \n\n// <27=> 27 (P0.27) \n\n// <28=> 28 (P0.28) \n\n// <29=> 29 (P0.29) \n\n// <30=> 30 (P0.30) \n\n// <31=> 31 (P0.31) \n\n// <4294967295=> Not connected \n\n\n\n#ifndef NRF_PWR_MGMT_SLEEP_DEBUG_PIN\n\n#define NRF_PWR_MGMT_SLEEP_DEBUG_PIN 31\n\n#endif\n\n\n\n// </e>\n\n\n\n// <q> NRF_PWR_MGMT_CONFIG_CPU_USAGE_MONITOR_ENABLED  - Enables CPU usage monitor.\n\n \n\n\n\n// <i> Module will trace percentage of CPU usage in one second intervals.\n\n\n\n#ifndef NRF_PWR_MGMT_CONFIG_CPU_USAGE_MONITOR_ENABLED\n\n#define NRF_PWR_MGMT_CONFIG_CPU_USAGE_MONITOR_ENABLED 0\n\n#endif\n\n\n\n// <e> NRF_PWR_MGMT_CONFIG_STANDBY_TIMEOUT_ENABLED - Enable standby timeout.\n\n//==========================================================\n\n#ifndef NRF_PWR_MGMT_CONFIG_STANDBY_TIMEOUT_ENABLED\n\n#define NRF_PWR_MGMT_CONFIG_STANDBY_TIMEOUT_ENABLED 0\n\n#endif\n\n// <o> NRF_PWR_MGMT_CONFIG_STANDBY_TIMEOUT_S - Standby timeout (in seconds). \n\n// <i> Shutdown procedure will begin no earlier than after this number of seconds.\n\n\n\n#ifndef NRF_PWR_MGMT_CONFIG_STANDBY_TIMEOUT_S\n\n#define NRF_PWR_MGMT_CONFIG_STANDBY_TIMEOUT_S 3\n\n#endif\n\n\n\n// </e>\n\n\n\n// <q> NRF_PWR_MGMT_CONFIG_FPU_SUPPORT_ENABLED  - Enables FPU event cleaning.\n\n \n\n\n\n#ifndef NRF_PWR_MGMT_CONFIG_FPU_SUPPORT_ENABLED\n\n#define NRF_PWR_MGMT_CONFIG_FPU_SUPPORT_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_PWR_MGMT_CONFIG_AUTO_SHUTDOWN_RETRY  - Blocked shutdown procedure will be retried every second.\n\n \n\n\n\n#ifndef NRF_PWR_MGMT_CONFIG_AUTO_SHUTDOWN_RETRY\n\n#define NRF_PWR_MGMT_CONFIG_AUTO_SHUTDOWN_RETRY 0\n\n#endif\n\n\n\n// <q> NRF_PWR_MGMT_CONFIG_USE_SCHEDULER  - Module will use @ref app_scheduler.\n\n \n\n\n\n#ifndef NRF_PWR_MGMT_CONFIG_USE_SCHEDULER\n\n#define NRF_PWR_MGMT_CONFIG_USE_SCHEDULER 0\n\n#endif\n\n\n\n// <o> NRF_PWR_MGMT_CONFIG_HANDLER_PRIORITY_COUNT - The number of priorities for module handlers. \n\n// <i> The number of stages of the shutdown process.\n\n\n\n#ifndef NRF_PWR_MGMT_CONFIG_HANDLER_PRIORITY_COUNT\n\n#define NRF_PWR_MGMT_CONFIG_HANDLER_PRIORITY_COUNT 3\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_QUEUE_ENABLED - nrf_queue - Queue module\n\n//==========================================================\n\n#ifndef NRF_QUEUE_ENABLED\n\n#define NRF_QUEUE_ENABLED 1\n\n#endif\n\n// <q> NRF_QUEUE_CLI_CMDS  - Enable CLI commands specific to the module\n\n \n\n\n\n#ifndef NRF_QUEUE_CLI_CMDS\n\n#define NRF_QUEUE_CLI_CMDS 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <q> NRF_SECTION_ITER_ENABLED  - nrf_section_iter - Section iterator\n\n \n\n\n\n#ifndef NRF_SECTION_ITER_ENABLED\n\n#define NRF_SECTION_ITER_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_SORTLIST_ENABLED  - nrf_sortlist - Sorted list\n\n \n\n\n\n#ifndef NRF_SORTLIST_ENABLED\n\n#define NRF_SORTLIST_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_SPI_MNGR_ENABLED  - nrf_spi_mngr - SPI transaction manager\n\n \n\n\n\n#ifndef NRF_SPI_MNGR_ENABLED\n\n#define NRF_SPI_MNGR_ENABLED 0\n\n#endif\n\n\n\n// <q> NRF_STRERROR_ENABLED  - nrf_strerror - Library for converting error code to string.\n\n \n\n\n\n#ifndef NRF_STRERROR_ENABLED\n\n#define NRF_STRERROR_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_TWI_MNGR_ENABLED  - nrf_twi_mngr - TWI transaction manager\n\n \n\n\n\n#ifndef NRF_TWI_MNGR_ENABLED\n\n#define NRF_TWI_MNGR_ENABLED 0\n\n#endif\n\n\n\n// <q> RETARGET_ENABLED  - retarget - Retargeting stdio functions\n\n \n\n\n\n#ifndef RETARGET_ENABLED\n\n#define RETARGET_ENABLED 1\n\n#endif\n\n\n\n// <q> SLIP_ENABLED  - slip - SLIP encoding and decoding\n\n \n\n\n\n#ifndef SLIP_ENABLED\n\n#define SLIP_ENABLED 0\n\n#endif\n\n\n\n// <e> TASK_MANAGER_ENABLED - task_manager - Task manager.\n\n//==========================================================\n\n#ifndef TASK_MANAGER_ENABLED\n\n#define TASK_MANAGER_ENABLED 0\n\n#endif\n\n// <q> TASK_MANAGER_CLI_CMDS  - Enable CLI commands specific to the module\n\n \n\n\n\n#ifndef TASK_MANAGER_CLI_CMDS\n\n#define TASK_MANAGER_CLI_CMDS 0\n\n#endif\n\n\n\n// <o> TASK_MANAGER_CONFIG_MAX_TASKS - Maximum number of tasks which can be created \n\n#ifndef TASK_MANAGER_CONFIG_MAX_TASKS\n\n#define TASK_MANAGER_CONFIG_MAX_TASKS 2\n\n#endif\n\n\n\n// <o> TASK_MANAGER_CONFIG_STACK_SIZE - Stack size for every task (power of 2) \n\n#ifndef TASK_MANAGER_CONFIG_STACK_SIZE\n\n#define TASK_MANAGER_CONFIG_STACK_SIZE 1024\n\n#endif\n\n\n\n// <q> TASK_MANAGER_CONFIG_STACK_PROFILER_ENABLED  - Enable stack profiling.\n\n \n\n\n\n#ifndef TASK_MANAGER_CONFIG_STACK_PROFILER_ENABLED\n\n#define TASK_MANAGER_CONFIG_STACK_PROFILER_ENABLED 1\n\n#endif\n\n\n\n// <o> TASK_MANAGER_CONFIG_STACK_GUARD  - Configures stack guard.\n\n \n\n// <0=> Disabled \n\n// <4=> 32 bytes \n\n// <5=> 64 bytes \n\n// <6=> 128 bytes \n\n// <7=> 256 bytes \n\n// <8=> 512 bytes \n\n\n\n#ifndef TASK_MANAGER_CONFIG_STACK_GUARD\n\n#define TASK_MANAGER_CONFIG_STACK_GUARD 7\n\n#endif\n\n\n\n// </e>\n\n\n\n// <h> app_button - buttons handling module\n\n\n\n//==========================================================\n\n// <q> BUTTON_ENABLED  - Enables Button module\n\n \n\n\n\n#ifndef BUTTON_ENABLED\n\n#define BUTTON_ENABLED 1\n\n#endif\n\n\n\n// <q> BUTTON_HIGH_ACCURACY_ENABLED  - Enables GPIOTE high accuracy for buttons\n\n \n\n\n\n#ifndef BUTTON_HIGH_ACCURACY_ENABLED\n\n#define BUTTON_HIGH_ACCURACY_ENABLED 0\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> app_usbd_cdc_acm - USB CDC ACM class\n\n\n\n//==========================================================\n\n// <q> APP_USBD_CDC_ACM_ENABLED  - Enabling USBD CDC ACM Class library\n\n \n\n\n\n#ifndef APP_USBD_CDC_ACM_ENABLED\n\n#define APP_USBD_CDC_ACM_ENABLED 0\n\n#endif\n\n\n\n// <q> APP_USBD_CDC_ACM_ZLP_ON_EPSIZE_WRITE  - Send ZLP on write with same size as endpoint\n\n \n\n\n\n// <i> If enabled, CDC ACM class will automatically send a zero length packet after transfer which has the same size as endpoint.\n\n// <i> This may limit throughput if a lot of binary data is sent, but in terminal mode operation it makes sure that the data is always displayed right after it is sent.\n\n\n\n#ifndef APP_USBD_CDC_ACM_ZLP_ON_EPSIZE_WRITE\n\n#define APP_USBD_CDC_ACM_ZLP_ON_EPSIZE_WRITE 1\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> nrf_cli - Command line interface\n\n\n\n//==========================================================\n\n// <q> NRF_CLI_ENABLED  - Enable/disable the CLI module.\n\n \n\n\n\n#ifndef NRF_CLI_ENABLED\n\n#define NRF_CLI_ENABLED 0\n\n#endif\n\n\n\n// <o> NRF_CLI_ARGC_MAX - Maximum number of parameters passed to the command handler. \n\n#ifndef NRF_CLI_ARGC_MAX\n\n#define NRF_CLI_ARGC_MAX 12\n\n#endif\n\n\n\n// <q> NRF_CLI_BUILD_IN_CMDS_ENABLED  - CLI built-in commands.\n\n \n\n\n\n#ifndef NRF_CLI_BUILD_IN_CMDS_ENABLED\n\n#define NRF_CLI_BUILD_IN_CMDS_ENABLED 1\n\n#endif\n\n\n\n// <o> NRF_CLI_CMD_BUFF_SIZE - Maximum buffer size for a single command. \n\n#ifndef NRF_CLI_CMD_BUFF_SIZE\n\n#define NRF_CLI_CMD_BUFF_SIZE 128\n\n#endif\n\n\n\n// <q> NRF_CLI_ECHO_STATUS  - CLI echo status. If set, echo is ON.\n\n \n\n\n\n#ifndef NRF_CLI_ECHO_STATUS\n\n#define NRF_CLI_ECHO_STATUS 1\n\n#endif\n\n\n\n// <q> NRF_CLI_WILDCARD_ENABLED  - Enable wildcard functionality for CLI commands.\n\n \n\n\n\n#ifndef NRF_CLI_WILDCARD_ENABLED\n\n#define NRF_CLI_WILDCARD_ENABLED 0\n\n#endif\n\n\n\n// <q> NRF_CLI_METAKEYS_ENABLED  - Enable additional control keys for CLI commands like ctrl+a, ctrl+e, ctrl+w, ctrl+u\n\n \n\n\n\n#ifndef NRF_CLI_METAKEYS_ENABLED\n\n#define NRF_CLI_METAKEYS_ENABLED 0\n\n#endif\n\n\n\n// <o> NRF_CLI_PRINTF_BUFF_SIZE - Maximum print buffer size. \n\n#ifndef NRF_CLI_PRINTF_BUFF_SIZE\n\n#define NRF_CLI_PRINTF_BUFF_SIZE 23\n\n#endif\n\n\n\n// <e> NRF_CLI_HISTORY_ENABLED - Enable CLI history mode.\n\n//==========================================================\n\n#ifndef NRF_CLI_HISTORY_ENABLED\n\n#define NRF_CLI_HISTORY_ENABLED 1\n\n#endif\n\n// <o> NRF_CLI_HISTORY_ELEMENT_SIZE - Size of one memory object reserved for CLI history. \n\n#ifndef NRF_CLI_HISTORY_ELEMENT_SIZE\n\n#define NRF_CLI_HISTORY_ELEMENT_SIZE 32\n\n#endif\n\n\n\n// <o> NRF_CLI_HISTORY_ELEMENT_COUNT - Number of history memory objects. \n\n#ifndef NRF_CLI_HISTORY_ELEMENT_COUNT\n\n#define NRF_CLI_HISTORY_ELEMENT_COUNT 8\n\n#endif\n\n\n\n// </e>\n\n\n\n// <q> NRF_CLI_VT100_COLORS_ENABLED  - CLI VT100 colors.\n\n \n\n\n\n#ifndef NRF_CLI_VT100_COLORS_ENABLED\n\n#define NRF_CLI_VT100_COLORS_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CLI_STATISTICS_ENABLED  - Enable CLI statistics.\n\n \n\n\n\n#ifndef NRF_CLI_STATISTICS_ENABLED\n\n#define NRF_CLI_STATISTICS_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CLI_LOG_BACKEND  - Enable logger backend interface.\n\n \n\n\n\n#ifndef NRF_CLI_LOG_BACKEND\n\n#define NRF_CLI_LOG_BACKEND 1\n\n#endif\n\n\n\n// <q> NRF_CLI_USES_TASK_MANAGER_ENABLED  - Enable CLI to use task_manager\n\n \n\n\n\n#ifndef NRF_CLI_USES_TASK_MANAGER_ENABLED\n\n#define NRF_CLI_USES_TASK_MANAGER_ENABLED 0\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> nrf_fprintf - fprintf function.\n\n\n\n//==========================================================\n\n// <q> NRF_FPRINTF_ENABLED  - Enable/disable fprintf module.\n\n \n\n\n\n#ifndef NRF_FPRINTF_ENABLED\n\n#define NRF_FPRINTF_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_FPRINTF_FLAG_AUTOMATIC_CR_ON_LF_ENABLED  - For each printed LF, function will add CR.\n\n \n\n\n\n#ifndef NRF_FPRINTF_FLAG_AUTOMATIC_CR_ON_LF_ENABLED\n\n#define NRF_FPRINTF_FLAG_AUTOMATIC_CR_ON_LF_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_FPRINTF_DOUBLE_ENABLED  - Enable IEEE-754 double precision formatting.\n\n \n\n\n\n#ifndef NRF_FPRINTF_DOUBLE_ENABLED\n\n#define NRF_FPRINTF_DOUBLE_ENABLED 0\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> nRF_Log \n\n\n\n//==========================================================\n\n// <e> NRF_LOG_BACKEND_RTT_ENABLED - nrf_log_backend_rtt - Log RTT backend\n\n//==========================================================\n\n#ifndef NRF_LOG_BACKEND_RTT_ENABLED\n\n#define NRF_LOG_BACKEND_RTT_ENABLED 1\n\n#endif\n\n// <o> NRF_LOG_BACKEND_RTT_TEMP_BUFFER_SIZE - Size of buffer for partially processed strings. \n\n// <i> Size of the buffer is a trade-off between RAM usage and processing.\n\n// <i> if buffer is smaller then strings will often be fragmented.\n\n// <i> It is recommended to use size which will fit typical log and only the\n\n// <i> longer one will be fragmented.\n\n\n\n#ifndef NRF_LOG_BACKEND_RTT_TEMP_BUFFER_SIZE\n\n#define NRF_LOG_BACKEND_RTT_TEMP_BUFFER_SIZE 64\n\n#endif\n\n\n\n// <o> NRF_LOG_BACKEND_RTT_TX_RETRY_DELAY_MS - Period before retrying writing to RTT \n\n#ifndef NRF_LOG_BACKEND_RTT_TX_RETRY_DELAY_MS\n\n#define NRF_LOG_BACKEND_RTT_TX_RETRY_DELAY_MS 1\n\n#endif\n\n\n\n// <o> NRF_LOG_BACKEND_RTT_TX_RETRY_CNT - Writing to RTT retries. \n\n// <i> If RTT fails to accept any new data after retries\n\n// <i> module assumes that host is not active and on next\n\n// <i> request it will perform only one write attempt.\n\n// <i> On successful writing, module assumes that host is active\n\n// <i> and scheme with retry is applied again.\n\n\n\n#ifndef NRF_LOG_BACKEND_RTT_TX_RETRY_CNT\n\n#define NRF_LOG_BACKEND_RTT_TX_RETRY_CNT 3\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_LOG_ENABLED - nrf_log - Logger\n\n//==========================================================\n\n#ifndef NRF_LOG_ENABLED\n\n#define NRF_LOG_ENABLED 1\n\n#endif\n\n// <h> Log message pool - Configuration of log message pool\n\n\n\n//==========================================================\n\n// <o> NRF_LOG_MSGPOOL_ELEMENT_SIZE - Size of a single element in the pool of memory objects. \n\n// <i> If a small value is set, then performance of logs processing\n\n// <i> is degraded because data is fragmented. Bigger value impacts\n\n// <i> RAM memory utilization. The size is set to fit a message with\n\n// <i> a timestamp and up to 2 arguments in a single memory object.\n\n\n\n#ifndef NRF_LOG_MSGPOOL_ELEMENT_SIZE\n\n#define NRF_LOG_MSGPOOL_ELEMENT_SIZE 20\n\n#endif\n\n\n\n// <o> NRF_LOG_MSGPOOL_ELEMENT_COUNT - Number of elements in the pool of memory objects \n\n// <i> If a small value is set, then it may lead to a deadlock\n\n// <i> in certain cases if backend has high latency and holds\n\n// <i> multiple messages for long time. Bigger value impacts\n\n// <i> RAM memory usage.\n\n\n\n#ifndef NRF_LOG_MSGPOOL_ELEMENT_COUNT\n\n#define NRF_LOG_MSGPOOL_ELEMENT_COUNT 8\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <q> NRF_LOG_ALLOW_OVERFLOW  - Configures behavior when circular buffer is full.\n\n \n\n\n\n// <i> If set then oldest logs are overwritten. Otherwise a \n\n// <i> marker is injected informing about overflow.\n\n\n\n#ifndef NRF_LOG_ALLOW_OVERFLOW\n\n#define NRF_LOG_ALLOW_OVERFLOW 1\n\n#endif\n\n\n\n// <o> NRF_LOG_BUFSIZE  - Size of the buffer for storing logs (in bytes).\n\n \n\n\n\n// <i> Must be power of 2 and multiple of 4.\n\n// <i> If NRF_LOG_DEFERRED = 0 then buffer size can be reduced to minimum.\n\n// <128=> 128 \n\n// <256=> 256 \n\n// <512=> 512 \n\n// <1024=> 1024 \n\n// <2048=> 2048 \n\n// <4096=> 4096 \n\n// <8192=> 8192 \n\n// <16384=> 16384 \n\n\n\n#ifndef NRF_LOG_BUFSIZE\n\n#define NRF_LOG_BUFSIZE 1024\n\n#endif\n\n\n\n// <q> NRF_LOG_CLI_CMDS  - Enable CLI commands for the module.\n\n \n\n\n\n#ifndef NRF_LOG_CLI_CMDS\n\n#define NRF_LOG_CLI_CMDS 0\n\n#endif\n\n\n\n// <o> NRF_LOG_DEFAULT_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_LOG_DEFAULT_LEVEL\n\n#define NRF_LOG_DEFAULT_LEVEL 3\n\n#endif\n\n\n\n// <q> NRF_LOG_DEFERRED  - Enable deffered logger.\n\n \n\n\n\n// <i> Log data is buffered and can be processed in idle.\n\n\n\n#ifndef NRF_LOG_DEFERRED\n\n#define NRF_LOG_DEFERRED 1\n\n#endif\n\n\n\n// <q> NRF_LOG_FILTERS_ENABLED  - Enable dynamic filtering of logs.\n\n \n\n\n\n#ifndef NRF_LOG_FILTERS_ENABLED\n\n#define NRF_LOG_FILTERS_ENABLED 0\n\n#endif\n\n\n\n// <q> NRF_LOG_NON_DEFFERED_CRITICAL_REGION_ENABLED  - Enable use of critical region for non deffered mode when flushing logs.\n\n \n\n\n\n// <i> When enabled NRF_LOG_FLUSH is called from critical section when non deffered mode is used.\n\n// <i> Log output will never be corrupted as access to the log backend is exclusive\n\n// <i> but system will spend significant amount of time in critical section\n\n\n\n#ifndef NRF_LOG_NON_DEFFERED_CRITICAL_REGION_ENABLED\n\n#define NRF_LOG_NON_DEFFERED_CRITICAL_REGION_ENABLED 0\n\n#endif\n\n\n\n// <o> NRF_LOG_STR_PUSH_BUFFER_SIZE  - Size of the buffer dedicated for strings stored using @ref NRF_LOG_PUSH.\n\n \n\n// <16=> 16 \n\n// <32=> 32 \n\n// <64=> 64 \n\n// <128=> 128 \n\n// <256=> 256 \n\n// <512=> 512 \n\n// <1024=> 1024 \n\n\n\n#ifndef NRF_LOG_STR_PUSH_BUFFER_SIZE\n\n#define NRF_LOG_STR_PUSH_BUFFER_SIZE 128\n\n#endif\n\n\n\n// <o> NRF_LOG_STR_PUSH_BUFFER_SIZE  - Size of the buffer dedicated for strings stored using @ref NRF_LOG_PUSH.\n\n \n\n// <16=> 16 \n\n// <32=> 32 \n\n// <64=> 64 \n\n// <128=> 128 \n\n// <256=> 256 \n\n// <512=> 512 \n\n// <1024=> 1024 \n\n\n\n#ifndef NRF_LOG_STR_PUSH_BUFFER_SIZE\n\n#define NRF_LOG_STR_PUSH_BUFFER_SIZE 128\n\n#endif\n\n\n\n// <e> NRF_LOG_USES_COLORS - If enabled then ANSI escape code for colors is prefixed to every string\n\n//==========================================================\n\n#ifndef NRF_LOG_USES_COLORS\n\n#define NRF_LOG_USES_COLORS 0\n\n#endif\n\n// <o> NRF_LOG_COLOR_DEFAULT  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_LOG_COLOR_DEFAULT\n\n#define NRF_LOG_COLOR_DEFAULT 0\n\n#endif\n\n\n\n// <o> NRF_LOG_ERROR_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_LOG_ERROR_COLOR\n\n#define NRF_LOG_ERROR_COLOR 2\n\n#endif\n\n\n\n// <o> NRF_LOG_WARNING_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_LOG_WARNING_COLOR\n\n#define NRF_LOG_WARNING_COLOR 4\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_LOG_USES_TIMESTAMP - Enable timestamping\n\n\n\n// <i> Function for getting the timestamp is provided by the user\n\n//==========================================================\n\n#ifndef NRF_LOG_USES_TIMESTAMP\n\n#define NRF_LOG_USES_TIMESTAMP 0\n\n#endif\n\n// <o> NRF_LOG_TIMESTAMP_DEFAULT_FREQUENCY - Default frequency of the timestamp (in Hz) or 0 to use app_timer frequency. \n\n#ifndef NRF_LOG_TIMESTAMP_DEFAULT_FREQUENCY\n\n#define NRF_LOG_TIMESTAMP_DEFAULT_FREQUENCY 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <h> nrf_log module configuration \n\n\n\n//==========================================================\n\n// <h> nrf_log in nRF_Core \n\n\n\n//==========================================================\n\n// <e> NRF_MPU_LIB_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRF_MPU_LIB_CONFIG_LOG_ENABLED\n\n#define NRF_MPU_LIB_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRF_MPU_LIB_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_MPU_LIB_CONFIG_LOG_LEVEL\n\n#define NRF_MPU_LIB_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_MPU_LIB_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_MPU_LIB_CONFIG_INFO_COLOR\n\n#define NRF_MPU_LIB_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRF_MPU_LIB_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_MPU_LIB_CONFIG_DEBUG_COLOR\n\n#define NRF_MPU_LIB_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_STACK_GUARD_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRF_STACK_GUARD_CONFIG_LOG_ENABLED\n\n#define NRF_STACK_GUARD_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRF_STACK_GUARD_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_STACK_GUARD_CONFIG_LOG_LEVEL\n\n#define NRF_STACK_GUARD_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_STACK_GUARD_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_STACK_GUARD_CONFIG_INFO_COLOR\n\n#define NRF_STACK_GUARD_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRF_STACK_GUARD_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_STACK_GUARD_CONFIG_DEBUG_COLOR\n\n#define NRF_STACK_GUARD_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> TASK_MANAGER_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef TASK_MANAGER_CONFIG_LOG_ENABLED\n\n#define TASK_MANAGER_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> TASK_MANAGER_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef TASK_MANAGER_CONFIG_LOG_LEVEL\n\n#define TASK_MANAGER_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> TASK_MANAGER_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef TASK_MANAGER_CONFIG_INFO_COLOR\n\n#define TASK_MANAGER_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> TASK_MANAGER_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef TASK_MANAGER_CONFIG_DEBUG_COLOR\n\n#define TASK_MANAGER_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> nrf_log in nRF_Drivers \n\n\n\n//==========================================================\n\n// <e> CLOCK_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef CLOCK_CONFIG_LOG_ENABLED\n\n#define CLOCK_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> CLOCK_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef CLOCK_CONFIG_LOG_LEVEL\n\n#define CLOCK_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> CLOCK_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef CLOCK_CONFIG_INFO_COLOR\n\n#define CLOCK_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> CLOCK_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef CLOCK_CONFIG_DEBUG_COLOR\n\n#define CLOCK_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> COMP_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef COMP_CONFIG_LOG_ENABLED\n\n#define COMP_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> COMP_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef COMP_CONFIG_LOG_LEVEL\n\n#define COMP_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> COMP_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef COMP_CONFIG_INFO_COLOR\n\n#define COMP_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> COMP_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef COMP_CONFIG_DEBUG_COLOR\n\n#define COMP_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> GPIOTE_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef GPIOTE_CONFIG_LOG_ENABLED\n\n#define GPIOTE_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> GPIOTE_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef GPIOTE_CONFIG_LOG_LEVEL\n\n#define GPIOTE_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> GPIOTE_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef GPIOTE_CONFIG_INFO_COLOR\n\n#define GPIOTE_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> GPIOTE_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef GPIOTE_CONFIG_DEBUG_COLOR\n\n#define GPIOTE_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> LPCOMP_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef LPCOMP_CONFIG_LOG_ENABLED\n\n#define LPCOMP_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> LPCOMP_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef LPCOMP_CONFIG_LOG_LEVEL\n\n#define LPCOMP_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> LPCOMP_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef LPCOMP_CONFIG_INFO_COLOR\n\n#define LPCOMP_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> LPCOMP_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef LPCOMP_CONFIG_DEBUG_COLOR\n\n#define LPCOMP_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> MAX3421E_HOST_CONFIG_LOG_ENABLED - Enable logging in the module\n\n//==========================================================\n\n#ifndef MAX3421E_HOST_CONFIG_LOG_ENABLED\n\n#define MAX3421E_HOST_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> MAX3421E_HOST_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef MAX3421E_HOST_CONFIG_LOG_LEVEL\n\n#define MAX3421E_HOST_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> MAX3421E_HOST_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef MAX3421E_HOST_CONFIG_INFO_COLOR\n\n#define MAX3421E_HOST_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> MAX3421E_HOST_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef MAX3421E_HOST_CONFIG_DEBUG_COLOR\n\n#define MAX3421E_HOST_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRFX_USBD_CONFIG_LOG_ENABLED - Enable logging in the module\n\n//==========================================================\n\n#ifndef NRFX_USBD_CONFIG_LOG_ENABLED\n\n#define NRFX_USBD_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_USBD_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_USBD_CONFIG_LOG_LEVEL\n\n#define NRFX_USBD_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_USBD_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_USBD_CONFIG_INFO_COLOR\n\n#define NRFX_USBD_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_USBD_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_USBD_CONFIG_DEBUG_COLOR\n\n#define NRFX_USBD_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> PDM_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef PDM_CONFIG_LOG_ENABLED\n\n#define PDM_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> PDM_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef PDM_CONFIG_LOG_LEVEL\n\n#define PDM_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> PDM_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef PDM_CONFIG_INFO_COLOR\n\n#define PDM_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> PDM_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef PDM_CONFIG_DEBUG_COLOR\n\n#define PDM_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> PPI_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef PPI_CONFIG_LOG_ENABLED\n\n#define PPI_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> PPI_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef PPI_CONFIG_LOG_LEVEL\n\n#define PPI_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> PPI_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef PPI_CONFIG_INFO_COLOR\n\n#define PPI_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> PPI_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef PPI_CONFIG_DEBUG_COLOR\n\n#define PPI_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> PWM_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef PWM_CONFIG_LOG_ENABLED\n\n#define PWM_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> PWM_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef PWM_CONFIG_LOG_LEVEL\n\n#define PWM_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> PWM_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef PWM_CONFIG_INFO_COLOR\n\n#define PWM_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> PWM_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef PWM_CONFIG_DEBUG_COLOR\n\n#define PWM_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> QDEC_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef QDEC_CONFIG_LOG_ENABLED\n\n#define QDEC_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> QDEC_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef QDEC_CONFIG_LOG_LEVEL\n\n#define QDEC_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> QDEC_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef QDEC_CONFIG_INFO_COLOR\n\n#define QDEC_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> QDEC_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef QDEC_CONFIG_DEBUG_COLOR\n\n#define QDEC_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> RNG_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef RNG_CONFIG_LOG_ENABLED\n\n#define RNG_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> RNG_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef RNG_CONFIG_LOG_LEVEL\n\n#define RNG_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> RNG_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef RNG_CONFIG_INFO_COLOR\n\n#define RNG_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> RNG_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef RNG_CONFIG_DEBUG_COLOR\n\n#define RNG_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// <q> RNG_CONFIG_RANDOM_NUMBER_LOG_ENABLED  - Enables logging of random numbers.\n\n \n\n\n\n#ifndef RNG_CONFIG_RANDOM_NUMBER_LOG_ENABLED\n\n#define RNG_CONFIG_RANDOM_NUMBER_LOG_ENABLED 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> RTC_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef RTC_CONFIG_LOG_ENABLED\n\n#define RTC_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> RTC_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef RTC_CONFIG_LOG_LEVEL\n\n#define RTC_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> RTC_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef RTC_CONFIG_INFO_COLOR\n\n#define RTC_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> RTC_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef RTC_CONFIG_DEBUG_COLOR\n\n#define RTC_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> SAADC_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef SAADC_CONFIG_LOG_ENABLED\n\n#define SAADC_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> SAADC_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef SAADC_CONFIG_LOG_LEVEL\n\n#define SAADC_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> SAADC_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef SAADC_CONFIG_INFO_COLOR\n\n#define SAADC_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> SAADC_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef SAADC_CONFIG_DEBUG_COLOR\n\n#define SAADC_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> SPIS_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef SPIS_CONFIG_LOG_ENABLED\n\n#define SPIS_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> SPIS_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef SPIS_CONFIG_LOG_LEVEL\n\n#define SPIS_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> SPIS_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef SPIS_CONFIG_INFO_COLOR\n\n#define SPIS_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> SPIS_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef SPIS_CONFIG_DEBUG_COLOR\n\n#define SPIS_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> SPI_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef SPI_CONFIG_LOG_ENABLED\n\n#define SPI_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> SPI_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef SPI_CONFIG_LOG_LEVEL\n\n#define SPI_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> SPI_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef SPI_CONFIG_INFO_COLOR\n\n#define SPI_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> SPI_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef SPI_CONFIG_DEBUG_COLOR\n\n#define SPI_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> TIMER_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef TIMER_CONFIG_LOG_ENABLED\n\n#define TIMER_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> TIMER_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef TIMER_CONFIG_LOG_LEVEL\n\n#define TIMER_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> TIMER_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef TIMER_CONFIG_INFO_COLOR\n\n#define TIMER_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> TIMER_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef TIMER_CONFIG_DEBUG_COLOR\n\n#define TIMER_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> TWIS_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef TWIS_CONFIG_LOG_ENABLED\n\n#define TWIS_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> TWIS_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef TWIS_CONFIG_LOG_LEVEL\n\n#define TWIS_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> TWIS_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef TWIS_CONFIG_INFO_COLOR\n\n#define TWIS_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> TWIS_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef TWIS_CONFIG_DEBUG_COLOR\n\n#define TWIS_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> TWI_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef TWI_CONFIG_LOG_ENABLED\n\n#define TWI_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> TWI_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef TWI_CONFIG_LOG_LEVEL\n\n#define TWI_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> TWI_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef TWI_CONFIG_INFO_COLOR\n\n#define TWI_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> TWI_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef TWI_CONFIG_DEBUG_COLOR\n\n#define TWI_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> UART_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef UART_CONFIG_LOG_ENABLED\n\n#define UART_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> UART_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef UART_CONFIG_LOG_LEVEL\n\n#define UART_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> UART_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef UART_CONFIG_INFO_COLOR\n\n#define UART_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> UART_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef UART_CONFIG_DEBUG_COLOR\n\n#define UART_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> USBD_CONFIG_LOG_ENABLED - Enable logging in the module\n\n//==========================================================\n\n#ifndef USBD_CONFIG_LOG_ENABLED\n\n#define USBD_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> USBD_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef USBD_CONFIG_LOG_LEVEL\n\n#define USBD_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> USBD_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef USBD_CONFIG_INFO_COLOR\n\n#define USBD_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> USBD_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef USBD_CONFIG_DEBUG_COLOR\n\n#define USBD_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> WDT_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef WDT_CONFIG_LOG_ENABLED\n\n#define WDT_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> WDT_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef WDT_CONFIG_LOG_LEVEL\n\n#define WDT_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> WDT_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef WDT_CONFIG_INFO_COLOR\n\n#define WDT_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> WDT_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef WDT_CONFIG_DEBUG_COLOR\n\n#define WDT_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> nrf_log in nRF_Libraries \n\n\n\n//==========================================================\n\n// <e> APP_BUTTON_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef APP_BUTTON_CONFIG_LOG_ENABLED\n\n#define APP_BUTTON_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> APP_BUTTON_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef APP_BUTTON_CONFIG_LOG_LEVEL\n\n#define APP_BUTTON_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> APP_BUTTON_CONFIG_INITIAL_LOG_LEVEL  - Initial severity level if dynamic filtering is enabled.\n\n \n\n\n\n// <i> If module generates a lot of logs, initial log level can\n\n// <i> be decreased to prevent flooding. Severity level can be\n\n// <i> increased on instance basis.\n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef APP_BUTTON_CONFIG_INITIAL_LOG_LEVEL\n\n#define APP_BUTTON_CONFIG_INITIAL_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> APP_BUTTON_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef APP_BUTTON_CONFIG_INFO_COLOR\n\n#define APP_BUTTON_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> APP_BUTTON_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef APP_BUTTON_CONFIG_DEBUG_COLOR\n\n#define APP_BUTTON_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> APP_TIMER_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef APP_TIMER_CONFIG_LOG_ENABLED\n\n#define APP_TIMER_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> APP_TIMER_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef APP_TIMER_CONFIG_LOG_LEVEL\n\n#define APP_TIMER_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> APP_TIMER_CONFIG_INITIAL_LOG_LEVEL  - Initial severity level if dynamic filtering is enabled.\n\n \n\n\n\n// <i> If module generates a lot of logs, initial log level can\n\n// <i> be decreased to prevent flooding. Severity level can be\n\n// <i> increased on instance basis.\n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef APP_TIMER_CONFIG_INITIAL_LOG_LEVEL\n\n#define APP_TIMER_CONFIG_INITIAL_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> APP_TIMER_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef APP_TIMER_CONFIG_INFO_COLOR\n\n#define APP_TIMER_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> APP_TIMER_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef APP_TIMER_CONFIG_DEBUG_COLOR\n\n#define APP_TIMER_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> APP_USBD_CDC_ACM_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef APP_USBD_CDC_ACM_CONFIG_LOG_ENABLED\n\n#define APP_USBD_CDC_ACM_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> APP_USBD_CDC_ACM_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef APP_USBD_CDC_ACM_CONFIG_LOG_LEVEL\n\n#define APP_USBD_CDC_ACM_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> APP_USBD_CDC_ACM_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef APP_USBD_CDC_ACM_CONFIG_INFO_COLOR\n\n#define APP_USBD_CDC_ACM_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> APP_USBD_CDC_ACM_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef APP_USBD_CDC_ACM_CONFIG_DEBUG_COLOR\n\n#define APP_USBD_CDC_ACM_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> APP_USBD_CONFIG_LOG_ENABLED - Enable logging in the module.\n\n//==========================================================\n\n#ifndef APP_USBD_CONFIG_LOG_ENABLED\n\n#define APP_USBD_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> APP_USBD_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef APP_USBD_CONFIG_LOG_LEVEL\n\n#define APP_USBD_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> APP_USBD_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef APP_USBD_CONFIG_INFO_COLOR\n\n#define APP_USBD_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> APP_USBD_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef APP_USBD_CONFIG_DEBUG_COLOR\n\n#define APP_USBD_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> APP_USBD_DUMMY_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef APP_USBD_DUMMY_CONFIG_LOG_ENABLED\n\n#define APP_USBD_DUMMY_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> APP_USBD_DUMMY_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef APP_USBD_DUMMY_CONFIG_LOG_LEVEL\n\n#define APP_USBD_DUMMY_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> APP_USBD_DUMMY_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef APP_USBD_DUMMY_CONFIG_INFO_COLOR\n\n#define APP_USBD_DUMMY_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> APP_USBD_DUMMY_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef APP_USBD_DUMMY_CONFIG_DEBUG_COLOR\n\n#define APP_USBD_DUMMY_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> APP_USBD_MSC_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef APP_USBD_MSC_CONFIG_LOG_ENABLED\n\n#define APP_USBD_MSC_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> APP_USBD_MSC_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef APP_USBD_MSC_CONFIG_LOG_LEVEL\n\n#define APP_USBD_MSC_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> APP_USBD_MSC_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef APP_USBD_MSC_CONFIG_INFO_COLOR\n\n#define APP_USBD_MSC_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> APP_USBD_MSC_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef APP_USBD_MSC_CONFIG_DEBUG_COLOR\n\n#define APP_USBD_MSC_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> APP_USBD_NRF_DFU_TRIGGER_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef APP_USBD_NRF_DFU_TRIGGER_CONFIG_LOG_ENABLED\n\n#define APP_USBD_NRF_DFU_TRIGGER_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> APP_USBD_NRF_DFU_TRIGGER_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef APP_USBD_NRF_DFU_TRIGGER_CONFIG_LOG_LEVEL\n\n#define APP_USBD_NRF_DFU_TRIGGER_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> APP_USBD_NRF_DFU_TRIGGER_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef APP_USBD_NRF_DFU_TRIGGER_CONFIG_INFO_COLOR\n\n#define APP_USBD_NRF_DFU_TRIGGER_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> APP_USBD_NRF_DFU_TRIGGER_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef APP_USBD_NRF_DFU_TRIGGER_CONFIG_DEBUG_COLOR\n\n#define APP_USBD_NRF_DFU_TRIGGER_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_ATFIFO_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRF_ATFIFO_CONFIG_LOG_ENABLED\n\n#define NRF_ATFIFO_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRF_ATFIFO_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_ATFIFO_CONFIG_LOG_LEVEL\n\n#define NRF_ATFIFO_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_ATFIFO_CONFIG_LOG_INIT_FILTER_LEVEL  - Initial severity level if dynamic filtering is enabled\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_ATFIFO_CONFIG_LOG_INIT_FILTER_LEVEL\n\n#define NRF_ATFIFO_CONFIG_LOG_INIT_FILTER_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_ATFIFO_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_ATFIFO_CONFIG_INFO_COLOR\n\n#define NRF_ATFIFO_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRF_ATFIFO_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_ATFIFO_CONFIG_DEBUG_COLOR\n\n#define NRF_ATFIFO_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_BALLOC_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRF_BALLOC_CONFIG_LOG_ENABLED\n\n#define NRF_BALLOC_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRF_BALLOC_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_BALLOC_CONFIG_LOG_LEVEL\n\n#define NRF_BALLOC_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_BALLOC_CONFIG_INITIAL_LOG_LEVEL  - Initial severity level if dynamic filtering is enabled.\n\n \n\n\n\n// <i> If module generates a lot of logs, initial log level can\n\n// <i> be decreased to prevent flooding. Severity level can be\n\n// <i> increased on instance basis.\n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_BALLOC_CONFIG_INITIAL_LOG_LEVEL\n\n#define NRF_BALLOC_CONFIG_INITIAL_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_BALLOC_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_BALLOC_CONFIG_INFO_COLOR\n\n#define NRF_BALLOC_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRF_BALLOC_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_BALLOC_CONFIG_DEBUG_COLOR\n\n#define NRF_BALLOC_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_BLOCK_DEV_EMPTY_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRF_BLOCK_DEV_EMPTY_CONFIG_LOG_ENABLED\n\n#define NRF_BLOCK_DEV_EMPTY_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRF_BLOCK_DEV_EMPTY_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_BLOCK_DEV_EMPTY_CONFIG_LOG_LEVEL\n\n#define NRF_BLOCK_DEV_EMPTY_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_BLOCK_DEV_EMPTY_CONFIG_LOG_INIT_FILTER_LEVEL  - Initial severity level if dynamic filtering is enabled\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_BLOCK_DEV_EMPTY_CONFIG_LOG_INIT_FILTER_LEVEL\n\n#define NRF_BLOCK_DEV_EMPTY_CONFIG_LOG_INIT_FILTER_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_BLOCK_DEV_EMPTY_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_BLOCK_DEV_EMPTY_CONFIG_INFO_COLOR\n\n#define NRF_BLOCK_DEV_EMPTY_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRF_BLOCK_DEV_EMPTY_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_BLOCK_DEV_EMPTY_CONFIG_DEBUG_COLOR\n\n#define NRF_BLOCK_DEV_EMPTY_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_BLOCK_DEV_QSPI_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRF_BLOCK_DEV_QSPI_CONFIG_LOG_ENABLED\n\n#define NRF_BLOCK_DEV_QSPI_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRF_BLOCK_DEV_QSPI_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_BLOCK_DEV_QSPI_CONFIG_LOG_LEVEL\n\n#define NRF_BLOCK_DEV_QSPI_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_BLOCK_DEV_QSPI_CONFIG_LOG_INIT_FILTER_LEVEL  - Initial severity level if dynamic filtering is enabled\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_BLOCK_DEV_QSPI_CONFIG_LOG_INIT_FILTER_LEVEL\n\n#define NRF_BLOCK_DEV_QSPI_CONFIG_LOG_INIT_FILTER_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_BLOCK_DEV_QSPI_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_BLOCK_DEV_QSPI_CONFIG_INFO_COLOR\n\n#define NRF_BLOCK_DEV_QSPI_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRF_BLOCK_DEV_QSPI_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_BLOCK_DEV_QSPI_CONFIG_DEBUG_COLOR\n\n#define NRF_BLOCK_DEV_QSPI_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_BLOCK_DEV_RAM_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRF_BLOCK_DEV_RAM_CONFIG_LOG_ENABLED\n\n#define NRF_BLOCK_DEV_RAM_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRF_BLOCK_DEV_RAM_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_BLOCK_DEV_RAM_CONFIG_LOG_LEVEL\n\n#define NRF_BLOCK_DEV_RAM_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_BLOCK_DEV_RAM_CONFIG_LOG_INIT_FILTER_LEVEL  - Initial severity level if dynamic filtering is enabled\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_BLOCK_DEV_RAM_CONFIG_LOG_INIT_FILTER_LEVEL\n\n#define NRF_BLOCK_DEV_RAM_CONFIG_LOG_INIT_FILTER_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_BLOCK_DEV_RAM_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_BLOCK_DEV_RAM_CONFIG_INFO_COLOR\n\n#define NRF_BLOCK_DEV_RAM_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRF_BLOCK_DEV_RAM_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_BLOCK_DEV_RAM_CONFIG_DEBUG_COLOR\n\n#define NRF_BLOCK_DEV_RAM_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_CLI_BLE_UART_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRF_CLI_BLE_UART_CONFIG_LOG_ENABLED\n\n#define NRF_CLI_BLE_UART_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRF_CLI_BLE_UART_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_CLI_BLE_UART_CONFIG_LOG_LEVEL\n\n#define NRF_CLI_BLE_UART_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_CLI_BLE_UART_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_CLI_BLE_UART_CONFIG_INFO_COLOR\n\n#define NRF_CLI_BLE_UART_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRF_CLI_BLE_UART_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_CLI_BLE_UART_CONFIG_DEBUG_COLOR\n\n#define NRF_CLI_BLE_UART_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_CLI_LIBUARTE_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRF_CLI_LIBUARTE_CONFIG_LOG_ENABLED\n\n#define NRF_CLI_LIBUARTE_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRF_CLI_LIBUARTE_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_CLI_LIBUARTE_CONFIG_LOG_LEVEL\n\n#define NRF_CLI_LIBUARTE_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_CLI_LIBUARTE_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_CLI_LIBUARTE_CONFIG_INFO_COLOR\n\n#define NRF_CLI_LIBUARTE_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRF_CLI_LIBUARTE_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_CLI_LIBUARTE_CONFIG_DEBUG_COLOR\n\n#define NRF_CLI_LIBUARTE_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_CLI_UART_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRF_CLI_UART_CONFIG_LOG_ENABLED\n\n#define NRF_CLI_UART_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRF_CLI_UART_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_CLI_UART_CONFIG_LOG_LEVEL\n\n#define NRF_CLI_UART_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_CLI_UART_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_CLI_UART_CONFIG_INFO_COLOR\n\n#define NRF_CLI_UART_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRF_CLI_UART_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_CLI_UART_CONFIG_DEBUG_COLOR\n\n#define NRF_CLI_UART_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_LIBUARTE_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRF_LIBUARTE_CONFIG_LOG_ENABLED\n\n#define NRF_LIBUARTE_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRF_LIBUARTE_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_LIBUARTE_CONFIG_LOG_LEVEL\n\n#define NRF_LIBUARTE_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_LIBUARTE_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_LIBUARTE_CONFIG_INFO_COLOR\n\n#define NRF_LIBUARTE_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRF_LIBUARTE_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_LIBUARTE_CONFIG_DEBUG_COLOR\n\n#define NRF_LIBUARTE_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_MEMOBJ_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRF_MEMOBJ_CONFIG_LOG_ENABLED\n\n#define NRF_MEMOBJ_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRF_MEMOBJ_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_MEMOBJ_CONFIG_LOG_LEVEL\n\n#define NRF_MEMOBJ_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_MEMOBJ_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_MEMOBJ_CONFIG_INFO_COLOR\n\n#define NRF_MEMOBJ_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRF_MEMOBJ_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_MEMOBJ_CONFIG_DEBUG_COLOR\n\n#define NRF_MEMOBJ_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_PWR_MGMT_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRF_PWR_MGMT_CONFIG_LOG_ENABLED\n\n#define NRF_PWR_MGMT_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRF_PWR_MGMT_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_PWR_MGMT_CONFIG_LOG_LEVEL\n\n#define NRF_PWR_MGMT_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_PWR_MGMT_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_PWR_MGMT_CONFIG_INFO_COLOR\n\n#define NRF_PWR_MGMT_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRF_PWR_MGMT_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_PWR_MGMT_CONFIG_DEBUG_COLOR\n\n#define NRF_PWR_MGMT_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_QUEUE_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRF_QUEUE_CONFIG_LOG_ENABLED\n\n#define NRF_QUEUE_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRF_QUEUE_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_QUEUE_CONFIG_LOG_LEVEL\n\n#define NRF_QUEUE_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_QUEUE_CONFIG_LOG_INIT_FILTER_LEVEL  - Initial severity level if dynamic filtering is enabled\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_QUEUE_CONFIG_LOG_INIT_FILTER_LEVEL\n\n#define NRF_QUEUE_CONFIG_LOG_INIT_FILTER_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_QUEUE_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_QUEUE_CONFIG_INFO_COLOR\n\n#define NRF_QUEUE_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRF_QUEUE_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_QUEUE_CONFIG_DEBUG_COLOR\n\n#define NRF_QUEUE_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_SDH_ANT_LOG_ENABLED - Enable logging in SoftDevice handler (ANT) module.\n\n//==========================================================\n\n#ifndef NRF_SDH_ANT_LOG_ENABLED\n\n#define NRF_SDH_ANT_LOG_ENABLED 0\n\n#endif\n\n// <o> NRF_SDH_ANT_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_SDH_ANT_LOG_LEVEL\n\n#define NRF_SDH_ANT_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_SDH_ANT_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_SDH_ANT_INFO_COLOR\n\n#define NRF_SDH_ANT_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRF_SDH_ANT_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_SDH_ANT_DEBUG_COLOR\n\n#define NRF_SDH_ANT_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_SDH_BLE_LOG_ENABLED - Enable logging in SoftDevice handler (BLE) module.\n\n//==========================================================\n\n#ifndef NRF_SDH_BLE_LOG_ENABLED\n\n#define NRF_SDH_BLE_LOG_ENABLED 1\n\n#endif\n\n// <o> NRF_SDH_BLE_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_SDH_BLE_LOG_LEVEL\n\n#define NRF_SDH_BLE_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_SDH_BLE_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_SDH_BLE_INFO_COLOR\n\n#define NRF_SDH_BLE_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRF_SDH_BLE_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_SDH_BLE_DEBUG_COLOR\n\n#define NRF_SDH_BLE_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_SDH_LOG_ENABLED - Enable logging in SoftDevice handler module.\n\n//==========================================================\n\n#ifndef NRF_SDH_LOG_ENABLED\n\n#define NRF_SDH_LOG_ENABLED 1\n\n#endif\n\n// <o> NRF_SDH_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_SDH_LOG_LEVEL\n\n#define NRF_SDH_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_SDH_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_SDH_INFO_COLOR\n\n#define NRF_SDH_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRF_SDH_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_SDH_DEBUG_COLOR\n\n#define NRF_SDH_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_SDH_SOC_LOG_ENABLED - Enable logging in SoftDevice handler (SoC) module.\n\n//==========================================================\n\n#ifndef NRF_SDH_SOC_LOG_ENABLED\n\n#define NRF_SDH_SOC_LOG_ENABLED 1\n\n#endif\n\n// <o> NRF_SDH_SOC_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_SDH_SOC_LOG_LEVEL\n\n#define NRF_SDH_SOC_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_SDH_SOC_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_SDH_SOC_INFO_COLOR\n\n#define NRF_SDH_SOC_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRF_SDH_SOC_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_SDH_SOC_DEBUG_COLOR\n\n#define NRF_SDH_SOC_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_SORTLIST_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRF_SORTLIST_CONFIG_LOG_ENABLED\n\n#define NRF_SORTLIST_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRF_SORTLIST_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_SORTLIST_CONFIG_LOG_LEVEL\n\n#define NRF_SORTLIST_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_SORTLIST_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_SORTLIST_CONFIG_INFO_COLOR\n\n#define NRF_SORTLIST_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRF_SORTLIST_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_SORTLIST_CONFIG_DEBUG_COLOR\n\n#define NRF_SORTLIST_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_TWI_SENSOR_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRF_TWI_SENSOR_CONFIG_LOG_ENABLED\n\n#define NRF_TWI_SENSOR_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRF_TWI_SENSOR_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_TWI_SENSOR_CONFIG_LOG_LEVEL\n\n#define NRF_TWI_SENSOR_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_TWI_SENSOR_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_TWI_SENSOR_CONFIG_INFO_COLOR\n\n#define NRF_TWI_SENSOR_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRF_TWI_SENSOR_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_TWI_SENSOR_CONFIG_DEBUG_COLOR\n\n#define NRF_TWI_SENSOR_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> PM_LOG_ENABLED - Enable logging in Peer Manager and its submodules.\n\n//==========================================================\n\n#ifndef PM_LOG_ENABLED\n\n#define PM_LOG_ENABLED 1\n\n#endif\n\n// <o> PM_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef PM_LOG_LEVEL\n\n#define PM_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> PM_LOG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef PM_LOG_INFO_COLOR\n\n#define PM_LOG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> PM_LOG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef PM_LOG_DEBUG_COLOR\n\n#define PM_LOG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> nrf_log in nRF_Serialization \n\n\n\n//==========================================================\n\n// <e> SER_HAL_TRANSPORT_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef SER_HAL_TRANSPORT_CONFIG_LOG_ENABLED\n\n#define SER_HAL_TRANSPORT_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> SER_HAL_TRANSPORT_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef SER_HAL_TRANSPORT_CONFIG_LOG_LEVEL\n\n#define SER_HAL_TRANSPORT_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> SER_HAL_TRANSPORT_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef SER_HAL_TRANSPORT_CONFIG_INFO_COLOR\n\n#define SER_HAL_TRANSPORT_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> SER_HAL_TRANSPORT_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef SER_HAL_TRANSPORT_CONFIG_DEBUG_COLOR\n\n#define SER_HAL_TRANSPORT_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// </e>\n\n\n\n// <q> NRF_LOG_STR_FORMATTER_TIMESTAMP_FORMAT_ENABLED  - nrf_log_str_formatter - Log string formatter\n\n \n\n\n\n#ifndef NRF_LOG_STR_FORMATTER_TIMESTAMP_FORMAT_ENABLED\n\n#define NRF_LOG_STR_FORMATTER_TIMESTAMP_FORMAT_ENABLED 1\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> nRF_NFC \n\n\n\n//==========================================================\n\n// <q> NFC_AC_REC_ENABLED  - nfc_ac_rec - NFC NDEF Alternative Carrier record encoder\n\n \n\n\n\n#ifndef NFC_AC_REC_ENABLED\n\n#define NFC_AC_REC_ENABLED 0\n\n#endif\n\n\n\n// <q> NFC_AC_REC_PARSER_ENABLED  - nfc_ac_rec_parser - Alternative Carrier record parser\n\n \n\n\n\n#ifndef NFC_AC_REC_PARSER_ENABLED\n\n#define NFC_AC_REC_PARSER_ENABLED 0\n\n#endif\n\n\n\n// <e> NFC_BLE_OOB_ADVDATA_ENABLED - nfc_ble_oob_advdata - AD data for OOB pairing encoder\n\n//==========================================================\n\n#ifndef NFC_BLE_OOB_ADVDATA_ENABLED\n\n#define NFC_BLE_OOB_ADVDATA_ENABLED 0\n\n#endif\n\n// <o> ADVANCED_ADVDATA_SUPPORT  - Non-mandatory AD types for BLE OOB pairing are encoded inside the NDEF message (e.g. service UUIDs)\n\n \n\n// <1=> Enabled \n\n// <0=> Disabled \n\n\n\n#ifndef ADVANCED_ADVDATA_SUPPORT\n\n#define ADVANCED_ADVDATA_SUPPORT 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <q> NFC_BLE_OOB_ADVDATA_PARSER_ENABLED  - nfc_ble_oob_advdata_parser - BLE OOB pairing AD data parser\n\n \n\n\n\n#ifndef NFC_BLE_OOB_ADVDATA_PARSER_ENABLED\n\n#define NFC_BLE_OOB_ADVDATA_PARSER_ENABLED 0\n\n#endif\n\n\n\n// <e> NFC_BLE_PAIR_LIB_ENABLED - nfc_ble_pair_lib - Library parameters\n\n//==========================================================\n\n#ifndef NFC_BLE_PAIR_LIB_ENABLED\n\n#define NFC_BLE_PAIR_LIB_ENABLED 0\n\n#endif\n\n// <e> NFC_BLE_PAIR_LIB_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NFC_BLE_PAIR_LIB_LOG_ENABLED\n\n#define NFC_BLE_PAIR_LIB_LOG_ENABLED 0\n\n#endif\n\n// <o> NFC_BLE_PAIR_LIB_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NFC_BLE_PAIR_LIB_LOG_LEVEL\n\n#define NFC_BLE_PAIR_LIB_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NFC_BLE_PAIR_LIB_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NFC_BLE_PAIR_LIB_INFO_COLOR\n\n#define NFC_BLE_PAIR_LIB_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NFC_BLE_PAIR_LIB_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NFC_BLE_PAIR_LIB_DEBUG_COLOR\n\n#define NFC_BLE_PAIR_LIB_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <h> NFC_BLE_PAIR_LIB_SECURITY_PARAMETERS - Common Peer Manager security parameters.\n\n\n\n//==========================================================\n\n// <e> BLE_NFC_SEC_PARAM_BOND - Enables device bonding.\n\n\n\n// <i> If bonding is enabled at least one of the BLE_NFC_SEC_PARAM_KDIST options must be enabled.\n\n//==========================================================\n\n#ifndef BLE_NFC_SEC_PARAM_BOND\n\n#define BLE_NFC_SEC_PARAM_BOND 1\n\n#endif\n\n// <q> BLE_NFC_SEC_PARAM_KDIST_OWN_ENC  - Enables Long Term Key and Master Identification distribution by device.\n\n \n\n\n\n#ifndef BLE_NFC_SEC_PARAM_KDIST_OWN_ENC\n\n#define BLE_NFC_SEC_PARAM_KDIST_OWN_ENC 1\n\n#endif\n\n\n\n// <q> BLE_NFC_SEC_PARAM_KDIST_OWN_ID  - Enables Identity Resolving Key and Identity Address Information distribution by device.\n\n \n\n\n\n#ifndef BLE_NFC_SEC_PARAM_KDIST_OWN_ID\n\n#define BLE_NFC_SEC_PARAM_KDIST_OWN_ID 1\n\n#endif\n\n\n\n// <q> BLE_NFC_SEC_PARAM_KDIST_PEER_ENC  - Enables Long Term Key and Master Identification distribution by peer.\n\n \n\n\n\n#ifndef BLE_NFC_SEC_PARAM_KDIST_PEER_ENC\n\n#define BLE_NFC_SEC_PARAM_KDIST_PEER_ENC 1\n\n#endif\n\n\n\n// <q> BLE_NFC_SEC_PARAM_KDIST_PEER_ID  - Enables Identity Resolving Key and Identity Address Information distribution by peer.\n\n \n\n\n\n#ifndef BLE_NFC_SEC_PARAM_KDIST_PEER_ID\n\n#define BLE_NFC_SEC_PARAM_KDIST_PEER_ID 1\n\n#endif\n\n\n\n// </e>\n\n\n\n// <o> BLE_NFC_SEC_PARAM_MIN_KEY_SIZE  - Minimal size of a security key.\n\n \n\n// <7=> 7 \n\n// <8=> 8 \n\n// <9=> 9 \n\n// <10=> 10 \n\n// <11=> 11 \n\n// <12=> 12 \n\n// <13=> 13 \n\n// <14=> 14 \n\n// <15=> 15 \n\n// <16=> 16 \n\n\n\n#ifndef BLE_NFC_SEC_PARAM_MIN_KEY_SIZE\n\n#define BLE_NFC_SEC_PARAM_MIN_KEY_SIZE 7\n\n#endif\n\n\n\n// <o> BLE_NFC_SEC_PARAM_MAX_KEY_SIZE  - Maximal size of a security key.\n\n \n\n// <7=> 7 \n\n// <8=> 8 \n\n// <9=> 9 \n\n// <10=> 10 \n\n// <11=> 11 \n\n// <12=> 12 \n\n// <13=> 13 \n\n// <14=> 14 \n\n// <15=> 15 \n\n// <16=> 16 \n\n\n\n#ifndef BLE_NFC_SEC_PARAM_MAX_KEY_SIZE\n\n#define BLE_NFC_SEC_PARAM_MAX_KEY_SIZE 16\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// </e>\n\n\n\n// <q> NFC_BLE_PAIR_MSG_ENABLED  - nfc_ble_pair_msg - NDEF message for OOB pairing encoder\n\n \n\n\n\n#ifndef NFC_BLE_PAIR_MSG_ENABLED\n\n#define NFC_BLE_PAIR_MSG_ENABLED 0\n\n#endif\n\n\n\n// <q> NFC_CH_COMMON_ENABLED  - nfc_ble_pair_common - OOB pairing common data\n\n \n\n\n\n#ifndef NFC_CH_COMMON_ENABLED\n\n#define NFC_CH_COMMON_ENABLED 0\n\n#endif\n\n\n\n// <q> NFC_EP_OOB_REC_ENABLED  - nfc_ep_oob_rec - EP record for BLE pairing encoder\n\n \n\n\n\n#ifndef NFC_EP_OOB_REC_ENABLED\n\n#define NFC_EP_OOB_REC_ENABLED 0\n\n#endif\n\n\n\n// <q> NFC_HS_REC_ENABLED  - nfc_hs_rec - Handover Select NDEF record encoder\n\n \n\n\n\n#ifndef NFC_HS_REC_ENABLED\n\n#define NFC_HS_REC_ENABLED 0\n\n#endif\n\n\n\n// <q> NFC_LE_OOB_REC_ENABLED  - nfc_le_oob_rec - LE record for BLE pairing encoder\n\n \n\n\n\n#ifndef NFC_LE_OOB_REC_ENABLED\n\n#define NFC_LE_OOB_REC_ENABLED 0\n\n#endif\n\n\n\n// <q> NFC_LE_OOB_REC_PARSER_ENABLED  - nfc_le_oob_rec_parser - LE record parser\n\n \n\n\n\n#ifndef NFC_LE_OOB_REC_PARSER_ENABLED\n\n#define NFC_LE_OOB_REC_PARSER_ENABLED 0\n\n#endif\n\n\n\n// <q> NFC_NDEF_LAUNCHAPP_MSG_ENABLED  - nfc_launchapp_msg - Encoding data for NDEF Application Launching message for NFC Tag\n\n \n\n\n\n#ifndef NFC_NDEF_LAUNCHAPP_MSG_ENABLED\n\n#define NFC_NDEF_LAUNCHAPP_MSG_ENABLED 0\n\n#endif\n\n\n\n// <q> NFC_NDEF_LAUNCHAPP_REC_ENABLED  - nfc_launchapp_rec - Encoding data for NDEF Application Launching record for NFC Tag\n\n \n\n\n\n#ifndef NFC_NDEF_LAUNCHAPP_REC_ENABLED\n\n#define NFC_NDEF_LAUNCHAPP_REC_ENABLED 0\n\n#endif\n\n\n\n// <e> NFC_NDEF_MSG_ENABLED - nfc_ndef_msg - NFC NDEF Message generator module\n\n//==========================================================\n\n#ifndef NFC_NDEF_MSG_ENABLED\n\n#define NFC_NDEF_MSG_ENABLED 0\n\n#endif\n\n// <o> NFC_NDEF_MSG_TAG_TYPE  - NFC Tag Type\n\n \n\n// <2=> Type 2 Tag \n\n// <4=> Type 4 Tag \n\n\n\n#ifndef NFC_NDEF_MSG_TAG_TYPE\n\n#define NFC_NDEF_MSG_TAG_TYPE 2\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NFC_NDEF_MSG_PARSER_ENABLED - nfc_ndef_msg_parser - NFC NDEF message parser module\n\n//==========================================================\n\n#ifndef NFC_NDEF_MSG_PARSER_ENABLED\n\n#define NFC_NDEF_MSG_PARSER_ENABLED 0\n\n#endif\n\n// <e> NFC_NDEF_MSG_PARSER_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NFC_NDEF_MSG_PARSER_LOG_ENABLED\n\n#define NFC_NDEF_MSG_PARSER_LOG_ENABLED 0\n\n#endif\n\n// <o> NFC_NDEF_MSG_PARSER_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NFC_NDEF_MSG_PARSER_LOG_LEVEL\n\n#define NFC_NDEF_MSG_PARSER_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NFC_NDEF_MSG_PARSER_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NFC_NDEF_MSG_PARSER_INFO_COLOR\n\n#define NFC_NDEF_MSG_PARSER_INFO_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <q> NFC_NDEF_RECORD_ENABLED  - nfc_ndef_record - NFC NDEF Record generator module\n\n \n\n\n\n#ifndef NFC_NDEF_RECORD_ENABLED\n\n#define NFC_NDEF_RECORD_ENABLED 0\n\n#endif\n\n\n\n// <e> NFC_NDEF_RECORD_PARSER_ENABLED - nfc_ndef_record_parser - NFC NDEF Record parser module\n\n//==========================================================\n\n#ifndef NFC_NDEF_RECORD_PARSER_ENABLED\n\n#define NFC_NDEF_RECORD_PARSER_ENABLED 0\n\n#endif\n\n// <e> NFC_NDEF_RECORD_PARSER_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NFC_NDEF_RECORD_PARSER_LOG_ENABLED\n\n#define NFC_NDEF_RECORD_PARSER_LOG_ENABLED 0\n\n#endif\n\n// <o> NFC_NDEF_RECORD_PARSER_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NFC_NDEF_RECORD_PARSER_LOG_LEVEL\n\n#define NFC_NDEF_RECORD_PARSER_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NFC_NDEF_RECORD_PARSER_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NFC_NDEF_RECORD_PARSER_INFO_COLOR\n\n#define NFC_NDEF_RECORD_PARSER_INFO_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <q> NFC_NDEF_TEXT_RECORD_ENABLED  - nfc_text_rec - Encoding data for a text record for NFC Tag\n\n \n\n\n\n#ifndef NFC_NDEF_TEXT_RECORD_ENABLED\n\n#define NFC_NDEF_TEXT_RECORD_ENABLED 0\n\n#endif\n\n\n\n// <q> NFC_NDEF_URI_MSG_ENABLED  - nfc_uri_msg - Encoding data for NDEF message with URI record for NFC Tag\n\n \n\n\n\n#ifndef NFC_NDEF_URI_MSG_ENABLED\n\n#define NFC_NDEF_URI_MSG_ENABLED 0\n\n#endif\n\n\n\n// <q> NFC_NDEF_URI_REC_ENABLED  - nfc_uri_rec - Encoding data for a URI record for NFC Tag\n\n \n\n\n\n#ifndef NFC_NDEF_URI_REC_ENABLED\n\n#define NFC_NDEF_URI_REC_ENABLED 0\n\n#endif\n\n\n\n// <e> NFC_PLATFORM_ENABLED - nfc_platform - NFC platform module for Clock control.\n\n//==========================================================\n\n#ifndef NFC_PLATFORM_ENABLED\n\n#define NFC_PLATFORM_ENABLED 0\n\n#endif\n\n// <e> NFC_PLATFORM_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NFC_PLATFORM_LOG_ENABLED\n\n#define NFC_PLATFORM_LOG_ENABLED 0\n\n#endif\n\n// <o> NFC_PLATFORM_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NFC_PLATFORM_LOG_LEVEL\n\n#define NFC_PLATFORM_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NFC_PLATFORM_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NFC_PLATFORM_INFO_COLOR\n\n#define NFC_PLATFORM_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NFC_PLATFORM_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NFC_PLATFORM_DEBUG_COLOR\n\n#define NFC_PLATFORM_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NFC_T2T_PARSER_ENABLED - nfc_type_2_tag_parser - Parser for decoding Type 2 Tag data\n\n//==========================================================\n\n#ifndef NFC_T2T_PARSER_ENABLED\n\n#define NFC_T2T_PARSER_ENABLED 0\n\n#endif\n\n// <e> NFC_T2T_PARSER_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NFC_T2T_PARSER_LOG_ENABLED\n\n#define NFC_T2T_PARSER_LOG_ENABLED 0\n\n#endif\n\n// <o> NFC_T2T_PARSER_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NFC_T2T_PARSER_LOG_LEVEL\n\n#define NFC_T2T_PARSER_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NFC_T2T_PARSER_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NFC_T2T_PARSER_INFO_COLOR\n\n#define NFC_T2T_PARSER_INFO_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NFC_T4T_APDU_ENABLED - nfc_t4t_apdu - APDU encoder/decoder for Type 4 Tag\n\n//==========================================================\n\n#ifndef NFC_T4T_APDU_ENABLED\n\n#define NFC_T4T_APDU_ENABLED 0\n\n#endif\n\n// <e> NFC_T4T_APDU_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NFC_T4T_APDU_LOG_ENABLED\n\n#define NFC_T4T_APDU_LOG_ENABLED 0\n\n#endif\n\n// <o> NFC_T4T_APDU_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NFC_T4T_APDU_LOG_LEVEL\n\n#define NFC_T4T_APDU_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NFC_T4T_APDU_LOG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NFC_T4T_APDU_LOG_COLOR\n\n#define NFC_T4T_APDU_LOG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NFC_T4T_CC_FILE_PARSER_ENABLED - nfc_t4t_cc_file - Capability Container file for Type 4 Tag\n\n//==========================================================\n\n#ifndef NFC_T4T_CC_FILE_PARSER_ENABLED\n\n#define NFC_T4T_CC_FILE_PARSER_ENABLED 0\n\n#endif\n\n// <e> NFC_T4T_CC_FILE_PARSER_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NFC_T4T_CC_FILE_PARSER_LOG_ENABLED\n\n#define NFC_T4T_CC_FILE_PARSER_LOG_ENABLED 0\n\n#endif\n\n// <o> NFC_T4T_CC_FILE_PARSER_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NFC_T4T_CC_FILE_PARSER_LOG_LEVEL\n\n#define NFC_T4T_CC_FILE_PARSER_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NFC_T4T_CC_FILE_PARSER_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NFC_T4T_CC_FILE_PARSER_INFO_COLOR\n\n#define NFC_T4T_CC_FILE_PARSER_INFO_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NFC_T4T_HL_DETECTION_PROCEDURES_ENABLED - nfc_t4t_hl_detection_procedures - NDEF Detection Procedure for Type 4 Tag\n\n//==========================================================\n\n#ifndef NFC_T4T_HL_DETECTION_PROCEDURES_ENABLED\n\n#define NFC_T4T_HL_DETECTION_PROCEDURES_ENABLED 0\n\n#endif\n\n// <e> NFC_T4T_HL_DETECTION_PROCEDURES_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NFC_T4T_HL_DETECTION_PROCEDURES_LOG_ENABLED\n\n#define NFC_T4T_HL_DETECTION_PROCEDURES_LOG_ENABLED 0\n\n#endif\n\n// <o> NFC_T4T_HL_DETECTION_PROCEDURES_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NFC_T4T_HL_DETECTION_PROCEDURES_LOG_LEVEL\n\n#define NFC_T4T_HL_DETECTION_PROCEDURES_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NFC_T4T_HL_DETECTION_PROCEDURES_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NFC_T4T_HL_DETECTION_PROCEDURES_INFO_COLOR\n\n#define NFC_T4T_HL_DETECTION_PROCEDURES_INFO_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <o> APDU_BUFF_SIZE - Size (in bytes) of the buffer for APDU storage \n\n#ifndef APDU_BUFF_SIZE\n\n#define APDU_BUFF_SIZE 250\n\n#endif\n\n\n\n// <o> CC_STORAGE_BUFF_SIZE - Size (in bytes) of the buffer for CC file storage \n\n#ifndef CC_STORAGE_BUFF_SIZE\n\n#define CC_STORAGE_BUFF_SIZE 64\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NFC_T4T_TLV_BLOCK_PARSER_ENABLED - nfc_t4t_tlv_block - TLV block for Type 4 Tag\n\n//==========================================================\n\n#ifndef NFC_T4T_TLV_BLOCK_PARSER_ENABLED\n\n#define NFC_T4T_TLV_BLOCK_PARSER_ENABLED 0\n\n#endif\n\n// <e> NFC_T4T_TLV_BLOCK_PARSER_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NFC_T4T_TLV_BLOCK_PARSER_LOG_ENABLED\n\n#define NFC_T4T_TLV_BLOCK_PARSER_LOG_ENABLED 0\n\n#endif\n\n// <o> NFC_T4T_TLV_BLOCK_PARSER_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NFC_T4T_TLV_BLOCK_PARSER_LOG_LEVEL\n\n#define NFC_T4T_TLV_BLOCK_PARSER_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NFC_T4T_TLV_BLOCK_PARSER_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NFC_T4T_TLV_BLOCK_PARSER_INFO_COLOR\n\n#define NFC_T4T_TLV_BLOCK_PARSER_INFO_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> nRF_Segger_RTT \n\n\n\n//==========================================================\n\n// <h> segger_rtt - SEGGER RTT\n\n\n\n//==========================================================\n\n// <o> SEGGER_RTT_CONFIG_BUFFER_SIZE_UP - Size of upstream buffer. \n\n// <i> Note that either @ref NRF_LOG_BACKEND_RTT_OUTPUT_BUFFER_SIZE\n\n// <i> or this value is actually used. It depends on which one is bigger.\n\n\n\n#ifndef SEGGER_RTT_CONFIG_BUFFER_SIZE_UP\n\n#define SEGGER_RTT_CONFIG_BUFFER_SIZE_UP 512\n\n#endif\n\n\n\n// <o> SEGGER_RTT_CONFIG_MAX_NUM_UP_BUFFERS - Maximum number of upstream buffers. \n\n#ifndef SEGGER_RTT_CONFIG_MAX_NUM_UP_BUFFERS\n\n#define SEGGER_RTT_CONFIG_MAX_NUM_UP_BUFFERS 2\n\n#endif\n\n\n\n// <o> SEGGER_RTT_CONFIG_BUFFER_SIZE_DOWN - Size of downstream buffer. \n\n#ifndef SEGGER_RTT_CONFIG_BUFFER_SIZE_DOWN\n\n#define SEGGER_RTT_CONFIG_BUFFER_SIZE_DOWN 16\n\n#endif\n\n\n\n// <o> SEGGER_RTT_CONFIG_MAX_NUM_DOWN_BUFFERS - Maximum number of downstream buffers. \n\n#ifndef SEGGER_RTT_CONFIG_MAX_NUM_DOWN_BUFFERS\n\n#define SEGGER_RTT_CONFIG_MAX_NUM_DOWN_BUFFERS 2\n\n#endif\n\n\n\n// <o> SEGGER_RTT_CONFIG_DEFAULT_MODE  - RTT behavior if the buffer is full.\n\n \n\n\n\n// <i> The following modes are supported:\n\n// <i> - SKIP  - Do not block, output nothing.\n\n// <i> - TRIM  - Do not block, output as much as fits.\n\n// <i> - BLOCK - Wait until there is space in the buffer.\n\n// <0=> SKIP \n\n// <1=> TRIM \n\n// <2=> BLOCK_IF_FIFO_FULL \n\n\n\n#ifndef SEGGER_RTT_CONFIG_DEFAULT_MODE\n\n#define SEGGER_RTT_CONFIG_DEFAULT_MODE 0\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> nRF_SoftDevice \n\n\n\n//==========================================================\n\n// <e> NRF_SDH_BLE_ENABLED - nrf_sdh_ble - SoftDevice BLE event handler\n\n//==========================================================\n\n#ifndef NRF_SDH_BLE_ENABLED\n\n#define NRF_SDH_BLE_ENABLED 1\n\n#endif\n\n// <h> BLE Stack configuration - Stack configuration parameters\n\n\n\n// <i> The SoftDevice handler will configure the stack with these parameters when calling @ref nrf_sdh_ble_default_cfg_set.\n\n// <i> Other libraries might depend on these values; keep them up-to-date even if you are not explicitely calling @ref nrf_sdh_ble_default_cfg_set.\n\n//==========================================================\n\n// <o> NRF_SDH_BLE_GAP_DATA_LENGTH   <27-251> \n\n\n\n\n\n// <i> Requested BLE GAP data length to be negotiated.\n\n\n\n#ifndef NRF_SDH_BLE_GAP_DATA_LENGTH\n\n#define NRF_SDH_BLE_GAP_DATA_LENGTH 251\n\n#endif\n\n\n\n// <o> NRF_SDH_BLE_PERIPHERAL_LINK_COUNT - Maximum number of peripheral links. \n\n#ifndef NRF_SDH_BLE_PERIPHERAL_LINK_COUNT\n\n#define NRF_SDH_BLE_PERIPHERAL_LINK_COUNT 0\n\n#endif\n\n\n\n// <o> NRF_SDH_BLE_CENTRAL_LINK_COUNT - Maximum number of central links. \n\n#ifndef NRF_SDH_BLE_CENTRAL_LINK_COUNT\n\n#define NRF_SDH_BLE_CENTRAL_LINK_COUNT 1\n\n#endif\n\n\n\n// <o> NRF_SDH_BLE_TOTAL_LINK_COUNT - Total link count. \n\n// <i> Maximum number of total concurrent connections using the default configuration.\n\n\n\n#ifndef NRF_SDH_BLE_TOTAL_LINK_COUNT\n\n#define NRF_SDH_BLE_TOTAL_LINK_COUNT 1\n\n#endif\n\n\n\n// <o> NRF_SDH_BLE_GAP_EVENT_LENGTH - GAP event length. \n\n// <i> The time set aside for this connection on every connection interval in 1.25 ms units.\n\n\n\n#ifndef NRF_SDH_BLE_GAP_EVENT_LENGTH\n\n#define NRF_SDH_BLE_GAP_EVENT_LENGTH 6\n\n#endif\n\n\n\n// <o> NRF_SDH_BLE_GATT_MAX_MTU_SIZE - Static maximum MTU size. \n\n#ifndef NRF_SDH_BLE_GATT_MAX_MTU_SIZE\n\n#define NRF_SDH_BLE_GATT_MAX_MTU_SIZE 247\n\n#endif\n\n\n\n// <o> NRF_SDH_BLE_GATTS_ATTR_TAB_SIZE - Attribute Table size in bytes. The size must be a multiple of 4. \n\n#ifndef NRF_SDH_BLE_GATTS_ATTR_TAB_SIZE\n\n#define NRF_SDH_BLE_GATTS_ATTR_TAB_SIZE 1408\n\n#endif\n\n\n\n// <o> NRF_SDH_BLE_VS_UUID_COUNT - The number of vendor-specific UUIDs. \n\n#ifndef NRF_SDH_BLE_VS_UUID_COUNT\n\n#define NRF_SDH_BLE_VS_UUID_COUNT 1\n\n#endif\n\n\n\n// <q> NRF_SDH_BLE_SERVICE_CHANGED  - Include the Service Changed characteristic in the Attribute Table.\n\n \n\n\n\n#ifndef NRF_SDH_BLE_SERVICE_CHANGED\n\n#define NRF_SDH_BLE_SERVICE_CHANGED 0\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> BLE Observers - Observers and priority levels\n\n\n\n//==========================================================\n\n// <o> NRF_SDH_BLE_OBSERVER_PRIO_LEVELS - Total number of priority levels for BLE observers. \n\n// <i> This setting configures the number of priority levels available for BLE event handlers.\n\n// <i> The priority level of a handler determines the order in which it receives events, with respect to other handlers.\n\n\n\n#ifndef NRF_SDH_BLE_OBSERVER_PRIO_LEVELS\n\n#define NRF_SDH_BLE_OBSERVER_PRIO_LEVELS 4\n\n#endif\n\n\n\n// <h> BLE Observers priorities - Invididual priorities\n\n\n\n//==========================================================\n\n// <o> BLE_ADV_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Advertising module.\n\n\n\n#ifndef BLE_ADV_BLE_OBSERVER_PRIO\n\n#define BLE_ADV_BLE_OBSERVER_PRIO 1\n\n#endif\n\n\n\n// <o> BLE_ANCS_C_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Apple Notification Service Client.\n\n\n\n#ifndef BLE_ANCS_C_BLE_OBSERVER_PRIO\n\n#define BLE_ANCS_C_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_ANS_C_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Alert Notification Service Client.\n\n\n\n#ifndef BLE_ANS_C_BLE_OBSERVER_PRIO\n\n#define BLE_ANS_C_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_BAS_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Battery Service.\n\n\n\n#ifndef BLE_BAS_BLE_OBSERVER_PRIO\n\n#define BLE_BAS_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_BAS_C_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Battery Service Client.\n\n\n\n#ifndef BLE_BAS_C_BLE_OBSERVER_PRIO\n\n#define BLE_BAS_C_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_BPS_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Blood Pressure Service.\n\n\n\n#ifndef BLE_BPS_BLE_OBSERVER_PRIO\n\n#define BLE_BPS_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_CONN_PARAMS_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Connection parameters module.\n\n\n\n#ifndef BLE_CONN_PARAMS_BLE_OBSERVER_PRIO\n\n#define BLE_CONN_PARAMS_BLE_OBSERVER_PRIO 1\n\n#endif\n\n\n\n// <o> BLE_CONN_STATE_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Connection State module.\n\n\n\n#ifndef BLE_CONN_STATE_BLE_OBSERVER_PRIO\n\n#define BLE_CONN_STATE_BLE_OBSERVER_PRIO 0\n\n#endif\n\n\n\n// <o> BLE_CSCS_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Cycling Speed and Cadence Service.\n\n\n\n#ifndef BLE_CSCS_BLE_OBSERVER_PRIO\n\n#define BLE_CSCS_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_CTS_C_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Current Time Service Client.\n\n\n\n#ifndef BLE_CTS_C_BLE_OBSERVER_PRIO\n\n#define BLE_CTS_C_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_DB_DISC_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Database Discovery module.\n\n\n\n#ifndef BLE_DB_DISC_BLE_OBSERVER_PRIO\n\n#define BLE_DB_DISC_BLE_OBSERVER_PRIO 1\n\n#endif\n\n\n\n// <o> BLE_DFU_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the DFU Service.\n\n\n\n#ifndef BLE_DFU_BLE_OBSERVER_PRIO\n\n#define BLE_DFU_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_DIS_C_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Device Information Client.\n\n\n\n#ifndef BLE_DIS_C_BLE_OBSERVER_PRIO\n\n#define BLE_DIS_C_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_GLS_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Glucose Service.\n\n\n\n#ifndef BLE_GLS_BLE_OBSERVER_PRIO\n\n#define BLE_GLS_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_HIDS_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Human Interface Device Service.\n\n\n\n#ifndef BLE_HIDS_BLE_OBSERVER_PRIO\n\n#define BLE_HIDS_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_HRS_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Heart Rate Service.\n\n\n\n#ifndef BLE_HRS_BLE_OBSERVER_PRIO\n\n#define BLE_HRS_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_HRS_C_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Heart Rate Service Client.\n\n\n\n#ifndef BLE_HRS_C_BLE_OBSERVER_PRIO\n\n#define BLE_HRS_C_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_HTS_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Health Thermometer Service.\n\n\n\n#ifndef BLE_HTS_BLE_OBSERVER_PRIO\n\n#define BLE_HTS_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_IAS_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Immediate Alert Service.\n\n\n\n#ifndef BLE_IAS_BLE_OBSERVER_PRIO\n\n#define BLE_IAS_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_IAS_C_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Immediate Alert Service Client.\n\n\n\n#ifndef BLE_IAS_C_BLE_OBSERVER_PRIO\n\n#define BLE_IAS_C_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_LBS_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the LED Button Service.\n\n\n\n#ifndef BLE_LBS_BLE_OBSERVER_PRIO\n\n#define BLE_LBS_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_LBS_C_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the LED Button Service Client.\n\n\n\n#ifndef BLE_LBS_C_BLE_OBSERVER_PRIO\n\n#define BLE_LBS_C_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_LLS_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Link Loss Service.\n\n\n\n#ifndef BLE_LLS_BLE_OBSERVER_PRIO\n\n#define BLE_LLS_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_LNS_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Location Navigation Service.\n\n\n\n#ifndef BLE_LNS_BLE_OBSERVER_PRIO\n\n#define BLE_LNS_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_NUS_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the UART Service.\n\n\n\n#ifndef BLE_NUS_BLE_OBSERVER_PRIO\n\n#define BLE_NUS_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_NUS_C_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the UART Central Service.\n\n\n\n#ifndef BLE_NUS_C_BLE_OBSERVER_PRIO\n\n#define BLE_NUS_C_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_OTS_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Object transfer service.\n\n\n\n#ifndef BLE_OTS_BLE_OBSERVER_PRIO\n\n#define BLE_OTS_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_OTS_C_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Object transfer service client.\n\n\n\n#ifndef BLE_OTS_C_BLE_OBSERVER_PRIO\n\n#define BLE_OTS_C_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_RSCS_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Running Speed and Cadence Service.\n\n\n\n#ifndef BLE_RSCS_BLE_OBSERVER_PRIO\n\n#define BLE_RSCS_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_RSCS_C_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Running Speed and Cadence Client.\n\n\n\n#ifndef BLE_RSCS_C_BLE_OBSERVER_PRIO\n\n#define BLE_RSCS_C_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_TPS_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the TX Power Service.\n\n\n\n#ifndef BLE_TPS_BLE_OBSERVER_PRIO\n\n#define BLE_TPS_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BSP_BTN_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Button Control module.\n\n\n\n#ifndef BSP_BTN_BLE_OBSERVER_PRIO\n\n#define BSP_BTN_BLE_OBSERVER_PRIO 1\n\n#endif\n\n\n\n// <o> NFC_BLE_PAIR_LIB_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the NFC pairing library.\n\n\n\n#ifndef NFC_BLE_PAIR_LIB_BLE_OBSERVER_PRIO\n\n#define NFC_BLE_PAIR_LIB_BLE_OBSERVER_PRIO 1\n\n#endif\n\n\n\n// <o> NFC_BLE_PAIR_LIB_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the NFC pairing library.\n\n\n\n#ifndef NFC_BLE_PAIR_LIB_BLE_OBSERVER_PRIO\n\n#define NFC_BLE_PAIR_LIB_BLE_OBSERVER_PRIO 1\n\n#endif\n\n\n\n// <o> NFC_BLE_PAIR_LIB_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the NFC pairing library.\n\n\n\n#ifndef NFC_BLE_PAIR_LIB_BLE_OBSERVER_PRIO\n\n#define NFC_BLE_PAIR_LIB_BLE_OBSERVER_PRIO 1\n\n#endif\n\n\n\n// <o> NRF_BLE_BMS_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Bond Management Service.\n\n\n\n#ifndef NRF_BLE_BMS_BLE_OBSERVER_PRIO\n\n#define NRF_BLE_BMS_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> NRF_BLE_CGMS_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Contiuon Glucose Monitoring Service.\n\n\n\n#ifndef NRF_BLE_CGMS_BLE_OBSERVER_PRIO\n\n#define NRF_BLE_CGMS_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> NRF_BLE_ES_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Eddystone module.\n\n\n\n#ifndef NRF_BLE_ES_BLE_OBSERVER_PRIO\n\n#define NRF_BLE_ES_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> NRF_BLE_GATTS_C_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the GATT Service Client.\n\n\n\n#ifndef NRF_BLE_GATTS_C_BLE_OBSERVER_PRIO\n\n#define NRF_BLE_GATTS_C_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> NRF_BLE_GATT_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the GATT module.\n\n\n\n#ifndef NRF_BLE_GATT_BLE_OBSERVER_PRIO\n\n#define NRF_BLE_GATT_BLE_OBSERVER_PRIO 1\n\n#endif\n\n\n\n// <o> NRF_BLE_GQ_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the GATT Queue module.\n\n\n\n#ifndef NRF_BLE_GQ_BLE_OBSERVER_PRIO\n\n#define NRF_BLE_GQ_BLE_OBSERVER_PRIO 1\n\n#endif\n\n\n\n// <o> NRF_BLE_QWR_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Queued writes module.\n\n\n\n#ifndef NRF_BLE_QWR_BLE_OBSERVER_PRIO\n\n#define NRF_BLE_QWR_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> NRF_BLE_SCAN_OBSERVER_PRIO  \n\n// <i> Priority for dispatching the BLE events to the Scanning Module.\n\n\n\n#ifndef NRF_BLE_SCAN_OBSERVER_PRIO\n\n#define NRF_BLE_SCAN_OBSERVER_PRIO 1\n\n#endif\n\n\n\n// <o> PM_BLE_OBSERVER_PRIO - Priority with which BLE events are dispatched to the Peer Manager module. \n\n#ifndef PM_BLE_OBSERVER_PRIO\n\n#define PM_BLE_OBSERVER_PRIO 1\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n\n\n// </e>\n\n\n\n// <e> NRF_SDH_ENABLED - nrf_sdh - SoftDevice handler\n\n//==========================================================\n\n#ifndef NRF_SDH_ENABLED\n\n#define NRF_SDH_ENABLED 1\n\n#endif\n\n// <h> Dispatch model \n\n\n\n// <i> This setting configures how Stack events are dispatched to the application.\n\n//==========================================================\n\n// <o> NRF_SDH_DISPATCH_MODEL\n\n \n\n\n\n// <i> NRF_SDH_DISPATCH_MODEL_INTERRUPT: SoftDevice events are passed to the application from the interrupt context.\n\n// <i> NRF_SDH_DISPATCH_MODEL_APPSH: SoftDevice events are scheduled using @ref app_scheduler.\n\n// <i> NRF_SDH_DISPATCH_MODEL_POLLING: SoftDevice events are to be fetched manually.\n\n// <0=> NRF_SDH_DISPATCH_MODEL_INTERRUPT \n\n// <1=> NRF_SDH_DISPATCH_MODEL_APPSH \n\n// <2=> NRF_SDH_DISPATCH_MODEL_POLLING \n\n\n\n#ifndef NRF_SDH_DISPATCH_MODEL\n\n#define NRF_SDH_DISPATCH_MODEL 0\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> Clock - SoftDevice clock configuration\n\n\n\n//==========================================================\n\n// <o> NRF_SDH_CLOCK_LF_SRC  - SoftDevice clock source.\n\n \n\n// <0=> NRF_CLOCK_LF_SRC_RC \n\n// <1=> NRF_CLOCK_LF_SRC_XTAL \n\n// <2=> NRF_CLOCK_LF_SRC_SYNTH \n\n\n\n#ifndef NRF_SDH_CLOCK_LF_SRC\n\n#define NRF_SDH_CLOCK_LF_SRC 1\n\n#endif\n\n\n\n// <o> NRF_SDH_CLOCK_LF_RC_CTIV - SoftDevice calibration timer interval. \n\n#ifndef NRF_SDH_CLOCK_LF_RC_CTIV\n\n#define NRF_SDH_CLOCK_LF_RC_CTIV 0\n\n#endif\n\n\n\n// <o> NRF_SDH_CLOCK_LF_RC_TEMP_CTIV - SoftDevice calibration timer interval under constant temperature. \n\n// <i> How often (in number of calibration intervals) the RC oscillator shall be calibrated\n\n// <i>  if the temperature has not changed.\n\n\n\n#ifndef NRF_SDH_CLOCK_LF_RC_TEMP_CTIV\n\n#define NRF_SDH_CLOCK_LF_RC_TEMP_CTIV 0\n\n#endif\n\n\n\n// <o> NRF_SDH_CLOCK_LF_ACCURACY  - External clock accuracy used in the LL to compute timing.\n\n \n\n// <0=> NRF_CLOCK_LF_ACCURACY_250_PPM \n\n// <1=> NRF_CLOCK_LF_ACCURACY_500_PPM \n\n// <2=> NRF_CLOCK_LF_ACCURACY_150_PPM \n\n// <3=> NRF_CLOCK_LF_ACCURACY_100_PPM \n\n// <4=> NRF_CLOCK_LF_ACCURACY_75_PPM \n\n// <5=> NRF_CLOCK_LF_ACCURACY_50_PPM \n\n// <6=> NRF_CLOCK_LF_ACCURACY_30_PPM \n\n// <7=> NRF_CLOCK_LF_ACCURACY_20_PPM \n\n// <8=> NRF_CLOCK_LF_ACCURACY_10_PPM \n\n// <9=> NRF_CLOCK_LF_ACCURACY_5_PPM \n\n// <10=> NRF_CLOCK_LF_ACCURACY_2_PPM \n\n// <11=> NRF_CLOCK_LF_ACCURACY_1_PPM \n\n\n\n#ifndef NRF_SDH_CLOCK_LF_ACCURACY\n\n#define NRF_SDH_CLOCK_LF_ACCURACY 7\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> SDH Observers - Observers and priority levels\n\n\n\n//==========================================================\n\n// <o> NRF_SDH_REQ_OBSERVER_PRIO_LEVELS - Total number of priority levels for request observers. \n\n// <i> This setting configures the number of priority levels available for the SoftDevice request event handlers.\n\n// <i> The priority level of a handler determines the order in which it receives events, with respect to other handlers.\n\n\n\n#ifndef NRF_SDH_REQ_OBSERVER_PRIO_LEVELS\n\n#define NRF_SDH_REQ_OBSERVER_PRIO_LEVELS 2\n\n#endif\n\n\n\n// <o> NRF_SDH_STATE_OBSERVER_PRIO_LEVELS - Total number of priority levels for state observers. \n\n// <i> This setting configures the number of priority levels available for the SoftDevice state event handlers.\n\n// <i> The priority level of a handler determines the order in which it receives events, with respect to other handlers.\n\n\n\n#ifndef NRF_SDH_STATE_OBSERVER_PRIO_LEVELS\n\n#define NRF_SDH_STATE_OBSERVER_PRIO_LEVELS 2\n\n#endif\n\n\n\n// <o> NRF_SDH_STACK_OBSERVER_PRIO_LEVELS - Total number of priority levels for stack event observers. \n\n// <i> This setting configures the number of priority levels available for the SoftDevice stack event handlers (ANT, BLE, SoC).\n\n// <i> The priority level of a handler determines the order in which it receives events, with respect to other handlers.\n\n\n\n#ifndef NRF_SDH_STACK_OBSERVER_PRIO_LEVELS\n\n#define NRF_SDH_STACK_OBSERVER_PRIO_LEVELS 2\n\n#endif\n\n\n\n\n\n// <h> State Observers priorities - Invididual priorities\n\n\n\n//==========================================================\n\n// <o> CLOCK_CONFIG_STATE_OBSERVER_PRIO  \n\n// <i> Priority with which state events are dispatched to the Clock driver.\n\n\n\n#ifndef CLOCK_CONFIG_STATE_OBSERVER_PRIO\n\n#define CLOCK_CONFIG_STATE_OBSERVER_PRIO 0\n\n#endif\n\n\n\n// <o> POWER_CONFIG_STATE_OBSERVER_PRIO  \n\n// <i> Priority with which state events are dispatched to the Power driver.\n\n\n\n#ifndef POWER_CONFIG_STATE_OBSERVER_PRIO\n\n#define POWER_CONFIG_STATE_OBSERVER_PRIO 0\n\n#endif\n\n\n\n// <o> RNG_CONFIG_STATE_OBSERVER_PRIO  \n\n// <i> Priority with which state events are dispatched to this module.\n\n\n\n#ifndef RNG_CONFIG_STATE_OBSERVER_PRIO\n\n#define RNG_CONFIG_STATE_OBSERVER_PRIO 0\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> Stack Event Observers priorities - Invididual priorities\n\n\n\n//==========================================================\n\n// <o> NRF_SDH_ANT_STACK_OBSERVER_PRIO  \n\n// <i> This setting configures the priority with which ANT events are processed with respect to other events coming from the stack.\n\n// <i> Modify this setting if you need to have ANT events dispatched before or after other stack events, such as BLE or SoC.\n\n// <i> Zero is the highest priority.\n\n\n\n#ifndef NRF_SDH_ANT_STACK_OBSERVER_PRIO\n\n#define NRF_SDH_ANT_STACK_OBSERVER_PRIO 0\n\n#endif\n\n\n\n// <o> NRF_SDH_BLE_STACK_OBSERVER_PRIO  \n\n// <i> This setting configures the priority with which BLE events are processed with respect to other events coming from the stack.\n\n// <i> Modify this setting if you need to have BLE events dispatched before or after other stack events, such as ANT or SoC.\n\n// <i> Zero is the highest priority.\n\n\n\n#ifndef NRF_SDH_BLE_STACK_OBSERVER_PRIO\n\n#define NRF_SDH_BLE_STACK_OBSERVER_PRIO 0\n\n#endif\n\n\n\n// <o> NRF_SDH_SOC_STACK_OBSERVER_PRIO  \n\n// <i> This setting configures the priority with which SoC events are processed with respect to other events coming from the stack.\n\n// <i> Modify this setting if you need to have SoC events dispatched before or after other stack events, such as ANT or BLE.\n\n// <i> Zero is the highest priority.\n\n\n\n#ifndef NRF_SDH_SOC_STACK_OBSERVER_PRIO\n\n#define NRF_SDH_SOC_STACK_OBSERVER_PRIO 0\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n\n\n// </e>\n\n\n\n// <e> NRF_SDH_SOC_ENABLED - nrf_sdh_soc - SoftDevice SoC event handler\n\n//==========================================================\n\n#ifndef NRF_SDH_SOC_ENABLED\n\n#define NRF_SDH_SOC_ENABLED 1\n\n#endif\n\n// <h> SoC Observers - Observers and priority levels\n\n\n\n//==========================================================\n\n// <o> NRF_SDH_SOC_OBSERVER_PRIO_LEVELS - Total number of priority levels for SoC observers. \n\n// <i> This setting configures the number of priority levels available for the SoC event handlers.\n\n// <i> The priority level of a handler determines the order in which it receives events, with respect to other handlers.\n\n\n\n#ifndef NRF_SDH_SOC_OBSERVER_PRIO_LEVELS\n\n#define NRF_SDH_SOC_OBSERVER_PRIO_LEVELS 2\n\n#endif\n\n\n\n// <h> SoC Observers priorities - Invididual priorities\n\n\n\n//==========================================================\n\n// <o> BLE_DFU_SOC_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the DFU Service.\n\n\n\n#ifndef BLE_DFU_SOC_OBSERVER_PRIO\n\n#define BLE_DFU_SOC_OBSERVER_PRIO 1\n\n#endif\n\n\n\n// <o> CLOCK_CONFIG_SOC_OBSERVER_PRIO  \n\n// <i> Priority with which SoC events are dispatched to the Clock driver.\n\n\n\n#ifndef CLOCK_CONFIG_SOC_OBSERVER_PRIO\n\n#define CLOCK_CONFIG_SOC_OBSERVER_PRIO 0\n\n#endif\n\n\n\n// <o> POWER_CONFIG_SOC_OBSERVER_PRIO  \n\n// <i> Priority with which SoC events are dispatched to the Power driver.\n\n\n\n#ifndef POWER_CONFIG_SOC_OBSERVER_PRIO\n\n#define POWER_CONFIG_SOC_OBSERVER_PRIO 0\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n\n\n// </e>\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <<< end of configuration section >>>\n\n#endif //SDK_CONFIG_H",
    "assembly": ".file\t\"151.c\"\n\t.text\n\t.ident\t\"GCC: (MinGW-W64 x86_64-ucrt-posix-seh, built by Brecht Sanders, r8) 13.2.0\"",
    "generation_time": 0.6279988288879395,
    "tokens_generated": 28,
    "metrics": {
      "length_ratio": 0.0001435692654929601,
      "line_ratio": 0.0001662579492081965,
      "token_overlap": 0.0,
      "token_precision": 0.0,
      "keyword_coverage": 0.0,
      "keyword_match_ratio": 0.0,
      "brace_ratio": 0,
      "semicolon_ratio": 0.0
    }
  },
  {
    "filename": "158",
    "optimization": "O0",
    "generated_c": ".file=/usr/share/bin/samples/samples/samples/samples/samples/samples/samples/samples/samples/sples/samples/samples/samples/samples/samples/samples/samples/samples/samples/samples/samples/samples/samples/samples/samples/samples/samples/samples' -D=1;[d]$(x86_64-based) + D=1;[d]$(x86_64-based)]$(x86_64-based))$(x86_64-based))$(x86_64-based)))$((x86_64-based))$(x86_64- based))))$((x86_64--based))$(x86_64 --base64-based))$(x88_64--base64-based))$(x86_64--base64-based))$(x86_64--base32-type+i=4;[d]$(\"a\")$(x86_64\u2013base64-type+i=4);[d]$($(\"a\"))$('a')$(x86_64-type+i = 4;[d]$(\"a\")$(x86%p)= 0;[d]$ (\"b\")$(x86_64-type+i=4;[e]$(\"b\")$(x86_65-type+i='', i=3;[e]$(\"b\")$(x86_64-type+i='', i=3;[e])$(\"b\")$(x86_64-type+i='', e=\"a\", i=3;[e]$(\"b\")$(x86_64-type+i='', e=\"a\", j=3;[e]$(\"b\")$(-x86_64-type+i='', e=\"a\"), j=3;[e]$(\"b\")$(x86_64-type+I='', e=\"a\", j=3;[e]$(\"b\")$(y86_64-type+i='', e=\"a\", j=3;[f]$(\"b\")$(_(x86_64",
    "reference_c": "/**********************************************************************************************\n*\n*   raylib v4.0 - A simple and easy-to-use library to enjoy videogames programming (www.raylib.com)\n*\n*   FEATURES:\n*       - NO external dependencies, all required libraries included with raylib\n*       - Multiplatform: Windows, Linux, FreeBSD, OpenBSD, NetBSD, DragonFly,\n*                        MacOS, Haiku, Android, Raspberry Pi, DRM native, HTML5.\n*       - Written in plain C code (C99) in PascalCase/camelCase notation\n*       - Hardware accelerated with OpenGL (1.1, 2.1, 3.3, 4.3 or ES2 - choose at compile)\n*       - Unique OpenGL abstraction layer (usable as standalone module): [rlgl]\n*       - Multiple Fonts formats supported (TTF, XNA fonts, AngelCode fonts)\n*       - Outstanding texture formats support, including compressed formats (DXT, ETC, ASTC)\n*       - Full 3d support for 3d Shapes, Models, Billboards, Heightmaps and more!\n*       - Flexible Materials system, supporting classic maps and PBR maps\n*       - Animated 3D models supported (skeletal bones animation) (IQM)\n*       - Shaders support, including Model shaders and Postprocessing shaders\n*       - Powerful math module for Vector, Matrix and Quaternion operations: [raymath]\n*       - Audio loading and playing with streaming support (WAV, OGG, MP3, FLAC, XM, MOD)\n*       - VR stereo rendering with configurable HMD device parameters\n*       - Bindings to multiple programming languages available!\n*\n*   NOTES:\n*       - One default Font is loaded on InitWindow()->LoadFontDefault() [core, text]\n*       - One default Texture2D is loaded on rlglInit(), 1x1 white pixel R8G8B8A8 [rlgl] (OpenGL 3.3 or ES2)\n*       - One default Shader is loaded on rlglInit()->rlLoadShaderDefault() [rlgl] (OpenGL 3.3 or ES2)\n*       - One default RenderBatch is loaded on rlglInit()->rlLoadRenderBatch() [rlgl] (OpenGL 3.3 or ES2)\n*\n*   DEPENDENCIES (included):\n*       [rcore] rglfw (Camilla L\u00f6wy - github.com/glfw/glfw) for window/context management and input (PLATFORM_DESKTOP)\n*       [rlgl] glad (David Herberth - github.com/Dav1dde/glad) for OpenGL 3.3 extensions loading (PLATFORM_DESKTOP)\n*       [raudio] miniaudio (David Reid - github.com/mackron/miniaudio) for audio device/context management\n*\n*   OPTIONAL DEPENDENCIES (included):\n*       [rcore] msf_gif (Miles Fogle) for GIF recording\n*       [rcore] sinfl (Micha Mettke) for DEFLATE decompression algorythm\n*       [rcore] sdefl (Micha Mettke) for DEFLATE compression algorythm\n*       [rtextures] stb_image (Sean Barret) for images loading (BMP, TGA, PNG, JPEG, HDR...)\n*       [rtextures] stb_image_write (Sean Barret) for image writing (BMP, TGA, PNG, JPG)\n*       [rtextures] stb_image_resize (Sean Barret) for image resizing algorithms\n*       [rtext] stb_truetype (Sean Barret) for ttf fonts loading\n*       [rtext] stb_rect_pack (Sean Barret) for rectangles packing\n*       [rmodels] par_shapes (Philip Rideout) for parametric 3d shapes generation\n*       [rmodels] tinyobj_loader_c (Syoyo Fujita) for models loading (OBJ, MTL)\n*       [rmodels] cgltf (Johannes Kuhlmann) for models loading (glTF)\n*       [raudio] dr_wav (David Reid) for WAV audio file loading\n*       [raudio] dr_flac (David Reid) for FLAC audio file loading\n*       [raudio] dr_mp3 (David Reid) for MP3 audio file loading\n*       [raudio] stb_vorbis (Sean Barret) for OGG audio loading\n*       [raudio] jar_xm (Joshua Reisenauer) for XM audio module loading\n*       [raudio] jar_mod (Joshua Reisenauer) for MOD audio module loading\n*\n*\n*   LICENSE: zlib/libpng\n*\n*   raylib is licensed under an unmodified zlib/libpng license, which is an OSI-certified,\n*   BSD-like license that allows static linking with closed source software:\n*\n*   Copyright (c) 2013-2021 Ramon Santamaria (@raysan5)\n*\n*   This software is provided \"as-is\", without any express or implied warranty. In no event\n*   will the authors be held liable for any damages arising from the use of this software.\n*\n*   Permission is granted to anyone to use this software for any purpose, including commercial\n*   applications, and to alter it and redistribute it freely, subject to the following restrictions:\n*\n*     1. The origin of this software must not be misrepresented; you must not claim that you\n*     wrote the original software. If you use this software in a product, an acknowledgment\n*     in the product documentation would be appreciated but is not required.\n*\n*     2. Altered source versions must be plainly marked as such, and must not be misrepresented\n*     as being the original software.\n*\n*     3. This notice may not be removed or altered from any source distribution.\n*\n**********************************************************************************************/\n\n#ifndef RAYLIB_H\n#define RAYLIB_H\n\n#include <stdarg.h>     // Required for: va_list - Only used by TraceLogCallback\n\n#define RAYLIB_VERSION  \"4.0\"\n\n// Function specifiers in case library is build/used as a shared library (Windows)\n// NOTE: Microsoft specifiers to tell compiler that symbols are imported/exported from a .dll\n#if defined(_WIN32)\n    #if defined(BUILD_LIBTYPE_SHARED)\n        #define RLAPI __declspec(dllexport)     // We are building the library as a Win32 shared library (.dll)\n    #elif defined(USE_LIBTYPE_SHARED)\n        #define RLAPI __declspec(dllimport)     // We are using the library as a Win32 shared library (.dll)\n    #endif\n#endif\n\n#ifndef RLAPI\n    #define RLAPI       // Functions defined as 'extern' by default (implicit specifiers)\n#endif\n\n//----------------------------------------------------------------------------------\n// Some basic Defines\n//----------------------------------------------------------------------------------\n#ifndef PI\n    #define PI 3.14159265358979323846f\n#endif\n#ifndef DEG2RAD\n    #define DEG2RAD (PI/180.0f)\n#endif\n#ifndef RAD2DEG\n    #define RAD2DEG (180.0f/PI)\n#endif\n\n// Allow custom memory allocators\n#ifndef RL_MALLOC\n    #define RL_MALLOC(sz)       malloc(sz)\n#endif\n#ifndef RL_CALLOC\n    #define RL_CALLOC(n,sz)     calloc(n,sz)\n#endif\n#ifndef RL_REALLOC\n    #define RL_REALLOC(ptr,sz)  realloc(ptr,sz)\n#endif\n#ifndef RL_FREE\n    #define RL_FREE(ptr)        free(ptr)\n#endif\n\n// NOTE: MSVC C++ compiler does not support compound literals (C99 feature)\n// Plain structures in C++ (without constructors) can be initialized with { }\n#if defined(__cplusplus)\n    #define CLITERAL(type)      type\n#else\n    #define CLITERAL(type)      (type)\n#endif\n\n// NOTE: We set some defines with some data types declared by raylib\n// Other modules (raymath, rlgl) also require some of those types, so,\n// to be able to use those other modules as standalone (not depending on raylib)\n// this defines are very useful for internal check and avoid type (re)definitions\n#define RL_COLOR_TYPE\n#define RL_RECTANGLE_TYPE\n#define RL_VECTOR2_TYPE\n#define RL_VECTOR3_TYPE\n#define RL_VECTOR4_TYPE\n#define RL_QUATERNION_TYPE\n#define RL_MATRIX_TYPE\n\n// Some Basic Colors\n// NOTE: Custom raylib color palette for amazing visuals on WHITE background\n#define LIGHTGRAY  CLITERAL(Color){ 200, 200, 200, 255 }   // Light Gray\n#define GRAY       CLITERAL(Color){ 130, 130, 130, 255 }   // Gray\n#define DARKGRAY   CLITERAL(Color){ 80, 80, 80, 255 }      // Dark Gray\n#define YELLOW     CLITERAL(Color){ 253, 249, 0, 255 }     // Yellow\n#define GOLD       CLITERAL(Color){ 255, 203, 0, 255 }     // Gold\n#define ORANGE     CLITERAL(Color){ 255, 161, 0, 255 }     // Orange\n#define PINK       CLITERAL(Color){ 255, 109, 194, 255 }   // Pink\n#define RED        CLITERAL(Color){ 230, 41, 55, 255 }     // Red\n#define MAROON     CLITERAL(Color){ 190, 33, 55, 255 }     // Maroon\n#define GREEN      CLITERAL(Color){ 0, 228, 48, 255 }      // Green\n#define LIME       CLITERAL(Color){ 0, 158, 47, 255 }      // Lime\n#define DARKGREEN  CLITERAL(Color){ 0, 117, 44, 255 }      // Dark Green\n#define SKYBLUE    CLITERAL(Color){ 102, 191, 255, 255 }   // Sky Blue\n#define BLUE       CLITERAL(Color){ 0, 121, 241, 255 }     // Blue\n#define DARKBLUE   CLITERAL(Color){ 0, 82, 172, 255 }      // Dark Blue\n#define PURPLE     CLITERAL(Color){ 200, 122, 255, 255 }   // Purple\n#define VIOLET     CLITERAL(Color){ 135, 60, 190, 255 }    // Violet\n#define DARKPURPLE CLITERAL(Color){ 112, 31, 126, 255 }    // Dark Purple\n#define BEIGE      CLITERAL(Color){ 211, 176, 131, 255 }   // Beige\n#define BROWN      CLITERAL(Color){ 127, 106, 79, 255 }    // Brown\n#define DARKBROWN  CLITERAL(Color){ 76, 63, 47, 255 }      // Dark Brown\n\n#define WHITE      CLITERAL(Color){ 255, 255, 255, 255 }   // White\n#define BLACK      CLITERAL(Color){ 0, 0, 0, 255 }         // Black\n#define BLANK      CLITERAL(Color){ 0, 0, 0, 0 }           // Blank (Transparent)\n#define MAGENTA    CLITERAL(Color){ 255, 0, 255, 255 }     // Magenta\n#define RAYWHITE   CLITERAL(Color){ 245, 245, 245, 255 }   // My own White (raylib logo)\n\n//----------------------------------------------------------------------------------\n// Structures Definition\n//----------------------------------------------------------------------------------\n// Boolean type\n#if defined(__STDC__) && __STDC_VERSION__ >= 199901L\n    #include <stdbool.h>\n#elif !defined(__cplusplus) && !defined(bool)\n    typedef enum bool { false, true } bool;\n    #define RL_BOOL_TYPE\n#endif\n\n// Vector2, 2 components\ntypedef struct Vector2 {\n    float x;                // Vector x component\n    float y;                // Vector y component\n} Vector2;\n\n// Vector3, 3 components\ntypedef struct Vector3 {\n    float x;                // Vector x component\n    float y;                // Vector y component\n    float z;                // Vector z component\n} Vector3;\n\n// Vector4, 4 components\ntypedef struct Vector4 {\n    float x;                // Vector x component\n    float y;                // Vector y component\n    float z;                // Vector z component\n    float w;                // Vector w component\n} Vector4;\n\n// Quaternion, 4 components (Vector4 alias)\ntypedef Vector4 Quaternion;\n\n// Matrix, 4x4 components, column major, OpenGL style, right handed\ntypedef struct Matrix {\n    float m0, m4, m8, m12;  // Matrix first row (4 components)\n    float m1, m5, m9, m13;  // Matrix second row (4 components)\n    float m2, m6, m10, m14; // Matrix third row (4 components)\n    float m3, m7, m11, m15; // Matrix fourth row (4 components)\n} Matrix;\n\n// Color, 4 components, R8G8B8A8 (32bit)\ntypedef struct Color {\n    unsigned char r;        // Color red value\n    unsigned char g;        // Color green value\n    unsigned char b;        // Color blue value\n    unsigned char a;        // Color alpha value\n} Color;\n\n// Rectangle, 4 components\ntypedef struct Rectangle {\n    float x;                // Rectangle top-left corner position x\n    float y;                // Rectangle top-left corner position y\n    float width;            // Rectangle width\n    float height;           // Rectangle height\n} Rectangle;\n\n// Image, pixel data stored in CPU memory (RAM)\ntypedef struct Image {\n    void *data;             // Image raw data\n    int width;              // Image base width\n    int height;             // Image base height\n    int mipmaps;            // Mipmap levels, 1 by default\n    int format;             // Data format (PixelFormat type)\n} Image;\n\n// Texture, tex data stored in GPU memory (VRAM)\ntypedef struct Texture {\n    unsigned int id;        // OpenGL texture id\n    int width;              // Texture base width\n    int height;             // Texture base height\n    int mipmaps;            // Mipmap levels, 1 by default\n    int format;             // Data format (PixelFormat type)\n} Texture;\n\n// Texture2D, same as Texture\ntypedef Texture Texture2D;\n\n// TextureCubemap, same as Texture\ntypedef Texture TextureCubemap;\n\n// RenderTexture, fbo for texture rendering\ntypedef struct RenderTexture {\n    unsigned int id;        // OpenGL framebuffer object id\n    Texture texture;        // Color buffer attachment texture\n    Texture depth;          // Depth buffer attachment texture\n} RenderTexture;\n\n// RenderTexture2D, same as RenderTexture\ntypedef RenderTexture RenderTexture2D;\n\n// NPatchInfo, n-patch layout info\ntypedef struct NPatchInfo {\n    Rectangle source;       // Texture source rectangle\n    int left;               // Left border offset\n    int top;                // Top border offset\n    int right;              // Right border offset\n    int bottom;             // Bottom border offset\n    int layout;             // Layout of the n-patch: 3x3, 1x3 or 3x1\n} NPatchInfo;\n\n// GlyphInfo, font characters glyphs info\ntypedef struct GlyphInfo {\n    int value;              // Character value (Unicode)\n    int offsetX;            // Character offset X when drawing\n    int offsetY;            // Character offset Y when drawing\n    int advanceX;           // Character advance position X\n    Image image;            // Character image data\n} GlyphInfo;\n\n// Font, font texture and GlyphInfo array data\ntypedef struct Font {\n    int baseSize;           // Base size (default chars height)\n    int glyphCount;         // Number of glyph characters\n    int glyphPadding;       // Padding around the glyph characters\n    Texture2D texture;      // Texture atlas containing the glyphs\n    Rectangle *recs;        // Rectangles in texture for the glyphs\n    GlyphInfo *glyphs;      // Glyphs info data\n} Font;\n\n// Camera, defines position/orientation in 3d space\ntypedef struct Camera3D {\n    Vector3 position;       // Camera position\n    Vector3 target;         // Camera target it looks-at\n    Vector3 up;             // Camera up vector (rotation over its axis)\n    float fovy;             // Camera field-of-view apperture in Y (degrees) in perspective, used as near plane width in orthographic\n    int projection;         // Camera projection: CAMERA_PERSPECTIVE or CAMERA_ORTHOGRAPHIC\n} Camera3D;\n\ntypedef Camera3D Camera;    // Camera type fallback, defaults to Camera3D\n\n// Camera2D, defines position/orientation in 2d space\ntypedef struct Camera2D {\n    Vector2 offset;         // Camera offset (displacement from target)\n    Vector2 target;         // Camera target (rotation and zoom origin)\n    float rotation;         // Camera rotation in degrees\n    float zoom;             // Camera zoom (scaling), should be 1.0f by default\n} Camera2D;\n\n// Mesh, vertex data and vao/vbo\ntypedef struct Mesh {\n    int vertexCount;        // Number of vertices stored in arrays\n    int triangleCount;      // Number of triangles stored (indexed or not)\n\n    // Vertex attributes data\n    float *vertices;        // Vertex position (XYZ - 3 components per vertex) (shader-location = 0)\n    float *texcoords;       // Vertex texture coordinates (UV - 2 components per vertex) (shader-location = 1)\n    float *texcoords2;      // Vertex second texture coordinates (useful for lightmaps) (shader-location = 5)\n    float *normals;         // Vertex normals (XYZ - 3 components per vertex) (shader-location = 2)\n    float *tangents;        // Vertex tangents (XYZW - 4 components per vertex) (shader-location = 4)\n    unsigned char *colors;      // Vertex colors (RGBA - 4 components per vertex) (shader-location = 3)\n    unsigned short *indices;    // Vertex indices (in case vertex data comes indexed)\n\n    // Animation vertex data\n    float *animVertices;    // Animated vertex positions (after bones transformations)\n    float *animNormals;     // Animated normals (after bones transformations)\n    unsigned char *boneIds; // Vertex bone ids, max 255 bone ids, up to 4 bones influence by vertex (skinning)\n    float *boneWeights;     // Vertex bone weight, up to 4 bones influence by vertex (skinning)\n\n    // OpenGL identifiers\n    unsigned int vaoId;     // OpenGL Vertex Array Object id\n    unsigned int *vboId;    // OpenGL Vertex Buffer Objects id (default vertex data)\n} Mesh;\n\n// Shader\ntypedef struct Shader {\n    unsigned int id;        // Shader program id\n    int *locs;              // Shader locations array (RL_MAX_SHADER_LOCATIONS)\n} Shader;\n\n// MaterialMap\ntypedef struct MaterialMap {\n    Texture2D texture;      // Material map texture\n    Color color;            // Material map color\n    float value;            // Material map value\n} MaterialMap;\n\n// Material, includes shader and maps\ntypedef struct Material {\n    Shader shader;          // Material shader\n    MaterialMap *maps;      // Material maps array (MAX_MATERIAL_MAPS)\n    float params[4];        // Material generic parameters (if required)\n} Material;\n\n// Transform, vectex transformation data\ntypedef struct Transform {\n    Vector3 translation;    // Translation\n    Quaternion rotation;    // Rotation\n    Vector3 scale;          // Scale\n} Transform;\n\n// Bone, skeletal animation bone\ntypedef struct BoneInfo {\n    char name[32];          // Bone name\n    int parent;             // Bone parent\n} BoneInfo;\n\n// Model, meshes, materials and animation data\ntypedef struct Model {\n    Matrix transform;       // Local transform matrix\n\n    int meshCount;          // Number of meshes\n    int materialCount;      // Number of materials\n    Mesh *meshes;           // Meshes array\n    Material *materials;    // Materials array\n    int *meshMaterial;      // Mesh material number\n\n    // Animation data\n    int boneCount;          // Number of bones\n    BoneInfo *bones;        // Bones information (skeleton)\n    Transform *bindPose;    // Bones base transformation (pose)\n} Model;\n\n// ModelAnimation\ntypedef struct ModelAnimation {\n    int boneCount;          // Number of bones\n    int frameCount;         // Number of animation frames\n    BoneInfo *bones;        // Bones information (skeleton)\n    Transform **framePoses; // Poses array by frame\n} ModelAnimation;\n\n// Ray, ray for raycasting\ntypedef struct Ray {\n    Vector3 position;       // Ray position (origin)\n    Vector3 direction;      // Ray direction\n} Ray;\n\n// RayCollision, ray hit information\ntypedef struct RayCollision {\n    bool hit;               // Did the ray hit something?\n    float distance;         // Distance to nearest hit\n    Vector3 point;          // Point of nearest hit\n    Vector3 normal;         // Surface normal of hit\n} RayCollision;\n\n// BoundingBox\ntypedef struct BoundingBox {\n    Vector3 min;            // Minimum vertex box-corner\n    Vector3 max;            // Maximum vertex box-corner\n} BoundingBox;\n\n// Wave, audio wave data\ntypedef struct Wave {\n    unsigned int frameCount;    // Total number of frames (considering channels)\n    unsigned int sampleRate;    // Frequency (samples per second)\n    unsigned int sampleSize;    // Bit depth (bits per sample): 8, 16, 32 (24 not supported)\n    unsigned int channels;      // Number of channels (1-mono, 2-stereo, ...)\n    void *data;                 // Buffer data pointer\n} Wave;\n\ntypedef struct rAudioBuffer rAudioBuffer;\n\n// AudioStream, custom audio stream\ntypedef struct AudioStream {\n    rAudioBuffer *buffer;       // Pointer to internal data used by the audio system\n\n    unsigned int sampleRate;    // Frequency (samples per second)\n    unsigned int sampleSize;    // Bit depth (bits per sample): 8, 16, 32 (24 not supported)\n    unsigned int channels;      // Number of channels (1-mono, 2-stereo, ...)\n} AudioStream;\n\n// Sound\ntypedef struct Sound {\n    AudioStream stream;         // Audio stream\n    unsigned int frameCount;    // Total number of frames (considering channels)\n} Sound;\n\n// Music, audio stream, anything longer than ~10 seconds should be streamed\ntypedef struct Music {\n    AudioStream stream;         // Audio stream\n    unsigned int frameCount;    // Total number of frames (considering channels)\n    bool looping;               // Music looping enable\n\n    int ctxType;                // Type of music context (audio filetype)\n    void *ctxData;              // Audio context data, depends on type\n} Music;\n\n// VrDeviceInfo, Head-Mounted-Display device parameters\ntypedef struct VrDeviceInfo {\n    int hResolution;                // Horizontal resolution in pixels\n    int vResolution;                // Vertical resolution in pixels\n    float hScreenSize;              // Horizontal size in meters\n    float vScreenSize;              // Vertical size in meters\n    float vScreenCenter;            // Screen center in meters\n    float eyeToScreenDistance;      // Distance between eye and display in meters\n    float lensSeparationDistance;   // Lens separation distance in meters\n    float interpupillaryDistance;   // IPD (distance between pupils) in meters\n    float lensDistortionValues[4];  // Lens distortion constant parameters\n    float chromaAbCorrection[4];    // Chromatic aberration correction parameters\n} VrDeviceInfo;\n\n// VrStereoConfig, VR stereo rendering configuration for simulator\ntypedef struct VrStereoConfig {\n    Matrix projection[2];           // VR projection matrices (per eye)\n    Matrix viewOffset[2];           // VR view offset matrices (per eye)\n    float leftLensCenter[2];        // VR left lens center\n    float rightLensCenter[2];       // VR right lens center\n    float leftScreenCenter[2];      // VR left screen center\n    float rightScreenCenter[2];     // VR right screen center\n    float scale[2];                 // VR distortion scale\n    float scaleIn[2];               // VR distortion scale in\n} VrStereoConfig;\n\n//----------------------------------------------------------------------------------\n// Enumerators Definition\n//----------------------------------------------------------------------------------\n// System/Window config flags\n// NOTE: Every bit registers one state (use it with bit masks)\n// By default all flags are set to 0\ntypedef enum {\n    FLAG_VSYNC_HINT         = 0x00000040,   // Set to try enabling V-Sync on GPU\n    FLAG_FULLSCREEN_MODE    = 0x00000002,   // Set to run program in fullscreen\n    FLAG_WINDOW_RESIZABLE   = 0x00000004,   // Set to allow resizable window\n    FLAG_WINDOW_UNDECORATED = 0x00000008,   // Set to disable window decoration (frame and buttons)\n    FLAG_WINDOW_HIDDEN      = 0x00000080,   // Set to hide window\n    FLAG_WINDOW_MINIMIZED   = 0x00000200,   // Set to minimize window (iconify)\n    FLAG_WINDOW_MAXIMIZED   = 0x00000400,   // Set to maximize window (expanded to monitor)\n    FLAG_WINDOW_UNFOCUSED   = 0x00000800,   // Set to window non focused\n    FLAG_WINDOW_TOPMOST     = 0x00001000,   // Set to window always on top\n    FLAG_WINDOW_ALWAYS_RUN  = 0x00000100,   // Set to allow windows running while minimized\n    FLAG_WINDOW_TRANSPARENT = 0x00000010,   // Set to allow transparent framebuffer\n    FLAG_WINDOW_HIGHDPI     = 0x00002000,   // Set to support HighDPI\n    FLAG_MSAA_4X_HINT       = 0x00000020,   // Set to try enabling MSAA 4X\n    FLAG_INTERLACED_HINT    = 0x00010000    // Set to try enabling interlaced video format (for V3D)\n} ConfigFlags;\n\n// Trace log level\n// NOTE: Organized by priority level\ntypedef enum {\n    LOG_ALL = 0,        // Display all logs\n    LOG_TRACE,          // Trace logging, intended for internal use only\n    LOG_DEBUG,          // Debug logging, used for internal debugging, it should be disabled on release builds\n    LOG_INFO,           // Info logging, used for program execution info\n    LOG_WARNING,        // Warning logging, used on recoverable failures\n    LOG_ERROR,          // Error logging, used on unrecoverable failures\n    LOG_FATAL,          // Fatal logging, used to abort program: exit(EXIT_FAILURE)\n    LOG_NONE            // Disable logging\n} TraceLogLevel;\n\n// Keyboard keys (US keyboard layout)\n// NOTE: Use GetKeyPressed() to allow redefining\n// required keys for alternative layouts\ntypedef enum {\n    KEY_NULL            = 0,        // Key: NULL, used for no key pressed\n    // Alphanumeric keys\n    KEY_APOSTROPHE      = 39,       // Key: '\n    KEY_COMMA           = 44,       // Key: ,\n    KEY_MINUS           = 45,       // Key: -\n    KEY_PERIOD          = 46,       // Key: .\n    KEY_SLASH           = 47,       // Key: /\n    KEY_ZERO            = 48,       // Key: 0\n    KEY_ONE             = 49,       // Key: 1\n    KEY_TWO             = 50,       // Key: 2\n    KEY_THREE           = 51,       // Key: 3\n    KEY_FOUR            = 52,       // Key: 4\n    KEY_FIVE            = 53,       // Key: 5\n    KEY_SIX             = 54,       // Key: 6\n    KEY_SEVEN           = 55,       // Key: 7\n    KEY_EIGHT           = 56,       // Key: 8\n    KEY_NINE            = 57,       // Key: 9\n    KEY_SEMICOLON       = 59,       // Key: ;\n    KEY_EQUAL           = 61,       // Key: =\n    KEY_A               = 65,       // Key: A | a\n    KEY_B               = 66,       // Key: B | b\n    KEY_C               = 67,       // Key: C | c\n    KEY_D               = 68,       // Key: D | d\n    KEY_E               = 69,       // Key: E | e\n    KEY_F               = 70,       // Key: F | f\n    KEY_G               = 71,       // Key: G | g\n    KEY_H               = 72,       // Key: H | h\n    KEY_I               = 73,       // Key: I | i\n    KEY_J               = 74,       // Key: J | j\n    KEY_K               = 75,       // Key: K | k\n    KEY_L               = 76,       // Key: L | l\n    KEY_M               = 77,       // Key: M | m\n    KEY_N               = 78,       // Key: N | n\n    KEY_O               = 79,       // Key: O | o\n    KEY_P               = 80,       // Key: P | p\n    KEY_Q               = 81,       // Key: Q | q\n    KEY_R               = 82,       // Key: R | r\n    KEY_S               = 83,       // Key: S | s\n    KEY_T               = 84,       // Key: T | t\n    KEY_U               = 85,       // Key: U | u\n    KEY_V               = 86,       // Key: V | v\n    KEY_W               = 87,       // Key: W | w\n    KEY_X               = 88,       // Key: X | x\n    KEY_Y               = 89,       // Key: Y | y\n    KEY_Z               = 90,       // Key: Z | z\n    KEY_LEFT_BRACKET    = 91,       // Key: [\n    KEY_BACKSLASH       = 92,       // Key: '\\'\n    KEY_RIGHT_BRACKET   = 93,       // Key: ]\n    KEY_GRAVE           = 96,       // Key: `\n    // Function keys\n    KEY_SPACE           = 32,       // Key: Space\n    KEY_ESCAPE          = 256,      // Key: Esc\n    KEY_ENTER           = 257,      // Key: Enter\n    KEY_TAB             = 258,      // Key: Tab\n    KEY_BACKSPACE       = 259,      // Key: Backspace\n    KEY_INSERT          = 260,      // Key: Ins\n    KEY_DELETE          = 261,      // Key: Del\n    KEY_RIGHT           = 262,      // Key: Cursor right\n    KEY_LEFT            = 263,      // Key: Cursor left\n    KEY_DOWN            = 264,      // Key: Cursor down\n    KEY_UP              = 265,      // Key: Cursor up\n    KEY_PAGE_UP         = 266,      // Key: Page up\n    KEY_PAGE_DOWN       = 267,      // Key: Page down\n    KEY_HOME            = 268,      // Key: Home\n    KEY_END             = 269,      // Key: End\n    KEY_CAPS_LOCK       = 280,      // Key: Caps lock\n    KEY_SCROLL_LOCK     = 281,      // Key: Scroll down\n    KEY_NUM_LOCK        = 282,      // Key: Num lock\n    KEY_PRINT_SCREEN    = 283,      // Key: Print screen\n    KEY_PAUSE           = 284,      // Key: Pause\n    KEY_F1              = 290,      // Key: F1\n    KEY_F2              = 291,      // Key: F2\n    KEY_F3              = 292,      // Key: F3\n    KEY_F4              = 293,      // Key: F4\n    KEY_F5              = 294,      // Key: F5\n    KEY_F6              = 295,      // Key: F6\n    KEY_F7              = 296,      // Key: F7\n    KEY_F8              = 297,      // Key: F8\n    KEY_F9              = 298,      // Key: F9\n    KEY_F10             = 299,      // Key: F10\n    KEY_F11             = 300,      // Key: F11\n    KEY_F12             = 301,      // Key: F12\n    KEY_LEFT_SHIFT      = 340,      // Key: Shift left\n    KEY_LEFT_CONTROL    = 341,      // Key: Control left\n    KEY_LEFT_ALT        = 342,      // Key: Alt left\n    KEY_LEFT_SUPER      = 343,      // Key: Super left\n    KEY_RIGHT_SHIFT     = 344,      // Key: Shift right\n    KEY_RIGHT_CONTROL   = 345,      // Key: Control right\n    KEY_RIGHT_ALT       = 346,      // Key: Alt right\n    KEY_RIGHT_SUPER     = 347,      // Key: Super right\n    KEY_KB_MENU         = 348,      // Key: KB menu\n    // Keypad keys\n    KEY_KP_0            = 320,      // Key: Keypad 0\n    KEY_KP_1            = 321,      // Key: Keypad 1\n    KEY_KP_2            = 322,      // Key: Keypad 2\n    KEY_KP_3            = 323,      // Key: Keypad 3\n    KEY_KP_4            = 324,      // Key: Keypad 4\n    KEY_KP_5            = 325,      // Key: Keypad 5\n    KEY_KP_6            = 326,      // Key: Keypad 6\n    KEY_KP_7            = 327,      // Key: Keypad 7\n    KEY_KP_8            = 328,      // Key: Keypad 8\n    KEY_KP_9            = 329,      // Key: Keypad 9\n    KEY_KP_DECIMAL      = 330,      // Key: Keypad .\n    KEY_KP_DIVIDE       = 331,      // Key: Keypad /\n    KEY_KP_MULTIPLY     = 332,      // Key: Keypad *\n    KEY_KP_SUBTRACT     = 333,      // Key: Keypad -\n    KEY_KP_ADD          = 334,      // Key: Keypad +\n    KEY_KP_ENTER        = 335,      // Key: Keypad Enter\n    KEY_KP_EQUAL        = 336,      // Key: Keypad =\n    // Android key buttons\n    KEY_BACK            = 4,        // Key: Android back button\n    KEY_MENU            = 82,       // Key: Android menu button\n    KEY_VOLUME_UP       = 24,       // Key: Android volume up button\n    KEY_VOLUME_DOWN     = 25        // Key: Android volume down button\n} KeyboardKey;\n\n// Add backwards compatibility support for deprecated names\n#define MOUSE_LEFT_BUTTON   MOUSE_BUTTON_LEFT\n#define MOUSE_RIGHT_BUTTON  MOUSE_BUTTON_RIGHT\n#define MOUSE_MIDDLE_BUTTON MOUSE_BUTTON_MIDDLE\n\n// Mouse buttons\ntypedef enum {\n    MOUSE_BUTTON_LEFT    = 0,       // Mouse button left\n    MOUSE_BUTTON_RIGHT   = 1,       // Mouse button right\n    MOUSE_BUTTON_MIDDLE  = 2,       // Mouse button middle (pressed wheel)\n    MOUSE_BUTTON_SIDE    = 3,       // Mouse button side (advanced mouse device)\n    MOUSE_BUTTON_EXTRA   = 4,       // Mouse button extra (advanced mouse device)\n    MOUSE_BUTTON_FORWARD = 5,       // Mouse button fordward (advanced mouse device)\n    MOUSE_BUTTON_BACK    = 6,       // Mouse button back (advanced mouse device)\n} MouseButton;\n\n// Mouse cursor\ntypedef enum {\n    MOUSE_CURSOR_DEFAULT       = 0,     // Default pointer shape\n    MOUSE_CURSOR_ARROW         = 1,     // Arrow shape\n    MOUSE_CURSOR_IBEAM         = 2,     // Text writing cursor shape\n    MOUSE_CURSOR_CROSSHAIR     = 3,     // Cross shape\n    MOUSE_CURSOR_POINTING_HAND = 4,     // Pointing hand cursor\n    MOUSE_CURSOR_RESIZE_EW     = 5,     // Horizontal resize/move arrow shape\n    MOUSE_CURSOR_RESIZE_NS     = 6,     // Vertical resize/move arrow shape\n    MOUSE_CURSOR_RESIZE_NWSE   = 7,     // Top-left to bottom-right diagonal resize/move arrow shape\n    MOUSE_CURSOR_RESIZE_NESW   = 8,     // The top-right to bottom-left diagonal resize/move arrow shape\n    MOUSE_CURSOR_RESIZE_ALL    = 9,     // The omni-directional resize/move cursor shape\n    MOUSE_CURSOR_NOT_ALLOWED   = 10     // The operation-not-allowed shape\n} MouseCursor;\n\n// Gamepad buttons\ntypedef enum {\n    GAMEPAD_BUTTON_UNKNOWN = 0,         // Unknown button, just for error checking\n    GAMEPAD_BUTTON_LEFT_FACE_UP,        // Gamepad left DPAD up button\n    GAMEPAD_BUTTON_LEFT_FACE_RIGHT,     // Gamepad left DPAD right button\n    GAMEPAD_BUTTON_LEFT_FACE_DOWN,      // Gamepad left DPAD down button\n    GAMEPAD_BUTTON_LEFT_FACE_LEFT,      // Gamepad left DPAD left button\n    GAMEPAD_BUTTON_RIGHT_FACE_UP,       // Gamepad right button up (i.e. PS3: Triangle, Xbox: Y)\n    GAMEPAD_BUTTON_RIGHT_FACE_RIGHT,    // Gamepad right button right (i.e. PS3: Square, Xbox: X)\n    GAMEPAD_BUTTON_RIGHT_FACE_DOWN,     // Gamepad right button down (i.e. PS3: Cross, Xbox: A)\n    GAMEPAD_BUTTON_RIGHT_FACE_LEFT,     // Gamepad right button left (i.e. PS3: Circle, Xbox: B)\n    GAMEPAD_BUTTON_LEFT_TRIGGER_1,      // Gamepad top/back trigger left (first), it could be a trailing button\n    GAMEPAD_BUTTON_LEFT_TRIGGER_2,      // Gamepad top/back trigger left (second), it could be a trailing button\n    GAMEPAD_BUTTON_RIGHT_TRIGGER_1,     // Gamepad top/back trigger right (one), it could be a trailing button\n    GAMEPAD_BUTTON_RIGHT_TRIGGER_2,     // Gamepad top/back trigger right (second), it could be a trailing button\n    GAMEPAD_BUTTON_MIDDLE_LEFT,         // Gamepad center buttons, left one (i.e. PS3: Select)\n    GAMEPAD_BUTTON_MIDDLE,              // Gamepad center buttons, middle one (i.e. PS3: PS, Xbox: XBOX)\n    GAMEPAD_BUTTON_MIDDLE_RIGHT,        // Gamepad center buttons, right one (i.e. PS3: Start)\n    GAMEPAD_BUTTON_LEFT_THUMB,          // Gamepad joystick pressed button left\n    GAMEPAD_BUTTON_RIGHT_THUMB          // Gamepad joystick pressed button right\n} GamepadButton;\n\n// Gamepad axis\ntypedef enum {\n    GAMEPAD_AXIS_LEFT_X        = 0,     // Gamepad left stick X axis\n    GAMEPAD_AXIS_LEFT_Y        = 1,     // Gamepad left stick Y axis\n    GAMEPAD_AXIS_RIGHT_X       = 2,     // Gamepad right stick X axis\n    GAMEPAD_AXIS_RIGHT_Y       = 3,     // Gamepad right stick Y axis\n    GAMEPAD_AXIS_LEFT_TRIGGER  = 4,     // Gamepad back trigger left, pressure level: [1..-1]\n    GAMEPAD_AXIS_RIGHT_TRIGGER = 5      // Gamepad back trigger right, pressure level: [1..-1]\n} GamepadAxis;\n\n// Material map index\ntypedef enum {\n    MATERIAL_MAP_ALBEDO    = 0,     // Albedo material (same as: MATERIAL_MAP_DIFFUSE)\n    MATERIAL_MAP_METALNESS,         // Metalness material (same as: MATERIAL_MAP_SPECULAR)\n    MATERIAL_MAP_NORMAL,            // Normal material\n    MATERIAL_MAP_ROUGHNESS,         // Roughness material\n    MATERIAL_MAP_OCCLUSION,         // Ambient occlusion material\n    MATERIAL_MAP_EMISSION,          // Emission material\n    MATERIAL_MAP_HEIGHT,            // Heightmap material\n    MATERIAL_MAP_CUBEMAP,           // Cubemap material (NOTE: Uses GL_TEXTURE_CUBE_MAP)\n    MATERIAL_MAP_IRRADIANCE,        // Irradiance material (NOTE: Uses GL_TEXTURE_CUBE_MAP)\n    MATERIAL_MAP_PREFILTER,         // Prefilter material (NOTE: Uses GL_TEXTURE_CUBE_MAP)\n    MATERIAL_MAP_BRDF               // Brdf material\n} MaterialMapIndex;\n\n#define MATERIAL_MAP_DIFFUSE      MATERIAL_MAP_ALBEDO\n#define MATERIAL_MAP_SPECULAR     MATERIAL_MAP_METALNESS\n\n// Shader location index\ntypedef enum {\n    SHADER_LOC_VERTEX_POSITION = 0, // Shader location: vertex attribute: position\n    SHADER_LOC_VERTEX_TEXCOORD01,   // Shader location: vertex attribute: texcoord01\n    SHADER_LOC_VERTEX_TEXCOORD02,   // Shader location: vertex attribute: texcoord02\n    SHADER_LOC_VERTEX_NORMAL,       // Shader location: vertex attribute: normal\n    SHADER_LOC_VERTEX_TANGENT,      // Shader location: vertex attribute: tangent\n    SHADER_LOC_VERTEX_COLOR,        // Shader location: vertex attribute: color\n    SHADER_LOC_MATRIX_MVP,          // Shader location: matrix uniform: model-view-projection\n    SHADER_LOC_MATRIX_VIEW,         // Shader location: matrix uniform: view (camera transform)\n    SHADER_LOC_MATRIX_PROJECTION,   // Shader location: matrix uniform: projection\n    SHADER_LOC_MATRIX_MODEL,        // Shader location: matrix uniform: model (transform)\n    SHADER_LOC_MATRIX_NORMAL,       // Shader location: matrix uniform: normal\n    SHADER_LOC_VECTOR_VIEW,         // Shader location: vector uniform: view\n    SHADER_LOC_COLOR_DIFFUSE,       // Shader location: vector uniform: diffuse color\n    SHADER_LOC_COLOR_SPECULAR,      // Shader location: vector uniform: specular color\n    SHADER_LOC_COLOR_AMBIENT,       // Shader location: vector uniform: ambient color\n    SHADER_LOC_MAP_ALBEDO,          // Shader location: sampler2d texture: albedo (same as: SHADER_LOC_MAP_DIFFUSE)\n    SHADER_LOC_MAP_METALNESS,       // Shader location: sampler2d texture: metalness (same as: SHADER_LOC_MAP_SPECULAR)\n    SHADER_LOC_MAP_NORMAL,          // Shader location: sampler2d texture: normal\n    SHADER_LOC_MAP_ROUGHNESS,       // Shader location: sampler2d texture: roughness\n    SHADER_LOC_MAP_OCCLUSION,       // Shader location: sampler2d texture: occlusion\n    SHADER_LOC_MAP_EMISSION,        // Shader location: sampler2d texture: emission\n    SHADER_LOC_MAP_HEIGHT,          // Shader location: sampler2d texture: height\n    SHADER_LOC_MAP_CUBEMAP,         // Shader location: samplerCube texture: cubemap\n    SHADER_LOC_MAP_IRRADIANCE,      // Shader location: samplerCube texture: irradiance\n    SHADER_LOC_MAP_PREFILTER,       // Shader location: samplerCube texture: prefilter\n    SHADER_LOC_MAP_BRDF             // Shader location: sampler2d texture: brdf\n} ShaderLocationIndex;\n\n#define SHADER_LOC_MAP_DIFFUSE      SHADER_LOC_MAP_ALBEDO\n#define SHADER_LOC_MAP_SPECULAR     SHADER_LOC_MAP_METALNESS\n\n// Shader uniform data type\ntypedef enum {\n    SHADER_UNIFORM_FLOAT = 0,       // Shader uniform type: float\n    SHADER_UNIFORM_VEC2,            // Shader uniform type: vec2 (2 float)\n    SHADER_UNIFORM_VEC3,            // Shader uniform type: vec3 (3 float)\n    SHADER_UNIFORM_VEC4,            // Shader uniform type: vec4 (4 float)\n    SHADER_UNIFORM_INT,             // Shader uniform type: int\n    SHADER_UNIFORM_IVEC2,           // Shader uniform type: ivec2 (2 int)\n    SHADER_UNIFORM_IVEC3,           // Shader uniform type: ivec3 (3 int)\n    SHADER_UNIFORM_IVEC4,           // Shader uniform type: ivec4 (4 int)\n    SHADER_UNIFORM_SAMPLER2D        // Shader uniform type: sampler2d\n} ShaderUniformDataType;\n\n// Shader attribute data types\ntypedef enum {\n    SHADER_ATTRIB_FLOAT = 0,        // Shader attribute type: float\n    SHADER_ATTRIB_VEC2,             // Shader attribute type: vec2 (2 float)\n    SHADER_ATTRIB_VEC3,             // Shader attribute type: vec3 (3 float)\n    SHADER_ATTRIB_VEC4              // Shader attribute type: vec4 (4 float)\n} ShaderAttributeDataType;\n\n// Pixel formats\n// NOTE: Support depends on OpenGL version and platform\ntypedef enum {\n    PIXELFORMAT_UNCOMPRESSED_GRAYSCALE = 1, // 8 bit per pixel (no alpha)\n    PIXELFORMAT_UNCOMPRESSED_GRAY_ALPHA,    // 8*2 bpp (2 channels)\n    PIXELFORMAT_UNCOMPRESSED_R5G6B5,        // 16 bpp\n    PIXELFORMAT_UNCOMPRESSED_R8G8B8,        // 24 bpp\n    PIXELFORMAT_UNCOMPRESSED_R5G5B5A1,      // 16 bpp (1 bit alpha)\n    PIXELFORMAT_UNCOMPRESSED_R4G4B4A4,      // 16 bpp (4 bit alpha)\n    PIXELFORMAT_UNCOMPRESSED_R8G8B8A8,      // 32 bpp\n    PIXELFORMAT_UNCOMPRESSED_R32,           // 32 bpp (1 channel - float)\n    PIXELFORMAT_UNCOMPRESSED_R32G32B32,     // 32*3 bpp (3 channels - float)\n    PIXELFORMAT_UNCOMPRESSED_R32G32B32A32,  // 32*4 bpp (4 channels - float)\n    PIXELFORMAT_COMPRESSED_DXT1_RGB,        // 4 bpp (no alpha)\n    PIXELFORMAT_COMPRESSED_DXT1_RGBA,       // 4 bpp (1 bit alpha)\n    PIXELFORMAT_COMPRESSED_DXT3_RGBA,       // 8 bpp\n    PIXELFORMAT_COMPRESSED_DXT5_RGBA,       // 8 bpp\n    PIXELFORMAT_COMPRESSED_ETC1_RGB,        // 4 bpp\n    PIXELFORMAT_COMPRESSED_ETC2_RGB,        // 4 bpp\n    PIXELFORMAT_COMPRESSED_ETC2_EAC_RGBA,   // 8 bpp\n    PIXELFORMAT_COMPRESSED_PVRT_RGB,        // 4 bpp\n    PIXELFORMAT_COMPRESSED_PVRT_RGBA,       // 4 bpp\n    PIXELFORMAT_COMPRESSED_ASTC_4x4_RGBA,   // 8 bpp\n    PIXELFORMAT_COMPRESSED_ASTC_8x8_RGBA    // 2 bpp\n} PixelFormat;\n\n// Texture parameters: filter mode\n// NOTE 1: Filtering considers mipmaps if available in the texture\n// NOTE 2: Filter is accordingly set for minification and magnification\ntypedef enum {\n    TEXTURE_FILTER_POINT = 0,               // No filter, just pixel aproximation\n    TEXTURE_FILTER_BILINEAR,                // Linear filtering\n    TEXTURE_FILTER_TRILINEAR,               // Trilinear filtering (linear with mipmaps)\n    TEXTURE_FILTER_ANISOTROPIC_4X,          // Anisotropic filtering 4x\n    TEXTURE_FILTER_ANISOTROPIC_8X,          // Anisotropic filtering 8x\n    TEXTURE_FILTER_ANISOTROPIC_16X,         // Anisotropic filtering 16x\n} TextureFilter;\n\n// Texture parameters: wrap mode\ntypedef enum {\n    TEXTURE_WRAP_REPEAT = 0,                // Repeats texture in tiled mode\n    TEXTURE_WRAP_CLAMP,                     // Clamps texture to edge pixel in tiled mode\n    TEXTURE_WRAP_MIRROR_REPEAT,             // Mirrors and repeats the texture in tiled mode\n    TEXTURE_WRAP_MIRROR_CLAMP               // Mirrors and clamps to border the texture in tiled mode\n} TextureWrap;\n\n// Cubemap layouts\ntypedef enum {\n    CUBEMAP_LAYOUT_AUTO_DETECT = 0,         // Automatically detect layout type\n    CUBEMAP_LAYOUT_LINE_VERTICAL,           // Layout is defined by a vertical line with faces\n    CUBEMAP_LAYOUT_LINE_HORIZONTAL,         // Layout is defined by an horizontal line with faces\n    CUBEMAP_LAYOUT_CROSS_THREE_BY_FOUR,     // Layout is defined by a 3x4 cross with cubemap faces\n    CUBEMAP_LAYOUT_CROSS_FOUR_BY_THREE,     // Layout is defined by a 4x3 cross with cubemap faces\n    CUBEMAP_LAYOUT_PANORAMA                 // Layout is defined by a panorama image (equirectangular map)\n} CubemapLayout;\n\n// Font type, defines generation method\ntypedef enum {\n    FONT_DEFAULT = 0,               // Default font generation, anti-aliased\n    FONT_BITMAP,                    // Bitmap font generation, no anti-aliasing\n    FONT_SDF                        // SDF font generation, requires external shader\n} FontType;\n\n// Color blending modes (pre-defined)\ntypedef enum {\n    BLEND_ALPHA = 0,                // Blend textures considering alpha (default)\n    BLEND_ADDITIVE,                 // Blend textures adding colors\n    BLEND_MULTIPLIED,               // Blend textures multiplying colors\n    BLEND_ADD_COLORS,               // Blend textures adding colors (alternative)\n    BLEND_SUBTRACT_COLORS,          // Blend textures subtracting colors (alternative)\n    BLEND_CUSTOM                    // Belnd textures using custom src/dst factors (use rlSetBlendMode())\n} BlendMode;\n\n// Gesture\n// NOTE: It could be used as flags to enable only some gestures\ntypedef enum {\n    GESTURE_NONE        = 0,        // No gesture\n    GESTURE_TAP         = 1,        // Tap gesture\n    GESTURE_DOUBLETAP   = 2,        // Double tap gesture\n    GESTURE_HOLD        = 4,        // Hold gesture\n    GESTURE_DRAG        = 8,        // Drag gesture\n    GESTURE_SWIPE_RIGHT = 16,       // Swipe right gesture\n    GESTURE_SWIPE_LEFT  = 32,       // Swipe left gesture\n    GESTURE_SWIPE_UP    = 64,       // Swipe up gesture\n    GESTURE_SWIPE_DOWN  = 128,      // Swipe down gesture\n    GESTURE_PINCH_IN    = 256,      // Pinch in gesture\n    GESTURE_PINCH_OUT   = 512       // Pinch out gesture\n} Gesture;\n\n// Camera system modes\ntypedef enum {\n    CAMERA_CUSTOM = 0,              // Custom camera\n    CAMERA_FREE,                    // Free camera\n    CAMERA_ORBITAL,                 // Orbital camera\n    CAMERA_FIRST_PERSON,            // First person camera\n    CAMERA_THIRD_PERSON             // Third person camera\n} CameraMode;\n\n// Camera projection\ntypedef enum {\n    CAMERA_PERSPECTIVE = 0,         // Perspective projection\n    CAMERA_ORTHOGRAPHIC             // Orthographic projection\n} CameraProjection;\n\n// N-patch layout\ntypedef enum {\n    NPATCH_NINE_PATCH = 0,          // Npatch layout: 3x3 tiles\n    NPATCH_THREE_PATCH_VERTICAL,    // Npatch layout: 1x3 tiles\n    NPATCH_THREE_PATCH_HORIZONTAL   // Npatch layout: 3x1 tiles\n} NPatchLayout;\n\n// Callbacks to hook some internal functions\n// WARNING: This callbacks are intended for advance users\ntypedef void (*TraceLogCallback)(int logLevel, const char *text, va_list args);  // Logging: Redirect trace log messages\ntypedef unsigned char *(*LoadFileDataCallback)(const char *fileName, unsigned int *bytesRead);      // FileIO: Load binary data\ntypedef bool (*SaveFileDataCallback)(const char *fileName, void *data, unsigned int bytesToWrite);  // FileIO: Save binary data\ntypedef char *(*LoadFileTextCallback)(const char *fileName);       // FileIO: Load text data\ntypedef bool (*SaveFileTextCallback)(const char *fileName, char *text);     // FileIO: Save text data\n\n//------------------------------------------------------------------------------------\n// Global Variables Definition\n//------------------------------------------------------------------------------------\n// It's lonely here...\n\n//------------------------------------------------------------------------------------\n// Window and Graphics Device Functions (Module: core)\n//------------------------------------------------------------------------------------\n\n#if defined(__cplusplus)\nextern \"C\" {            // Prevents name mangling of functions\n#endif\n\n// Window-related functions\nRLAPI void InitWindow(int width, int height, const char *title);  // Initialize window and OpenGL context\nRLAPI bool WindowShouldClose(void);                               // Check if KEY_ESCAPE pressed or Close icon pressed\nRLAPI void CloseRaylib(void);                                     // Close window and unload OpenGL context\nRLAPI bool IsWindowReady(void);                                   // Check if window has been initialized successfully\nRLAPI bool IsWindowFullscreen(void);                              // Check if window is currently fullscreen\nRLAPI bool IsWindowHidden(void);                                  // Check if window is currently hidden (only PLATFORM_DESKTOP)\nRLAPI bool IsWindowMinimized(void);                               // Check if window is currently minimized (only PLATFORM_DESKTOP)\nRLAPI bool IsWindowMaximized(void);                               // Check if window is currently maximized (only PLATFORM_DESKTOP)\nRLAPI bool IsWindowFocused(void);                                 // Check if window is currently focused (only PLATFORM_DESKTOP)\nRLAPI bool IsWindowResized(void);                                 // Check if window has been resized last frame\nRLAPI bool IsWindowState(unsigned int flag);                      // Check if one specific window flag is enabled\nRLAPI void SetWindowState(unsigned int flags);                    // Set window configuration state using flags\nRLAPI void ClearWindowState(unsigned int flags);                  // Clear window configuration state flags\nRLAPI void ToggleFullscreen(void);                                // Toggle window state: fullscreen/windowed (only PLATFORM_DESKTOP)\nRLAPI void MaximizeWindow(void);                                  // Set window state: maximized, if resizable (only PLATFORM_DESKTOP)\nRLAPI void MinimizeWindow(void);                                  // Set window state: minimized, if resizable (only PLATFORM_DESKTOP)\nRLAPI void RestoreWindow(void);                                   // Set window state: not minimized/maximized (only PLATFORM_DESKTOP)\nRLAPI void SetWindowIcon(Image image);                            // Set icon for window (only PLATFORM_DESKTOP)\nRLAPI void SetWindowTitle(const char *title);                     // Set title for window (only PLATFORM_DESKTOP)\nRLAPI void SetWindowPosition(int x, int y);                       // Set window position on screen (only PLATFORM_DESKTOP)\nRLAPI void SetWindowMonitor(int monitor);                         // Set monitor for the current window (fullscreen mode)\nRLAPI void SetWindowMinSize(int width, int height);               // Set window minimum dimensions (for FLAG_WINDOW_RESIZABLE)\nRLAPI void SetWindowSize(int width, int height);                  // Set window dimensions\nRLAPI void *GetWindowHandle(void);                                // Get native window handle\nRLAPI int GetScreenWidth(void);                                   // Get current screen width\nRLAPI int GetScreenHeight(void);                                  // Get current screen height\nRLAPI int GetMonitorCount(void);                                  // Get number of connected monitors\nRLAPI int GetCurrentMonitor(void);                                // Get current connected monitor\nRLAPI Vector2 GetMonitorPosition(int monitor);                    // Get specified monitor position\nRLAPI int GetMonitorWidth(int monitor);                           // Get specified monitor width (max available by monitor)\nRLAPI int GetMonitorHeight(int monitor);                          // Get specified monitor height (max available by monitor)\nRLAPI int GetMonitorPhysicalWidth(int monitor);                   // Get specified monitor physical width in millimetres\nRLAPI int GetMonitorPhysicalHeight(int monitor);                  // Get specified monitor physical height in millimetres\nRLAPI int GetMonitorRefreshRate(int monitor);                     // Get specified monitor refresh rate\nRLAPI Vector2 GetWindowPosition(void);                            // Get window position XY on monitor\nRLAPI Vector2 GetWindowScaleDPI(void);                            // Get window scale DPI factor\nRLAPI const char *GetMonitorName(int monitor);                    // Get the human-readable, UTF-8 encoded name of the primary monitor\nRLAPI void SetClipboardText(const char *text);                    // Set clipboard text content\nRLAPI const char *GetClipboardText(void);                         // Get clipboard text content\n\n// Custom frame control functions\n// NOTE: Those functions are intended for advance users that want full control over the frame processing\n// By default EndDrawing() does this job: draws everything + SwapScreenBuffer() + manage frame timming + PollInputEvents()\n// To avoid that behaviour and control frame processes manually, enable in config.h: SUPPORT_CUSTOM_FRAME_CONTROL\nRLAPI void SwapScreenBuffer(void);                                // Swap back buffer with front buffer (screen drawing)\nRLAPI void PollInputEvents(void);                                 // Register all input events\nRLAPI void WaitTime(float ms);                                    // Wait for some milliseconds (halt program execution)\n\n// Cursor-related functions\nRLAPI void ShowCursor(void);                                      // Shows cursor\nRLAPI void HideCursor(void);                                      // Hides cursor\nRLAPI bool IsCursorHidden(void);                                  // Check if cursor is not visible\nRLAPI void EnableCursor(void);                                    // Enables cursor (unlock cursor)\nRLAPI void DisableCursor(void);                                   // Disables cursor (lock cursor)\nRLAPI bool IsCursorOnScreen(void);                                // Check if cursor is on the screen\n\n// Drawing-related functions\nRLAPI void ClearBackground(Color color);                          // Set background color (framebuffer clear color)\nRLAPI void BeginDrawing(void);                                    // Setup canvas (framebuffer) to start drawing\nRLAPI void EndDrawing(void);                                      // End canvas drawing and swap buffers (double buffering)\nRLAPI void BeginMode2D(Camera2D camera);                          // Begin 2D mode with custom camera (2D)\nRLAPI void EndMode2D(void);                                       // Ends 2D mode with custom camera\nRLAPI void BeginMode3D(Camera3D camera);                          // Begin 3D mode with custom camera (3D)\nRLAPI void EndMode3D(void);                                       // Ends 3D mode and returns to default 2D orthographic mode\nRLAPI void BeginTextureMode(RenderTexture2D target);              // Begin drawing to render texture\nRLAPI void EndTextureMode(void);                                  // Ends drawing to render texture\nRLAPI void BeginShaderMode(Shader shader);                        // Begin custom shader drawing\nRLAPI void EndShaderMode(void);                                   // End custom shader drawing (use default shader)\nRLAPI void BeginBlendMode(int mode);                              // Begin blending mode (alpha, additive, multiplied, subtract, custom)\nRLAPI void EndBlendMode(void);                                    // End blending mode (reset to default: alpha blending)\nRLAPI void BeginScissorMode(int x, int y, int width, int height); // Begin scissor mode (define screen area for following drawing)\nRLAPI void EndScissorMode(void);                                  // End scissor mode\nRLAPI void BeginVrStereoMode(VrStereoConfig config);              // Begin stereo rendering (requires VR simulator)\nRLAPI void EndVrStereoMode(void);                                 // End stereo rendering (requires VR simulator)\n\n// VR stereo config functions for VR simulator\nRLAPI VrStereoConfig LoadVrStereoConfig(VrDeviceInfo device);     // Load VR stereo config for VR simulator device parameters\nRLAPI void UnloadVrStereoConfig(VrStereoConfig config);           // Unload VR stereo config\n\n// Shader management functions\n// NOTE: Shader functionality is not available on OpenGL 1.1\nRLAPI Shader LoadShader(const char *vsFileName, const char *fsFileName);   // Load shader from files and bind default locations\nRLAPI Shader LoadShaderFromMemory(const char *vsCode, const char *fsCode); // Load shader from code strings and bind default locations\nRLAPI int GetShaderLocation(Shader shader, const char *uniformName);       // Get shader uniform location\nRLAPI int GetShaderLocationAttrib(Shader shader, const char *attribName);  // Get shader attribute location\nRLAPI void SetShaderValue(Shader shader, int locIndex, const void *value, int uniformType);               // Set shader uniform value\nRLAPI void SetShaderValueV(Shader shader, int locIndex, const void *value, int uniformType, int count);   // Set shader uniform value vector\nRLAPI void SetShaderValueMatrix(Shader shader, int locIndex, Matrix mat);         // Set shader uniform value (matrix 4x4)\nRLAPI void SetShaderValueTexture(Shader shader, int locIndex, Texture2D texture); // Set shader uniform value for texture (sampler2d)\nRLAPI void UnloadShader(Shader shader);                                    // Unload shader from GPU memory (VRAM)\n\n// Screen-space-related functions\nRLAPI Ray GetMouseRay(Vector2 mousePosition, Camera camera);      // Get a ray trace from mouse position\nRLAPI Matrix GetCameraMatrix(Camera camera);                      // Get camera transform matrix (view matrix)\nRLAPI Matrix GetCameraMatrix2D(Camera2D camera);                  // Get camera 2d transform matrix\nRLAPI Vector2 GetWorldToScreen(Vector3 position, Camera camera);  // Get the screen space position for a 3d world space position\nRLAPI Vector2 GetWorldToScreenEx(Vector3 position, Camera camera, int width, int height); // Get size position for a 3d world space position\nRLAPI Vector2 GetWorldToScreen2D(Vector2 position, Camera2D camera); // Get the screen space position for a 2d camera world space position\nRLAPI Vector2 GetScreenToWorld2D(Vector2 position, Camera2D camera); // Get the world space position for a 2d camera screen space position\n\n// Timing-related functions\nRLAPI void SetTargetFPS(int fps);                                 // Set target FPS (maximum)\nRLAPI int GetFPS(void);                                           // Get current FPS\nRLAPI float GetFrameTime(void);                                   // Get time in seconds for last frame drawn (delta time)\nRLAPI double GetTime(void);                                       // Get elapsed time in seconds since InitWindow()\n\n// Misc. functions\nRLAPI int GetRandomValue(int min, int max);                       // Get a random value between min and max (both included)\nRLAPI void SetRandomSeed(unsigned int seed);                      // Set the seed for the random number generator\nRLAPI void TakeScreenshot(const char *fileName);                  // Takes a screenshot of current screen (filename extension defines format)\nRLAPI void SetConfigFlags(unsigned int flags);                    // Setup init configuration flags (view FLAGS)\n\nRLAPI void TraceLog(int logLevel, const char *text, ...);         // Show trace log messages (LOG_DEBUG, LOG_INFO, LOG_WARNING, LOG_ERROR...)\nRLAPI void SetTraceLogLevel(int logLevel);                        // Set the current threshold (minimum) log level\nRLAPI void *MemAlloc(int size);                                   // Internal memory allocator\nRLAPI void *MemRealloc(void *ptr, int size);                      // Internal memory reallocator\nRLAPI void MemFree(void *ptr);                                    // Internal memory free\n\n// Set custom callbacks\n// WARNING: Callbacks setup is intended for advance users\nRLAPI void SetTraceLogCallback(TraceLogCallback callback);         // Set custom trace log\nRLAPI void SetLoadFileDataCallback(LoadFileDataCallback callback); // Set custom file binary data loader\nRLAPI void SetSaveFileDataCallback(SaveFileDataCallback callback); // Set custom file binary data saver\nRLAPI void SetLoadFileTextCallback(LoadFileTextCallback callback); // Set custom file text data loader\nRLAPI void SetSaveFileTextCallback(SaveFileTextCallback callback); // Set custom file text data saver\n\n// Files management functions\nRLAPI unsigned char *LoadFileData(const char *fileName, unsigned int *bytesRead);     // Load file data as byte array (read)\nRLAPI void UnloadFileData(unsigned char *data);                   // Unload file data allocated by LoadFileData()\nRLAPI bool SaveFileData(const char *fileName, void *data, unsigned int bytesToWrite); // Save data to file from byte array (write), returns true on success\nRLAPI char *LoadFileText(const char *fileName);                   // Load text data from file (read), returns a '\\0' terminated string\nRLAPI void UnloadFileText(char *text);                            // Unload file text data allocated by LoadFileText()\nRLAPI bool SaveFileText(const char *fileName, char *text);        // Save text data to file (write), string must be '\\0' terminated, returns true on success\nRLAPI bool FileExists(const char *fileName);                      // Check if file exists\nRLAPI bool DirectoryExists(const char *dirPath);                  // Check if a directory path exists\nRLAPI bool IsFileExtension(const char *fileName, const char *ext);// Check file extension (including point: .png, .wav)\nRLAPI const char *GetFileExtension(const char *fileName);         // Get pointer to extension for a filename string (includes dot: '.png')\nRLAPI const char *GetFileName(const char *filePath);              // Get pointer to filename for a path string\nRLAPI const char *GetFileNameWithoutExt(const char *filePath);    // Get filename string without extension (uses static string)\nRLAPI const char *GetDirectoryPath(const char *filePath);         // Get full path for a given fileName with path (uses static string)\nRLAPI const char *GetPrevDirectoryPath(const char *dirPath);      // Get previous directory path for a given path (uses static string)\nRLAPI const char *GetWorkingDirectory(void);                      // Get current working directory (uses static string)\nRLAPI char **GetDirectoryFiles(const char *dirPath, int *count);  // Get filenames in a directory path (memory should be freed)\nRLAPI void ClearDirectoryFiles(void);                             // Clear directory files paths buffers (free memory)\nRLAPI bool ChangeDirectory(const char *dir);                      // Change working directory, return true on success\nRLAPI bool IsFileDropped(void);                                   // Check if a file has been dropped into window\nRLAPI char **GetDroppedFiles(int *count);                         // Get dropped files names (memory should be freed)\nRLAPI void ClearDroppedFiles(void);                               // Clear dropped files paths buffer (free memory)\nRLAPI long GetFileModTime(const char *fileName);                  // Get file modification time (last write time)\n\n// Compression/Encoding functionality\nRLAPI unsigned char *CompressData(unsigned char *data, int dataLength, int *compDataLength);        // Compress data (DEFLATE algorithm)\nRLAPI unsigned char *DecompressData(unsigned char *compData, int compDataLength, int *dataLength);  // Decompress data (DEFLATE algorithm)\nRLAPI char *EncodeDataBase64(const unsigned char *data, int dataLength, int *outputLength);         // Encode data to Base64 string\nRLAPI unsigned char *DecodeDataBase64(unsigned char *data, int *outputLength);                      // Decode Base64 string data\n\n// Persistent storage management\nRLAPI bool SaveStorageValue(unsigned int position, int value);    // Save integer value to storage file (to defined position), returns true on success\nRLAPI int LoadStorageValue(unsigned int position);                // Load integer value from storage file (from defined position)\n\nRLAPI void OpenURL(const char *url);                              // Open URL with default system browser (if available)\n\n//------------------------------------------------------------------------------------\n// Input Handling Functions (Module: core)\n//------------------------------------------------------------------------------------\n\n// Input-related functions: keyboard\nRLAPI bool IsKeyPressed(int key);                             // Check if a key has been pressed once\nRLAPI bool IsKeyDown(int key);                                // Check if a key is being pressed\nRLAPI bool IsKeyReleased(int key);                            // Check if a key has been released once\nRLAPI bool IsKeyUp(int key);                                  // Check if a key is NOT being pressed\nRLAPI void SetExitKey(int key);                               // Set a custom key to exit program (default is ESC)\nRLAPI int GetKeyPressed(void);                                // Get key pressed (keycode), call it multiple times for keys queued, returns 0 when the queue is empty\nRLAPI int GetCharPressed(void);                               // Get char pressed (unicode), call it multiple times for chars queued, returns 0 when the queue is empty\n\n// Input-related functions: gamepads\nRLAPI bool IsGamepadAvailable(int gamepad);                   // Check if a gamepad is available\nRLAPI const char *GetGamepadName(int gamepad);                // Get gamepad internal name id\nRLAPI bool IsGamepadButtonPressed(int gamepad, int button);   // Check if a gamepad button has been pressed once\nRLAPI bool IsGamepadButtonDown(int gamepad, int button);      // Check if a gamepad button is being pressed\nRLAPI bool IsGamepadButtonReleased(int gamepad, int button);  // Check if a gamepad button has been released once\nRLAPI bool IsGamepadButtonUp(int gamepad, int button);        // Check if a gamepad button is NOT being pressed\nRLAPI int GetGamepadButtonPressed(void);                      // Get the last gamepad button pressed\nRLAPI int GetGamepadAxisCount(int gamepad);                   // Get gamepad axis count for a gamepad\nRLAPI float GetGamepadAxisMovement(int gamepad, int axis);    // Get axis movement value for a gamepad axis\nRLAPI int SetGamepadMappings(const char *mappings);           // Set internal gamepad mappings (SDL_GameControllerDB)\n\n// Input-related functions: mouse\nRLAPI bool IsMouseButtonPressed(int button);                  // Check if a mouse button has been pressed once\nRLAPI bool IsMouseButtonDown(int button);                     // Check if a mouse button is being pressed\nRLAPI bool IsMouseButtonReleased(int button);                 // Check if a mouse button has been released once\nRLAPI bool IsMouseButtonUp(int button);                       // Check if a mouse button is NOT being pressed\nRLAPI int GetMouseX(void);                                    // Get mouse position X\nRLAPI int GetMouseY(void);                                    // Get mouse position Y\nRLAPI Vector2 GetMousePosition(void);                         // Get mouse position XY\nRLAPI Vector2 GetMouseDelta(void);                            // Get mouse delta between frames\nRLAPI void SetMousePosition(int x, int y);                    // Set mouse position XY\nRLAPI void SetMouseOffset(int offsetX, int offsetY);          // Set mouse offset\nRLAPI void SetMouseScale(float scaleX, float scaleY);         // Set mouse scaling\nRLAPI float GetMouseWheelMove(void);                          // Get mouse wheel movement Y\nRLAPI void SetMouseCursor(int cursor);                        // Set mouse cursor\n\n// Input-related functions: touch\nRLAPI int GetTouchX(void);                                    // Get touch position X for touch point 0 (relative to screen size)\nRLAPI int GetTouchY(void);                                    // Get touch position Y for touch point 0 (relative to screen size)\nRLAPI Vector2 GetTouchPosition(int index);                    // Get touch position XY for a touch point index (relative to screen size)\nRLAPI int GetTouchPointId(int index);                         // Get touch point identifier for given index\nRLAPI int GetTouchPointCount(void);                           // Get number of touch points\n\n//------------------------------------------------------------------------------------\n// Gestures and Touch Handling Functions (Module: rgestures)\n//------------------------------------------------------------------------------------\nRLAPI void SetGesturesEnabled(unsigned int flags);      // Enable a set of gestures using flags\nRLAPI bool IsGestureDetected(int gesture);              // Check if a gesture have been detected\nRLAPI int GetGestureDetected(void);                     // Get latest detected gesture\nRLAPI float GetGestureHoldDuration(void);               // Get gesture hold time in milliseconds\nRLAPI Vector2 GetGestureDragVector(void);               // Get gesture drag vector\nRLAPI float GetGestureDragAngle(void);                  // Get gesture drag angle\nRLAPI Vector2 GetGesturePinchVector(void);              // Get gesture pinch delta\nRLAPI float GetGesturePinchAngle(void);                 // Get gesture pinch angle\n\n//------------------------------------------------------------------------------------\n// Camera System Functions (Module: rcamera)\n//------------------------------------------------------------------------------------\nRLAPI void SetCameraMode(Camera camera, int mode);      // Set camera mode (multiple camera modes available)\nRLAPI void UpdateCamera(Camera *camera);                // Update camera position for selected mode\n\nRLAPI void SetCameraPanControl(int keyPan);             // Set camera pan key to combine with mouse movement (free camera)\nRLAPI void SetCameraAltControl(int keyAlt);             // Set camera alt key to combine with mouse movement (free camera)\nRLAPI void SetCameraSmoothZoomControl(int keySmoothZoom); // Set camera smooth zoom key to combine with mouse (free camera)\nRLAPI void SetCameraMoveControls(int keyFront, int keyBack, int keyRight, int keyLeft, int keyUp, int keyDown); // Set camera move controls (1st person and 3rd person cameras)\n\n//------------------------------------------------------------------------------------\n// Basic Shapes Drawing Functions (Module: shapes)\n//------------------------------------------------------------------------------------\n// Set texture and rectangle to be used on shapes drawing\n// NOTE: It can be useful when using basic shapes and one single font,\n// defining a font char white rectangle would allow drawing everything in a single draw call\nRLAPI void SetShapesTexture(Texture2D texture, Rectangle source);       // Set texture and rectangle to be used on shapes drawing\n\n// Basic shapes drawing functions\nRLAPI void DrawPixel(int posX, int posY, Color color);                                                   // Draw a pixel\nRLAPI void DrawPixelV(Vector2 position, Color color);                                                    // Draw a pixel (Vector version)\nRLAPI void DrawLine(int startPosX, int startPosY, int endPosX, int endPosY, Color color);                // Draw a line\nRLAPI void DrawLineV(Vector2 startPos, Vector2 endPos, Color color);                                     // Draw a line (Vector version)\nRLAPI void DrawLineEx(Vector2 startPos, Vector2 endPos, float thick, Color color);                       // Draw a line defining thickness\nRLAPI void DrawLineBezier(Vector2 startPos, Vector2 endPos, float thick, Color color);                   // Draw a line using cubic-bezier curves in-out\nRLAPI void DrawLineBezierQuad(Vector2 startPos, Vector2 endPos, Vector2 controlPos, float thick, Color color); // Draw line using quadratic bezier curves with a control point\nRLAPI void DrawLineBezierCubic(Vector2 startPos, Vector2 endPos, Vector2 startControlPos, Vector2 endControlPos, float thick, Color color); // Draw line using cubic bezier curves with 2 control points\nRLAPI void DrawLineStrip(Vector2 *points, int pointCount, Color color);                                  // Draw lines sequence\nRLAPI void DrawCircle(int centerX, int centerY, float radius, Color color);                              // Draw a color-filled circle\nRLAPI void DrawCircleSector(Vector2 center, float radius, float startAngle, float endAngle, int segments, Color color);      // Draw a piece of a circle\nRLAPI void DrawCircleSectorLines(Vector2 center, float radius, float startAngle, float endAngle, int segments, Color color); // Draw circle sector outline\nRLAPI void DrawCircleGradient(int centerX, int centerY, float radius, Color color1, Color color2);       // Draw a gradient-filled circle\nRLAPI void DrawCircleV(Vector2 center, float radius, Color color);                                       // Draw a color-filled circle (Vector version)\nRLAPI void DrawCircleLines(int centerX, int centerY, float radius, Color color);                         // Draw circle outline\nRLAPI void DrawEllipse(int centerX, int centerY, float radiusH, float radiusV, Color color);             // Draw ellipse\nRLAPI void DrawEllipseLines(int centerX, int centerY, float radiusH, float radiusV, Color color);        // Draw ellipse outline\nRLAPI void DrawRing(Vector2 center, float innerRadius, float outerRadius, float startAngle, float endAngle, int segments, Color color); // Draw ring\nRLAPI void DrawRingLines(Vector2 center, float innerRadius, float outerRadius, float startAngle, float endAngle, int segments, Color color);    // Draw ring outline\nRLAPI void DrawRectangle(int posX, int posY, int width, int height, Color color);                        // Draw a color-filled rectangle\nRLAPI void DrawRectangleV(Vector2 position, Vector2 size, Color color);                                  // Draw a color-filled rectangle (Vector version)\nRLAPI void DrawRectangleRec(Rectangle rec, Color color);                                                 // Draw a color-filled rectangle\nRLAPI void DrawRectanglePro(Rectangle rec, Vector2 origin, float rotation, Color color);                 // Draw a color-filled rectangle with pro parameters\nRLAPI void DrawRectangleGradientV(int posX, int posY, int width, int height, Color color1, Color color2);// Draw a vertical-gradient-filled rectangle\nRLAPI void DrawRectangleGradientH(int posX, int posY, int width, int height, Color color1, Color color2);// Draw a horizontal-gradient-filled rectangle\nRLAPI void DrawRectangleGradientEx(Rectangle rec, Color col1, Color col2, Color col3, Color col4);       // Draw a gradient-filled rectangle with custom vertex colors\nRLAPI void DrawRectangleLines(int posX, int posY, int width, int height, Color color);                   // Draw rectangle outline\nRLAPI void DrawRectangleLinesEx(Rectangle rec, float lineThick, Color color);                            // Draw rectangle outline with extended parameters\nRLAPI void DrawRectangleRounded(Rectangle rec, float roundness, int segments, Color color);              // Draw rectangle with rounded edges\nRLAPI void DrawRectangleRoundedLines(Rectangle rec, float roundness, int segments, float lineThick, Color color); // Draw rectangle with rounded edges outline\nRLAPI void DrawTriangle(Vector2 v1, Vector2 v2, Vector2 v3, Color color);                                // Draw a color-filled triangle (vertex in counter-clockwise order!)\nRLAPI void DrawTriangleLines(Vector2 v1, Vector2 v2, Vector2 v3, Color color);                           // Draw triangle outline (vertex in counter-clockwise order!)\nRLAPI void DrawTriangleFan(Vector2 *points, int pointCount, Color color);                                // Draw a triangle fan defined by points (first vertex is the center)\nRLAPI void DrawTriangleStrip(Vector2 *points, int pointCount, Color color);                              // Draw a triangle strip defined by points\nRLAPI void DrawPoly(Vector2 center, int sides, float radius, float rotation, Color color);               // Draw a regular polygon (Vector version)\nRLAPI void DrawPolyLines(Vector2 center, int sides, float radius, float rotation, Color color);          // Draw a polygon outline of n sides\nRLAPI void DrawPolyLinesEx(Vector2 center, int sides, float radius, float rotation, float lineThick, Color color); // Draw a polygon outline of n sides with extended parameters\n\n// Basic shapes collision detection functions\nRLAPI bool CheckCollisionRecs(Rectangle rec1, Rectangle rec2);                                           // Check collision between two rectangles\nRLAPI bool CheckCollisionCircles(Vector2 center1, float radius1, Vector2 center2, float radius2);        // Check collision between two circles\nRLAPI bool CheckCollisionCircleRec(Vector2 center, float radius, Rectangle rec);                         // Check collision between circle and rectangle\nRLAPI bool CheckCollisionPointRec(Vector2 point, Rectangle rec);                                         // Check if point is inside rectangle\nRLAPI bool CheckCollisionPointCircle(Vector2 point, Vector2 center, float radius);                       // Check if point is inside circle\nRLAPI bool CheckCollisionPointTriangle(Vector2 point, Vector2 p1, Vector2 p2, Vector2 p3);               // Check if point is inside a triangle\nRLAPI bool CheckCollisionLines(Vector2 startPos1, Vector2 endPos1, Vector2 startPos2, Vector2 endPos2, Vector2 *collisionPoint); // Check the collision between two lines defined by two points each, returns collision point by reference\nRLAPI bool CheckCollisionPointLine(Vector2 point, Vector2 p1, Vector2 p2, int threshold);                // Check if point belongs to line created between two points [p1] and [p2] with defined margin in pixels [threshold]\nRLAPI Rectangle GetCollisionRec(Rectangle rec1, Rectangle rec2);                                         // Get collision rectangle for two rectangles collision\n\n//------------------------------------------------------------------------------------\n// Texture Loading and Drawing Functions (Module: textures)\n//------------------------------------------------------------------------------------\n\n// Image loading functions\n// NOTE: This functions do not require GPU access\nRLAPI Image LoadImage(const char *fileName);                                                             // Load image from file into CPU memory (RAM)\nRLAPI Image LoadImageRaw(const char *fileName, int width, int height, int format, int headerSize);       // Load image from RAW file data\nRLAPI Image LoadImageAnim(const char *fileName, int *frames);                                            // Load image sequence from file (frames appended to image.data)\nRLAPI Image LoadImageFromMemory(const char *fileType, const unsigned char *fileData, int dataSize);      // Load image from memory buffer, fileType refers to extension: i.e. '.png'\nRLAPI Image LoadImageFromTexture(Texture2D texture);                                                     // Load image from GPU texture data\nRLAPI Image LoadImageFromScreen(void);                                                                   // Load image from screen buffer and (screenshot)\nRLAPI void UnloadImage(Image image);                                                                     // Unload image from CPU memory (RAM)\nRLAPI bool ExportImage(Image image, const char *fileName);                                               // Export image data to file, returns true on success\nRLAPI bool ExportImageAsCode(Image image, const char *fileName);                                         // Export image as code file defining an array of bytes, returns true on success\n\n// Image generation functions\nRLAPI Image GenImageColor(int width, int height, Color color);                                           // Generate image: plain color\nRLAPI Image GenImageGradientV(int width, int height, Color top, Color bottom);                           // Generate image: vertical gradient\nRLAPI Image GenImageGradientH(int width, int height, Color left, Color right);                           // Generate image: horizontal gradient\nRLAPI Image GenImageGradientRadial(int width, int height, float density, Color inner, Color outer);      // Generate image: radial gradient\nRLAPI Image GenImageChecked(int width, int height, int checksX, int checksY, Color col1, Color col2);    // Generate image: checked\nRLAPI Image GenImageWhiteNoise(int width, int height, float factor);                                     // Generate image: white noise\nRLAPI Image GenImageCellular(int width, int height, int tileSize);                                       // Generate image: cellular algorithm, bigger tileSize means bigger cells\n\n// Image manipulation functions\nRLAPI Image ImageCopy(Image image);                                                                      // Create an image duplicate (useful for transformations)\nRLAPI Image ImageFromImage(Image image, Rectangle rec);                                                  // Create an image from another image piece\nRLAPI Image ImageText(const char *text, int fontSize, Color color);                                      // Create an image from text (default font)\nRLAPI Image ImageTextEx(Font font, const char *text, float fontSize, float spacing, Color tint);         // Create an image from text (custom sprite font)\nRLAPI void ImageFormat(Image *image, int newFormat);                                                     // Convert image data to desired format\nRLAPI void ImageToPOT(Image *image, Color fill);                                                         // Convert image to POT (power-of-two)\nRLAPI void ImageCrop(Image *image, Rectangle crop);                                                      // Crop an image to a defined rectangle\nRLAPI void ImageAlphaCrop(Image *image, float threshold);                                                // Crop image depending on alpha value\nRLAPI void ImageAlphaClear(Image *image, Color color, float threshold);                                  // Clear alpha channel to desired color\nRLAPI void ImageAlphaMask(Image *image, Image alphaMask);                                                // Apply alpha mask to image\nRLAPI void ImageAlphaPremultiply(Image *image);                                                          // Premultiply alpha channel\nRLAPI void ImageResize(Image *image, int newWidth, int newHeight);                                       // Resize image (Bicubic scaling algorithm)\nRLAPI void ImageResizeNN(Image *image, int newWidth,int newHeight);                                      // Resize image (Nearest-Neighbor scaling algorithm)\nRLAPI void ImageResizeCanvas(Image *image, int newWidth, int newHeight, int offsetX, int offsetY, Color fill);  // Resize canvas and fill with color\nRLAPI void ImageMipmaps(Image *image);                                                                   // Compute all mipmap levels for a provided image\nRLAPI void ImageDither(Image *image, int rBpp, int gBpp, int bBpp, int aBpp);                            // Dither image data to 16bpp or lower (Floyd-Steinberg dithering)\nRLAPI void ImageFlipVertical(Image *image);                                                              // Flip image vertically\nRLAPI void ImageFlipHorizontal(Image *image);                                                            // Flip image horizontally\nRLAPI void ImageRotateCW(Image *image);                                                                  // Rotate image clockwise 90deg\nRLAPI void ImageRotateCCW(Image *image);                                                                 // Rotate image counter-clockwise 90deg\nRLAPI void ImageColorTint(Image *image, Color color);                                                    // Modify image color: tint\nRLAPI void ImageColorInvert(Image *image);                                                               // Modify image color: invert\nRLAPI void ImageColorGrayscale(Image *image);                                                            // Modify image color: grayscale\nRLAPI void ImageColorContrast(Image *image, float contrast);                                             // Modify image color: contrast (-100 to 100)\nRLAPI void ImageColorBrightness(Image *image, int brightness);                                           // Modify image color: brightness (-255 to 255)\nRLAPI void ImageColorReplace(Image *image, Color color, Color replace);                                  // Modify image color: replace color\nRLAPI Color *LoadImageColors(Image image);                                                               // Load color data from image as a Color array (RGBA - 32bit)\nRLAPI Color *LoadImagePalette(Image image, int maxPaletteSize, int *colorCount);                         // Load colors palette from image as a Color array (RGBA - 32bit)\nRLAPI void UnloadImageColors(Color *colors);                                                             // Unload color data loaded with LoadImageColors()\nRLAPI void UnloadImagePalette(Color *colors);                                                            // Unload colors palette loaded with LoadImagePalette()\nRLAPI Rectangle GetImageAlphaBorder(Image image, float threshold);                                       // Get image alpha border rectangle\nRLAPI Color GetImageColor(Image image, int x, int y);                                                    // Get image pixel color at (x, y) position\n\n// Image drawing functions\n// NOTE: Image software-rendering functions (CPU)\nRLAPI void ImageClearBackground(Image *dst, Color color);                                                // Clear image background with given color\nRLAPI void ImageDrawPixel(Image *dst, int posX, int posY, Color color);                                  // Draw pixel within an image\nRLAPI void ImageDrawPixelV(Image *dst, Vector2 position, Color color);                                   // Draw pixel within an image (Vector version)\nRLAPI void ImageDrawLine(Image *dst, int startPosX, int startPosY, int endPosX, int endPosY, Color color); // Draw line within an image\nRLAPI void ImageDrawLineV(Image *dst, Vector2 start, Vector2 end, Color color);                          // Draw line within an image (Vector version)\nRLAPI void ImageDrawCircle(Image *dst, int centerX, int centerY, int radius, Color color);               // Draw circle within an image\nRLAPI void ImageDrawCircleV(Image *dst, Vector2 center, int radius, Color color);                        // Draw circle within an image (Vector version)\nRLAPI void ImageDrawRectangle(Image *dst, int posX, int posY, int width, int height, Color color);       // Draw rectangle within an image\nRLAPI void ImageDrawRectangleV(Image *dst, Vector2 position, Vector2 size, Color color);                 // Draw rectangle within an image (Vector version)\nRLAPI void ImageDrawRectangleRec(Image *dst, Rectangle rec, Color color);                                // Draw rectangle within an image\nRLAPI void ImageDrawRectangleLines(Image *dst, Rectangle rec, int thick, Color color);                   // Draw rectangle lines within an image\nRLAPI void ImageDraw(Image *dst, Image src, Rectangle srcRec, Rectangle dstRec, Color tint);             // Draw a source image within a destination image (tint applied to source)\nRLAPI void ImageDrawText(Image *dst, const char *text, int posX, int posY, int fontSize, Color color);   // Draw text (using default font) within an image (destination)\nRLAPI void ImageDrawTextEx(Image *dst, Font font, const char *text, Vector2 position, float fontSize, float spacing, Color tint); // Draw text (custom sprite font) within an image (destination)\n\n// Texture loading functions\n// NOTE: These functions require GPU access\nRLAPI Texture2D LoadTexture(const char *fileName);                                                       // Load texture from file into GPU memory (VRAM)\nRLAPI Texture2D LoadTextureFromImage(Image image);                                                       // Load texture from image data\nRLAPI TextureCubemap LoadTextureCubemap(Image image, int layout);                                        // Load cubemap from image, multiple image cubemap layouts supported\nRLAPI RenderTexture2D LoadRenderTexture(int width, int height);                                          // Load texture for rendering (framebuffer)\nRLAPI void UnloadTexture(Texture2D texture);                                                             // Unload texture from GPU memory (VRAM)\nRLAPI void UnloadRenderTexture(RenderTexture2D target);                                                  // Unload render texture from GPU memory (VRAM)\nRLAPI void UpdateTexture(Texture2D texture, const void *pixels);                                         // Update GPU texture with new data\nRLAPI void UpdateTextureRec(Texture2D texture, Rectangle rec, const void *pixels);                       // Update GPU texture rectangle with new data\n\n// Texture configuration functions\nRLAPI void GenTextureMipmaps(Texture2D *texture);                                                        // Generate GPU mipmaps for a texture\nRLAPI void SetTextureFilter(Texture2D texture, int filter);                                              // Set texture scaling filter mode\nRLAPI void SetTextureWrap(Texture2D texture, int wrap);                                                  // Set texture wrapping mode\n\n// Texture drawing functions\nRLAPI void DrawTexture(Texture2D texture, int posX, int posY, Color tint);                               // Draw a Texture2D\nRLAPI void DrawTextureV(Texture2D texture, Vector2 position, Color tint);                                // Draw a Texture2D with position defined as Vector2\nRLAPI void DrawTextureEx(Texture2D texture, Vector2 position, float rotation, float scale, Color tint);  // Draw a Texture2D with extended parameters\nRLAPI void DrawTextureRec(Texture2D texture, Rectangle source, Vector2 position, Color tint);            // Draw a part of a texture defined by a rectangle\nRLAPI void DrawTextureQuad(Texture2D texture, Vector2 tiling, Vector2 offset, Rectangle quad, Color tint);  // Draw texture quad with tiling and offset parameters\nRLAPI void DrawTextureTiled(Texture2D texture, Rectangle source, Rectangle dest, Vector2 origin, float rotation, float scale, Color tint);      // Draw part of a texture (defined by a rectangle) with rotation and scale tiled into dest.\nRLAPI void DrawTexturePro(Texture2D texture, Rectangle source, Rectangle dest, Vector2 origin, float rotation, Color tint);           // Draw a part of a texture defined by a rectangle with 'pro' parameters\nRLAPI void DrawTextureNPatch(Texture2D texture, NPatchInfo nPatchInfo, Rectangle dest, Vector2 origin, float rotation, Color tint);   // Draws a texture (or part of it) that stretches or shrinks nicely\nRLAPI void DrawTexturePoly(Texture2D texture, Vector2 center, Vector2 *points, Vector2 *texcoords, int pointCount, Color tint);      // Draw a textured polygon\n\n// Color/pixel related functions\nRLAPI Color Fade(Color color, float alpha);                                 // Get color with alpha applied, alpha goes from 0.0f to 1.0f\nRLAPI int ColorToInt(Color color);                                          // Get hexadecimal value for a Color\nRLAPI Vector4 ColorNormalize(Color color);                                  // Get Color normalized as float [0..1]\nRLAPI Color ColorFromNormalized(Vector4 normalized);                        // Get Color from normalized values [0..1]\nRLAPI Vector3 ColorToHSV(Color color);                                      // Get HSV values for a Color, hue [0..360], saturation/value [0..1]\nRLAPI Color ColorFromHSV(float hue, float saturation, float value);         // Get a Color from HSV values, hue [0..360], saturation/value [0..1]\nRLAPI Color ColorAlpha(Color color, float alpha);                           // Get color with alpha applied, alpha goes from 0.0f to 1.0f\nRLAPI Color ColorAlphaBlend(Color dst, Color src, Color tint);              // Get src alpha-blended into dst color with tint\nRLAPI Color GetColor(unsigned int hexValue);                                // Get Color structure from hexadecimal value\nRLAPI Color GetPixelColor(void *srcPtr, int format);                        // Get Color from a source pixel pointer of certain format\nRLAPI void SetPixelColor(void *dstPtr, Color color, int format);            // Set color formatted into destination pixel pointer\nRLAPI int GetPixelDataSize(int width, int height, int format);              // Get pixel data size in bytes for certain format\n\n//------------------------------------------------------------------------------------\n// Font Loading and Text Drawing Functions (Module: text)\n//------------------------------------------------------------------------------------\n\n// Font loading/unloading functions\nRLAPI Font GetFontDefault(void);                                                            // Get the default Font\nRLAPI Font LoadFont(const char *fileName);                                                  // Load font from file into GPU memory (VRAM)\nRLAPI Font LoadFontEx(const char *fileName, int fontSize, int *fontChars, int glyphCount);  // Load font from file with extended parameters\nRLAPI Font LoadFontFromImage(Image image, Color key, int firstChar);                        // Load font from Image (XNA style)\nRLAPI Font LoadFontFromMemory(const char *fileType, const unsigned char *fileData, int dataSize, int fontSize, int *fontChars, int glyphCount); // Load font from memory buffer, fileType refers to extension: i.e. '.ttf'\nRLAPI GlyphInfo *LoadFontData(const unsigned char *fileData, int dataSize, int fontSize, int *fontChars, int glyphCount, int type);      // Load font data for further use\nRLAPI Image GenImageFontAtlas(const GlyphInfo *chars, Rectangle **recs, int glyphCount, int fontSize, int padding, int packMethod);      // Generate image font atlas using chars info\nRLAPI void UnloadFontData(GlyphInfo *chars, int glyphCount);                                 // Unload font chars info data (RAM)\nRLAPI void UnloadFont(Font font);                                                           // Unload Font from GPU memory (VRAM)\n\n// Text drawing functions\nRLAPI void DrawFPS(int posX, int posY);                                                     // Draw current FPS\nRLAPI void DrawText(const char *text, int posX, int posY, int fontSize, Color color);       // Draw text (using default font)\nRLAPI void DrawTextEx(Font font, const char *text, Vector2 position, float fontSize, float spacing, Color tint);    // Draw text using font and additional parameters\nRLAPI void DrawTextPro(Font font, const char *text, Vector2 position, Vector2 origin, float rotation, float fontSize, float spacing, Color tint); // Draw text using Font and pro parameters (rotation)\nRLAPI void DrawTextCodepoint(Font font, int codepoint, Vector2 position, float fontSize, Color tint);   // Draw one character (codepoint)\n\n// Text font info functions\nRLAPI int MeasureText(const char *text, int fontSize);                                      // Measure string width for default font\nRLAPI Vector2 MeasureTextEx(Font font, const char *text, float fontSize, float spacing);    // Measure string size for Font\nRLAPI int GetGlyphIndex(Font font, int codepoint);                                          // Get glyph index position in font for a codepoint (unicode character), fallback to '?' if not found\nRLAPI GlyphInfo GetGlyphInfo(Font font, int codepoint);                                     // Get glyph font info data for a codepoint (unicode character), fallback to '?' if not found\nRLAPI Rectangle GetGlyphAtlasRec(Font font, int codepoint);                                 // Get glyph rectangle in font atlas for a codepoint (unicode character), fallback to '?' if not found\n\n// Text codepoints management functions (unicode characters)\nRLAPI int *LoadCodepoints(const char *text, int *count);              // Load all codepoints from a UTF-8 text string, codepoints count returned by parameter\nRLAPI void UnloadCodepoints(int *codepoints);                         // Unload codepoints data from memory\nRLAPI int GetCodepointCount(const char *text);                        // Get total number of codepoints in a UTF-8 encoded string\nRLAPI int GetCodepoint(const char *text, int *bytesProcessed);        // Get next codepoint in a UTF-8 encoded string, 0x3f('?') is returned on failure\nRLAPI const char *CodepointToUTF8(int codepoint, int *byteSize);      // Encode one codepoint into UTF-8 byte array (array length returned as parameter)\nRLAPI char *TextCodepointsToUTF8(int *codepoints, int length);        // Encode text as codepoints array into UTF-8 text string (WARNING: memory must be freed!)\n\n// Text strings management functions (no UTF-8 strings, only byte chars)\n// NOTE: Some strings allocate memory internally for returned strings, just be careful!\nRLAPI int TextCopy(char *dst, const char *src);                                             // Copy one string to another, returns bytes copied\nRLAPI bool TextIsEqual(const char *text1, const char *text2);                               // Check if two text string are equal\nRLAPI unsigned int TextLength(const char *text);                                            // Get text length, checks for '\\0' ending\nRLAPI const char *TextFormat(const char *text, ...);                                        // Text formatting with variables (sprintf() style)\nRLAPI const char *TextSubtext(const char *text, int position, int length);                  // Get a piece of a text string\nRLAPI char *TextReplace(char *text, const char *replace, const char *by);                   // Replace text string (WARNING: memory must be freed!)\nRLAPI char *TextInsert(const char *text, const char *insert, int position);                 // Insert text in a position (WARNING: memory must be freed!)\nRLAPI const char *TextJoin(const char **textList, int count, const char *delimiter);        // Join text strings with delimiter\nRLAPI const char **TextSplit(const char *text, char delimiter, int *count);                 // Split text into multiple strings\nRLAPI void TextAppend(char *text, const char *append, int *position);                       // Append text at specific position and move cursor!\nRLAPI int TextFindIndex(const char *text, const char *find);                                // Find first text occurrence within a string\nRLAPI const char *TextToUpper(const char *text);                      // Get upper case version of provided string\nRLAPI const char *TextToLower(const char *text);                      // Get lower case version of provided string\nRLAPI const char *TextToPascal(const char *text);                     // Get Pascal case notation version of provided string\nRLAPI int TextToInteger(const char *text);                            // Get integer value from text (negative values not supported)\n\n//------------------------------------------------------------------------------------\n// Basic 3d Shapes Drawing Functions (Module: models)\n//------------------------------------------------------------------------------------\n\n// Basic geometric 3D shapes drawing functions\nRLAPI void DrawLine3D(Vector3 startPos, Vector3 endPos, Color color);                                    // Draw a line in 3D world space\nRLAPI void DrawPoint3D(Vector3 position, Color color);                                                   // Draw a point in 3D space, actually a small line\nRLAPI void DrawCircle3D(Vector3 center, float radius, Vector3 rotationAxis, float rotationAngle, Color color); // Draw a circle in 3D world space\nRLAPI void DrawTriangle3D(Vector3 v1, Vector3 v2, Vector3 v3, Color color);                              // Draw a color-filled triangle (vertex in counter-clockwise order!)\nRLAPI void DrawTriangleStrip3D(Vector3 *points, int pointCount, Color color);                           // Draw a triangle strip defined by points\nRLAPI void DrawCube(Vector3 position, float width, float height, float length, Color color);             // Draw cube\nRLAPI void DrawCubeV(Vector3 position, Vector3 size, Color color);                                       // Draw cube (Vector version)\nRLAPI void DrawCubeWires(Vector3 position, float width, float height, float length, Color color);        // Draw cube wires\nRLAPI void DrawCubeWiresV(Vector3 position, Vector3 size, Color color);                                  // Draw cube wires (Vector version)\nRLAPI void DrawCubeTexture(Texture2D texture, Vector3 position, float width, float height, float length, Color color); // Draw cube textured\nRLAPI void DrawCubeTextureRec(Texture2D texture, Rectangle source, Vector3 position, float width, float height, float length, Color color); // Draw cube with a region of a texture\nRLAPI void DrawSphere(Vector3 centerPos, float radius, Color color);                                     // Draw sphere\nRLAPI void DrawSphereEx(Vector3 centerPos, float radius, int rings, int slices, Color color);            // Draw sphere with extended parameters\nRLAPI void DrawSphereWires(Vector3 centerPos, float radius, int rings, int slices, Color color);         // Draw sphere wires\nRLAPI void DrawCylinder(Vector3 position, float radiusTop, float radiusBottom, float height, int slices, Color color); // Draw a cylinder/cone\nRLAPI void DrawCylinderEx(Vector3 startPos, Vector3 endPos, float startRadius, float endRadius, int sides, Color color); // Draw a cylinder with base at startPos and top at endPos\nRLAPI void DrawCylinderWires(Vector3 position, float radiusTop, float radiusBottom, float height, int slices, Color color); // Draw a cylinder/cone wires\nRLAPI void DrawCylinderWiresEx(Vector3 startPos, Vector3 endPos, float startRadius, float endRadius, int sides, Color color); // Draw a cylinder wires with base at startPos and top at endPos\nRLAPI void DrawPlane(Vector3 centerPos, Vector2 size, Color color);                                      // Draw a plane XZ\nRLAPI void DrawRay(Ray ray, Color color);                                                                // Draw a ray line\nRLAPI void DrawGrid(int slices, float spacing);                                                          // Draw a grid (centered at (0, 0, 0))\n\n//------------------------------------------------------------------------------------\n// Model 3d Loading and Drawing Functions (Module: models)\n//------------------------------------------------------------------------------------\n\n// Model management functions\nRLAPI Model LoadModel(const char *fileName);                                                // Load model from files (meshes and materials)\nRLAPI Model LoadModelFromMesh(Mesh mesh);                                                   // Load model from generated mesh (default material)\nRLAPI void UnloadModel(Model model);                                                        // Unload model (including meshes) from memory (RAM and/or VRAM)\nRLAPI void UnloadModelKeepMeshes(Model model);                                              // Unload model (but not meshes) from memory (RAM and/or VRAM)\nRLAPI BoundingBox GetModelBoundingBox(Model model);                                         // Compute model bounding box limits (considers all meshes)\n\n// Model drawing functions\nRLAPI void DrawModel(Model model, Vector3 position, float scale, Color tint);                           // Draw a model (with texture if set)\nRLAPI void DrawModelEx(Model model, Vector3 position, Vector3 rotationAxis, float rotationAngle, Vector3 scale, Color tint); // Draw a model with extended parameters\nRLAPI void DrawModelWires(Model model, Vector3 position, float scale, Color tint);                      // Draw a model wires (with texture if set)\nRLAPI void DrawModelWiresEx(Model model, Vector3 position, Vector3 rotationAxis, float rotationAngle, Vector3 scale, Color tint); // Draw a model wires (with texture if set) with extended parameters\nRLAPI void DrawBoundingBox(BoundingBox box, Color color);                                               // Draw bounding box (wires)\nRLAPI void DrawBillboard(Camera camera, Texture2D texture, Vector3 position, float size, Color tint);   // Draw a billboard texture\nRLAPI void DrawBillboardRec(Camera camera, Texture2D texture, Rectangle source, Vector3 position, Vector2 size, Color tint); // Draw a billboard texture defined by source\nRLAPI void DrawBillboardPro(Camera camera, Texture2D texture, Rectangle source, Vector3 position, Vector3 up, Vector2 size, Vector2 origin, float rotation, Color tint); // Draw a billboard texture defined by source and rotation\n\n// Mesh management functions\nRLAPI void UploadMesh(Mesh *mesh, bool dynamic);                                            // Upload mesh vertex data in GPU and provide VAO/VBO ids\nRLAPI void UpdateMeshBuffer(Mesh mesh, int index, void *data, int dataSize, int offset);    // Update mesh vertex data in GPU for a specific buffer index\nRLAPI void UnloadMesh(Mesh mesh);                                                           // Unload mesh data from CPU and GPU\nRLAPI void DrawMesh(Mesh mesh, Material material, Matrix transform);                        // Draw a 3d mesh with material and transform\nRLAPI void DrawMeshInstanced(Mesh mesh, Material material, Matrix *transforms, int instances); // Draw multiple mesh instances with material and different transforms\nRLAPI bool ExportMesh(Mesh mesh, const char *fileName);                                     // Export mesh data to file, returns true on success\nRLAPI BoundingBox GetMeshBoundingBox(Mesh mesh);                                            // Compute mesh bounding box limits\nRLAPI void GenMeshTangents(Mesh *mesh);                                                     // Compute mesh tangents\nRLAPI void GenMeshBinormals(Mesh *mesh);                                                    // Compute mesh binormals\n\n// Mesh generation functions\nRLAPI Mesh GenMeshPoly(int sides, float radius);                                            // Generate polygonal mesh\nRLAPI Mesh GenMeshPlane(float width, float length, int resX, int resZ);                     // Generate plane mesh (with subdivisions)\nRLAPI Mesh GenMeshCube(float width, float height, float length);                            // Generate cuboid mesh\nRLAPI Mesh GenMeshSphere(float radius, int rings, int slices);                              // Generate sphere mesh (standard sphere)\nRLAPI Mesh GenMeshHemiSphere(float radius, int rings, int slices);                          // Generate half-sphere mesh (no bottom cap)\nRLAPI Mesh GenMeshCylinder(float radius, float height, int slices);                         // Generate cylinder mesh\nRLAPI Mesh GenMeshCone(float radius, float height, int slices);                             // Generate cone/pyramid mesh\nRLAPI Mesh GenMeshTorus(float radius, float size, int radSeg, int sides);                   // Generate torus mesh\nRLAPI Mesh GenMeshKnot(float radius, float size, int radSeg, int sides);                    // Generate trefoil knot mesh\nRLAPI Mesh GenMeshHeightmap(Image heightmap, Vector3 size);                                 // Generate heightmap mesh from image data\nRLAPI Mesh GenMeshCubicmap(Image cubicmap, Vector3 cubeSize);                               // Generate cubes-based map mesh from image data\n\n// Material loading/unloading functions\nRLAPI Material *LoadMaterials(const char *fileName, int *materialCount);                    // Load materials from model file\nRLAPI Material LoadMaterialDefault(void);                                                   // Load default material (Supports: DIFFUSE, SPECULAR, NORMAL maps)\nRLAPI void UnloadMaterial(Material material);                                               // Unload material from GPU memory (VRAM)\nRLAPI void SetMaterialTexture(Material *material, int mapType, Texture2D texture);          // Set texture for a material map type (MATERIAL_MAP_DIFFUSE, MATERIAL_MAP_SPECULAR...)\nRLAPI void SetModelMeshMaterial(Model *model, int meshId, int materialId);                  // Set material for a mesh\n\n// Model animations loading/unloading functions\nRLAPI ModelAnimation *LoadModelAnimations(const char *fileName, unsigned int *animCount);   // Load model animations from file\nRLAPI void UpdateModelAnimation(Model model, ModelAnimation anim, int frame);               // Update model animation pose\nRLAPI void UnloadModelAnimation(ModelAnimation anim);                                       // Unload animation data\nRLAPI void UnloadModelAnimations(ModelAnimation* animations, unsigned int count);           // Unload animation array data\nRLAPI bool IsModelAnimationValid(Model model, ModelAnimation anim);                         // Check model animation skeleton match\n\n// Collision detection functions\nRLAPI bool CheckCollisionSpheres(Vector3 center1, float radius1, Vector3 center2, float radius2);       // Check collision between two spheres\nRLAPI bool CheckCollisionBoxes(BoundingBox box1, BoundingBox box2);                                     // Check collision between two bounding boxes\nRLAPI bool CheckCollisionBoxSphere(BoundingBox box, Vector3 center, float radius);                      // Check collision between box and sphere\nRLAPI RayCollision GetRayCollisionSphere(Ray ray, Vector3 center, float radius);                        // Get collision info between ray and sphere\nRLAPI RayCollision GetRayCollisionBox(Ray ray, BoundingBox box);                                        // Get collision info between ray and box\nRLAPI RayCollision GetRayCollisionModel(Ray ray, Model model);                                          // Get collision info between ray and model\nRLAPI RayCollision GetRayCollisionMesh(Ray ray, Mesh mesh, Matrix transform);                           // Get collision info between ray and mesh\nRLAPI RayCollision GetRayCollisionTriangle(Ray ray, Vector3 p1, Vector3 p2, Vector3 p3);                // Get collision info between ray and triangle\nRLAPI RayCollision GetRayCollisionQuad(Ray ray, Vector3 p1, Vector3 p2, Vector3 p3, Vector3 p4);        // Get collision info between ray and quad\n\n//------------------------------------------------------------------------------------\n// Audio Loading and Playing Functions (Module: audio)\n//------------------------------------------------------------------------------------\n\n// Audio device management functions\nRLAPI void InitAudioDevice(void);                                     // Initialize audio device and context\nRLAPI void CloseAudioDevice(void);                                    // Close the audio device and context\nRLAPI bool IsAudioDeviceReady(void);                                  // Check if audio device has been initialized successfully\nRLAPI void SetMasterVolume(float volume);                             // Set master volume (listener)\n\n// Wave/Sound loading/unloading functions\nRLAPI Wave LoadWave(const char *fileName);                            // Load wave data from file\nRLAPI Wave LoadWaveFromMemory(const char *fileType, const unsigned char *fileData, int dataSize); // Load wave from memory buffer, fileType refers to extension: i.e. '.wav'\nRLAPI Sound LoadSound(const char *fileName);                          // Load sound from file\nRLAPI Sound LoadSoundFromWave(Wave wave);                             // Load sound from wave data\nRLAPI void UpdateSound(Sound sound, const void *data, int sampleCount); // Update sound buffer with new data\nRLAPI void UnloadWave(Wave wave);                                     // Unload wave data\nRLAPI void UnloadSound(Sound sound);                                  // Unload sound\nRLAPI bool ExportWave(Wave wave, const char *fileName);               // Export wave data to file, returns true on success\nRLAPI bool ExportWaveAsCode(Wave wave, const char *fileName);         // Export wave sample data to code (.h), returns true on success\n\n// Wave/Sound management functions\nRLAPI void PlaySound(Sound sound);                                    // Play a sound\nRLAPI void StopSound(Sound sound);                                    // Stop playing a sound\nRLAPI void PauseSound(Sound sound);                                   // Pause a sound\nRLAPI void ResumeSound(Sound sound);                                  // Resume a paused sound\nRLAPI void PlaySoundMulti(Sound sound);                               // Play a sound (using multichannel buffer pool)\nRLAPI void StopSoundMulti(void);                                      // Stop any sound playing (using multichannel buffer pool)\nRLAPI int GetSoundsPlaying(void);                                     // Get number of sounds playing in the multichannel\nRLAPI bool IsSoundPlaying(Sound sound);                               // Check if a sound is currently playing\nRLAPI void SetSoundVolume(Sound sound, float volume);                 // Set volume for a sound (1.0 is max level)\nRLAPI void SetSoundPitch(Sound sound, float pitch);                   // Set pitch for a sound (1.0 is base level)\nRLAPI void WaveFormat(Wave *wave, int sampleRate, int sampleSize, int channels);  // Convert wave data to desired format\nRLAPI Wave WaveCopy(Wave wave);                                       // Copy a wave to a new wave\nRLAPI void WaveCrop(Wave *wave, int initSample, int finalSample);     // Crop a wave to defined samples range\nRLAPI float *LoadWaveSamples(Wave wave);                              // Load samples data from wave as a floats array\nRLAPI void UnloadWaveSamples(float *samples);                         // Unload samples data loaded with LoadWaveSamples()\n\n// Music management functions\nRLAPI Music LoadMusicStream(const char *fileName);                    // Load music stream from file\nRLAPI Music LoadMusicStreamFromMemory(const char *fileType, unsigned char *data, int dataSize); // Load music stream from data\nRLAPI void UnloadMusicStream(Music music);                            // Unload music stream\nRLAPI void PlayMusicStream(Music music);                              // Start music playing\nRLAPI bool IsMusicStreamPlaying(Music music);                         // Check if music is playing\nRLAPI void UpdateMusicStream(Music music);                            // Updates buffers for music streaming\nRLAPI void StopMusicStream(Music music);                              // Stop music playing\nRLAPI void PauseMusicStream(Music music);                             // Pause music playing\nRLAPI void ResumeMusicStream(Music music);                            // Resume playing paused music\nRLAPI void SeekMusicStream(Music music, float position);              // Seek music to a position (in seconds)\nRLAPI void SetMusicVolume(Music music, float volume);                 // Set volume for music (1.0 is max level)\nRLAPI void SetMusicPitch(Music music, float pitch);                   // Set pitch for a music (1.0 is base level)\nRLAPI float GetMusicTimeLength(Music music);                          // Get music time length (in seconds)\nRLAPI float GetMusicTimePlayed(Music music);                          // Get current music time played (in seconds)\n\n// AudioStream management functions\nRLAPI AudioStream LoadAudioStream(unsigned int sampleRate, unsigned int sampleSize, unsigned int channels); // Load audio stream (to stream raw audio pcm data)\nRLAPI void UnloadAudioStream(AudioStream stream);                      // Unload audio stream and free memory\nRLAPI void UpdateAudioStream(AudioStream stream, const void *data, int frameCount); // Update audio stream buffers with data\nRLAPI bool IsAudioStreamProcessed(AudioStream stream);                // Check if any audio stream buffers requires refill\nRLAPI void PlayAudioStream(AudioStream stream);                       // Play audio stream\nRLAPI void PauseAudioStream(AudioStream stream);                      // Pause audio stream\nRLAPI void ResumeAudioStream(AudioStream stream);                     // Resume audio stream\nRLAPI bool IsAudioStreamPlaying(AudioStream stream);                  // Check if audio stream is playing\nRLAPI void StopAudioStream(AudioStream stream);                       // Stop audio stream\nRLAPI void SetAudioStreamVolume(AudioStream stream, float volume);    // Set volume for audio stream (1.0 is max level)\nRLAPI void SetAudioStreamPitch(AudioStream stream, float pitch);      // Set pitch for audio stream (1.0 is base level)\nRLAPI void SetAudioStreamBufferSizeDefault(int size);                 // Default size for new audio streams\n\n#if defined(__cplusplus)\n}\n#endif\n\n#endif // RAYLIB_H",
    "assembly": ".file\t\"158.c\"\n\t.text\n\t.ident\t\"GCC: (MinGW-W64 x86_64-ucrt-posix-seh, built by Brecht Sanders, r8) 13.2.0\"",
    "generation_time": 11.912028312683105,
    "tokens_generated": 512,
    "metrics": {
      "length_ratio": 0.00803887082733749,
      "line_ratio": 0.0006510416666666666,
      "token_overlap": 0.000609942055504727,
      "token_precision": 0.1111111111111111,
      "keyword_coverage": 0.0,
      "keyword_match_ratio": 0.0,
      "brace_ratio": 0.0,
      "semicolon_ratio": 0.020114942528735632
    }
  },
  {
    "filename": "168",
    "optimization": "O0",
    "generated_c": ".output\\%s[4]*(x=1)*3{5}+7} +6;\n.data/files/w32_tidy-color_inverted_png_width 0.000200202440858079608945303425121416154421173519082213287026594618382377277829391173106831_0181 106831.zip \"&pid=9996484788665084\",\"input=\"filename:\"\", input=\"images\\/gifimg\\/svg\\/jpg\\/jpeg\\/image\\/svg\\/jpg\\/jpeg\\/image\\/svgo\\/jpg\\/jpg\\/image\\/svga\\/jpg\\/jpeg\\/image\\/svgo\\/jpg\\/jpeg\\/image\\/svgo\\/jpg\\/jpeg\\/image\\/svgo\\/jpg\\/jpeg\\/image\\/svge\\/jpg\\/jpeg\\/image\\/svgo//src\\/fctr\\\"",
    "reference_c": "//\n// Copyright (C) 2015-2018 Seagate Technology LLC and/or its Affiliates. Apache License, Version 2.0.\n//\n#pragma once\n#ifndef __H0_M0INIT_H__\n#define __H0_M0INIT_H__\n\nstruct m0_halon_interface;\n\nextern struct m0_halon_interface *m0init_hi;\n\nint m0_init_wrapper(void);\nvoid m0_fini_wrapper(void);\n\n#endif  // __H0_M0INIT_H__",
    "assembly": ".file\t\"168.c\"\n\t.text\n\t.ident\t\"GCC: (MinGW-W64 x86_64-ucrt-posix-seh, built by Brecht Sanders, r8) 13.2.0\"",
    "generation_time": 5.531966209411621,
    "tokens_generated": 214,
    "metrics": {
      "length_ratio": 1.4141104294478528,
      "line_ratio": 0.13333333333333333,
      "token_overlap": 0.0,
      "token_precision": 0.0,
      "keyword_coverage": 0.08333333333333333,
      "keyword_match_ratio": 0.25,
      "brace_ratio": 0,
      "semicolon_ratio": 0.25
    }
  },
  {
    "filename": "110",
    "optimization": "Ofast",
    "generated_c": ".file/** * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *",
    "reference_c": "#ifndef FOOLIB_C_H\n#define FOOLIB_C_H 1\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\n#include <stdint.h>\n\ntypedef int foolib_result_t;\n#define FOOLIB_RESULT_SUCCESS 0\n#define FOOLIB_RESULT_ERROR_ALLOC_FAILED 101\n#define FOOLIB_RESULT_ERROR_BAD_STATE 102\n#define FOOLIB_RESULT_ERROR_NOT_FOUND 103\n\ntypedef int foolib_object_t;\n#define FOOLIB_OBJECT_ALLOC_FAILED 0\n\nextern int foolib_g_verbosity;\n\nfoolib_result_t foolib_g_init();\nfoolib_result_t foolib_g_destroy();\n\nfoolib_object_t foolib_new();\nfoolib_result_t foolib_delete(foolib_object_t object);\nfoolib_result_t foolib_operation(foolib_object_t object);\n\n#ifdef __cplusplus\n}\n#endif\n\n#endif",
    "assembly": ".file\t\"110.c\"\n\t.text\n\t.ident\t\"GCC: (MinGW-W64 x86_64-ucrt-posix-seh, built by Brecht Sanders, r8) 13.2.0\"",
    "generation_time": 15.851604223251343,
    "tokens_generated": 512,
    "metrics": {
      "length_ratio": 1.6006240249609984,
      "line_ratio": 0.03125,
      "token_overlap": 0.0,
      "token_precision": 0.0,
      "keyword_coverage": 0.0,
      "keyword_match_ratio": 0.0,
      "brace_ratio": 0.0,
      "semicolon_ratio": 0.0
    }
  },
  {
    "filename": "112",
    "optimization": "Ofast",
    "generated_c": ".file([/]])(string[] [ ]]) .tuple[1] = \"\\\\{\\u003e\",\"name\":\"Kernel Kernel Version\", name\":\"Mockup Compiler\", name\":\"Pipeline and Open Source Software Developer\", type\":\"XML\", version\":\"TLS 1.3\", version\":\"CORE 2.4\", version\":\"CORE 3.5\". version\":\"CORE 4.6\", version=\"CORE 5.7\", version\":1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.01.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1..( ) => { :mockupCompiler; }\n.file([/]])(string[] [] [ ]]) .tuple[1] = \"\\\\{\\u003e\",\"name\":\"Kernel kernel Version\", name\":\"\",\"name\":\"Mocks",
    "reference_c": "typedef unsigned char byte;\ntypedef struct rwl_s rwl;\n/* This is from page.h */\nstruct Page_s {\n  int id;\n  long LSN;\n  byte *memAddr;\n  byte dirty;\n  struct Page_s *next;\n  struct Page_s *prev; \n  int queue; \n  int inCache;\n  rwl * rwlatch;\n  rwl * loadlatch;\n\n};\n\ntypedef struct Page_s Page;\n\n\nPage * loadPage(int xid, long page);\n\nvoid releasePage(Page * p);",
    "assembly": ".file\t\"112.c\"\n\t.text\n\t.ident\t\"GCC: (MinGW-W64 x86_64-ucrt-posix-seh, built by Brecht Sanders, r8) 13.2.0\"",
    "generation_time": 14.49752140045166,
    "tokens_generated": 512,
    "metrics": {
      "length_ratio": 2.1717451523545708,
      "line_ratio": 0.08695652173913043,
      "token_overlap": 0.02564102564102564,
      "token_precision": 0.030303030303030304,
      "keyword_coverage": 0.0,
      "keyword_match_ratio": 0.0,
      "brace_ratio": 2.0,
      "semicolon_ratio": 0.0625
    }
  },
  {
    "filename": "113",
    "optimization": "Ofast",
    "generated_c": ".filesystems/1.7.10.3.6.x11.cc4.dll14.exe13.jar38b32\\libs/local; // for the Windows NT 8 and 9 versions 0.17.18.5.9.a12e153980d20fae68ce65adefba5927ebca24ffbd23db33ddfe75cb25cf1628ac4078fc29afdf57ee19ab74fa42ed4898458943504947de0108676973dc51fd88996034ecaa37cd9621bc3554be2230fb56bf83da09586682ea02abcbb0585bed362600790444704112525971dec77938057089431109408462643044041943062553094062795590808336257254106605107209075380730570906455407705607606201108409479953696320010460812750812950520425620650930840530738700050680619910360909080901020520370760420760030031535910021110570427715897504198759621551952995218520818818718984192128871477617419613567826515903167136269278160169649721651761971452282461461661372492382291902102202252502602392192162482372302182452511979350765323179149487648164186706275244284184288253226156347298236247296285235356349378258297227388338333193178154267223287379478339449429399370377353286365268295358688357348457376386394368697448476346459337498395689494390397355669557335458698385646389578555659393143148657126507016168758485995263134755454266138495398497488447367496647019695998999015644199891122240270997116294303120658798996180276994144170990778676124163017117484139685262175654366354396290392132157115489656177274757018234118810133021996214101212130614558686289687293172153152133183283181102151005665173123111334677384196521592",
    "reference_c": "#pragma once\n\n#include <stddef.h>\n#include <stdint.h>\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\n\nvoid nnp_fft8x8_with_offset_and_store__avx2(const float t[], float f[], size_t stride_t, size_t stride_f, uint32_t row_count, uint32_t column_count, uint32_t row_offset, uint32_t column_offset);\nvoid nnp_fft8x8_with_offset_and_stream__avx2(const float t[], float f[], size_t stride_t, size_t stride_f, uint32_t row_count, uint32_t column_count, uint32_t row_offset, uint32_t column_offset);\nvoid nnp_ifft8x8_with_offset__avx2(const float f[], float t[], size_t stride_f, size_t stride_t, uint32_t row_count, uint32_t column_count, uint32_t row_offset, uint32_t column_offset);\nvoid nnp_ifft8x8__avx2(const float f[], float t[], size_t stride_f, size_t stride_t, uint32_t row_count, uint32_t column_count);\nvoid nnp_ifft8x8_with_relu__avx2(const float f[], float t[], size_t stride_f, size_t stride_t, uint32_t row_count, uint32_t column_count);\nvoid nnp_ifft8x8_with_bias__avx2(const float f[], float t[], const float bias[], size_t stride_f, size_t stride_t, uint32_t row_count, uint32_t column_count);\nvoid nnp_ifft8x8_with_bias_with_relu__avx2(const float f[], float t[], const float bias[], size_t stride_f, size_t stride_t, uint32_t row_count, uint32_t column_count);\n\nvoid nnp_fft16x16_with_offset_and_store__avx2(const float t[], float f[], size_t stride_t, size_t stride_f, uint32_t row_count, uint32_t column_count, uint32_t row_offset, uint32_t column_offset);\nvoid nnp_fft16x16_with_offset_and_stream__avx2(const float t[], float f[], size_t stride_t, size_t stride_f, uint32_t row_count, uint32_t column_count, uint32_t row_offset, uint32_t column_offset);\nvoid nnp_ifft16x16_with_offset__avx2(const float f[], float t[], size_t stride_f, size_t stride_t, uint32_t row_count, uint32_t column_count, uint32_t row_offset, uint32_t column_offset);\nvoid nnp_ifft16x16__avx2(const float f[], float t[], size_t stride_f, size_t stride_t, uint32_t row_count, uint32_t column_count);\nvoid nnp_ifft16x16_with_relu__avx2(const float f[], float t[], size_t stride_f, size_t stride_t, uint32_t row_count, uint32_t column_count);\nvoid nnp_ifft16x16_with_bias__avx2(const float f[], float t[], const float bias[], size_t stride_f, size_t stride_t, uint32_t row_count, uint32_t column_count);\nvoid nnp_ifft16x16_with_bias_with_relu__avx2(const float f[], float t[], const float bias[], size_t stride_f, size_t stride_t, uint32_t row_count, uint32_t column_count);\n\nvoid nnp_iwt8x8_3x3_with_offset_and_store__avx2(const float d[], float wd[], size_t stride_d, size_t stride_wd, uint32_t row_count, uint32_t column_count, uint32_t row_offset, uint32_t column_offset);\nvoid nnp_iwt8x8_3x3_with_offset_and_stream__avx2(const float d[], float wd[], size_t stride_d, size_t stride_wd, uint32_t row_count, uint32_t column_count, uint32_t row_offset, uint32_t column_offset);\nvoid nnp_kwt8x8_3x3_and_store__avx2(const float g[], float wg[], size_t stride_g, size_t stride_wg, uint32_t, uint32_t, uint32_t, uint32_t);\nvoid nnp_kwt8x8_3x3_and_stream__avx2(const float g[], float wg[], size_t stride_g, size_t stride_wg, uint32_t, uint32_t, uint32_t, uint32_t);\nvoid nnp_kwt8x8_3Rx3R_and_store__avx2(const float g[], float wg[], size_t stride_g, size_t stride_wg, uint32_t, uint32_t, uint32_t, uint32_t);\nvoid nnp_kwt8x8_3Rx3R_and_stream__avx2(const float g[], float wg[], size_t stride_g, size_t stride_wg, uint32_t, uint32_t, uint32_t, uint32_t);\nvoid nnp_owt8x8_3x3__avx2(const float m[], float s[], size_t stride_m, size_t stride_s, uint32_t row_count, uint32_t column_count, uint32_t, uint32_t);\nvoid nnp_owt8x8_3x3_with_relu__avx2(const float m[], float s[], size_t stride_m, size_t stride_s, uint32_t row_count, uint32_t column_count, uint32_t, uint32_t);\nvoid nnp_owt8x8_3x3_with_bias__avx2(const float m[], float s[], const float bias[], size_t stride_m, size_t stride_s, uint32_t row_count, uint32_t column_count);\nvoid nnp_owt8x8_3x3_with_bias_with_relu__avx2(const float m[], float s[], const float bias[], size_t stride_m, size_t stride_s, uint32_t row_count, uint32_t column_count);\n\nvoid nnp_fft8x8_with_offset__psimd(const float t[], float f[], size_t stride_t, size_t stride_f, uint32_t row_count, uint32_t column_count, uint32_t row_offset, uint32_t column_offset);\nvoid nnp_ifft8x8_with_offset__psimd(const float f[], float t[], size_t stride_f, size_t stride_t, uint32_t row_count, uint32_t column_count, uint32_t row_offset, uint32_t column_offset);\nvoid nnp_ifft8x8_with_bias__psimd(const float f[], float t[], const float bias[], size_t stride_f, size_t stride_t, uint32_t row_count, uint32_t column_count);\nvoid nnp_ifft8x8_with_bias_with_relu__psimd(const float f[], float t[], const float bias[], size_t stride_f, size_t stride_t, uint32_t row_count, uint32_t column_count);\n\nvoid nnp_fft16x16_with_offset__psimd(const float t[], float f[], size_t stride_t, size_t stride_f, uint32_t row_count, uint32_t column_count, uint32_t row_offset, uint32_t column_offset);\nvoid nnp_ifft16x16_with_offset__psimd(const float f[], float t[], size_t stride_f, size_t stride_t, uint32_t row_count, uint32_t column_count, uint32_t row_offset, uint32_t column_offset);\nvoid nnp_ifft16x16_with_bias__psimd(const float f[], float t[], const float bias[], size_t stride_f, size_t stride_t, uint32_t row_count, uint32_t column_count);\nvoid nnp_ifft16x16_with_bias_with_relu__psimd(const float f[], float t[], const float bias[], size_t stride_f, size_t stride_t, uint32_t row_count, uint32_t column_count);\n\nvoid nnp_iwt8x8_3x3_with_offset__psimd(const float d[], float wd[], size_t stride_d, size_t stride_wd, uint32_t row_count, uint32_t column_count, uint32_t row_offset, uint32_t column_offset);\nvoid nnp_kwt8x8_3x3__psimd(const float g[], float wg[], size_t stride_g, size_t stride_wg, uint32_t, uint32_t, uint32_t, uint32_t);\nvoid nnp_kwt8x8_3Rx3R__psimd(const float g[], float wg[], size_t stride_g, size_t stride_wg, uint32_t, uint32_t, uint32_t, uint32_t);\nvoid nnp_owt8x8_3x3__psimd(const float m[], float s[], size_t stride_m, size_t stride_s, uint32_t row_count, uint32_t column_count, uint32_t, uint32_t);\nvoid nnp_owt8x8_3x3_with_bias__psimd(const float m[], float s[], const float bias[], size_t stride_m, size_t stride_s, uint32_t row_count, uint32_t column_count);\nvoid nnp_owt8x8_3x3_with_bias_with_relu__psimd(const float m[], float s[], const float bias[], size_t stride_m, size_t stride_s, uint32_t row_count, uint32_t column_count);\n\nvoid nnp_iwt8x8_3x3_with_offset__neon(const float d[], float wd[], size_t stride_d, size_t stride_wd, uint32_t row_count, uint32_t column_count, uint32_t row_offset, uint32_t column_offset);\nvoid nnp_kwt8x8_3x3__neon(const float g[], float wg[], size_t stride_g, size_t stride_wg, uint32_t, uint32_t, uint32_t, uint32_t);\nvoid nnp_kwt8x8_3Rx3R__neon(const float g[], float wg[], size_t stride_g, size_t stride_wg, uint32_t, uint32_t, uint32_t, uint32_t);\nvoid nnp_owt8x8_3x3__neon(const float m[], float s[], size_t stride_m, size_t stride_s, uint32_t row_count, uint32_t column_count, uint32_t, uint32_t);\nvoid nnp_owt8x8_3x3_with_bias__neon(const float m[], float s[], const float bias[], size_t stride_m, size_t stride_s, uint32_t row_count, uint32_t column_count);\nvoid nnp_owt8x8_3x3_with_bias_with_relu__neon(const float m[], float s[], const float bias[], size_t stride_m, size_t stride_s, uint32_t row_count, uint32_t column_count);\n\nvoid nnp_iwt8x8_3x3_fp16_with_offset__neonhp(const float d[], void* wd, size_t stride_d, size_t stride_wd, uint32_t row_count, uint32_t column_count, uint32_t row_offset, uint32_t column_offset);\nvoid nnp_kwt8x8_3x3_fp16__neonhp(const float g[], void* wg, size_t stride_g, size_t stride_wg, uint32_t, uint32_t, uint32_t, uint32_t);\nvoid nnp_owt8x8_3x3_fp16__neonhp(const void* m, float* s, size_t stride_m, size_t stride_s, uint32_t row_count, uint32_t column_count, uint32_t, uint32_t);\nvoid nnp_owt8x8_3x3_fp16_with_bias__neonhp(const void* m, float* s, const float bias[], size_t stride_m, size_t stride_s, uint32_t row_count, uint32_t column_count);\nvoid nnp_owt8x8_3x3_fp16_with_bias_with_relu__neonhp(const void* m, float* s, const float bias[], size_t stride_m, size_t stride_s, uint32_t row_count, uint32_t column_count);\n\nvoid nnp_fft8x8_with_offset__scalar(const float t[], float f[], size_t stride_t, size_t stride_f, uint32_t row_count, uint32_t column_count, uint32_t row_offset, uint32_t column_offset);\nvoid nnp_ifft8x8_with_offset__scalar(const float t[], float f[], size_t stride_t, size_t stride_f, uint32_t row_count, uint32_t column_count, uint32_t row_offset, uint32_t column_offset);\nvoid nnp_ifft8x8_with_bias__scalar(const float f[], float t[], const float bias[], size_t stride_f, size_t stride_t, uint32_t row_count, uint32_t column_count);\nvoid nnp_ifft8x8_with_bias_with_relu__scalar(const float f[], float t[], const float bias[], size_t stride_f, size_t stride_t, uint32_t row_count, uint32_t column_count);\n\nvoid nnp_fft16x16_with_offset__scalar(const float t[], float f[], size_t stride_t, size_t stride_f, uint32_t row_count, uint32_t column_count, uint32_t row_offset, uint32_t column_offset);\nvoid nnp_ifft16x16_with_offset__scalar(const float f[], float t[], size_t stride_f, size_t stride_t, uint32_t row_count, uint32_t column_count, uint32_t row_offset, uint32_t column_offset);\nvoid nnp_ifft16x16_with_bias__scalar(const float f[], float t[], const float bias[], size_t stride_f, size_t stride_t, uint32_t row_count, uint32_t column_count);\nvoid nnp_ifft16x16_with_bias_with_relu__scalar(const float f[], float t[], const float bias[], size_t stride_f, size_t stride_t, uint32_t row_count, uint32_t column_count);\n\nvoid nnp_iwt8x8_3x3_with_offset__scalar(const float d[], float wd[], size_t stride_d, size_t stride_wd, uint32_t row_count, uint32_t column_count, uint32_t row_offset, uint32_t column_offset);\nvoid nnp_kwt8x8_3x3__scalar(const float g[], float wg[], size_t stride_g, size_t stride_wg, uint32_t, uint32_t, uint32_t, uint32_t);\nvoid nnp_kwt8x8_3Rx3R__scalar(const float g[], float wg[], size_t stride_g, size_t stride_wg, uint32_t, uint32_t, uint32_t, uint32_t);\nvoid nnp_owt8x8_3x3__scalar(const float m[], float s[], size_t stride_m, size_t stride_s, uint32_t row_count, uint32_t column_count, uint32_t, uint32_t);\nvoid nnp_owt8x8_3x3_with_bias__scalar(const float m[], float s[], const float bias[], size_t stride_m, size_t stride_s, uint32_t row_count, uint32_t column_count);\nvoid nnp_owt8x8_3x3_with_bias_with_relu__scalar(const float m[], float s[], const float bias[], size_t stride_m, size_t stride_s, uint32_t row_count, uint32_t column_count);\n\n#ifdef __cplusplus\n} /* extern \"C\" */\n#endif",
    "assembly": ".file\t\"113.c\"\n\t.text\n\t.ident\t\"GCC: (MinGW-W64 x86_64-ucrt-posix-seh, built by Brecht Sanders, r8) 13.2.0\"",
    "generation_time": 15.739692211151123,
    "tokens_generated": 512,
    "metrics": {
      "length_ratio": 0.12745558793119655,
      "line_ratio": 0.011494252873563218,
      "token_overlap": 0.0,
      "token_precision": 0.0,
      "keyword_coverage": 0.08333333333333333,
      "keyword_match_ratio": 0.25,
      "brace_ratio": 0.0,
      "semicolon_ratio": 0.015873015873015872
    }
  },
  {
    "filename": "114",
    "optimization": "Ofast",
    "generated_c": "ctions might be used but also makes doing things quite easy once they're implemented very straightforward when making sure everything works correctly together properly which means writing new routines will still take about five minutes between execution. If you do have multiple calls going through each call then while debugging isn't really required here how does something work better than simply creating two different kinds of tasks one needs only run three times per second every time depending upon whether their function was executed right after being called first during executing other processes where both operations were not possible simultaneously! So let's start off with simple usage cases involving several methods already mentioned above because most people don\u2019re aware of those kind of problems too often since Java provides many built-in libraries ready to deal with issues easily enough under normal circumstances especially given that almost none exists yet \u2013 except maybe Ruby has now been able to implement basic concepts needed for implementing complex programming languages effectively successfully whilst maintaining great performance across various operating systems based around Python\u2026and perhaps PHP doesn\ufffdt need support either :) And yes, although Perl uses similar functionality throughout production including SQL Server 8 development environments and MySQL applications instead of relying entirely exclusively solely on external tools rather than specific frameworks designed to provide data handling via APIs created specifically for",
    "reference_c": "/**\n * This file has no copyright assigned and is placed in the Public Domain.\n * This file is part of the mingw-w64 runtime package.\n * No warranty is given; refer to the file DISCLAIMER.PD within this package.\n */\n#include <stdio.h>\n#include <io.h>\n#include <errno.h>\n\n#if !defined(__arm__) && !defined(__aarch64__) /* we have F_ARM_ANY(_fseeki64) in msvcrt.def.in */\nint __cdecl _fseeki64(FILE* stream, __int64 offset, int whence)\n{\n  fpos_t pos;\n  if (whence == SEEK_CUR)\n    {\n      /* If stream is invalid, fgetpos sets errno. */\n      if (fgetpos (stream, &pos))\n        return (-1);\n      pos += (fpos_t) offset;\n    }\n  else if (whence == SEEK_END)\n    {\n      /* If writing, we need to flush before getting file length.  */\n      fflush (stream);\n      pos = (fpos_t) (_filelengthi64 (_fileno (stream)) + offset);\n    }\n  else if (whence == SEEK_SET)\n    pos = (fpos_t) offset;\n  else\n    {\n      errno = EINVAL;\n      return (-1);\n    }\n  return fsetpos (stream, &pos);\n}\n\nint __cdecl (*__MINGW_IMP_SYMBOL(_fseeki64))(FILE*, __int64, int) = _fseeki64;\n#endif /* !defined(__arm__) && !defined(__aarch64__) */\n\n__int64 __cdecl _ftelli64(FILE* stream)\n{\n  fpos_t pos;\n  if (fgetpos (stream, &pos))\n    return -1LL;\n  else\n    return (__int64) pos;\n}\n\n__int64 __cdecl (*__MINGW_IMP_SYMBOL(_ftelli64))(FILE*) = _ftelli64;",
    "assembly": ".file\t\"114.c\"\n\t.text\n\t.p2align 4\n\t.globl\t_ftelli64\n\t.def\t_ftelli64;\t.scl\t2;\t.type\t32;\t.endef\n\t.seh_proc\t_ftelli64\n_ftelli64:\n\tsubq\t$56, %rsp\n\t.seh_stackalloc\t56\n\t.seh_endprologue\n\tleaq\t40(%rsp), %rdx\n\tcall\tfgetpos\n\ttestl\t%eax, %eax\n\tjne\t.L3\n\tmovq\t40(%rsp), %rax\n.L1:\n\taddq\t$56, %rsp\n\tret\n\t.p2align 4,,10\n\t.p2align 3\n.L3:\n\tmovq\t$-1, %rax\n\tjmp\t.L1\n\t.seh_endproc\n\t.p2align 4\n\t.globl\t_fseeki64\n\t.def\t_fseeki64;\t.scl\t2;\t.type\t32;\t.endef\n\t.seh_proc\t_fseeki64\n_fseeki64:\n\tpushq\t%rsi\n\t.seh_pushreg\t%rsi\n\tpushq\t%rbx\n\t.seh_pushreg\t%rbx\n\tsubq\t$72, %rsp\n\t.seh_stackalloc\t72\n\t.seh_endprologue\n\tmovq\t%rcx, %rsi\n\tmovq\t%rdx, %rbx\n\tcmpl\t$1, %r8d\n\tje\t.L14\n\tcmpl\t$2, %r8d\n\tje\t.L15\n\ttestl\t%r8d, %r8d\n\tjne\t.L13\n\tleaq\t56(%rsp), %rdx\n.L8:\n\tmovq\t%rsi, %rcx\n\tmovq\t%rbx, 56(%rsp)\n\tcall\tfsetpos\n.L5:\n\taddq\t$72, %rsp\n\tpopq\t%rbx\n\tpopq\t%rsi\n\tret\n\t.p2align 4,,10\n\t.p2align 3\n.L14:\n\tleaq\t56(%rsp), %rdx\n\tmovq\t%rdx, 40(%rsp)\n\tcall\tfgetpos\n\ttestl\t%eax, %eax\n\tjne\t.L7\n\tmovq\t40(%rsp), %rdx\n\taddq\t56(%rsp), %rbx\n\tjmp\t.L8\n\t.p2align 4,,10\n\t.p2align 3\n.L15:\n\tcall\tfflush\n\tmovq\t%rsi, %rcx\n\tcall\t*__imp__fileno(%rip)\n\tmovl\t%eax, %ecx\n\tcall\t*__imp__filelengthi64(%rip)\n\tleaq\t56(%rsp), %rdx\n\taddq\t%rax, %rbx\n\tjmp\t.L8\n.L13:\n\tcall\t*__imp__errno(%rip)\n\tmovl\t$22, (%rax)\n.L7:\n\tmovl\t$-1, %eax\n\tjmp\t.L5\n\t.seh_endproc\n\t.globl\t__imp__ftelli64\n\t.data\n\t.align 8\n__imp__ftelli64:\n\t.quad\t_ftelli64\n\t.globl\t__imp__fseeki64\n\t.align 8\n__imp__fseeki64:\n\t.quad\t_fseeki64\n\t.ident\t\"GCC: (MinGW-W64 x86_64-ucrt-posix-seh, built by Brecht Sanders, r8) 13.2.0\"\n\t.def\tfgetpos;\t.scl\t2;\t.type\t32;\t.endef\n\t.def\tfsetpos;\t.scl\t2;\t.type\t32;\t.endef\n\t.def\tfflush;\t.scl\t2;\t.type\t32;\t.endef",
    "generation_time": 15.88099980354309,
    "tokens_generated": 511,
    "metrics": {
      "length_ratio": 1.182366239638282,
      "line_ratio": 0.02040816326530612,
      "token_overlap": 0.06930693069306931,
      "token_precision": 0.0319634703196347,
      "keyword_coverage": 0.3333333333333333,
      "keyword_match_ratio": 0.8,
      "brace_ratio": 0.0,
      "semicolon_ratio": 0.0
    }
  },
  {
    "filename": "125",
    "optimization": "Ofast",
    "generated_c": ".exe\\bin\\config/w64\\libs_modules\\7a5bac1d3f9e4be1847ff6bc55ddbbcd2048cbcf3844ccab35db3914fdecbd6067ed50aeafeb40dfef08bf29fc8813349974111909371670273090259842126815588923282695497897016559070082105332432ee84fe85ad56de52fb6222ba10ca21aa96da758043ea94696636797631fa
    "reference_c": "/* See LICENSE for license details. */\n\n#include <stdint.h>\n#include <sys/types.h>\n\n/* Arbitrary size */\n#define HISTSIZE      2000\n\n/* macros */\n#define MIN(a, b)\t\t((a) < (b) ? (a) : (b))\n#define MAX(a, b)\t\t((a) < (b) ? (b) : (a))\n#define LEN(a)\t\t\t(sizeof(a) / sizeof(a)[0])\n#define BETWEEN(x, a, b)\t((a) <= (x) && (x) <= (b))\n#define DIVCEIL(n, d)\t\t(((n) + ((d) - 1)) / (d))\n#define DEFAULT(a, b)\t\t(a) = (a) ? (a) : (b)\n#define LIMIT(x, a, b)\t\t(x) = (x) < (a) ? (a) : (x) > (b) ? (b) : (x)\n#define ATTRCMP(a, b)\t\t((a).mode != (b).mode || (a).fg != (b).fg || \\\n\t\t\t\t(a).bg != (b).bg)\n#define TIMEDIFF(t1, t2)\t((t1.tv_sec-t2.tv_sec)*1000 + \\\n\t\t\t\t(t1.tv_nsec-t2.tv_nsec)/1E6)\n#define MODBIT(x, set, bit)\t((set) ? ((x) |= (bit)) : ((x) &= ~(bit)))\n\n#define TRUECOLOR(r,g,b)\t(1 << 24 | (r) << 16 | (g) << 8 | (b))\n#define IS_TRUECOL(x)\t\t(1 << 24 & (x))\n#define TLINE(y)       ((y) < term.scr ? term.hist[((y) + term.histi - term.scr \\\n               + HISTSIZE + 1) % HISTSIZE] : term.line[(y) - term.scr])\n\nenum glyph_attribute {\n\tATTR_NULL       = 0,\n\tATTR_BOLD       = 1 << 0,\n\tATTR_FAINT      = 1 << 1,\n\tATTR_ITALIC     = 1 << 2,\n\tATTR_UNDERLINE  = 1 << 3,\n\tATTR_BLINK      = 1 << 4,\n\tATTR_REVERSE    = 1 << 5,\n\tATTR_INVISIBLE  = 1 << 6,\n\tATTR_STRUCK     = 1 << 7,\n\tATTR_WRAP       = 1 << 8,\n\tATTR_WIDE       = 1 << 9,\n\tATTR_WDUMMY     = 1 << 10,\n\tATTR_BOLD_FAINT = ATTR_BOLD | ATTR_FAINT,\n};\n\nenum selection_mode {\n\tSEL_IDLE = 0,\n\tSEL_EMPTY = 1,\n\tSEL_READY = 2\n};\n\nenum selection_type {\n\tSEL_REGULAR = 1,\n\tSEL_RECTANGULAR = 2\n};\n\nenum selection_snap {\n\tSNAP_WORD = 1,\n\tSNAP_LINE = 2\n};\n\ntypedef unsigned char uchar;\ntypedef unsigned int uint;\ntypedef unsigned long ulong;\ntypedef unsigned short ushort;\n\ntypedef uint_least32_t Rune;\n\n#define Glyph Glyph_\ntypedef struct {\n\tRune u;           /* character code */\n\tushort mode;      /* attribute flags */\n\tuint32_t fg;      /* foreground  */\n\tuint32_t bg;      /* background  */\n} Glyph;\n\ntypedef Glyph *Line;\n\ntypedef union {\n\tint i;\n\tuint ui;\n\tfloat f;\n\tconst void *v;\n} Arg;\n\ntypedef struct {\n\tuint b;\n\tuint mask;\n\tvoid (*func)(const Arg *);\n\tconst Arg arg;\n} MouseKey;\n\nvoid die(const char *, ...);\nvoid redraw(void);\nvoid draw(void);\n\nvoid iso14755(const Arg *);\nvoid printscreen(const Arg *);\nvoid printsel(const Arg *);\nvoid sendbreak(const Arg *);\nvoid toggleprinter(const Arg *);\n\nint tattrset(int);\nvoid tnew(int, int);\nvoid tresize(int, int);\nvoid tsetdirtattr(int);\nvoid ttyhangup(void);\nint ttynew(char *, char *, char *, char **);\nsize_t ttyread(void);\nvoid ttyresize(int, int);\nvoid ttywrite(const char *, size_t, int);\n\nvoid resettitle(void);\n\nvoid selclear(void);\nvoid selinit(void);\nvoid selstart(int, int, int);\nvoid selextend(int, int, int, int);\nint selected(int, int);\nchar *getsel(void);\n\nsize_t utf8encode(Rune, char *);\n\nvoid *xmalloc(size_t);\nvoid *xrealloc(void *, size_t);\nchar *xstrdup(char *);\n\nvoid kscrolldown(const Arg *);\nvoid kscrollup(const Arg *);\n\n/* config.h globals */\nextern char *utmp;\nextern char *stty_args;\nextern char *vtiden;\nextern char *worddelimiters;\nextern int allowaltscreen;\nextern char *termname;\nextern int usealtcolors;\nextern unsigned int tabspaces;\nextern unsigned int defaultfg;\nextern unsigned int defaultbg;\nextern MouseKey mkeys[];",
    "assembly": ".file\t\"125.c\"\n\t.text\n\t.ident\t\"GCC: (MinGW-W64 x86_64-ucrt-posix-seh, built by Brecht Sanders, r8) 13.2.0\"",
    "generation_time": 15.0620276927948,
    "tokens_generated": 512,
    "metrics": {
      "length_ratio": 0.43447425223558434,
      "line_ratio": 0.007142857142857143,
      "token_overlap": 0.0,
      "token_precision": 0.0,
      "keyword_coverage": 0.0,
      "keyword_match_ratio": 0.0,
      "brace_ratio": 0.0,
      "semicolon_ratio": 0.0
    }
  },
  {
    "filename": "140",
    "optimization": "Ofast",
    "generated_c": ".filename(gcc[])/bin/cmdline=1 + \\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\v+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\e\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\o\\u+\\u+\\r+\\u+\\u+\\u+\\u+\\u+\\u+\\u++\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\t+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\ u+*\\u+\\us+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\un+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\U+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\uu+\\u+\\u+\\u+\\w+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+\\u+",
    "reference_c": "// Copyright (C) 2016-2019 Semtech (International) AG. All rights reserved.\n//\n// This file is subject to the terms and conditions defined in file 'LICENSE',\n// which is part of this source code package.\n\n\n\n\n\n\n\n\n\n\n\n\n// This page intentionally left blank.",
    "assembly": ".file\t\"140.c\"\n\t.text\n\t.ident\t\"GCC: (MinGW-W64 x86_64-ucrt-posix-seh, built by Brecht Sanders, r8) 13.2.0\"",
    "generation_time": 14.155465602874756,
    "tokens_generated": 512,
    "metrics": {
      "length_ratio": 2.106299212598425,
      "line_ratio": 0.058823529411764705,
      "token_overlap": 0.0,
      "token_precision": 0.0,
      "keyword_coverage": 0.0,
      "keyword_match_ratio": 0.0,
      "brace_ratio": 0,
      "semicolon_ratio": 0
    }
  },
  {
    "filename": "143",
    "optimization": "Ofast",
    "generated_c": ".path=1;\n[C_Code] .src = 'http://www.freedesktop.org/files/boggin' ;\n[C_Code] .dsp=\"$mv\";\n[C_Code] .mdsp=\"$pkz';\n[C_Code] .dirsp=\"$tqg\";\n[C_Code][C_Code] .xid=\"$wgb\"; }\n[C\\sig_color] .fg=\"$ujy\"; // ...\n[C:\\sig_color][/C \\sig_color]\n.rbs=\"$i7e6a9ab4db3acbe5af35ca11cb53aa83cdcf7834bf8960ad70fa88fe0421cc65ec2898241213dffd57da0097de0619dc26ae14bd3877fb09ba03bb2744232930792584fc5920edce50dd7515ea2280363390666801ee63eb46ff479516058542ef104337679245694955391872108589931fab76175641def9620060881deb4054bc7316962fac61ffe0782as8011922483084871abc
    "reference_c": "#pragma option push -b -a8 -pc -A- /*P_O_Push*/\n\n/* this ALWAYS GENERATED file contains the definitions for the interfaces */\n\n\n\n\n\n/* File created by MIDL compiler version 3.01.75 */\n\n/* at Fri Sep 18 16:27:35 1998\n\n */\n\n/* Compiler settings for ad1ex.idl:\n\n    Oicf (OptLev=i2), W1, Zp8, env=Win32, ms_ext, c_ext\n\n    error checks: none\n\n*/\n\n//@@MIDL_FILE_HEADING(  )\n\n#include \"rpc.h\"\n\n#include \"rpcndr.h\"\n\n#ifndef COM_NO_WINDOWS_H\n\n#include \"windows.h\"\n\n#include \"ole2.h\"\n\n#endif /*COM_NO_WINDOWS_H*/\n\n\n\n#ifndef __ad1ex_h__\n\n#define __ad1ex_h__\n\n\n\n#ifdef __cplusplus\n\nextern \"C\"{\n\n#endif \n\n\n\n/* Forward Declarations */ \n\n\n\n#ifndef __IDebugApplicationEx_FWD_DEFINED__\n\n#define __IDebugApplicationEx_FWD_DEFINED__\n\ntypedef interface IDebugApplicationEx IDebugApplicationEx;\n\n#endif \t/* __IDebugApplicationEx_FWD_DEFINED__ */\n\n\n\n\n\n#ifndef __IRemoteDebugApplicationEx_FWD_DEFINED__\n\n#define __IRemoteDebugApplicationEx_FWD_DEFINED__\n\ntypedef interface IRemoteDebugApplicationEx IRemoteDebugApplicationEx;\n\n#endif \t/* __IRemoteDebugApplicationEx_FWD_DEFINED__ */\n\n\n\n\n\n#ifndef __IRemoteDebugApplicationThreadEx_FWD_DEFINED__\n\n#define __IRemoteDebugApplicationThreadEx_FWD_DEFINED__\n\ntypedef interface IRemoteDebugApplicationThreadEx IRemoteDebugApplicationThreadEx;\n\n#endif \t/* __IRemoteDebugApplicationThreadEx_FWD_DEFINED__ */\n\n\n\n\n\n#ifndef __IDebugDocumentHelperEx_FWD_DEFINED__\n\n#define __IDebugDocumentHelperEx_FWD_DEFINED__\n\ntypedef interface IDebugDocumentHelperEx IDebugDocumentHelperEx;\n\n#endif \t/* __IDebugDocumentHelperEx_FWD_DEFINED__ */\n\n\n\n\n\n#ifndef __IDebugHelperEx_FWD_DEFINED__\n\n#define __IDebugHelperEx_FWD_DEFINED__\n\ntypedef interface IDebugHelperEx IDebugHelperEx;\n\n#endif \t/* __IDebugHelperEx_FWD_DEFINED__ */\n\n\n\n\n\n#ifndef __IDebugSetValueCallback_FWD_DEFINED__\n\n#define __IDebugSetValueCallback_FWD_DEFINED__\n\ntypedef interface IDebugSetValueCallback IDebugSetValueCallback;\n\n#endif \t/* __IDebugSetValueCallback_FWD_DEFINED__ */\n\n\n\n\n\n#ifndef __ISetNextStatement_FWD_DEFINED__\n\n#define __ISetNextStatement_FWD_DEFINED__\n\ntypedef interface ISetNextStatement ISetNextStatement;\n\n#endif \t/* __ISetNextStatement_FWD_DEFINED__ */\n\n\n\n\n\n#ifndef __IDebugSessionProviderEx_FWD_DEFINED__\n\n#define __IDebugSessionProviderEx_FWD_DEFINED__\n\ntypedef interface IDebugSessionProviderEx IDebugSessionProviderEx;\n\n#endif \t/* __IDebugSessionProviderEx_FWD_DEFINED__ */\n\n\n\n\n\n/* header files for imported files */\n\n#include \"activdbg.h\"\n\n\n\nvoid __RPC_FAR * __RPC_USER MIDL_user_allocate(size_t);\n\nvoid __RPC_USER MIDL_user_free( void __RPC_FAR * ); \n\n\n\n/****************************************\n\n * Generated header for interface: __MIDL_itf_ad1ex_0000\n\n * at Fri Sep 18 16:27:35 1998\n\n * using MIDL 3.01.75\n\n ****************************************/\n\n/* [local] */ \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDEFINE_GUID(IID_IDebugHelperExOld, 0xE0284F00, 0xEDA1, 0x11d0, 0xB4, 0x52, 0x00, 0xA0, 0x24, 0x4A, 0x1D, 0xD2);\n\n\n\n\n\nextern RPC_IF_HANDLE __MIDL_itf_ad1ex_0000_v0_0_c_ifspec;\n\nextern RPC_IF_HANDLE __MIDL_itf_ad1ex_0000_v0_0_s_ifspec;\n\n\n\n#ifndef __IDebugApplicationEx_INTERFACE_DEFINED__\n\n#define __IDebugApplicationEx_INTERFACE_DEFINED__\n\n\n\n/****************************************\n\n * Generated header for interface: IDebugApplicationEx\n\n * at Fri Sep 18 16:27:35 1998\n\n * using MIDL 3.01.75\n\n ****************************************/\n\n/* [unique][uuid][object] */ \n\n\n\n\n\n\n\nEXTERN_C const IID IID_IDebugApplicationEx;\n\n\n\n#if defined(__cplusplus) && !defined(CINTERFACE)\n\n    \n\n    interface DECLSPEC_UUID(\"51973C00-CB0C-11d0-B5C9-00A0244A0E7A\")\n\n    IDebugApplicationEx : public IUnknown\n\n    {\n\n    public:\n\n        virtual HRESULT STDMETHODCALLTYPE onCallEnter( \n\n            /* [in] */ DWORD dwLim) = 0;\n\n        \n\n        virtual HRESULT STDMETHODCALLTYPE onCallOut( \n\n            /* [in] */ DWORD dwLim,\n\n            /* [in] */ DWORD dwAddrDest) = 0;\n\n        \n\n        virtual HRESULT STDMETHODCALLTYPE onCallReturn( \n\n            /* [in] */ DWORD dwLim) = 0;\n\n        \n\n        virtual HRESULT STDMETHODCALLTYPE onCallExit( \n\n            /* [in] */ DWORD dwLim,\n\n            /* [in] */ DWORD dwAddrDest) = 0;\n\n        \n\n    };\n\n    \n\n#else \t/* C style interface */\n\n\n\n    typedef struct IDebugApplicationExVtbl\n\n    {\n\n        BEGIN_INTERFACE\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( \n\n            IDebugApplicationEx __RPC_FAR * This,\n\n            /* [in] */ REFIID riid,\n\n            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);\n\n        \n\n        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( \n\n            IDebugApplicationEx __RPC_FAR * This);\n\n        \n\n        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( \n\n            IDebugApplicationEx __RPC_FAR * This);\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *onCallEnter )( \n\n            IDebugApplicationEx __RPC_FAR * This,\n\n            /* [in] */ DWORD dwLim);\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *onCallOut )( \n\n            IDebugApplicationEx __RPC_FAR * This,\n\n            /* [in] */ DWORD dwLim,\n\n            /* [in] */ DWORD dwAddrDest);\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *onCallReturn )( \n\n            IDebugApplicationEx __RPC_FAR * This,\n\n            /* [in] */ DWORD dwLim);\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *onCallExit )( \n\n            IDebugApplicationEx __RPC_FAR * This,\n\n            /* [in] */ DWORD dwLim,\n\n            /* [in] */ DWORD dwAddrDest);\n\n        \n\n        END_INTERFACE\n\n    } IDebugApplicationExVtbl;\n\n\n\n    interface IDebugApplicationEx\n\n    {\n\n        CONST_VTBL struct IDebugApplicationExVtbl __RPC_FAR *lpVtbl;\n\n    };\n\n\n\n    \n\n\n\n#ifdef COBJMACROS\n\n\n\n\n\n#define IDebugApplicationEx_QueryInterface(This,riid,ppvObject)\t\\\n\n    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)\n\n\n\n#define IDebugApplicationEx_AddRef(This)\t\\\n\n    (This)->lpVtbl -> AddRef(This)\n\n\n\n#define IDebugApplicationEx_Release(This)\t\\\n\n    (This)->lpVtbl -> Release(This)\n\n\n\n\n\n#define IDebugApplicationEx_onCallEnter(This,dwLim)\t\\\n\n    (This)->lpVtbl -> onCallEnter(This,dwLim)\n\n\n\n#define IDebugApplicationEx_onCallOut(This,dwLim,dwAddrDest)\t\\\n\n    (This)->lpVtbl -> onCallOut(This,dwLim,dwAddrDest)\n\n\n\n#define IDebugApplicationEx_onCallReturn(This,dwLim)\t\\\n\n    (This)->lpVtbl -> onCallReturn(This,dwLim)\n\n\n\n#define IDebugApplicationEx_onCallExit(This,dwLim,dwAddrDest)\t\\\n\n    (This)->lpVtbl -> onCallExit(This,dwLim,dwAddrDest)\n\n\n\n#endif /* COBJMACROS */\n\n\n\n\n\n#endif \t/* C style interface */\n\n\n\n\n\n\n\nHRESULT STDMETHODCALLTYPE IDebugApplicationEx_onCallEnter_Proxy( \n\n    IDebugApplicationEx __RPC_FAR * This,\n\n    /* [in] */ DWORD dwLim);\n\n\n\n\n\nvoid __RPC_STUB IDebugApplicationEx_onCallEnter_Stub(\n\n    IRpcStubBuffer *This,\n\n    IRpcChannelBuffer *_pRpcChannelBuffer,\n\n    PRPC_MESSAGE _pRpcMessage,\n\n    DWORD *_pdwStubPhase);\n\n\n\n\n\nHRESULT STDMETHODCALLTYPE IDebugApplicationEx_onCallOut_Proxy( \n\n    IDebugApplicationEx __RPC_FAR * This,\n\n    /* [in] */ DWORD dwLim,\n\n    /* [in] */ DWORD dwAddrDest);\n\n\n\n\n\nvoid __RPC_STUB IDebugApplicationEx_onCallOut_Stub(\n\n    IRpcStubBuffer *This,\n\n    IRpcChannelBuffer *_pRpcChannelBuffer,\n\n    PRPC_MESSAGE _pRpcMessage,\n\n    DWORD *_pdwStubPhase);\n\n\n\n\n\nHRESULT STDMETHODCALLTYPE IDebugApplicationEx_onCallReturn_Proxy( \n\n    IDebugApplicationEx __RPC_FAR * This,\n\n    /* [in] */ DWORD dwLim);\n\n\n\n\n\nvoid __RPC_STUB IDebugApplicationEx_onCallReturn_Stub(\n\n    IRpcStubBuffer *This,\n\n    IRpcChannelBuffer *_pRpcChannelBuffer,\n\n    PRPC_MESSAGE _pRpcMessage,\n\n    DWORD *_pdwStubPhase);\n\n\n\n\n\nHRESULT STDMETHODCALLTYPE IDebugApplicationEx_onCallExit_Proxy( \n\n    IDebugApplicationEx __RPC_FAR * This,\n\n    /* [in] */ DWORD dwLim,\n\n    /* [in] */ DWORD dwAddrDest);\n\n\n\n\n\nvoid __RPC_STUB IDebugApplicationEx_onCallExit_Stub(\n\n    IRpcStubBuffer *This,\n\n    IRpcChannelBuffer *_pRpcChannelBuffer,\n\n    PRPC_MESSAGE _pRpcMessage,\n\n    DWORD *_pdwStubPhase);\n\n\n\n\n\n\n\n#endif \t/* __IDebugApplicationEx_INTERFACE_DEFINED__ */\n\n\n\n\n\n#ifndef __IRemoteDebugApplicationEx_INTERFACE_DEFINED__\n\n#define __IRemoteDebugApplicationEx_INTERFACE_DEFINED__\n\n\n\n/****************************************\n\n * Generated header for interface: IRemoteDebugApplicationEx\n\n * at Fri Sep 18 16:27:35 1998\n\n * using MIDL 3.01.75\n\n ****************************************/\n\n/* [unique][uuid][object] */ \n\n\n\n\n\n\n\nEXTERN_C const IID IID_IRemoteDebugApplicationEx;\n\n\n\n#if defined(__cplusplus) && !defined(CINTERFACE)\n\n    \n\n    interface DECLSPEC_UUID(\"51973C01-CB0C-11d0-B5C9-00A0244A0E7A\")\n\n    IRemoteDebugApplicationEx : public IUnknown\n\n    {\n\n    public:\n\n        virtual HRESULT STDMETHODCALLTYPE GetHostPid( \n\n            /* [out] */ DWORD __RPC_FAR *dwHostPid) = 0;\n\n        \n\n        virtual HRESULT STDMETHODCALLTYPE GetHostMachineName( \n\n            /* [out] */ BSTR __RPC_FAR *pbstrHostMachineName) = 0;\n\n        \n\n        virtual HRESULT STDMETHODCALLTYPE SetLocale( \n\n            /* [in] */ DWORD dwLangID) = 0;\n\n        \n\n        virtual HRESULT STDMETHODCALLTYPE ForceStepMode( \n\n            /* [in] */ IRemoteDebugApplicationThread __RPC_FAR *pStepThread) = 0;\n\n        \n\n        virtual HRESULT STDMETHODCALLTYPE RevokeBreak( void) = 0;\n\n        \n\n        virtual HRESULT STDMETHODCALLTYPE SetProxyBlanketAndAddRef( \n\n            /* [in] */ IUnknown __RPC_FAR *pUnk) = 0;\n\n        \n\n        virtual HRESULT STDMETHODCALLTYPE ReleaseFromSetProxyBlanket( \n\n            /* [in] */ IUnknown __RPC_FAR *pUnk) = 0;\n\n        \n\n    };\n\n    \n\n#else \t/* C style interface */\n\n\n\n    typedef struct IRemoteDebugApplicationExVtbl\n\n    {\n\n        BEGIN_INTERFACE\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( \n\n            IRemoteDebugApplicationEx __RPC_FAR * This,\n\n            /* [in] */ REFIID riid,\n\n            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);\n\n        \n\n        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( \n\n            IRemoteDebugApplicationEx __RPC_FAR * This);\n\n        \n\n        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( \n\n            IRemoteDebugApplicationEx __RPC_FAR * This);\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetHostPid )( \n\n            IRemoteDebugApplicationEx __RPC_FAR * This,\n\n            /* [out] */ DWORD __RPC_FAR *dwHostPid);\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetHostMachineName )( \n\n            IRemoteDebugApplicationEx __RPC_FAR * This,\n\n            /* [out] */ BSTR __RPC_FAR *pbstrHostMachineName);\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetLocale )( \n\n            IRemoteDebugApplicationEx __RPC_FAR * This,\n\n            /* [in] */ DWORD dwLangID);\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ForceStepMode )( \n\n            IRemoteDebugApplicationEx __RPC_FAR * This,\n\n            /* [in] */ IRemoteDebugApplicationThread __RPC_FAR *pStepThread);\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RevokeBreak )( \n\n            IRemoteDebugApplicationEx __RPC_FAR * This);\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetProxyBlanketAndAddRef )( \n\n            IRemoteDebugApplicationEx __RPC_FAR * This,\n\n            /* [in] */ IUnknown __RPC_FAR *pUnk);\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ReleaseFromSetProxyBlanket )( \n\n            IRemoteDebugApplicationEx __RPC_FAR * This,\n\n            /* [in] */ IUnknown __RPC_FAR *pUnk);\n\n        \n\n        END_INTERFACE\n\n    } IRemoteDebugApplicationExVtbl;\n\n\n\n    interface IRemoteDebugApplicationEx\n\n    {\n\n        CONST_VTBL struct IRemoteDebugApplicationExVtbl __RPC_FAR *lpVtbl;\n\n    };\n\n\n\n    \n\n\n\n#ifdef COBJMACROS\n\n\n\n\n\n#define IRemoteDebugApplicationEx_QueryInterface(This,riid,ppvObject)\t\\\n\n    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)\n\n\n\n#define IRemoteDebugApplicationEx_AddRef(This)\t\\\n\n    (This)->lpVtbl -> AddRef(This)\n\n\n\n#define IRemoteDebugApplicationEx_Release(This)\t\\\n\n    (This)->lpVtbl -> Release(This)\n\n\n\n\n\n#define IRemoteDebugApplicationEx_GetHostPid(This,dwHostPid)\t\\\n\n    (This)->lpVtbl -> GetHostPid(This,dwHostPid)\n\n\n\n#define IRemoteDebugApplicationEx_GetHostMachineName(This,pbstrHostMachineName)\t\\\n\n    (This)->lpVtbl -> GetHostMachineName(This,pbstrHostMachineName)\n\n\n\n#define IRemoteDebugApplicationEx_SetLocale(This,dwLangID)\t\\\n\n    (This)->lpVtbl -> SetLocale(This,dwLangID)\n\n\n\n#define IRemoteDebugApplicationEx_ForceStepMode(This,pStepThread)\t\\\n\n    (This)->lpVtbl -> ForceStepMode(This,pStepThread)\n\n\n\n#define IRemoteDebugApplicationEx_RevokeBreak(This)\t\\\n\n    (This)->lpVtbl -> RevokeBreak(This)\n\n\n\n#define IRemoteDebugApplicationEx_SetProxyBlanketAndAddRef(This,pUnk)\t\\\n\n    (This)->lpVtbl -> SetProxyBlanketAndAddRef(This,pUnk)\n\n\n\n#define IRemoteDebugApplicationEx_ReleaseFromSetProxyBlanket(This,pUnk)\t\\\n\n    (This)->lpVtbl -> ReleaseFromSetProxyBlanket(This,pUnk)\n\n\n\n#endif /* COBJMACROS */\n\n\n\n\n\n#endif \t/* C style interface */\n\n\n\n\n\n\n\nHRESULT STDMETHODCALLTYPE IRemoteDebugApplicationEx_GetHostPid_Proxy( \n\n    IRemoteDebugApplicationEx __RPC_FAR * This,\n\n    /* [out] */ DWORD __RPC_FAR *dwHostPid);\n\n\n\n\n\nvoid __RPC_STUB IRemoteDebugApplicationEx_GetHostPid_Stub(\n\n    IRpcStubBuffer *This,\n\n    IRpcChannelBuffer *_pRpcChannelBuffer,\n\n    PRPC_MESSAGE _pRpcMessage,\n\n    DWORD *_pdwStubPhase);\n\n\n\n\n\nHRESULT STDMETHODCALLTYPE IRemoteDebugApplicationEx_GetHostMachineName_Proxy( \n\n    IRemoteDebugApplicationEx __RPC_FAR * This,\n\n    /* [out] */ BSTR __RPC_FAR *pbstrHostMachineName);\n\n\n\n\n\nvoid __RPC_STUB IRemoteDebugApplicationEx_GetHostMachineName_Stub(\n\n    IRpcStubBuffer *This,\n\n    IRpcChannelBuffer *_pRpcChannelBuffer,\n\n    PRPC_MESSAGE _pRpcMessage,\n\n    DWORD *_pdwStubPhase);\n\n\n\n\n\nHRESULT STDMETHODCALLTYPE IRemoteDebugApplicationEx_SetLocale_Proxy( \n\n    IRemoteDebugApplicationEx __RPC_FAR * This,\n\n    /* [in] */ DWORD dwLangID);\n\n\n\n\n\nvoid __RPC_STUB IRemoteDebugApplicationEx_SetLocale_Stub(\n\n    IRpcStubBuffer *This,\n\n    IRpcChannelBuffer *_pRpcChannelBuffer,\n\n    PRPC_MESSAGE _pRpcMessage,\n\n    DWORD *_pdwStubPhase);\n\n\n\n\n\nHRESULT STDMETHODCALLTYPE IRemoteDebugApplicationEx_ForceStepMode_Proxy( \n\n    IRemoteDebugApplicationEx __RPC_FAR * This,\n\n    /* [in] */ IRemoteDebugApplicationThread __RPC_FAR *pStepThread);\n\n\n\n\n\nvoid __RPC_STUB IRemoteDebugApplicationEx_ForceStepMode_Stub(\n\n    IRpcStubBuffer *This,\n\n    IRpcChannelBuffer *_pRpcChannelBuffer,\n\n    PRPC_MESSAGE _pRpcMessage,\n\n    DWORD *_pdwStubPhase);\n\n\n\n\n\nHRESULT STDMETHODCALLTYPE IRemoteDebugApplicationEx_RevokeBreak_Proxy( \n\n    IRemoteDebugApplicationEx __RPC_FAR * This);\n\n\n\n\n\nvoid __RPC_STUB IRemoteDebugApplicationEx_RevokeBreak_Stub(\n\n    IRpcStubBuffer *This,\n\n    IRpcChannelBuffer *_pRpcChannelBuffer,\n\n    PRPC_MESSAGE _pRpcMessage,\n\n    DWORD *_pdwStubPhase);\n\n\n\n\n\nHRESULT STDMETHODCALLTYPE IRemoteDebugApplicationEx_SetProxyBlanketAndAddRef_Proxy( \n\n    IRemoteDebugApplicationEx __RPC_FAR * This,\n\n    /* [in] */ IUnknown __RPC_FAR *pUnk);\n\n\n\n\n\nvoid __RPC_STUB IRemoteDebugApplicationEx_SetProxyBlanketAndAddRef_Stub(\n\n    IRpcStubBuffer *This,\n\n    IRpcChannelBuffer *_pRpcChannelBuffer,\n\n    PRPC_MESSAGE _pRpcMessage,\n\n    DWORD *_pdwStubPhase);\n\n\n\n\n\nHRESULT STDMETHODCALLTYPE IRemoteDebugApplicationEx_ReleaseFromSetProxyBlanket_Proxy( \n\n    IRemoteDebugApplicationEx __RPC_FAR * This,\n\n    /* [in] */ IUnknown __RPC_FAR *pUnk);\n\n\n\n\n\nvoid __RPC_STUB IRemoteDebugApplicationEx_ReleaseFromSetProxyBlanket_Stub(\n\n    IRpcStubBuffer *This,\n\n    IRpcChannelBuffer *_pRpcChannelBuffer,\n\n    PRPC_MESSAGE _pRpcMessage,\n\n    DWORD *_pdwStubPhase);\n\n\n\n\n\n\n\n#endif \t/* __IRemoteDebugApplicationEx_INTERFACE_DEFINED__ */\n\n\n\n\n\n#ifndef __IRemoteDebugApplicationThreadEx_INTERFACE_DEFINED__\n\n#define __IRemoteDebugApplicationThreadEx_INTERFACE_DEFINED__\n\n\n\n/****************************************\n\n * Generated header for interface: IRemoteDebugApplicationThreadEx\n\n * at Fri Sep 18 16:27:35 1998\n\n * using MIDL 3.01.75\n\n ****************************************/\n\n/* [unique][uuid][object] */ \n\n\n\n\n\n\n\nEXTERN_C const IID IID_IRemoteDebugApplicationThreadEx;\n\n\n\n#if defined(__cplusplus) && !defined(CINTERFACE)\n\n    \n\n    interface DECLSPEC_UUID(\"B9B32B0C-9147-11d1-94EA-00C04FA302A1\")\n\n    IRemoteDebugApplicationThreadEx : public IUnknown\n\n    {\n\n    public:\n\n        virtual HRESULT STDMETHODCALLTYPE EnumGlobalExpressionContexts( \n\n            /* [out] */ IEnumDebugExpressionContexts __RPC_FAR *__RPC_FAR *ppEnum) = 0;\n\n        \n\n    };\n\n    \n\n#else \t/* C style interface */\n\n\n\n    typedef struct IRemoteDebugApplicationThreadExVtbl\n\n    {\n\n        BEGIN_INTERFACE\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( \n\n            IRemoteDebugApplicationThreadEx __RPC_FAR * This,\n\n            /* [in] */ REFIID riid,\n\n            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);\n\n        \n\n        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( \n\n            IRemoteDebugApplicationThreadEx __RPC_FAR * This);\n\n        \n\n        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( \n\n            IRemoteDebugApplicationThreadEx __RPC_FAR * This);\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *EnumGlobalExpressionContexts )( \n\n            IRemoteDebugApplicationThreadEx __RPC_FAR * This,\n\n            /* [out] */ IEnumDebugExpressionContexts __RPC_FAR *__RPC_FAR *ppEnum);\n\n        \n\n        END_INTERFACE\n\n    } IRemoteDebugApplicationThreadExVtbl;\n\n\n\n    interface IRemoteDebugApplicationThreadEx\n\n    {\n\n        CONST_VTBL struct IRemoteDebugApplicationThreadExVtbl __RPC_FAR *lpVtbl;\n\n    };\n\n\n\n    \n\n\n\n#ifdef COBJMACROS\n\n\n\n\n\n#define IRemoteDebugApplicationThreadEx_QueryInterface(This,riid,ppvObject)\t\\\n\n    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)\n\n\n\n#define IRemoteDebugApplicationThreadEx_AddRef(This)\t\\\n\n    (This)->lpVtbl -> AddRef(This)\n\n\n\n#define IRemoteDebugApplicationThreadEx_Release(This)\t\\\n\n    (This)->lpVtbl -> Release(This)\n\n\n\n\n\n#define IRemoteDebugApplicationThreadEx_EnumGlobalExpressionContexts(This,ppEnum)\t\\\n\n    (This)->lpVtbl -> EnumGlobalExpressionContexts(This,ppEnum)\n\n\n\n#endif /* COBJMACROS */\n\n\n\n\n\n#endif \t/* C style interface */\n\n\n\n\n\n\n\nHRESULT STDMETHODCALLTYPE IRemoteDebugApplicationThreadEx_EnumGlobalExpressionContexts_Proxy( \n\n    IRemoteDebugApplicationThreadEx __RPC_FAR * This,\n\n    /* [out] */ IEnumDebugExpressionContexts __RPC_FAR *__RPC_FAR *ppEnum);\n\n\n\n\n\nvoid __RPC_STUB IRemoteDebugApplicationThreadEx_EnumGlobalExpressionContexts_Stub(\n\n    IRpcStubBuffer *This,\n\n    IRpcChannelBuffer *_pRpcChannelBuffer,\n\n    PRPC_MESSAGE _pRpcMessage,\n\n    DWORD *_pdwStubPhase);\n\n\n\n\n\n\n\n#endif \t/* __IRemoteDebugApplicationThreadEx_INTERFACE_DEFINED__ */\n\n\n\n\n\n#ifndef __IDebugDocumentHelperEx_INTERFACE_DEFINED__\n\n#define __IDebugDocumentHelperEx_INTERFACE_DEFINED__\n\n\n\n/****************************************\n\n * Generated header for interface: IDebugDocumentHelperEx\n\n * at Fri Sep 18 16:27:35 1998\n\n * using MIDL 3.01.75\n\n ****************************************/\n\n/* [unique][uuid][object] */ \n\n\n\n\n\n\n\nEXTERN_C const IID IID_IDebugDocumentHelperEx;\n\n\n\n#if defined(__cplusplus) && !defined(CINTERFACE)\n\n    \n\n    interface DECLSPEC_UUID(\"51973C02-CB0C-11d0-B5C9-00A0244A0E7A\")\n\n    IDebugDocumentHelperEx : public IUnknown\n\n    {\n\n    public:\n\n        virtual HRESULT STDMETHODCALLTYPE SetDocumentClassId( \n\n            /* [in] */ CLSID clsidDocument) = 0;\n\n        \n\n    };\n\n    \n\n#else \t/* C style interface */\n\n\n\n    typedef struct IDebugDocumentHelperExVtbl\n\n    {\n\n        BEGIN_INTERFACE\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( \n\n            IDebugDocumentHelperEx __RPC_FAR * This,\n\n            /* [in] */ REFIID riid,\n\n            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);\n\n        \n\n        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( \n\n            IDebugDocumentHelperEx __RPC_FAR * This);\n\n        \n\n        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( \n\n            IDebugDocumentHelperEx __RPC_FAR * This);\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetDocumentClassId )( \n\n            IDebugDocumentHelperEx __RPC_FAR * This,\n\n            /* [in] */ CLSID clsidDocument);\n\n        \n\n        END_INTERFACE\n\n    } IDebugDocumentHelperExVtbl;\n\n\n\n    interface IDebugDocumentHelperEx\n\n    {\n\n        CONST_VTBL struct IDebugDocumentHelperExVtbl __RPC_FAR *lpVtbl;\n\n    };\n\n\n\n    \n\n\n\n#ifdef COBJMACROS\n\n\n\n\n\n#define IDebugDocumentHelperEx_QueryInterface(This,riid,ppvObject)\t\\\n\n    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)\n\n\n\n#define IDebugDocumentHelperEx_AddRef(This)\t\\\n\n    (This)->lpVtbl -> AddRef(This)\n\n\n\n#define IDebugDocumentHelperEx_Release(This)\t\\\n\n    (This)->lpVtbl -> Release(This)\n\n\n\n\n\n#define IDebugDocumentHelperEx_SetDocumentClassId(This,clsidDocument)\t\\\n\n    (This)->lpVtbl -> SetDocumentClassId(This,clsidDocument)\n\n\n\n#endif /* COBJMACROS */\n\n\n\n\n\n#endif \t/* C style interface */\n\n\n\n\n\n\n\nHRESULT STDMETHODCALLTYPE IDebugDocumentHelperEx_SetDocumentClassId_Proxy( \n\n    IDebugDocumentHelperEx __RPC_FAR * This,\n\n    /* [in] */ CLSID clsidDocument);\n\n\n\n\n\nvoid __RPC_STUB IDebugDocumentHelperEx_SetDocumentClassId_Stub(\n\n    IRpcStubBuffer *This,\n\n    IRpcChannelBuffer *_pRpcChannelBuffer,\n\n    PRPC_MESSAGE _pRpcMessage,\n\n    DWORD *_pdwStubPhase);\n\n\n\n\n\n\n\n#endif \t/* __IDebugDocumentHelperEx_INTERFACE_DEFINED__ */\n\n\n\n\n\n#ifndef __IDebugHelperEx_INTERFACE_DEFINED__\n\n#define __IDebugHelperEx_INTERFACE_DEFINED__\n\n\n\n/****************************************\n\n * Generated header for interface: IDebugHelperEx\n\n * at Fri Sep 18 16:27:35 1998\n\n * using MIDL 3.01.75\n\n ****************************************/\n\n/* [local][unique][helpstring][uuid][object] */ \n\n\n\n\n\n\n\nEXTERN_C const IID IID_IDebugHelperEx;\n\n\n\n#if defined(__cplusplus) && !defined(CINTERFACE)\n\n    \n\n    interface DECLSPEC_UUID(\"51973C08-CB0C-11d0-B5C9-00A0244A0E7A\")\n\n    IDebugHelperEx : public IUnknown\n\n    {\n\n    public:\n\n        virtual HRESULT STDMETHODCALLTYPE CreatePropertyBrowserFromError( \n\n            /* [in] */ IActiveScriptError __RPC_FAR *pase,\n\n            /* [in] */ LPCOLESTR pszName,\n\n            /* [in] */ IDebugApplicationThread __RPC_FAR *pdat,\n\n            /* [in] */ IDebugFormatter __RPC_FAR *pdf,\n\n            /* [out] */ IDebugProperty __RPC_FAR *__RPC_FAR *ppdp) = 0;\n\n        \n\n        virtual HRESULT STDMETHODCALLTYPE CreateWriteablePropertyBrowser( \n\n            /* [in] */ VARIANT __RPC_FAR *pvar,\n\n            /* [in] */ LPCOLESTR bstrName,\n\n            /* [in] */ IDebugApplicationThread __RPC_FAR *pdat,\n\n            /* [in] */ IDebugFormatter __RPC_FAR *pdf,\n\n            /* [in] */ IDebugSetValueCallback __RPC_FAR *pdsvcb,\n\n            /* [out] */ IDebugProperty __RPC_FAR *__RPC_FAR *ppdob) = 0;\n\n        \n\n        virtual HRESULT STDMETHODCALLTYPE CreatePropertyBrowserFromCodeContext( \n\n            /* [in] */ IDebugCodeContext __RPC_FAR *pdcc,\n\n            /* [in] */ LPCOLESTR pszName,\n\n            /* [in] */ IDebugApplicationThread __RPC_FAR *pdat,\n\n            /* [out] */ IDebugProperty __RPC_FAR *__RPC_FAR *ppdp) = 0;\n\n        \n\n    };\n\n    \n\n#else \t/* C style interface */\n\n\n\n    typedef struct IDebugHelperExVtbl\n\n    {\n\n        BEGIN_INTERFACE\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( \n\n            IDebugHelperEx __RPC_FAR * This,\n\n            /* [in] */ REFIID riid,\n\n            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);\n\n        \n\n        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( \n\n            IDebugHelperEx __RPC_FAR * This);\n\n        \n\n        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( \n\n            IDebugHelperEx __RPC_FAR * This);\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CreatePropertyBrowserFromError )( \n\n            IDebugHelperEx __RPC_FAR * This,\n\n            /* [in] */ IActiveScriptError __RPC_FAR *pase,\n\n            /* [in] */ LPCOLESTR pszName,\n\n            /* [in] */ IDebugApplicationThread __RPC_FAR *pdat,\n\n            /* [in] */ IDebugFormatter __RPC_FAR *pdf,\n\n            /* [out] */ IDebugProperty __RPC_FAR *__RPC_FAR *ppdp);\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CreateWriteablePropertyBrowser )( \n\n            IDebugHelperEx __RPC_FAR * This,\n\n            /* [in] */ VARIANT __RPC_FAR *pvar,\n\n            /* [in] */ LPCOLESTR bstrName,\n\n            /* [in] */ IDebugApplicationThread __RPC_FAR *pdat,\n\n            /* [in] */ IDebugFormatter __RPC_FAR *pdf,\n\n            /* [in] */ IDebugSetValueCallback __RPC_FAR *pdsvcb,\n\n            /* [out] */ IDebugProperty __RPC_FAR *__RPC_FAR *ppdob);\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CreatePropertyBrowserFromCodeContext )( \n\n            IDebugHelperEx __RPC_FAR * This,\n\n            /* [in] */ IDebugCodeContext __RPC_FAR *pdcc,\n\n            /* [in] */ LPCOLESTR pszName,\n\n            /* [in] */ IDebugApplicationThread __RPC_FAR *pdat,\n\n            /* [out] */ IDebugProperty __RPC_FAR *__RPC_FAR *ppdp);\n\n        \n\n        END_INTERFACE\n\n    } IDebugHelperExVtbl;\n\n\n\n    interface IDebugHelperEx\n\n    {\n\n        CONST_VTBL struct IDebugHelperExVtbl __RPC_FAR *lpVtbl;\n\n    };\n\n\n\n    \n\n\n\n#ifdef COBJMACROS\n\n\n\n\n\n#define IDebugHelperEx_QueryInterface(This,riid,ppvObject)\t\\\n\n    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)\n\n\n\n#define IDebugHelperEx_AddRef(This)\t\\\n\n    (This)->lpVtbl -> AddRef(This)\n\n\n\n#define IDebugHelperEx_Release(This)\t\\\n\n    (This)->lpVtbl -> Release(This)\n\n\n\n\n\n#define IDebugHelperEx_CreatePropertyBrowserFromError(This,pase,pszName,pdat,pdf,ppdp)\t\\\n\n    (This)->lpVtbl -> CreatePropertyBrowserFromError(This,pase,pszName,pdat,pdf,ppdp)\n\n\n\n#define IDebugHelperEx_CreateWriteablePropertyBrowser(This,pvar,bstrName,pdat,pdf,pdsvcb,ppdob)\t\\\n\n    (This)->lpVtbl -> CreateWriteablePropertyBrowser(This,pvar,bstrName,pdat,pdf,pdsvcb,ppdob)\n\n\n\n#define IDebugHelperEx_CreatePropertyBrowserFromCodeContext(This,pdcc,pszName,pdat,ppdp)\t\\\n\n    (This)->lpVtbl -> CreatePropertyBrowserFromCodeContext(This,pdcc,pszName,pdat,ppdp)\n\n\n\n#endif /* COBJMACROS */\n\n\n\n\n\n#endif \t/* C style interface */\n\n\n\n\n\n\n\nHRESULT STDMETHODCALLTYPE IDebugHelperEx_CreatePropertyBrowserFromError_Proxy( \n\n    IDebugHelperEx __RPC_FAR * This,\n\n    /* [in] */ IActiveScriptError __RPC_FAR *pase,\n\n    /* [in] */ LPCOLESTR pszName,\n\n    /* [in] */ IDebugApplicationThread __RPC_FAR *pdat,\n\n    /* [in] */ IDebugFormatter __RPC_FAR *pdf,\n\n    /* [out] */ IDebugProperty __RPC_FAR *__RPC_FAR *ppdp);\n\n\n\n\n\nvoid __RPC_STUB IDebugHelperEx_CreatePropertyBrowserFromError_Stub(\n\n    IRpcStubBuffer *This,\n\n    IRpcChannelBuffer *_pRpcChannelBuffer,\n\n    PRPC_MESSAGE _pRpcMessage,\n\n    DWORD *_pdwStubPhase);\n\n\n\n\n\nHRESULT STDMETHODCALLTYPE IDebugHelperEx_CreateWriteablePropertyBrowser_Proxy( \n\n    IDebugHelperEx __RPC_FAR * This,\n\n    /* [in] */ VARIANT __RPC_FAR *pvar,\n\n    /* [in] */ LPCOLESTR bstrName,\n\n    /* [in] */ IDebugApplicationThread __RPC_FAR *pdat,\n\n    /* [in] */ IDebugFormatter __RPC_FAR *pdf,\n\n    /* [in] */ IDebugSetValueCallback __RPC_FAR *pdsvcb,\n\n    /* [out] */ IDebugProperty __RPC_FAR *__RPC_FAR *ppdob);\n\n\n\n\n\nvoid __RPC_STUB IDebugHelperEx_CreateWriteablePropertyBrowser_Stub(\n\n    IRpcStubBuffer *This,\n\n    IRpcChannelBuffer *_pRpcChannelBuffer,\n\n    PRPC_MESSAGE _pRpcMessage,\n\n    DWORD *_pdwStubPhase);\n\n\n\n\n\nHRESULT STDMETHODCALLTYPE IDebugHelperEx_CreatePropertyBrowserFromCodeContext_Proxy( \n\n    IDebugHelperEx __RPC_FAR * This,\n\n    /* [in] */ IDebugCodeContext __RPC_FAR *pdcc,\n\n    /* [in] */ LPCOLESTR pszName,\n\n    /* [in] */ IDebugApplicationThread __RPC_FAR *pdat,\n\n    /* [out] */ IDebugProperty __RPC_FAR *__RPC_FAR *ppdp);\n\n\n\n\n\nvoid __RPC_STUB IDebugHelperEx_CreatePropertyBrowserFromCodeContext_Stub(\n\n    IRpcStubBuffer *This,\n\n    IRpcChannelBuffer *_pRpcChannelBuffer,\n\n    PRPC_MESSAGE _pRpcMessage,\n\n    DWORD *_pdwStubPhase);\n\n\n\n\n\n\n\n#endif \t/* __IDebugHelperEx_INTERFACE_DEFINED__ */\n\n\n\n\n\n#ifndef __IDebugSetValueCallback_INTERFACE_DEFINED__\n\n#define __IDebugSetValueCallback_INTERFACE_DEFINED__\n\n\n\n/****************************************\n\n * Generated header for interface: IDebugSetValueCallback\n\n * at Fri Sep 18 16:27:35 1998\n\n * using MIDL 3.01.75\n\n ****************************************/\n\n/* [local][unique][helpstring][uuid][object] */ \n\n\n\n\n\n\n\nEXTERN_C const IID IID_IDebugSetValueCallback;\n\n\n\n#if defined(__cplusplus) && !defined(CINTERFACE)\n\n    \n\n    interface DECLSPEC_UUID(\"51973C06-CB0C-11d0-B5C9-00A0244A0E7A\")\n\n    IDebugSetValueCallback : public IUnknown\n\n    {\n\n    public:\n\n        virtual HRESULT STDMETHODCALLTYPE SetValue( \n\n            /* [in] */ VARIANT __RPC_FAR *pvarNode,\n\n            /* [in] */ DISPID dispid,\n\n            /* [in] */ ULONG cIndices,\n\n            /* [size_is][in] */ LONG __RPC_FAR *rgIndices,\n\n            /* [in] */ LPCOLESTR pszValue,\n\n            /* [in] */ UINT nRadix,\n\n            /* [out] */ BSTR __RPC_FAR *pbstrError) = 0;\n\n        \n\n    };\n\n    \n\n#else \t/* C style interface */\n\n\n\n    typedef struct IDebugSetValueCallbackVtbl\n\n    {\n\n        BEGIN_INTERFACE\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( \n\n            IDebugSetValueCallback __RPC_FAR * This,\n\n            /* [in] */ REFIID riid,\n\n            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);\n\n        \n\n        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( \n\n            IDebugSetValueCallback __RPC_FAR * This);\n\n        \n\n        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( \n\n            IDebugSetValueCallback __RPC_FAR * This);\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetValue )( \n\n            IDebugSetValueCallback __RPC_FAR * This,\n\n            /* [in] */ VARIANT __RPC_FAR *pvarNode,\n\n            /* [in] */ DISPID dispid,\n\n            /* [in] */ ULONG cIndices,\n\n            /* [size_is][in] */ LONG __RPC_FAR *rgIndices,\n\n            /* [in] */ LPCOLESTR pszValue,\n\n            /* [in] */ UINT nRadix,\n\n            /* [out] */ BSTR __RPC_FAR *pbstrError);\n\n        \n\n        END_INTERFACE\n\n    } IDebugSetValueCallbackVtbl;\n\n\n\n    interface IDebugSetValueCallback\n\n    {\n\n        CONST_VTBL struct IDebugSetValueCallbackVtbl __RPC_FAR *lpVtbl;\n\n    };\n\n\n\n    \n\n\n\n#ifdef COBJMACROS\n\n\n\n\n\n#define IDebugSetValueCallback_QueryInterface(This,riid,ppvObject)\t\\\n\n    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)\n\n\n\n#define IDebugSetValueCallback_AddRef(This)\t\\\n\n    (This)->lpVtbl -> AddRef(This)\n\n\n\n#define IDebugSetValueCallback_Release(This)\t\\\n\n    (This)->lpVtbl -> Release(This)\n\n\n\n\n\n#define IDebugSetValueCallback_SetValue(This,pvarNode,dispid,cIndices,rgIndices,pszValue,nRadix,pbstrError)\t\\\n\n    (This)->lpVtbl -> SetValue(This,pvarNode,dispid,cIndices,rgIndices,pszValue,nRadix,pbstrError)\n\n\n\n#endif /* COBJMACROS */\n\n\n\n\n\n#endif \t/* C style interface */\n\n\n\n\n\n\n\nHRESULT STDMETHODCALLTYPE IDebugSetValueCallback_SetValue_Proxy( \n\n    IDebugSetValueCallback __RPC_FAR * This,\n\n    /* [in] */ VARIANT __RPC_FAR *pvarNode,\n\n    /* [in] */ DISPID dispid,\n\n    /* [in] */ ULONG cIndices,\n\n    /* [size_is][in] */ LONG __RPC_FAR *rgIndices,\n\n    /* [in] */ LPCOLESTR pszValue,\n\n    /* [in] */ UINT nRadix,\n\n    /* [out] */ BSTR __RPC_FAR *pbstrError);\n\n\n\n\n\nvoid __RPC_STUB IDebugSetValueCallback_SetValue_Stub(\n\n    IRpcStubBuffer *This,\n\n    IRpcChannelBuffer *_pRpcChannelBuffer,\n\n    PRPC_MESSAGE _pRpcMessage,\n\n    DWORD *_pdwStubPhase);\n\n\n\n\n\n\n\n#endif \t/* __IDebugSetValueCallback_INTERFACE_DEFINED__ */\n\n\n\n\n\n#ifndef __ISetNextStatement_INTERFACE_DEFINED__\n\n#define __ISetNextStatement_INTERFACE_DEFINED__\n\n\n\n/****************************************\n\n * Generated header for interface: ISetNextStatement\n\n * at Fri Sep 18 16:27:35 1998\n\n * using MIDL 3.01.75\n\n ****************************************/\n\n/* [unique][helpstring][uuid][object] */ \n\n\n\n\n\n\n\nEXTERN_C const IID IID_ISetNextStatement;\n\n\n\n#if defined(__cplusplus) && !defined(CINTERFACE)\n\n    \n\n    interface DECLSPEC_UUID(\"51973C03-CB0C-11d0-B5C9-00A0244A0E7A\")\n\n    ISetNextStatement : public IUnknown\n\n    {\n\n    public:\n\n        virtual HRESULT STDMETHODCALLTYPE CanSetNextStatement( \n\n            /* [in] */ IDebugStackFrame __RPC_FAR *pStackFrame,\n\n            /* [in] */ IDebugCodeContext __RPC_FAR *pCodeContext) = 0;\n\n        \n\n        virtual HRESULT STDMETHODCALLTYPE SetNextStatement( \n\n            /* [in] */ IDebugStackFrame __RPC_FAR *pStackFrame,\n\n            /* [in] */ IDebugCodeContext __RPC_FAR *pCodeContext) = 0;\n\n        \n\n    };\n\n    \n\n#else \t/* C style interface */\n\n\n\n    typedef struct ISetNextStatementVtbl\n\n    {\n\n        BEGIN_INTERFACE\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( \n\n            ISetNextStatement __RPC_FAR * This,\n\n            /* [in] */ REFIID riid,\n\n            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);\n\n        \n\n        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( \n\n            ISetNextStatement __RPC_FAR * This);\n\n        \n\n        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( \n\n            ISetNextStatement __RPC_FAR * This);\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CanSetNextStatement )( \n\n            ISetNextStatement __RPC_FAR * This,\n\n            /* [in] */ IDebugStackFrame __RPC_FAR *pStackFrame,\n\n            /* [in] */ IDebugCodeContext __RPC_FAR *pCodeContext);\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetNextStatement )( \n\n            ISetNextStatement __RPC_FAR * This,\n\n            /* [in] */ IDebugStackFrame __RPC_FAR *pStackFrame,\n\n            /* [in] */ IDebugCodeContext __RPC_FAR *pCodeContext);\n\n        \n\n        END_INTERFACE\n\n    } ISetNextStatementVtbl;\n\n\n\n    interface ISetNextStatement\n\n    {\n\n        CONST_VTBL struct ISetNextStatementVtbl __RPC_FAR *lpVtbl;\n\n    };\n\n\n\n    \n\n\n\n#ifdef COBJMACROS\n\n\n\n\n\n#define ISetNextStatement_QueryInterface(This,riid,ppvObject)\t\\\n\n    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)\n\n\n\n#define ISetNextStatement_AddRef(This)\t\\\n\n    (This)->lpVtbl -> AddRef(This)\n\n\n\n#define ISetNextStatement_Release(This)\t\\\n\n    (This)->lpVtbl -> Release(This)\n\n\n\n\n\n#define ISetNextStatement_CanSetNextStatement(This,pStackFrame,pCodeContext)\t\\\n\n    (This)->lpVtbl -> CanSetNextStatement(This,pStackFrame,pCodeContext)\n\n\n\n#define ISetNextStatement_SetNextStatement(This,pStackFrame,pCodeContext)\t\\\n\n    (This)->lpVtbl -> SetNextStatement(This,pStackFrame,pCodeContext)\n\n\n\n#endif /* COBJMACROS */\n\n\n\n\n\n#endif \t/* C style interface */\n\n\n\n\n\n\n\nHRESULT STDMETHODCALLTYPE ISetNextStatement_CanSetNextStatement_Proxy( \n\n    ISetNextStatement __RPC_FAR * This,\n\n    /* [in] */ IDebugStackFrame __RPC_FAR *pStackFrame,\n\n    /* [in] */ IDebugCodeContext __RPC_FAR *pCodeContext);\n\n\n\n\n\nvoid __RPC_STUB ISetNextStatement_CanSetNextStatement_Stub(\n\n    IRpcStubBuffer *This,\n\n    IRpcChannelBuffer *_pRpcChannelBuffer,\n\n    PRPC_MESSAGE _pRpcMessage,\n\n    DWORD *_pdwStubPhase);\n\n\n\n\n\nHRESULT STDMETHODCALLTYPE ISetNextStatement_SetNextStatement_Proxy( \n\n    ISetNextStatement __RPC_FAR * This,\n\n    /* [in] */ IDebugStackFrame __RPC_FAR *pStackFrame,\n\n    /* [in] */ IDebugCodeContext __RPC_FAR *pCodeContext);\n\n\n\n\n\nvoid __RPC_STUB ISetNextStatement_SetNextStatement_Stub(\n\n    IRpcStubBuffer *This,\n\n    IRpcChannelBuffer *_pRpcChannelBuffer,\n\n    PRPC_MESSAGE _pRpcMessage,\n\n    DWORD *_pdwStubPhase);\n\n\n\n\n\n\n\n#endif \t/* __ISetNextStatement_INTERFACE_DEFINED__ */\n\n\n\n\n\n#ifndef __IDebugSessionProviderEx_INTERFACE_DEFINED__\n\n#define __IDebugSessionProviderEx_INTERFACE_DEFINED__\n\n\n\n/****************************************\n\n * Generated header for interface: IDebugSessionProviderEx\n\n * at Fri Sep 18 16:27:35 1998\n\n * using MIDL 3.01.75\n\n ****************************************/\n\n/* [unique][helpstring][uuid][object] */ \n\n\n\n\n\n\n\nEXTERN_C const IID IID_IDebugSessionProviderEx;\n\n\n\n#if defined(__cplusplus) && !defined(CINTERFACE)\n\n    \n\n    interface DECLSPEC_UUID(\"51973C09-CB0C-11d0-B5C9-00A0244A0E7A\")\n\n    IDebugSessionProviderEx : public IUnknown\n\n    {\n\n    public:\n\n        virtual HRESULT STDMETHODCALLTYPE StartDebugSession( \n\n            /* [in] */ IRemoteDebugApplication __RPC_FAR *pda,\n\n            /* [in] */ BOOL fQuery) = 0;\n\n        \n\n        virtual HRESULT STDMETHODCALLTYPE CanJITDebug( \n\n            /* [in] */ DWORD pid) = 0;\n\n        \n\n    };\n\n    \n\n#else \t/* C style interface */\n\n\n\n    typedef struct IDebugSessionProviderExVtbl\n\n    {\n\n        BEGIN_INTERFACE\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( \n\n            IDebugSessionProviderEx __RPC_FAR * This,\n\n            /* [in] */ REFIID riid,\n\n            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);\n\n        \n\n        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( \n\n            IDebugSessionProviderEx __RPC_FAR * This);\n\n        \n\n        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( \n\n            IDebugSessionProviderEx __RPC_FAR * This);\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *StartDebugSession )( \n\n            IDebugSessionProviderEx __RPC_FAR * This,\n\n            /* [in] */ IRemoteDebugApplication __RPC_FAR *pda,\n\n            /* [in] */ BOOL fQuery);\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CanJITDebug )( \n\n            IDebugSessionProviderEx __RPC_FAR * This,\n\n            /* [in] */ DWORD pid);\n\n        \n\n        END_INTERFACE\n\n    } IDebugSessionProviderExVtbl;\n\n\n\n    interface IDebugSessionProviderEx\n\n    {\n\n        CONST_VTBL struct IDebugSessionProviderExVtbl __RPC_FAR *lpVtbl;\n\n    };\n\n\n\n    \n\n\n\n#ifdef COBJMACROS\n\n\n\n\n\n#define IDebugSessionProviderEx_QueryInterface(This,riid,ppvObject)\t\\\n\n    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)\n\n\n\n#define IDebugSessionProviderEx_AddRef(This)\t\\\n\n    (This)->lpVtbl -> AddRef(This)\n\n\n\n#define IDebugSessionProviderEx_Release(This)\t\\\n\n    (This)->lpVtbl -> Release(This)\n\n\n\n\n\n#define IDebugSessionProviderEx_StartDebugSession(This,pda,fQuery)\t\\\n\n    (This)->lpVtbl -> StartDebugSession(This,pda,fQuery)\n\n\n\n#define IDebugSessionProviderEx_CanJITDebug(This,pid)\t\\\n\n    (This)->lpVtbl -> CanJITDebug(This,pid)\n\n\n\n#endif /* COBJMACROS */\n\n\n\n\n\n#endif \t/* C style interface */\n\n\n\n\n\n\n\nHRESULT STDMETHODCALLTYPE IDebugSessionProviderEx_StartDebugSession_Proxy( \n\n    IDebugSessionProviderEx __RPC_FAR * This,\n\n    /* [in] */ IRemoteDebugApplication __RPC_FAR *pda,\n\n    /* [in] */ BOOL fQuery);\n\n\n\n\n\nvoid __RPC_STUB IDebugSessionProviderEx_StartDebugSession_Stub(\n\n    IRpcStubBuffer *This,\n\n    IRpcChannelBuffer *_pRpcChannelBuffer,\n\n    PRPC_MESSAGE _pRpcMessage,\n\n    DWORD *_pdwStubPhase);\n\n\n\n\n\nHRESULT STDMETHODCALLTYPE IDebugSessionProviderEx_CanJITDebug_Proxy( \n\n    IDebugSessionProviderEx __RPC_FAR * This,\n\n    /* [in] */ DWORD pid);\n\n\n\n\n\nvoid __RPC_STUB IDebugSessionProviderEx_CanJITDebug_Stub(\n\n    IRpcStubBuffer *This,\n\n    IRpcChannelBuffer *_pRpcChannelBuffer,\n\n    PRPC_MESSAGE _pRpcMessage,\n\n    DWORD *_pdwStubPhase);\n\n\n\n\n\n\n\n#endif \t/* __IDebugSessionProviderEx_INTERFACE_DEFINED__ */\n\n\n\n\n\n/* Additional Prototypes for ALL interfaces */\n\n\n\nunsigned long             __RPC_USER  BSTR_UserSize(     unsigned long __RPC_FAR *, unsigned long            , BSTR __RPC_FAR * ); \n\nunsigned char __RPC_FAR * __RPC_USER  BSTR_UserMarshal(  unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, BSTR __RPC_FAR * ); \n\nunsigned char __RPC_FAR * __RPC_USER  BSTR_UserUnmarshal(unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, BSTR __RPC_FAR * ); \n\nvoid                      __RPC_USER  BSTR_UserFree(     unsigned long __RPC_FAR *, BSTR __RPC_FAR * ); \n\n\n\n/* end of Additional Prototypes */\n\n\n\n#ifdef __cplusplus\n\n}\n\n#endif\n\n\n\n#endif\n\n#pragma option pop /*P_O_Pop*/",
    "assembly": ".file\t\"143.c\"\n\t.text\n\t.ident\t\"GCC: (MinGW-W64 x86_64-ucrt-posix-seh, built by Brecht Sanders, r8) 13.2.0\"",
    "generation_time": 11.486199855804443,
    "tokens_generated": 512,
    "metrics": {
      "length_ratio": 0.03073256079316378,
      "line_ratio": 0.0036600244001626678,
      "token_overlap": 0.004424778761061947,
      "token_precision": 0.10526315789473684,
      "keyword_coverage": 0.0,
      "keyword_match_ratio": 0.0,
      "brace_ratio": 0.02,
      "semicolon_ratio": 0.04242424242424243
    }
  },
  {
    "filename": "151",
    "optimization": "Ofast",
    "generated_c": ".fileRGB(16 bytes): ((A4))[1] [11.3.5.26]) .size([+7], 0.75; 8.10.9.13]) .size([+14], 1.25; 16.6.33]) .size([+15], 2.35; 16.6.33]) .size([+16]);",
    "reference_c": "/**\n\n * Copyright (c) 2017 - 2020, Nordic Semiconductor ASA\n\n *\n\n * All rights reserved.\n\n *\n\n * Redistribution and use in source and binary forms, with or without modification,\n\n * are permitted provided that the following conditions are met:\n\n *\n\n * 1. Redistributions of source code must retain the above copyright notice, this\n\n *    list of conditions and the following disclaimer.\n\n *\n\n * 2. Redistributions in binary form, except as embedded into a Nordic\n\n *    Semiconductor ASA integrated circuit in a product or a software update for\n\n *    such product, must reproduce the above copyright notice, this list of\n\n *    conditions and the following disclaimer in the documentation and/or other\n\n *    materials provided with the distribution.\n\n *\n\n * 3. Neither the name of Nordic Semiconductor ASA nor the names of its\n\n *    contributors may be used to endorse or promote products derived from this\n\n *    software without specific prior written permission.\n\n *\n\n * 4. This software, with or without modification, must only be used with a\n\n *    Nordic Semiconductor ASA integrated circuit.\n\n *\n\n * 5. Any software provided in binary form under this license must not be reverse\n\n *    engineered, decompiled, modified and/or disassembled.\n\n *\n\n * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA \"AS IS\" AND ANY EXPRESS\n\n * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n\n * OF MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\n * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE\n\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE\n\n * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n\n * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n\n * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n *\n\n */\n\n\n\n\n\n\n\n#ifndef SDK_CONFIG_H\n\n#define SDK_CONFIG_H\n\n// <<< Use Configuration Wizard in Context Menu >>>\\n\n\n#ifdef USE_APP_CONFIG\n\n#include \"app_config.h\"\n\n#endif\n\n// <h> Application \n\n\n\n//==========================================================\n\n// <o> APP_SHUTDOWN_HANDLER_PRIORITY - Application shutdown observer priority. \n\n#ifndef APP_SHUTDOWN_HANDLER_PRIORITY\n\n#define APP_SHUTDOWN_HANDLER_PRIORITY 1\n\n#endif\n\n\n\n// <o> NRF_BLE_GQ_QUEUE_SIZE - Queue size for BLE GATT Queue module. \n\n#ifndef NRF_BLE_GQ_QUEUE_SIZE\n\n#define NRF_BLE_GQ_QUEUE_SIZE 4\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> Board Support \n\n\n\n//==========================================================\n\n// <q> BSP_BTN_BLE_ENABLED  - bsp_btn_ble - Button Control for BLE\n\n \n\n\n\n#ifndef BSP_BTN_BLE_ENABLED\n\n#define BSP_BTN_BLE_ENABLED 1\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> nRF_BLE \n\n\n\n//==========================================================\n\n// <q> BLE_ADVERTISING_ENABLED  - ble_advertising - Advertising module\n\n \n\n\n\n#ifndef BLE_ADVERTISING_ENABLED\n\n#define BLE_ADVERTISING_ENABLED 0\n\n#endif\n\n\n\n// <q> BLE_DB_DISCOVERY_ENABLED  - ble_db_discovery - Database discovery module\n\n \n\n\n\n#ifndef BLE_DB_DISCOVERY_ENABLED\n\n#define BLE_DB_DISCOVERY_ENABLED 1\n\n#endif\n\n\n\n// <e> BLE_DTM_ENABLED - ble_dtm - Module for testing RF/PHY using DTM commands\n\n//==========================================================\n\n#ifndef BLE_DTM_ENABLED\n\n#define BLE_DTM_ENABLED 0\n\n#endif\n\n// <o> NRF_RADIO_ANTENNA_PIN_1 - Antenna 1 GPIO pin \n\n#ifndef NRF_RADIO_ANTENNA_PIN_1\n\n#define NRF_RADIO_ANTENNA_PIN_1 21\n\n#endif\n\n\n\n// <o> NRF_RADIO_ANTENNA_PIN_2 - Antenna 2 GPIO pin \n\n#ifndef NRF_RADIO_ANTENNA_PIN_2\n\n#define NRF_RADIO_ANTENNA_PIN_2 23\n\n#endif\n\n\n\n// <o> NRF_RADIO_ANTENNA_PIN_3 - Antenna 3 GPIO pin \n\n#ifndef NRF_RADIO_ANTENNA_PIN_3\n\n#define NRF_RADIO_ANTENNA_PIN_3 26\n\n#endif\n\n\n\n// <o> NRF_RADIO_ANTENNA_PIN_4 - Antenna 4 GPIO pin \n\n#ifndef NRF_RADIO_ANTENNA_PIN_4\n\n#define NRF_RADIO_ANTENNA_PIN_4 27\n\n#endif\n\n\n\n// <o> NRF_RADIO_ANTENNA_PIN_5 - Antenna 5 GPIO pin \n\n#ifndef NRF_RADIO_ANTENNA_PIN_5\n\n#define NRF_RADIO_ANTENNA_PIN_5 28\n\n#endif\n\n\n\n// <o> NRF_RADIO_ANTENNA_PIN_6 - Antenna 6 GPIO pin \n\n#ifndef NRF_RADIO_ANTENNA_PIN_6\n\n#define NRF_RADIO_ANTENNA_PIN_6 29\n\n#endif\n\n\n\n// <o> NRF_RADIO_ANTENNA_PIN_7 - Antenna 7 GPIO pin \n\n#ifndef NRF_RADIO_ANTENNA_PIN_7\n\n#define NRF_RADIO_ANTENNA_PIN_7 30\n\n#endif\n\n\n\n// <o> NRF_RADIO_ANTENNA_PIN_8 - Antenna 8 GPIO pin \n\n#ifndef NRF_RADIO_ANTENNA_PIN_8\n\n#define NRF_RADIO_ANTENNA_PIN_8 31\n\n#endif\n\n\n\n// <o> NRF_RADIO_ANTENNA_COUNT  \n\n#ifndef NRF_RADIO_ANTENNA_COUNT\n\n#define NRF_RADIO_ANTENNA_COUNT 12\n\n#endif\n\n\n\n// </e>\n\n\n\n// <q> BLE_RACP_ENABLED  - ble_racp - Record Access Control Point library\n\n \n\n\n\n#ifndef BLE_RACP_ENABLED\n\n#define BLE_RACP_ENABLED 0\n\n#endif\n\n\n\n// <q> NRF_BLE_GATT_ENABLED  - nrf_ble_gatt - GATT module\n\n \n\n\n\n#ifndef NRF_BLE_GATT_ENABLED\n\n#define NRF_BLE_GATT_ENABLED 1\n\n#endif\n\n\n\n// <e> NRF_BLE_GQ_ENABLED - nrf_ble_gq - BLE GATT Queue Module\n\n//==========================================================\n\n#ifndef NRF_BLE_GQ_ENABLED\n\n#define NRF_BLE_GQ_ENABLED 1\n\n#endif\n\n// <o> NRF_BLE_GQ_DATAPOOL_ELEMENT_SIZE - Default size of a single element in the pool of memory objects. \n\n#ifndef NRF_BLE_GQ_DATAPOOL_ELEMENT_SIZE\n\n#define NRF_BLE_GQ_DATAPOOL_ELEMENT_SIZE 20\n\n#endif\n\n\n\n// <o> NRF_BLE_GQ_DATAPOOL_ELEMENT_COUNT - Default number of elements in the pool of memory objects. \n\n#ifndef NRF_BLE_GQ_DATAPOOL_ELEMENT_COUNT\n\n#define NRF_BLE_GQ_DATAPOOL_ELEMENT_COUNT 8\n\n#endif\n\n\n\n// <o> NRF_BLE_GQ_GATTC_WRITE_MAX_DATA_LEN - Maximal size of the data inside GATTC write request (in bytes). \n\n#ifndef NRF_BLE_GQ_GATTC_WRITE_MAX_DATA_LEN\n\n#define NRF_BLE_GQ_GATTC_WRITE_MAX_DATA_LEN 16\n\n#endif\n\n\n\n// <o> NRF_BLE_GQ_GATTS_HVX_MAX_DATA_LEN - Maximal size of the data inside GATTC notification or indication request (in bytes). \n\n#ifndef NRF_BLE_GQ_GATTS_HVX_MAX_DATA_LEN\n\n#define NRF_BLE_GQ_GATTS_HVX_MAX_DATA_LEN 16\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_BLE_QWR_ENABLED - nrf_ble_qwr - Queued writes support module (prepare/execute write)\n\n//==========================================================\n\n#ifndef NRF_BLE_QWR_ENABLED\n\n#define NRF_BLE_QWR_ENABLED 0\n\n#endif\n\n// <o> NRF_BLE_QWR_MAX_ATTR - Maximum number of attribute handles that can be registered. This number must be adjusted according to the number of attributes for which Queued Writes will be enabled. If it is zero, the module will reject all Queued Write requests. \n\n#ifndef NRF_BLE_QWR_MAX_ATTR\n\n#define NRF_BLE_QWR_MAX_ATTR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_BLE_SCAN_ENABLED - nrf_ble_scan - Scanning Module\n\n//==========================================================\n\n#ifndef NRF_BLE_SCAN_ENABLED\n\n#define NRF_BLE_SCAN_ENABLED 1\n\n#endif\n\n// <o> NRF_BLE_SCAN_BUFFER - Data length for an advertising set. \n\n#ifndef NRF_BLE_SCAN_BUFFER\n\n#define NRF_BLE_SCAN_BUFFER 31\n\n#endif\n\n\n\n// <o> NRF_BLE_SCAN_NAME_MAX_LEN - Maximum size for the name to search in the advertisement report. \n\n#ifndef NRF_BLE_SCAN_NAME_MAX_LEN\n\n#define NRF_BLE_SCAN_NAME_MAX_LEN 32\n\n#endif\n\n\n\n// <o> NRF_BLE_SCAN_SHORT_NAME_MAX_LEN - Maximum size of the short name to search for in the advertisement report. \n\n#ifndef NRF_BLE_SCAN_SHORT_NAME_MAX_LEN\n\n#define NRF_BLE_SCAN_SHORT_NAME_MAX_LEN 32\n\n#endif\n\n\n\n// <o> NRF_BLE_SCAN_SCAN_INTERVAL - Scanning interval. Determines the scan interval in units of 0.625 millisecond. \n\n#ifndef NRF_BLE_SCAN_SCAN_INTERVAL\n\n#define NRF_BLE_SCAN_SCAN_INTERVAL 160\n\n#endif\n\n\n\n// <o> NRF_BLE_SCAN_SCAN_DURATION - Duration of a scanning session in units of 10 ms. Range: 0x0001 - 0xFFFF (10 ms to 10.9225 ms). If set to 0x0000, the scanning continues until it is explicitly disabled. \n\n#ifndef NRF_BLE_SCAN_SCAN_DURATION\n\n#define NRF_BLE_SCAN_SCAN_DURATION 0\n\n#endif\n\n\n\n// <o> NRF_BLE_SCAN_SCAN_WINDOW - Scanning window. Determines the scanning window in units of 0.625 millisecond. \n\n#ifndef NRF_BLE_SCAN_SCAN_WINDOW\n\n#define NRF_BLE_SCAN_SCAN_WINDOW 80\n\n#endif\n\n\n\n// <o> NRF_BLE_SCAN_MIN_CONNECTION_INTERVAL - Determines minimum connection interval in milliseconds. \n\n#ifndef NRF_BLE_SCAN_MIN_CONNECTION_INTERVAL\n\n#define NRF_BLE_SCAN_MIN_CONNECTION_INTERVAL 7.5\n\n#endif\n\n\n\n// <o> NRF_BLE_SCAN_MAX_CONNECTION_INTERVAL - Determines maximum connection interval in milliseconds. \n\n#ifndef NRF_BLE_SCAN_MAX_CONNECTION_INTERVAL\n\n#define NRF_BLE_SCAN_MAX_CONNECTION_INTERVAL 30\n\n#endif\n\n\n\n// <o> NRF_BLE_SCAN_SLAVE_LATENCY - Determines the slave latency in counts of connection events. \n\n#ifndef NRF_BLE_SCAN_SLAVE_LATENCY\n\n#define NRF_BLE_SCAN_SLAVE_LATENCY 0\n\n#endif\n\n\n\n// <o> NRF_BLE_SCAN_SUPERVISION_TIMEOUT - Determines the supervision time-out in units of 10 millisecond. \n\n#ifndef NRF_BLE_SCAN_SUPERVISION_TIMEOUT\n\n#define NRF_BLE_SCAN_SUPERVISION_TIMEOUT 4000\n\n#endif\n\n\n\n// <o> NRF_BLE_SCAN_SCAN_PHY  - PHY to scan on.\n\n \n\n// <0=> BLE_GAP_PHY_AUTO \n\n// <1=> BLE_GAP_PHY_1MBPS \n\n// <2=> BLE_GAP_PHY_2MBPS \n\n// <4=> BLE_GAP_PHY_CODED \n\n// <255=> BLE_GAP_PHY_NOT_SET \n\n\n\n#ifndef NRF_BLE_SCAN_SCAN_PHY\n\n#define NRF_BLE_SCAN_SCAN_PHY 1\n\n#endif\n\n\n\n// <e> NRF_BLE_SCAN_FILTER_ENABLE - Enabling filters for the Scanning Module.\n\n//==========================================================\n\n#ifndef NRF_BLE_SCAN_FILTER_ENABLE\n\n#define NRF_BLE_SCAN_FILTER_ENABLE 1\n\n#endif\n\n// <o> NRF_BLE_SCAN_UUID_CNT - Number of filters for UUIDs. \n\n#ifndef NRF_BLE_SCAN_UUID_CNT\n\n#define NRF_BLE_SCAN_UUID_CNT 1\n\n#endif\n\n\n\n// <o> NRF_BLE_SCAN_NAME_CNT - Number of name filters. \n\n#ifndef NRF_BLE_SCAN_NAME_CNT\n\n#define NRF_BLE_SCAN_NAME_CNT 0\n\n#endif\n\n\n\n// <o> NRF_BLE_SCAN_SHORT_NAME_CNT - Number of short name filters. \n\n#ifndef NRF_BLE_SCAN_SHORT_NAME_CNT\n\n#define NRF_BLE_SCAN_SHORT_NAME_CNT 0\n\n#endif\n\n\n\n// <o> NRF_BLE_SCAN_ADDRESS_CNT - Number of address filters. \n\n#ifndef NRF_BLE_SCAN_ADDRESS_CNT\n\n#define NRF_BLE_SCAN_ADDRESS_CNT 0\n\n#endif\n\n\n\n// <o> NRF_BLE_SCAN_APPEARANCE_CNT - Number of appearance filters. \n\n#ifndef NRF_BLE_SCAN_APPEARANCE_CNT\n\n#define NRF_BLE_SCAN_APPEARANCE_CNT 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> PEER_MANAGER_ENABLED - peer_manager - Peer Manager\n\n//==========================================================\n\n#ifndef PEER_MANAGER_ENABLED\n\n#define PEER_MANAGER_ENABLED 0\n\n#endif\n\n// <o> PM_MAX_REGISTRANTS - Number of event handlers that can be registered. \n\n#ifndef PM_MAX_REGISTRANTS\n\n#define PM_MAX_REGISTRANTS 3\n\n#endif\n\n\n\n// <o> PM_FLASH_BUFFERS - Number of internal buffers for flash operations. \n\n// <i> Decrease this value to lower RAM usage.\n\n\n\n#ifndef PM_FLASH_BUFFERS\n\n#define PM_FLASH_BUFFERS 4\n\n#endif\n\n\n\n// <q> PM_CENTRAL_ENABLED  - Enable/disable central-specific Peer Manager functionality.\n\n \n\n\n\n// <i> Enable/disable central-specific Peer Manager functionality.\n\n\n\n#ifndef PM_CENTRAL_ENABLED\n\n#define PM_CENTRAL_ENABLED 1\n\n#endif\n\n\n\n// <q> PM_SERVICE_CHANGED_ENABLED  - Enable/disable the service changed management for GATT server in Peer Manager.\n\n \n\n\n\n// <i> If not using a GATT server, or using a server wihout a service changed characteristic,\n\n// <i> disable this to save code space.\n\n\n\n#ifndef PM_SERVICE_CHANGED_ENABLED\n\n#define PM_SERVICE_CHANGED_ENABLED 1\n\n#endif\n\n\n\n// <q> PM_PEER_RANKS_ENABLED  - Enable/disable the peer rank management in Peer Manager.\n\n \n\n\n\n// <i> Set this to false to save code space if not using the peer rank API.\n\n\n\n#ifndef PM_PEER_RANKS_ENABLED\n\n#define PM_PEER_RANKS_ENABLED 1\n\n#endif\n\n\n\n// <q> PM_LESC_ENABLED  - Enable/disable LESC support in Peer Manager.\n\n \n\n\n\n// <i> If set to true, you need to call nrf_ble_lesc_request_handler() in the main loop to respond to LESC-related BLE events. If LESC support is not required, set this to false to save code space.\n\n\n\n#ifndef PM_LESC_ENABLED\n\n#define PM_LESC_ENABLED 0\n\n#endif\n\n\n\n// <e> PM_RA_PROTECTION_ENABLED - Enable/disable protection against repeated pairing attempts in Peer Manager.\n\n//==========================================================\n\n#ifndef PM_RA_PROTECTION_ENABLED\n\n#define PM_RA_PROTECTION_ENABLED 0\n\n#endif\n\n// <o> PM_RA_PROTECTION_TRACKED_PEERS_NUM - Maximum number of peers whose authorization status can be tracked. \n\n#ifndef PM_RA_PROTECTION_TRACKED_PEERS_NUM\n\n#define PM_RA_PROTECTION_TRACKED_PEERS_NUM 8\n\n#endif\n\n\n\n// <o> PM_RA_PROTECTION_MIN_WAIT_INTERVAL - Minimum waiting interval (in ms) before a new pairing attempt can be initiated. \n\n#ifndef PM_RA_PROTECTION_MIN_WAIT_INTERVAL\n\n#define PM_RA_PROTECTION_MIN_WAIT_INTERVAL 4000\n\n#endif\n\n\n\n// <o> PM_RA_PROTECTION_MAX_WAIT_INTERVAL - Maximum waiting interval (in ms) before a new pairing attempt can be initiated. \n\n#ifndef PM_RA_PROTECTION_MAX_WAIT_INTERVAL\n\n#define PM_RA_PROTECTION_MAX_WAIT_INTERVAL 64000\n\n#endif\n\n\n\n// <o> PM_RA_PROTECTION_REWARD_PERIOD - Reward period (in ms). \n\n// <i> The waiting interval is gradually decreased when no new failed pairing attempts are made during reward period.\n\n\n\n#ifndef PM_RA_PROTECTION_REWARD_PERIOD\n\n#define PM_RA_PROTECTION_REWARD_PERIOD 10000\n\n#endif\n\n\n\n// </e>\n\n\n\n// <o> PM_HANDLER_SEC_DELAY_MS - Delay before starting security. \n\n// <i>  This might be necessary for interoperability reasons, especially as peripheral.\n\n\n\n#ifndef PM_HANDLER_SEC_DELAY_MS\n\n#define PM_HANDLER_SEC_DELAY_MS 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> nRF_BLE_Services \n\n\n\n//==========================================================\n\n// <q> BLE_ANCS_C_ENABLED  - ble_ancs_c - Apple Notification Service Client\n\n \n\n\n\n#ifndef BLE_ANCS_C_ENABLED\n\n#define BLE_ANCS_C_ENABLED 0\n\n#endif\n\n\n\n// <q> BLE_ANS_C_ENABLED  - ble_ans_c - Alert Notification Service Client\n\n \n\n\n\n#ifndef BLE_ANS_C_ENABLED\n\n#define BLE_ANS_C_ENABLED 0\n\n#endif\n\n\n\n// <q> BLE_BAS_C_ENABLED  - ble_bas_c - Battery Service Client\n\n \n\n\n\n#ifndef BLE_BAS_C_ENABLED\n\n#define BLE_BAS_C_ENABLED 0\n\n#endif\n\n\n\n// <e> BLE_BAS_ENABLED - ble_bas - Battery Service\n\n//==========================================================\n\n#ifndef BLE_BAS_ENABLED\n\n#define BLE_BAS_ENABLED 0\n\n#endif\n\n// <e> BLE_BAS_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef BLE_BAS_CONFIG_LOG_ENABLED\n\n#define BLE_BAS_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> BLE_BAS_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef BLE_BAS_CONFIG_LOG_LEVEL\n\n#define BLE_BAS_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> BLE_BAS_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef BLE_BAS_CONFIG_INFO_COLOR\n\n#define BLE_BAS_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> BLE_BAS_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef BLE_BAS_CONFIG_DEBUG_COLOR\n\n#define BLE_BAS_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <q> BLE_CSCS_ENABLED  - ble_cscs - Cycling Speed and Cadence Service\n\n \n\n\n\n#ifndef BLE_CSCS_ENABLED\n\n#define BLE_CSCS_ENABLED 0\n\n#endif\n\n\n\n// <q> BLE_CTS_C_ENABLED  - ble_cts_c - Current Time Service Client\n\n \n\n\n\n#ifndef BLE_CTS_C_ENABLED\n\n#define BLE_CTS_C_ENABLED 0\n\n#endif\n\n\n\n// <q> BLE_DIS_ENABLED  - ble_dis - Device Information Service\n\n \n\n\n\n#ifndef BLE_DIS_ENABLED\n\n#define BLE_DIS_ENABLED 0\n\n#endif\n\n\n\n// <q> BLE_GLS_ENABLED  - ble_gls - Glucose Service\n\n \n\n\n\n#ifndef BLE_GLS_ENABLED\n\n#define BLE_GLS_ENABLED 0\n\n#endif\n\n\n\n// <q> BLE_HIDS_ENABLED  - ble_hids - Human Interface Device Service\n\n \n\n\n\n#ifndef BLE_HIDS_ENABLED\n\n#define BLE_HIDS_ENABLED 0\n\n#endif\n\n\n\n// <q> BLE_HRS_C_ENABLED  - ble_hrs_c - Heart Rate Service Client\n\n \n\n\n\n#ifndef BLE_HRS_C_ENABLED\n\n#define BLE_HRS_C_ENABLED 0\n\n#endif\n\n\n\n// <q> BLE_HRS_ENABLED  - ble_hrs - Heart Rate Service\n\n \n\n\n\n#ifndef BLE_HRS_ENABLED\n\n#define BLE_HRS_ENABLED 0\n\n#endif\n\n\n\n// <q> BLE_HTS_ENABLED  - ble_hts - Health Thermometer Service\n\n \n\n\n\n#ifndef BLE_HTS_ENABLED\n\n#define BLE_HTS_ENABLED 0\n\n#endif\n\n\n\n// <q> BLE_IAS_C_ENABLED  - ble_ias_c - Immediate Alert Service Client\n\n \n\n\n\n#ifndef BLE_IAS_C_ENABLED\n\n#define BLE_IAS_C_ENABLED 0\n\n#endif\n\n\n\n// <e> BLE_IAS_ENABLED - ble_ias - Immediate Alert Service\n\n//==========================================================\n\n#ifndef BLE_IAS_ENABLED\n\n#define BLE_IAS_ENABLED 0\n\n#endif\n\n// <e> BLE_IAS_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef BLE_IAS_CONFIG_LOG_ENABLED\n\n#define BLE_IAS_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> BLE_IAS_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef BLE_IAS_CONFIG_LOG_LEVEL\n\n#define BLE_IAS_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> BLE_IAS_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef BLE_IAS_CONFIG_INFO_COLOR\n\n#define BLE_IAS_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> BLE_IAS_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef BLE_IAS_CONFIG_DEBUG_COLOR\n\n#define BLE_IAS_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <q> BLE_LBS_C_ENABLED  - ble_lbs_c - Nordic LED Button Service Client\n\n \n\n\n\n#ifndef BLE_LBS_C_ENABLED\n\n#define BLE_LBS_C_ENABLED 0\n\n#endif\n\n\n\n// <q> BLE_LBS_ENABLED  - ble_lbs - LED Button Service\n\n \n\n\n\n#ifndef BLE_LBS_ENABLED\n\n#define BLE_LBS_ENABLED 0\n\n#endif\n\n\n\n// <q> BLE_LLS_ENABLED  - ble_lls - Link Loss Service\n\n \n\n\n\n#ifndef BLE_LLS_ENABLED\n\n#define BLE_LLS_ENABLED 0\n\n#endif\n\n\n\n// <q> BLE_NUS_C_ENABLED  - ble_nus_c - Nordic UART Central Service\n\n \n\n\n\n#ifndef BLE_NUS_C_ENABLED\n\n#define BLE_NUS_C_ENABLED 1\n\n#endif\n\n\n\n// <e> BLE_NUS_ENABLED - ble_nus - Nordic UART Service\n\n//==========================================================\n\n#ifndef BLE_NUS_ENABLED\n\n#define BLE_NUS_ENABLED 0\n\n#endif\n\n// <e> BLE_NUS_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef BLE_NUS_CONFIG_LOG_ENABLED\n\n#define BLE_NUS_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> BLE_NUS_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef BLE_NUS_CONFIG_LOG_LEVEL\n\n#define BLE_NUS_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> BLE_NUS_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef BLE_NUS_CONFIG_INFO_COLOR\n\n#define BLE_NUS_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> BLE_NUS_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef BLE_NUS_CONFIG_DEBUG_COLOR\n\n#define BLE_NUS_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <q> BLE_RSCS_C_ENABLED  - ble_rscs_c - Running Speed and Cadence Client\n\n \n\n\n\n#ifndef BLE_RSCS_C_ENABLED\n\n#define BLE_RSCS_C_ENABLED 0\n\n#endif\n\n\n\n// <q> BLE_RSCS_ENABLED  - ble_rscs - Running Speed and Cadence Service\n\n \n\n\n\n#ifndef BLE_RSCS_ENABLED\n\n#define BLE_RSCS_ENABLED 0\n\n#endif\n\n\n\n// <q> BLE_TPS_ENABLED  - ble_tps - TX Power Service\n\n \n\n\n\n#ifndef BLE_TPS_ENABLED\n\n#define BLE_TPS_ENABLED 0\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> nRF_Core \n\n\n\n//==========================================================\n\n// <e> NRF_MPU_LIB_ENABLED - nrf_mpu_lib - Module for MPU\n\n//==========================================================\n\n#ifndef NRF_MPU_LIB_ENABLED\n\n#define NRF_MPU_LIB_ENABLED 0\n\n#endif\n\n// <q> NRF_MPU_LIB_CLI_CMDS  - Enable CLI commands specific to the module.\n\n \n\n\n\n#ifndef NRF_MPU_LIB_CLI_CMDS\n\n#define NRF_MPU_LIB_CLI_CMDS 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_STACK_GUARD_ENABLED - nrf_stack_guard - Stack guard\n\n//==========================================================\n\n#ifndef NRF_STACK_GUARD_ENABLED\n\n#define NRF_STACK_GUARD_ENABLED 0\n\n#endif\n\n// <o> NRF_STACK_GUARD_CONFIG_SIZE  - Size of the stack guard.\n\n \n\n// <5=> 32 bytes \n\n// <6=> 64 bytes \n\n// <7=> 128 bytes \n\n// <8=> 256 bytes \n\n// <9=> 512 bytes \n\n// <10=> 1024 bytes \n\n// <11=> 2048 bytes \n\n// <12=> 4096 bytes \n\n\n\n#ifndef NRF_STACK_GUARD_CONFIG_SIZE\n\n#define NRF_STACK_GUARD_CONFIG_SIZE 7\n\n#endif\n\n\n\n// </e>\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> nRF_Crypto \n\n\n\n//==========================================================\n\n// <e> NRF_CRYPTO_ENABLED - nrf_crypto - Cryptography library.\n\n//==========================================================\n\n#ifndef NRF_CRYPTO_ENABLED\n\n#define NRF_CRYPTO_ENABLED 1\n\n#endif\n\n// <o> NRF_CRYPTO_ALLOCATOR  - Memory allocator\n\n \n\n\n\n// <i> Choose memory allocator used by nrf_crypto. Default is alloca if possible or nrf_malloc otherwise. If 'User macros' are selected, the user has to create 'nrf_crypto_allocator.h' file that contains NRF_CRYPTO_ALLOC, NRF_CRYPTO_FREE, and NRF_CRYPTO_ALLOC_ON_STACK.\n\n// <0=> Default \n\n// <1=> User macros \n\n// <2=> On stack (alloca) \n\n// <3=> C dynamic memory (malloc) \n\n// <4=> SDK Memory Manager (nrf_malloc) \n\n\n\n#ifndef NRF_CRYPTO_ALLOCATOR\n\n#define NRF_CRYPTO_ALLOCATOR 0\n\n#endif\n\n\n\n// <e> NRF_CRYPTO_BACKEND_CC310_BL_ENABLED - Enable the ARM Cryptocell CC310 reduced backend.\n\n\n\n// <i> The CC310 hardware-accelerated cryptography backend with reduced functionality and footprint (only available on nRF52840).\n\n//==========================================================\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_BL_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_BL_ENABLED 0\n\n#endif\n\n// <q> NRF_CRYPTO_BACKEND_CC310_BL_ECC_SECP224R1_ENABLED  - Enable the secp224r1 elliptic curve support using CC310_BL.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_BL_ECC_SECP224R1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_BL_ECC_SECP224R1_ENABLED 0\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_BL_ECC_SECP256R1_ENABLED  - Enable the secp256r1 elliptic curve support using CC310_BL.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_BL_ECC_SECP256R1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_BL_ECC_SECP256R1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_BL_HASH_SHA256_ENABLED  - CC310_BL SHA-256 hash functionality.\n\n \n\n\n\n// <i> CC310_BL backend implementation for hardware-accelerated SHA-256.\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_BL_HASH_SHA256_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_BL_HASH_SHA256_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_BL_HASH_AUTOMATIC_RAM_BUFFER_ENABLED  - nrf_cc310_bl buffers to RAM before running hash operation\n\n \n\n\n\n// <i> Enabling this makes hashing of addresses in FLASH range possible. Size of buffer allocated for hashing is set by NRF_CRYPTO_BACKEND_CC310_BL_HASH_AUTOMATIC_RAM_BUFFER_SIZE\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_BL_HASH_AUTOMATIC_RAM_BUFFER_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_BL_HASH_AUTOMATIC_RAM_BUFFER_ENABLED 0\n\n#endif\n\n\n\n// <o> NRF_CRYPTO_BACKEND_CC310_BL_HASH_AUTOMATIC_RAM_BUFFER_SIZE - nrf_cc310_bl hash outputs digests in little endian \n\n// <i> Makes the nrf_cc310_bl hash functions output digests in little endian format. Only for use in nRF SDK DFU!\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_BL_HASH_AUTOMATIC_RAM_BUFFER_SIZE\n\n#define NRF_CRYPTO_BACKEND_CC310_BL_HASH_AUTOMATIC_RAM_BUFFER_SIZE 4096\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_BL_INTERRUPTS_ENABLED  - Enable Interrupts while support using CC310 bl.\n\n \n\n\n\n// <i> Select a library version compatible with the configuration. When interrupts are disable, a version named _noint must be used\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_BL_INTERRUPTS_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_BL_INTERRUPTS_ENABLED 1\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_CRYPTO_BACKEND_CC310_ENABLED - Enable the ARM Cryptocell CC310 backend.\n\n\n\n// <i> The CC310 hardware-accelerated cryptography backend (only available on nRF52840).\n\n//==========================================================\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_ENABLED 0\n\n#endif\n\n// <q> NRF_CRYPTO_BACKEND_CC310_AES_CBC_ENABLED  - Enable the AES CBC mode using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_AES_CBC_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_AES_CBC_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_AES_CTR_ENABLED  - Enable the AES CTR mode using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_AES_CTR_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_AES_CTR_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_AES_ECB_ENABLED  - Enable the AES ECB mode using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_AES_ECB_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_AES_ECB_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_AES_CBC_MAC_ENABLED  - Enable the AES CBC_MAC mode using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_AES_CBC_MAC_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_AES_CBC_MAC_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_AES_CMAC_ENABLED  - Enable the AES CMAC mode using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_AES_CMAC_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_AES_CMAC_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_AES_CCM_ENABLED  - Enable the AES CCM mode using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_AES_CCM_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_AES_CCM_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_AES_CCM_STAR_ENABLED  - Enable the AES CCM* mode using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_AES_CCM_STAR_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_AES_CCM_STAR_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_CHACHA_POLY_ENABLED  - Enable the CHACHA-POLY mode using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_CHACHA_POLY_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_CHACHA_POLY_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_ECC_SECP160R1_ENABLED  - Enable the secp160r1 elliptic curve support using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_ECC_SECP160R1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_ECC_SECP160R1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_ECC_SECP160R2_ENABLED  - Enable the secp160r2 elliptic curve support using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_ECC_SECP160R2_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_ECC_SECP160R2_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_ECC_SECP192R1_ENABLED  - Enable the secp192r1 elliptic curve support using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_ECC_SECP192R1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_ECC_SECP192R1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_ECC_SECP224R1_ENABLED  - Enable the secp224r1 elliptic curve support using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_ECC_SECP224R1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_ECC_SECP224R1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_ECC_SECP256R1_ENABLED  - Enable the secp256r1 elliptic curve support using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_ECC_SECP256R1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_ECC_SECP256R1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_ECC_SECP384R1_ENABLED  - Enable the secp384r1 elliptic curve support using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_ECC_SECP384R1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_ECC_SECP384R1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_ECC_SECP521R1_ENABLED  - Enable the secp521r1 elliptic curve support using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_ECC_SECP521R1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_ECC_SECP521R1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_ECC_SECP160K1_ENABLED  - Enable the secp160k1 elliptic curve support using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_ECC_SECP160K1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_ECC_SECP160K1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_ECC_SECP192K1_ENABLED  - Enable the secp192k1 elliptic curve support using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_ECC_SECP192K1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_ECC_SECP192K1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_ECC_SECP224K1_ENABLED  - Enable the secp224k1 elliptic curve support using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_ECC_SECP224K1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_ECC_SECP224K1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_ECC_SECP256K1_ENABLED  - Enable the secp256k1 elliptic curve support using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_ECC_SECP256K1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_ECC_SECP256K1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_ECC_CURVE25519_ENABLED  - Enable the Curve25519 curve support using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_ECC_CURVE25519_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_ECC_CURVE25519_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_ECC_ED25519_ENABLED  - Enable the Ed25519 curve support using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_ECC_ED25519_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_ECC_ED25519_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_HASH_SHA256_ENABLED  - CC310 SHA-256 hash functionality.\n\n \n\n\n\n// <i> CC310 backend implementation for hardware-accelerated SHA-256.\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_HASH_SHA256_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_HASH_SHA256_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_HASH_SHA512_ENABLED  - CC310 SHA-512 hash functionality\n\n \n\n\n\n// <i> CC310 backend implementation for SHA-512 (in software).\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_HASH_SHA512_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_HASH_SHA512_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_HMAC_SHA256_ENABLED  - CC310 HMAC using SHA-256\n\n \n\n\n\n// <i> CC310 backend implementation for HMAC using hardware-accelerated SHA-256.\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_HMAC_SHA256_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_HMAC_SHA256_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_HMAC_SHA512_ENABLED  - CC310 HMAC using SHA-512\n\n \n\n\n\n// <i> CC310 backend implementation for HMAC using SHA-512 (in software).\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_HMAC_SHA512_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_HMAC_SHA512_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_RNG_ENABLED  - Enable RNG support using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_RNG_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_RNG_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_INTERRUPTS_ENABLED  - Enable Interrupts while support using CC310.\n\n \n\n\n\n// <i> Select a library version compatible with the configuration. When interrupts are disable, a version named _noint must be used\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_INTERRUPTS_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_INTERRUPTS_ENABLED 1\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_CRYPTO_BACKEND_CIFRA_ENABLED - Enable the Cifra backend.\n\n//==========================================================\n\n#ifndef NRF_CRYPTO_BACKEND_CIFRA_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CIFRA_ENABLED 0\n\n#endif\n\n// <q> NRF_CRYPTO_BACKEND_CIFRA_AES_EAX_ENABLED  - Enable the AES EAX mode using Cifra.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CIFRA_AES_EAX_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CIFRA_AES_EAX_ENABLED 1\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_CRYPTO_BACKEND_MBEDTLS_ENABLED - Enable the mbed TLS backend.\n\n//==========================================================\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_ENABLED 0\n\n#endif\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_AES_CBC_ENABLED  - Enable the AES CBC mode mbed TLS.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_AES_CBC_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_AES_CBC_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_AES_CTR_ENABLED  - Enable the AES CTR mode using mbed TLS.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_AES_CTR_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_AES_CTR_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_AES_CFB_ENABLED  - Enable the AES CFB mode using mbed TLS.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_AES_CFB_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_AES_CFB_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_AES_ECB_ENABLED  - Enable the AES ECB mode using mbed TLS.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_AES_ECB_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_AES_ECB_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_AES_CBC_MAC_ENABLED  - Enable the AES CBC MAC mode using mbed TLS.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_AES_CBC_MAC_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_AES_CBC_MAC_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_AES_CMAC_ENABLED  - Enable the AES CMAC mode using mbed TLS.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_AES_CMAC_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_AES_CMAC_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_AES_CCM_ENABLED  - Enable the AES CCM mode using mbed TLS.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_AES_CCM_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_AES_CCM_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_AES_GCM_ENABLED  - Enable the AES GCM mode using mbed TLS.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_AES_GCM_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_AES_GCM_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP192R1_ENABLED  - Enable secp192r1 (NIST 192-bit) curve\n\n \n\n\n\n// <i> Enable this setting if you need secp192r1 (NIST 192-bit) support using MBEDTLS\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP192R1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP192R1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP224R1_ENABLED  - Enable secp224r1 (NIST 224-bit) curve\n\n \n\n\n\n// <i> Enable this setting if you need secp224r1 (NIST 224-bit) support using MBEDTLS\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP224R1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP224R1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP256R1_ENABLED  - Enable secp256r1 (NIST 256-bit) curve\n\n \n\n\n\n// <i> Enable this setting if you need secp256r1 (NIST 256-bit) support using MBEDTLS\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP256R1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP256R1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP384R1_ENABLED  - Enable secp384r1 (NIST 384-bit) curve\n\n \n\n\n\n// <i> Enable this setting if you need secp384r1 (NIST 384-bit) support using MBEDTLS\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP384R1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP384R1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP521R1_ENABLED  - Enable secp521r1 (NIST 521-bit) curve\n\n \n\n\n\n// <i> Enable this setting if you need secp521r1 (NIST 521-bit) support using MBEDTLS\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP521R1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP521R1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP192K1_ENABLED  - Enable secp192k1 (Koblitz 192-bit) curve\n\n \n\n\n\n// <i> Enable this setting if you need secp192k1 (Koblitz 192-bit) support using MBEDTLS\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP192K1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP192K1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP224K1_ENABLED  - Enable secp224k1 (Koblitz 224-bit) curve\n\n \n\n\n\n// <i> Enable this setting if you need secp224k1 (Koblitz 224-bit) support using MBEDTLS\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP224K1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP224K1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP256K1_ENABLED  - Enable secp256k1 (Koblitz 256-bit) curve\n\n \n\n\n\n// <i> Enable this setting if you need secp256k1 (Koblitz 256-bit) support using MBEDTLS\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP256K1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP256K1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_ECC_BP256R1_ENABLED  - Enable bp256r1 (Brainpool 256-bit) curve\n\n \n\n\n\n// <i> Enable this setting if you need bp256r1 (Brainpool 256-bit) support using MBEDTLS\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_ECC_BP256R1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_ECC_BP256R1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_ECC_BP384R1_ENABLED  - Enable bp384r1 (Brainpool 384-bit) curve\n\n \n\n\n\n// <i> Enable this setting if you need bp384r1 (Brainpool 384-bit) support using MBEDTLS\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_ECC_BP384R1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_ECC_BP384R1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_ECC_BP512R1_ENABLED  - Enable bp512r1 (Brainpool 512-bit) curve\n\n \n\n\n\n// <i> Enable this setting if you need bp512r1 (Brainpool 512-bit) support using MBEDTLS\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_ECC_BP512R1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_ECC_BP512R1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_ECC_CURVE25519_ENABLED  - Enable Curve25519 curve\n\n \n\n\n\n// <i> Enable this setting if you need Curve25519 support using MBEDTLS\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_ECC_CURVE25519_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_ECC_CURVE25519_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_HASH_SHA256_ENABLED  - Enable mbed TLS SHA-256 hash functionality.\n\n \n\n\n\n// <i> mbed TLS backend implementation for SHA-256.\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_HASH_SHA256_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_HASH_SHA256_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_HASH_SHA512_ENABLED  - Enable mbed TLS SHA-512 hash functionality.\n\n \n\n\n\n// <i> mbed TLS backend implementation for SHA-512.\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_HASH_SHA512_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_HASH_SHA512_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_HMAC_SHA256_ENABLED  - Enable mbed TLS HMAC using SHA-256.\n\n \n\n\n\n// <i> mbed TLS backend implementation for HMAC using SHA-256.\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_HMAC_SHA256_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_HMAC_SHA256_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_HMAC_SHA512_ENABLED  - Enable mbed TLS HMAC using SHA-512.\n\n \n\n\n\n// <i> mbed TLS backend implementation for HMAC using SHA-512.\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_HMAC_SHA512_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_HMAC_SHA512_ENABLED 1\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_CRYPTO_BACKEND_MICRO_ECC_ENABLED - Enable the micro-ecc backend.\n\n//==========================================================\n\n#ifndef NRF_CRYPTO_BACKEND_MICRO_ECC_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MICRO_ECC_ENABLED 0\n\n#endif\n\n// <q> NRF_CRYPTO_BACKEND_MICRO_ECC_ECC_SECP192R1_ENABLED  - Enable secp192r1 (NIST 192-bit) curve\n\n \n\n\n\n// <i> Enable this setting if you need secp192r1 (NIST 192-bit) support using micro-ecc\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MICRO_ECC_ECC_SECP192R1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MICRO_ECC_ECC_SECP192R1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MICRO_ECC_ECC_SECP224R1_ENABLED  - Enable secp224r1 (NIST 224-bit) curve\n\n \n\n\n\n// <i> Enable this setting if you need secp224r1 (NIST 224-bit) support using micro-ecc\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MICRO_ECC_ECC_SECP224R1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MICRO_ECC_ECC_SECP224R1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MICRO_ECC_ECC_SECP256R1_ENABLED  - Enable secp256r1 (NIST 256-bit) curve\n\n \n\n\n\n// <i> Enable this setting if you need secp256r1 (NIST 256-bit) support using micro-ecc\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MICRO_ECC_ECC_SECP256R1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MICRO_ECC_ECC_SECP256R1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MICRO_ECC_ECC_SECP256K1_ENABLED  - Enable secp256k1 (Koblitz 256-bit) curve\n\n \n\n\n\n// <i> Enable this setting if you need secp256k1 (Koblitz 256-bit) support using micro-ecc\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MICRO_ECC_ECC_SECP256K1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MICRO_ECC_ECC_SECP256K1_ENABLED 1\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_CRYPTO_BACKEND_NRF_HW_RNG_ENABLED - Enable the nRF HW RNG backend.\n\n\n\n// <i> The nRF HW backend provide access to RNG peripheral in nRF5x devices.\n\n//==========================================================\n\n#ifndef NRF_CRYPTO_BACKEND_NRF_HW_RNG_ENABLED\n\n#define NRF_CRYPTO_BACKEND_NRF_HW_RNG_ENABLED 0\n\n#endif\n\n// <q> NRF_CRYPTO_BACKEND_NRF_HW_RNG_MBEDTLS_CTR_DRBG_ENABLED  - Enable mbed TLS CTR-DRBG algorithm.\n\n \n\n\n\n// <i> Enable mbed TLS CTR-DRBG standardized by NIST (NIST SP 800-90A Rev. 1). The nRF HW RNG is used as an entropy source for seeding.\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_NRF_HW_RNG_MBEDTLS_CTR_DRBG_ENABLED\n\n#define NRF_CRYPTO_BACKEND_NRF_HW_RNG_MBEDTLS_CTR_DRBG_ENABLED 1\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_CRYPTO_BACKEND_NRF_SW_ENABLED - Enable the legacy nRFx sw for crypto.\n\n\n\n// <i> The nRF SW cryptography backend (only used in bootloader context).\n\n//==========================================================\n\n#ifndef NRF_CRYPTO_BACKEND_NRF_SW_ENABLED\n\n#define NRF_CRYPTO_BACKEND_NRF_SW_ENABLED 0\n\n#endif\n\n// <q> NRF_CRYPTO_BACKEND_NRF_SW_HASH_SHA256_ENABLED  - nRF SW hash backend support for SHA-256\n\n \n\n\n\n// <i> The nRF SW backend provide access to nRF SDK legacy hash implementation of SHA-256.\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_NRF_SW_HASH_SHA256_ENABLED\n\n#define NRF_CRYPTO_BACKEND_NRF_SW_HASH_SHA256_ENABLED 1\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_CRYPTO_BACKEND_OBERON_ENABLED - Enable the Oberon backend\n\n\n\n// <i> The Oberon backend\n\n//==========================================================\n\n#ifndef NRF_CRYPTO_BACKEND_OBERON_ENABLED\n\n#define NRF_CRYPTO_BACKEND_OBERON_ENABLED 0\n\n#endif\n\n// <q> NRF_CRYPTO_BACKEND_OBERON_CHACHA_POLY_ENABLED  - Enable the CHACHA-POLY mode using Oberon.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_OBERON_CHACHA_POLY_ENABLED\n\n#define NRF_CRYPTO_BACKEND_OBERON_CHACHA_POLY_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_OBERON_ECC_SECP256R1_ENABLED  - Enable secp256r1 curve\n\n \n\n\n\n// <i> Enable this setting if you need secp256r1 curve support using Oberon library\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_OBERON_ECC_SECP256R1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_OBERON_ECC_SECP256R1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_OBERON_ECC_CURVE25519_ENABLED  - Enable Curve25519 ECDH\n\n \n\n\n\n// <i> Enable this setting if you need Curve25519 ECDH support using Oberon library\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_OBERON_ECC_CURVE25519_ENABLED\n\n#define NRF_CRYPTO_BACKEND_OBERON_ECC_CURVE25519_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_OBERON_ECC_ED25519_ENABLED  - Enable Ed25519 signature scheme\n\n \n\n\n\n// <i> Enable this setting if you need Ed25519 support using Oberon library\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_OBERON_ECC_ED25519_ENABLED\n\n#define NRF_CRYPTO_BACKEND_OBERON_ECC_ED25519_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_OBERON_HASH_SHA256_ENABLED  - Oberon SHA-256 hash functionality\n\n \n\n\n\n// <i> Oberon backend implementation for SHA-256.\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_OBERON_HASH_SHA256_ENABLED\n\n#define NRF_CRYPTO_BACKEND_OBERON_HASH_SHA256_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_OBERON_HASH_SHA512_ENABLED  - Oberon SHA-512 hash functionality\n\n \n\n\n\n// <i> Oberon backend implementation for SHA-512.\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_OBERON_HASH_SHA512_ENABLED\n\n#define NRF_CRYPTO_BACKEND_OBERON_HASH_SHA512_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_OBERON_HMAC_SHA256_ENABLED  - Oberon HMAC using SHA-256\n\n \n\n\n\n// <i> Oberon backend implementation for HMAC using SHA-256.\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_OBERON_HMAC_SHA256_ENABLED\n\n#define NRF_CRYPTO_BACKEND_OBERON_HMAC_SHA256_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_OBERON_HMAC_SHA512_ENABLED  - Oberon HMAC using SHA-512\n\n \n\n\n\n// <i> Oberon backend implementation for HMAC using SHA-512.\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_OBERON_HMAC_SHA512_ENABLED\n\n#define NRF_CRYPTO_BACKEND_OBERON_HMAC_SHA512_ENABLED 1\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_CRYPTO_BACKEND_OPTIGA_ENABLED - Enable the nrf_crypto Optiga Trust X backend.\n\n\n\n// <i> Enables the nrf_crypto backend for Optiga Trust X devices.\n\n//==========================================================\n\n#ifndef NRF_CRYPTO_BACKEND_OPTIGA_ENABLED\n\n#define NRF_CRYPTO_BACKEND_OPTIGA_ENABLED 0\n\n#endif\n\n// <q> NRF_CRYPTO_BACKEND_OPTIGA_RNG_ENABLED  - Optiga backend support for RNG\n\n \n\n\n\n// <i> The Optiga backend provide external chip RNG.\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_OPTIGA_RNG_ENABLED\n\n#define NRF_CRYPTO_BACKEND_OPTIGA_RNG_ENABLED 0\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_OPTIGA_ECC_SECP256R1_ENABLED  - Optiga backend support for ECC secp256r1\n\n \n\n\n\n// <i> The Optiga backend provide external chip ECC using secp256r1.\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_OPTIGA_ECC_SECP256R1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_OPTIGA_ECC_SECP256R1_ENABLED 1\n\n#endif\n\n\n\n// </e>\n\n\n\n// <q> NRF_CRYPTO_CURVE25519_BIG_ENDIAN_ENABLED  - Big-endian byte order in raw Curve25519 data\n\n \n\n\n\n// <i> Enable big-endian byte order in Curve25519 API, if set to 1. Use little-endian, if set to 0.\n\n\n\n#ifndef NRF_CRYPTO_CURVE25519_BIG_ENDIAN_ENABLED\n\n#define NRF_CRYPTO_CURVE25519_BIG_ENDIAN_ENABLED 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> nRF_DFU \n\n\n\n//==========================================================\n\n// <h> ble_dfu - Device Firmware Update\n\n\n\n//==========================================================\n\n// <q> BLE_DFU_ENABLED  - Enable DFU Service.\n\n \n\n\n\n#ifndef BLE_DFU_ENABLED\n\n#define BLE_DFU_ENABLED 0\n\n#endif\n\n\n\n// <q> NRF_DFU_BLE_BUTTONLESS_SUPPORTS_BONDS  - Buttonless DFU supports bonds.\n\n \n\n\n\n#ifndef NRF_DFU_BLE_BUTTONLESS_SUPPORTS_BONDS\n\n#define NRF_DFU_BLE_BUTTONLESS_SUPPORTS_BONDS 0\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> nRF_Drivers \n\n\n\n//==========================================================\n\n// <e> COMP_ENABLED - nrf_drv_comp - COMP peripheral driver - legacy layer\n\n//==========================================================\n\n#ifndef COMP_ENABLED\n\n#define COMP_ENABLED 0\n\n#endif\n\n// <o> COMP_CONFIG_REF  - Reference voltage\n\n \n\n// <0=> Internal 1.2V \n\n// <1=> Internal 1.8V \n\n// <2=> Internal 2.4V \n\n// <4=> VDD \n\n// <7=> ARef \n\n\n\n#ifndef COMP_CONFIG_REF\n\n#define COMP_CONFIG_REF 1\n\n#endif\n\n\n\n// <o> COMP_CONFIG_MAIN_MODE  - Main mode\n\n \n\n// <0=> Single ended \n\n// <1=> Differential \n\n\n\n#ifndef COMP_CONFIG_MAIN_MODE\n\n#define COMP_CONFIG_MAIN_MODE 0\n\n#endif\n\n\n\n// <o> COMP_CONFIG_SPEED_MODE  - Speed mode\n\n \n\n// <0=> Low power \n\n// <1=> Normal \n\n// <2=> High speed \n\n\n\n#ifndef COMP_CONFIG_SPEED_MODE\n\n#define COMP_CONFIG_SPEED_MODE 2\n\n#endif\n\n\n\n// <o> COMP_CONFIG_HYST  - Hystheresis\n\n \n\n// <0=> No \n\n// <1=> 50mV \n\n\n\n#ifndef COMP_CONFIG_HYST\n\n#define COMP_CONFIG_HYST 0\n\n#endif\n\n\n\n// <o> COMP_CONFIG_ISOURCE  - Current Source\n\n \n\n// <0=> Off \n\n// <1=> 2.5 uA \n\n// <2=> 5 uA \n\n// <3=> 10 uA \n\n\n\n#ifndef COMP_CONFIG_ISOURCE\n\n#define COMP_CONFIG_ISOURCE 0\n\n#endif\n\n\n\n// <o> COMP_CONFIG_INPUT  - Analog input\n\n \n\n// <0=> 0 \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef COMP_CONFIG_INPUT\n\n#define COMP_CONFIG_INPUT 0\n\n#endif\n\n\n\n// <o> COMP_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef COMP_CONFIG_IRQ_PRIORITY\n\n#define COMP_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// </e>\n\n\n\n// <q> EGU_ENABLED  - nrf_drv_swi - SWI(EGU) peripheral driver - legacy layer\n\n \n\n\n\n#ifndef EGU_ENABLED\n\n#define EGU_ENABLED 0\n\n#endif\n\n\n\n// <e> GPIOTE_ENABLED - nrf_drv_gpiote - GPIOTE peripheral driver - legacy layer\n\n//==========================================================\n\n#ifndef GPIOTE_ENABLED\n\n#define GPIOTE_ENABLED 1\n\n#endif\n\n// <o> GPIOTE_CONFIG_NUM_OF_LOW_POWER_EVENTS - Number of lower power input pins \n\n#ifndef GPIOTE_CONFIG_NUM_OF_LOW_POWER_EVENTS\n\n#define GPIOTE_CONFIG_NUM_OF_LOW_POWER_EVENTS 4\n\n#endif\n\n\n\n// <o> GPIOTE_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef GPIOTE_CONFIG_IRQ_PRIORITY\n\n#define GPIOTE_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> I2S_ENABLED - nrf_drv_i2s - I2S peripheral driver - legacy layer\n\n//==========================================================\n\n#ifndef I2S_ENABLED\n\n#define I2S_ENABLED 0\n\n#endif\n\n// <o> I2S_CONFIG_SCK_PIN - SCK pin  <0-31> \n\n\n\n\n\n#ifndef I2S_CONFIG_SCK_PIN\n\n#define I2S_CONFIG_SCK_PIN 31\n\n#endif\n\n\n\n// <o> I2S_CONFIG_LRCK_PIN - LRCK pin  <1-31> \n\n\n\n\n\n#ifndef I2S_CONFIG_LRCK_PIN\n\n#define I2S_CONFIG_LRCK_PIN 30\n\n#endif\n\n\n\n// <o> I2S_CONFIG_MCK_PIN - MCK pin \n\n#ifndef I2S_CONFIG_MCK_PIN\n\n#define I2S_CONFIG_MCK_PIN 255\n\n#endif\n\n\n\n// <o> I2S_CONFIG_SDOUT_PIN - SDOUT pin  <0-31> \n\n\n\n\n\n#ifndef I2S_CONFIG_SDOUT_PIN\n\n#define I2S_CONFIG_SDOUT_PIN 29\n\n#endif\n\n\n\n// <o> I2S_CONFIG_SDIN_PIN - SDIN pin  <0-31> \n\n\n\n\n\n#ifndef I2S_CONFIG_SDIN_PIN\n\n#define I2S_CONFIG_SDIN_PIN 28\n\n#endif\n\n\n\n// <o> I2S_CONFIG_MASTER  - Mode\n\n \n\n// <0=> Master \n\n// <1=> Slave \n\n\n\n#ifndef I2S_CONFIG_MASTER\n\n#define I2S_CONFIG_MASTER 0\n\n#endif\n\n\n\n// <o> I2S_CONFIG_FORMAT  - Format\n\n \n\n// <0=> I2S \n\n// <1=> Aligned \n\n\n\n#ifndef I2S_CONFIG_FORMAT\n\n#define I2S_CONFIG_FORMAT 0\n\n#endif\n\n\n\n// <o> I2S_CONFIG_ALIGN  - Alignment\n\n \n\n// <0=> Left \n\n// <1=> Right \n\n\n\n#ifndef I2S_CONFIG_ALIGN\n\n#define I2S_CONFIG_ALIGN 0\n\n#endif\n\n\n\n// <o> I2S_CONFIG_SWIDTH  - Sample width (bits)\n\n \n\n// <0=> 8 \n\n// <1=> 16 \n\n// <2=> 24 \n\n\n\n#ifndef I2S_CONFIG_SWIDTH\n\n#define I2S_CONFIG_SWIDTH 1\n\n#endif\n\n\n\n// <o> I2S_CONFIG_CHANNELS  - Channels\n\n \n\n// <0=> Stereo \n\n// <1=> Left \n\n// <2=> Right \n\n\n\n#ifndef I2S_CONFIG_CHANNELS\n\n#define I2S_CONFIG_CHANNELS 1\n\n#endif\n\n\n\n// <o> I2S_CONFIG_MCK_SETUP  - MCK behavior\n\n \n\n// <0=> Disabled \n\n// <2147483648=> 32MHz/2 \n\n// <1342177280=> 32MHz/3 \n\n// <1073741824=> 32MHz/4 \n\n// <805306368=> 32MHz/5 \n\n// <671088640=> 32MHz/6 \n\n// <536870912=> 32MHz/8 \n\n// <402653184=> 32MHz/10 \n\n// <369098752=> 32MHz/11 \n\n// <285212672=> 32MHz/15 \n\n// <268435456=> 32MHz/16 \n\n// <201326592=> 32MHz/21 \n\n// <184549376=> 32MHz/23 \n\n// <142606336=> 32MHz/30 \n\n// <138412032=> 32MHz/31 \n\n// <134217728=> 32MHz/32 \n\n// <100663296=> 32MHz/42 \n\n// <68157440=> 32MHz/63 \n\n// <34340864=> 32MHz/125 \n\n\n\n#ifndef I2S_CONFIG_MCK_SETUP\n\n#define I2S_CONFIG_MCK_SETUP 536870912\n\n#endif\n\n\n\n// <o> I2S_CONFIG_RATIO  - MCK/LRCK ratio\n\n \n\n// <0=> 32x \n\n// <1=> 48x \n\n// <2=> 64x \n\n// <3=> 96x \n\n// <4=> 128x \n\n// <5=> 192x \n\n// <6=> 256x \n\n// <7=> 384x \n\n// <8=> 512x \n\n\n\n#ifndef I2S_CONFIG_RATIO\n\n#define I2S_CONFIG_RATIO 2000\n\n#endif\n\n\n\n// <o> I2S_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef I2S_CONFIG_IRQ_PRIORITY\n\n#define I2S_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> I2S_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef I2S_CONFIG_LOG_ENABLED\n\n#define I2S_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> I2S_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef I2S_CONFIG_LOG_LEVEL\n\n#define I2S_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> I2S_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef I2S_CONFIG_INFO_COLOR\n\n#define I2S_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> I2S_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef I2S_CONFIG_DEBUG_COLOR\n\n#define I2S_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> LPCOMP_ENABLED - nrf_drv_lpcomp - LPCOMP peripheral driver - legacy layer\n\n//==========================================================\n\n#ifndef LPCOMP_ENABLED\n\n#define LPCOMP_ENABLED 0\n\n#endif\n\n// <o> LPCOMP_CONFIG_REFERENCE  - Reference voltage\n\n \n\n// <0=> Supply 1/8 \n\n// <1=> Supply 2/8 \n\n// <2=> Supply 3/8 \n\n// <3=> Supply 4/8 \n\n// <4=> Supply 5/8 \n\n// <5=> Supply 6/8 \n\n// <6=> Supply 7/8 \n\n// <8=> Supply 1/16 (nRF52) \n\n// <9=> Supply 3/16 (nRF52) \n\n// <10=> Supply 5/16 (nRF52) \n\n// <11=> Supply 7/16 (nRF52) \n\n// <12=> Supply 9/16 (nRF52) \n\n// <13=> Supply 11/16 (nRF52) \n\n// <14=> Supply 13/16 (nRF52) \n\n// <15=> Supply 15/16 (nRF52) \n\n// <7=> External Ref 0 \n\n// <65543=> External Ref 1 \n\n\n\n#ifndef LPCOMP_CONFIG_REFERENCE\n\n#define LPCOMP_CONFIG_REFERENCE 3\n\n#endif\n\n\n\n// <o> LPCOMP_CONFIG_DETECTION  - Detection\n\n \n\n// <0=> Crossing \n\n// <1=> Up \n\n// <2=> Down \n\n\n\n#ifndef LPCOMP_CONFIG_DETECTION\n\n#define LPCOMP_CONFIG_DETECTION 2\n\n#endif\n\n\n\n// <o> LPCOMP_CONFIG_INPUT  - Analog input\n\n \n\n// <0=> 0 \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef LPCOMP_CONFIG_INPUT\n\n#define LPCOMP_CONFIG_INPUT 0\n\n#endif\n\n\n\n// <q> LPCOMP_CONFIG_HYST  - Hysteresis\n\n \n\n\n\n#ifndef LPCOMP_CONFIG_HYST\n\n#define LPCOMP_CONFIG_HYST 0\n\n#endif\n\n\n\n// <o> LPCOMP_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef LPCOMP_CONFIG_IRQ_PRIORITY\n\n#define LPCOMP_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRFX_CLOCK_ENABLED - nrfx_clock - CLOCK peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_CLOCK_ENABLED\n\n#define NRFX_CLOCK_ENABLED 1\n\n#endif\n\n// <o> NRFX_CLOCK_CONFIG_LF_SRC  - LF Clock Source\n\n \n\n// <0=> RC \n\n// <1=> XTAL \n\n// <2=> Synth \n\n// <131073=> External Low Swing \n\n// <196609=> External Full Swing \n\n\n\n#ifndef NRFX_CLOCK_CONFIG_LF_SRC\n\n#define NRFX_CLOCK_CONFIG_LF_SRC 1\n\n#endif\n\n\n\n// <o> NRFX_CLOCK_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_CLOCK_CONFIG_IRQ_PRIORITY\n\n#define NRFX_CLOCK_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> NRFX_CLOCK_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_CLOCK_CONFIG_LOG_ENABLED\n\n#define NRFX_CLOCK_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_CLOCK_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_CLOCK_CONFIG_LOG_LEVEL\n\n#define NRFX_CLOCK_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_CLOCK_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_CLOCK_CONFIG_INFO_COLOR\n\n#define NRFX_CLOCK_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_CLOCK_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_CLOCK_CONFIG_DEBUG_COLOR\n\n#define NRFX_CLOCK_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRFX_COMP_ENABLED - nrfx_comp - COMP peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_COMP_ENABLED\n\n#define NRFX_COMP_ENABLED 0\n\n#endif\n\n// <o> NRFX_COMP_CONFIG_REF  - Reference voltage\n\n \n\n// <0=> Internal 1.2V \n\n// <1=> Internal 1.8V \n\n// <2=> Internal 2.4V \n\n// <4=> VDD \n\n// <7=> ARef \n\n\n\n#ifndef NRFX_COMP_CONFIG_REF\n\n#define NRFX_COMP_CONFIG_REF 1\n\n#endif\n\n\n\n// <o> NRFX_COMP_CONFIG_MAIN_MODE  - Main mode\n\n \n\n// <0=> Single ended \n\n// <1=> Differential \n\n\n\n#ifndef NRFX_COMP_CONFIG_MAIN_MODE\n\n#define NRFX_COMP_CONFIG_MAIN_MODE 0\n\n#endif\n\n\n\n// <o> NRFX_COMP_CONFIG_SPEED_MODE  - Speed mode\n\n \n\n// <0=> Low power \n\n// <1=> Normal \n\n// <2=> High speed \n\n\n\n#ifndef NRFX_COMP_CONFIG_SPEED_MODE\n\n#define NRFX_COMP_CONFIG_SPEED_MODE 2\n\n#endif\n\n\n\n// <o> NRFX_COMP_CONFIG_HYST  - Hystheresis\n\n \n\n// <0=> No \n\n// <1=> 50mV \n\n\n\n#ifndef NRFX_COMP_CONFIG_HYST\n\n#define NRFX_COMP_CONFIG_HYST 0\n\n#endif\n\n\n\n// <o> NRFX_COMP_CONFIG_ISOURCE  - Current Source\n\n \n\n// <0=> Off \n\n// <1=> 2.5 uA \n\n// <2=> 5 uA \n\n// <3=> 10 uA \n\n\n\n#ifndef NRFX_COMP_CONFIG_ISOURCE\n\n#define NRFX_COMP_CONFIG_ISOURCE 0\n\n#endif\n\n\n\n// <o> NRFX_COMP_CONFIG_INPUT  - Analog input\n\n \n\n// <0=> 0 \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_COMP_CONFIG_INPUT\n\n#define NRFX_COMP_CONFIG_INPUT 0\n\n#endif\n\n\n\n// <o> NRFX_COMP_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_COMP_CONFIG_IRQ_PRIORITY\n\n#define NRFX_COMP_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> NRFX_COMP_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_COMP_CONFIG_LOG_ENABLED\n\n#define NRFX_COMP_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_COMP_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_COMP_CONFIG_LOG_LEVEL\n\n#define NRFX_COMP_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_COMP_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_COMP_CONFIG_INFO_COLOR\n\n#define NRFX_COMP_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_COMP_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_COMP_CONFIG_DEBUG_COLOR\n\n#define NRFX_COMP_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRFX_GPIOTE_ENABLED - nrfx_gpiote - GPIOTE peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_GPIOTE_ENABLED\n\n#define NRFX_GPIOTE_ENABLED 1\n\n#endif\n\n// <o> NRFX_GPIOTE_CONFIG_NUM_OF_LOW_POWER_EVENTS - Number of lower power input pins \n\n#ifndef NRFX_GPIOTE_CONFIG_NUM_OF_LOW_POWER_EVENTS\n\n#define NRFX_GPIOTE_CONFIG_NUM_OF_LOW_POWER_EVENTS 1\n\n#endif\n\n\n\n// <o> NRFX_GPIOTE_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_GPIOTE_CONFIG_IRQ_PRIORITY\n\n#define NRFX_GPIOTE_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> NRFX_GPIOTE_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_GPIOTE_CONFIG_LOG_ENABLED\n\n#define NRFX_GPIOTE_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_GPIOTE_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_GPIOTE_CONFIG_LOG_LEVEL\n\n#define NRFX_GPIOTE_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_GPIOTE_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_GPIOTE_CONFIG_INFO_COLOR\n\n#define NRFX_GPIOTE_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_GPIOTE_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_GPIOTE_CONFIG_DEBUG_COLOR\n\n#define NRFX_GPIOTE_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRFX_I2S_ENABLED - nrfx_i2s - I2S peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_I2S_ENABLED\n\n#define NRFX_I2S_ENABLED 0\n\n#endif\n\n// <o> NRFX_I2S_CONFIG_SCK_PIN - SCK pin  <0-31> \n\n\n\n\n\n#ifndef NRFX_I2S_CONFIG_SCK_PIN\n\n#define NRFX_I2S_CONFIG_SCK_PIN 31\n\n#endif\n\n\n\n// <o> NRFX_I2S_CONFIG_LRCK_PIN - LRCK pin  <1-31> \n\n\n\n\n\n#ifndef NRFX_I2S_CONFIG_LRCK_PIN\n\n#define NRFX_I2S_CONFIG_LRCK_PIN 30\n\n#endif\n\n\n\n// <o> NRFX_I2S_CONFIG_MCK_PIN - MCK pin \n\n#ifndef NRFX_I2S_CONFIG_MCK_PIN\n\n#define NRFX_I2S_CONFIG_MCK_PIN 255\n\n#endif\n\n\n\n// <o> NRFX_I2S_CONFIG_SDOUT_PIN - SDOUT pin  <0-31> \n\n\n\n\n\n#ifndef NRFX_I2S_CONFIG_SDOUT_PIN\n\n#define NRFX_I2S_CONFIG_SDOUT_PIN 29\n\n#endif\n\n\n\n// <o> NRFX_I2S_CONFIG_SDIN_PIN - SDIN pin  <0-31> \n\n\n\n\n\n#ifndef NRFX_I2S_CONFIG_SDIN_PIN\n\n#define NRFX_I2S_CONFIG_SDIN_PIN 28\n\n#endif\n\n\n\n// <o> NRFX_I2S_CONFIG_MASTER  - Mode\n\n \n\n// <0=> Master \n\n// <1=> Slave \n\n\n\n#ifndef NRFX_I2S_CONFIG_MASTER\n\n#define NRFX_I2S_CONFIG_MASTER 0\n\n#endif\n\n\n\n// <o> NRFX_I2S_CONFIG_FORMAT  - Format\n\n \n\n// <0=> I2S \n\n// <1=> Aligned \n\n\n\n#ifndef NRFX_I2S_CONFIG_FORMAT\n\n#define NRFX_I2S_CONFIG_FORMAT 0\n\n#endif\n\n\n\n// <o> NRFX_I2S_CONFIG_ALIGN  - Alignment\n\n \n\n// <0=> Left \n\n// <1=> Right \n\n\n\n#ifndef NRFX_I2S_CONFIG_ALIGN\n\n#define NRFX_I2S_CONFIG_ALIGN 0\n\n#endif\n\n\n\n// <o> NRFX_I2S_CONFIG_SWIDTH  - Sample width (bits)\n\n \n\n// <0=> 8 \n\n// <1=> 16 \n\n// <2=> 24 \n\n\n\n#ifndef NRFX_I2S_CONFIG_SWIDTH\n\n#define NRFX_I2S_CONFIG_SWIDTH 1\n\n#endif\n\n\n\n// <o> NRFX_I2S_CONFIG_CHANNELS  - Channels\n\n \n\n// <0=> Stereo \n\n// <1=> Left \n\n// <2=> Right \n\n\n\n#ifndef NRFX_I2S_CONFIG_CHANNELS\n\n#define NRFX_I2S_CONFIG_CHANNELS 1\n\n#endif\n\n\n\n// <o> NRFX_I2S_CONFIG_MCK_SETUP  - MCK behavior\n\n \n\n// <0=> Disabled \n\n// <2147483648=> 32MHz/2 \n\n// <1342177280=> 32MHz/3 \n\n// <1073741824=> 32MHz/4 \n\n// <805306368=> 32MHz/5 \n\n// <671088640=> 32MHz/6 \n\n// <536870912=> 32MHz/8 \n\n// <402653184=> 32MHz/10 \n\n// <369098752=> 32MHz/11 \n\n// <285212672=> 32MHz/15 \n\n// <268435456=> 32MHz/16 \n\n// <201326592=> 32MHz/21 \n\n// <184549376=> 32MHz/23 \n\n// <142606336=> 32MHz/30 \n\n// <138412032=> 32MHz/31 \n\n// <134217728=> 32MHz/32 \n\n// <100663296=> 32MHz/42 \n\n// <68157440=> 32MHz/63 \n\n// <34340864=> 32MHz/125 \n\n\n\n#ifndef NRFX_I2S_CONFIG_MCK_SETUP\n\n#define NRFX_I2S_CONFIG_MCK_SETUP 536870912\n\n#endif\n\n\n\n// <o> NRFX_I2S_CONFIG_RATIO  - MCK/LRCK ratio\n\n \n\n// <0=> 32x \n\n// <1=> 48x \n\n// <2=> 64x \n\n// <3=> 96x \n\n// <4=> 128x \n\n// <5=> 192x \n\n// <6=> 256x \n\n// <7=> 384x \n\n// <8=> 512x \n\n\n\n#ifndef NRFX_I2S_CONFIG_RATIO\n\n#define NRFX_I2S_CONFIG_RATIO 2000\n\n#endif\n\n\n\n// <o> NRFX_I2S_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_I2S_CONFIG_IRQ_PRIORITY\n\n#define NRFX_I2S_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> NRFX_I2S_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_I2S_CONFIG_LOG_ENABLED\n\n#define NRFX_I2S_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_I2S_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_I2S_CONFIG_LOG_LEVEL\n\n#define NRFX_I2S_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_I2S_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_I2S_CONFIG_INFO_COLOR\n\n#define NRFX_I2S_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_I2S_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_I2S_CONFIG_DEBUG_COLOR\n\n#define NRFX_I2S_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRFX_LPCOMP_ENABLED - nrfx_lpcomp - LPCOMP peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_LPCOMP_ENABLED\n\n#define NRFX_LPCOMP_ENABLED 0\n\n#endif\n\n// <o> NRFX_LPCOMP_CONFIG_REFERENCE  - Reference voltage\n\n \n\n// <0=> Supply 1/8 \n\n// <1=> Supply 2/8 \n\n// <2=> Supply 3/8 \n\n// <3=> Supply 4/8 \n\n// <4=> Supply 5/8 \n\n// <5=> Supply 6/8 \n\n// <6=> Supply 7/8 \n\n// <8=> Supply 1/16 (nRF52) \n\n// <9=> Supply 3/16 (nRF52) \n\n// <10=> Supply 5/16 (nRF52) \n\n// <11=> Supply 7/16 (nRF52) \n\n// <12=> Supply 9/16 (nRF52) \n\n// <13=> Supply 11/16 (nRF52) \n\n// <14=> Supply 13/16 (nRF52) \n\n// <15=> Supply 15/16 (nRF52) \n\n// <7=> External Ref 0 \n\n// <65543=> External Ref 1 \n\n\n\n#ifndef NRFX_LPCOMP_CONFIG_REFERENCE\n\n#define NRFX_LPCOMP_CONFIG_REFERENCE 3\n\n#endif\n\n\n\n// <o> NRFX_LPCOMP_CONFIG_DETECTION  - Detection\n\n \n\n// <0=> Crossing \n\n// <1=> Up \n\n// <2=> Down \n\n\n\n#ifndef NRFX_LPCOMP_CONFIG_DETECTION\n\n#define NRFX_LPCOMP_CONFIG_DETECTION 2\n\n#endif\n\n\n\n// <o> NRFX_LPCOMP_CONFIG_INPUT  - Analog input\n\n \n\n// <0=> 0 \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_LPCOMP_CONFIG_INPUT\n\n#define NRFX_LPCOMP_CONFIG_INPUT 0\n\n#endif\n\n\n\n// <q> NRFX_LPCOMP_CONFIG_HYST  - Hysteresis\n\n \n\n\n\n#ifndef NRFX_LPCOMP_CONFIG_HYST\n\n#define NRFX_LPCOMP_CONFIG_HYST 0\n\n#endif\n\n\n\n// <o> NRFX_LPCOMP_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_LPCOMP_CONFIG_IRQ_PRIORITY\n\n#define NRFX_LPCOMP_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> NRFX_LPCOMP_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_LPCOMP_CONFIG_LOG_ENABLED\n\n#define NRFX_LPCOMP_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_LPCOMP_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_LPCOMP_CONFIG_LOG_LEVEL\n\n#define NRFX_LPCOMP_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_LPCOMP_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_LPCOMP_CONFIG_INFO_COLOR\n\n#define NRFX_LPCOMP_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_LPCOMP_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_LPCOMP_CONFIG_DEBUG_COLOR\n\n#define NRFX_LPCOMP_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRFX_NFCT_ENABLED - nrfx_nfct - NFCT peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_NFCT_ENABLED\n\n#define NRFX_NFCT_ENABLED 0\n\n#endif\n\n// <o> NRFX_NFCT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_NFCT_CONFIG_IRQ_PRIORITY\n\n#define NRFX_NFCT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> NRFX_NFCT_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_NFCT_CONFIG_LOG_ENABLED\n\n#define NRFX_NFCT_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_NFCT_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_NFCT_CONFIG_LOG_LEVEL\n\n#define NRFX_NFCT_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_NFCT_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_NFCT_CONFIG_INFO_COLOR\n\n#define NRFX_NFCT_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_NFCT_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_NFCT_CONFIG_DEBUG_COLOR\n\n#define NRFX_NFCT_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRFX_PDM_ENABLED - nrfx_pdm - PDM peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_PDM_ENABLED\n\n#define NRFX_PDM_ENABLED 0\n\n#endif\n\n// <o> NRFX_PDM_CONFIG_MODE  - Mode\n\n \n\n// <0=> Stereo \n\n// <1=> Mono \n\n\n\n#ifndef NRFX_PDM_CONFIG_MODE\n\n#define NRFX_PDM_CONFIG_MODE 1\n\n#endif\n\n\n\n// <o> NRFX_PDM_CONFIG_EDGE  - Edge\n\n \n\n// <0=> Left falling \n\n// <1=> Left rising \n\n\n\n#ifndef NRFX_PDM_CONFIG_EDGE\n\n#define NRFX_PDM_CONFIG_EDGE 0\n\n#endif\n\n\n\n// <o> NRFX_PDM_CONFIG_CLOCK_FREQ  - Clock frequency\n\n \n\n// <134217728=> 1000k \n\n// <138412032=> 1032k (default) \n\n// <142606336=> 1067k \n\n\n\n#ifndef NRFX_PDM_CONFIG_CLOCK_FREQ\n\n#define NRFX_PDM_CONFIG_CLOCK_FREQ 138412032\n\n#endif\n\n\n\n// <o> NRFX_PDM_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_PDM_CONFIG_IRQ_PRIORITY\n\n#define NRFX_PDM_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> NRFX_PDM_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_PDM_CONFIG_LOG_ENABLED\n\n#define NRFX_PDM_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_PDM_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_PDM_CONFIG_LOG_LEVEL\n\n#define NRFX_PDM_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_PDM_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_PDM_CONFIG_INFO_COLOR\n\n#define NRFX_PDM_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_PDM_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_PDM_CONFIG_DEBUG_COLOR\n\n#define NRFX_PDM_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRFX_POWER_ENABLED - nrfx_power - POWER peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_POWER_ENABLED\n\n#define NRFX_POWER_ENABLED 0\n\n#endif\n\n// <o> NRFX_POWER_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_POWER_CONFIG_IRQ_PRIORITY\n\n#define NRFX_POWER_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <q> NRFX_POWER_CONFIG_DEFAULT_DCDCEN  - The default configuration of main DCDC regulator\n\n \n\n\n\n// <i> This settings means only that components for DCDC regulator are installed and it can be enabled.\n\n\n\n#ifndef NRFX_POWER_CONFIG_DEFAULT_DCDCEN\n\n#define NRFX_POWER_CONFIG_DEFAULT_DCDCEN 0\n\n#endif\n\n\n\n// <q> NRFX_POWER_CONFIG_DEFAULT_DCDCENHV  - The default configuration of High Voltage DCDC regulator\n\n \n\n\n\n// <i> This settings means only that components for DCDC regulator are installed and it can be enabled.\n\n\n\n#ifndef NRFX_POWER_CONFIG_DEFAULT_DCDCENHV\n\n#define NRFX_POWER_CONFIG_DEFAULT_DCDCENHV 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRFX_PPI_ENABLED - nrfx_ppi - PPI peripheral allocator\n\n//==========================================================\n\n#ifndef NRFX_PPI_ENABLED\n\n#define NRFX_PPI_ENABLED 0\n\n#endif\n\n// <e> NRFX_PPI_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_PPI_CONFIG_LOG_ENABLED\n\n#define NRFX_PPI_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_PPI_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_PPI_CONFIG_LOG_LEVEL\n\n#define NRFX_PPI_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_PPI_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_PPI_CONFIG_INFO_COLOR\n\n#define NRFX_PPI_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_PPI_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_PPI_CONFIG_DEBUG_COLOR\n\n#define NRFX_PPI_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRFX_PRS_ENABLED - nrfx_prs - Peripheral Resource Sharing module\n\n//==========================================================\n\n#ifndef NRFX_PRS_ENABLED\n\n#define NRFX_PRS_ENABLED 1\n\n#endif\n\n// <q> NRFX_PRS_BOX_0_ENABLED  - Enables box 0 in the module.\n\n \n\n\n\n#ifndef NRFX_PRS_BOX_0_ENABLED\n\n#define NRFX_PRS_BOX_0_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_PRS_BOX_1_ENABLED  - Enables box 1 in the module.\n\n \n\n\n\n#ifndef NRFX_PRS_BOX_1_ENABLED\n\n#define NRFX_PRS_BOX_1_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_PRS_BOX_2_ENABLED  - Enables box 2 in the module.\n\n \n\n\n\n#ifndef NRFX_PRS_BOX_2_ENABLED\n\n#define NRFX_PRS_BOX_2_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_PRS_BOX_3_ENABLED  - Enables box 3 in the module.\n\n \n\n\n\n#ifndef NRFX_PRS_BOX_3_ENABLED\n\n#define NRFX_PRS_BOX_3_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_PRS_BOX_4_ENABLED  - Enables box 4 in the module.\n\n \n\n\n\n#ifndef NRFX_PRS_BOX_4_ENABLED\n\n#define NRFX_PRS_BOX_4_ENABLED 1\n\n#endif\n\n\n\n// <e> NRFX_PRS_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_PRS_CONFIG_LOG_ENABLED\n\n#define NRFX_PRS_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_PRS_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_PRS_CONFIG_LOG_LEVEL\n\n#define NRFX_PRS_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_PRS_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_PRS_CONFIG_INFO_COLOR\n\n#define NRFX_PRS_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_PRS_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_PRS_CONFIG_DEBUG_COLOR\n\n#define NRFX_PRS_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRFX_PWM_ENABLED - nrfx_pwm - PWM peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_PWM_ENABLED\n\n#define NRFX_PWM_ENABLED 0\n\n#endif\n\n// <q> NRFX_PWM0_ENABLED  - Enable PWM0 instance\n\n \n\n\n\n#ifndef NRFX_PWM0_ENABLED\n\n#define NRFX_PWM0_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_PWM1_ENABLED  - Enable PWM1 instance\n\n \n\n\n\n#ifndef NRFX_PWM1_ENABLED\n\n#define NRFX_PWM1_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_PWM2_ENABLED  - Enable PWM2 instance\n\n \n\n\n\n#ifndef NRFX_PWM2_ENABLED\n\n#define NRFX_PWM2_ENABLED 0\n\n#endif\n\n\n\n// <o> NRFX_PWM_DEFAULT_CONFIG_OUT0_PIN - Out0 pin  <0-31> \n\n\n\n\n\n#ifndef NRFX_PWM_DEFAULT_CONFIG_OUT0_PIN\n\n#define NRFX_PWM_DEFAULT_CONFIG_OUT0_PIN 31\n\n#endif\n\n\n\n// <o> NRFX_PWM_DEFAULT_CONFIG_OUT1_PIN - Out1 pin  <0-31> \n\n\n\n\n\n#ifndef NRFX_PWM_DEFAULT_CONFIG_OUT1_PIN\n\n#define NRFX_PWM_DEFAULT_CONFIG_OUT1_PIN 31\n\n#endif\n\n\n\n// <o> NRFX_PWM_DEFAULT_CONFIG_OUT2_PIN - Out2 pin  <0-31> \n\n\n\n\n\n#ifndef NRFX_PWM_DEFAULT_CONFIG_OUT2_PIN\n\n#define NRFX_PWM_DEFAULT_CONFIG_OUT2_PIN 31\n\n#endif\n\n\n\n// <o> NRFX_PWM_DEFAULT_CONFIG_OUT3_PIN - Out3 pin  <0-31> \n\n\n\n\n\n#ifndef NRFX_PWM_DEFAULT_CONFIG_OUT3_PIN\n\n#define NRFX_PWM_DEFAULT_CONFIG_OUT3_PIN 31\n\n#endif\n\n\n\n// <o> NRFX_PWM_DEFAULT_CONFIG_BASE_CLOCK  - Base clock\n\n \n\n// <0=> 16 MHz \n\n// <1=> 8 MHz \n\n// <2=> 4 MHz \n\n// <3=> 2 MHz \n\n// <4=> 1 MHz \n\n// <5=> 500 kHz \n\n// <6=> 250 kHz \n\n// <7=> 125 kHz \n\n\n\n#ifndef NRFX_PWM_DEFAULT_CONFIG_BASE_CLOCK\n\n#define NRFX_PWM_DEFAULT_CONFIG_BASE_CLOCK 4\n\n#endif\n\n\n\n// <o> NRFX_PWM_DEFAULT_CONFIG_COUNT_MODE  - Count mode\n\n \n\n// <0=> Up \n\n// <1=> Up and Down \n\n\n\n#ifndef NRFX_PWM_DEFAULT_CONFIG_COUNT_MODE\n\n#define NRFX_PWM_DEFAULT_CONFIG_COUNT_MODE 0\n\n#endif\n\n\n\n// <o> NRFX_PWM_DEFAULT_CONFIG_TOP_VALUE - Top value \n\n#ifndef NRFX_PWM_DEFAULT_CONFIG_TOP_VALUE\n\n#define NRFX_PWM_DEFAULT_CONFIG_TOP_VALUE 1000\n\n#endif\n\n\n\n// <o> NRFX_PWM_DEFAULT_CONFIG_LOAD_MODE  - Load mode\n\n \n\n// <0=> Common \n\n// <1=> Grouped \n\n// <2=> Individual \n\n// <3=> Waveform \n\n\n\n#ifndef NRFX_PWM_DEFAULT_CONFIG_LOAD_MODE\n\n#define NRFX_PWM_DEFAULT_CONFIG_LOAD_MODE 0\n\n#endif\n\n\n\n// <o> NRFX_PWM_DEFAULT_CONFIG_STEP_MODE  - Step mode\n\n \n\n// <0=> Auto \n\n// <1=> Triggered \n\n\n\n#ifndef NRFX_PWM_DEFAULT_CONFIG_STEP_MODE\n\n#define NRFX_PWM_DEFAULT_CONFIG_STEP_MODE 0\n\n#endif\n\n\n\n// <o> NRFX_PWM_DEFAULT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_PWM_DEFAULT_CONFIG_IRQ_PRIORITY\n\n#define NRFX_PWM_DEFAULT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> NRFX_PWM_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_PWM_CONFIG_LOG_ENABLED\n\n#define NRFX_PWM_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_PWM_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_PWM_CONFIG_LOG_LEVEL\n\n#define NRFX_PWM_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_PWM_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_PWM_CONFIG_INFO_COLOR\n\n#define NRFX_PWM_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_PWM_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_PWM_CONFIG_DEBUG_COLOR\n\n#define NRFX_PWM_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRFX_PWM_NRF52_ANOMALY_109_WORKAROUND_ENABLED - Enables nRF52 Anomaly 109 workaround for PWM.\n\n\n\n// <i> The workaround uses interrupts to wake up the CPU and ensure\n\n// <i> it is active when PWM is about to start a DMA transfer. For\n\n// <i> initial transfer, done when a playback is started via PPI,\n\n// <i> a specific EGU instance is used to generate the interrupt.\n\n// <i> During the playback, the PWM interrupt triggered on SEQEND\n\n// <i> event of a preceding sequence is used to protect the transfer\n\n// <i> done for the next sequence to be played.\n\n//==========================================================\n\n#ifndef NRFX_PWM_NRF52_ANOMALY_109_WORKAROUND_ENABLED\n\n#define NRFX_PWM_NRF52_ANOMALY_109_WORKAROUND_ENABLED 0\n\n#endif\n\n// <o> NRFX_PWM_NRF52_ANOMALY_109_EGU_INSTANCE  - EGU instance used by the nRF52 Anomaly 109 workaround for PWM.\n\n \n\n// <0=> EGU0 \n\n// <1=> EGU1 \n\n// <2=> EGU2 \n\n// <3=> EGU3 \n\n// <4=> EGU4 \n\n// <5=> EGU5 \n\n\n\n#ifndef NRFX_PWM_NRF52_ANOMALY_109_EGU_INSTANCE\n\n#define NRFX_PWM_NRF52_ANOMALY_109_EGU_INSTANCE 5\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRFX_QDEC_ENABLED - nrfx_qdec - QDEC peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_QDEC_ENABLED\n\n#define NRFX_QDEC_ENABLED 0\n\n#endif\n\n// <o> NRFX_QDEC_CONFIG_REPORTPER  - Report period\n\n \n\n// <0=> 10 Samples \n\n// <1=> 40 Samples \n\n// <2=> 80 Samples \n\n// <3=> 120 Samples \n\n// <4=> 160 Samples \n\n// <5=> 200 Samples \n\n// <6=> 240 Samples \n\n// <7=> 280 Samples \n\n\n\n#ifndef NRFX_QDEC_CONFIG_REPORTPER\n\n#define NRFX_QDEC_CONFIG_REPORTPER 0\n\n#endif\n\n\n\n// <o> NRFX_QDEC_CONFIG_SAMPLEPER  - Sample period\n\n \n\n// <0=> 128 us \n\n// <1=> 256 us \n\n// <2=> 512 us \n\n// <3=> 1024 us \n\n// <4=> 2048 us \n\n// <5=> 4096 us \n\n// <6=> 8192 us \n\n// <7=> 16384 us \n\n\n\n#ifndef NRFX_QDEC_CONFIG_SAMPLEPER\n\n#define NRFX_QDEC_CONFIG_SAMPLEPER 7\n\n#endif\n\n\n\n// <o> NRFX_QDEC_CONFIG_PIO_A - A pin  <0-31> \n\n\n\n\n\n#ifndef NRFX_QDEC_CONFIG_PIO_A\n\n#define NRFX_QDEC_CONFIG_PIO_A 31\n\n#endif\n\n\n\n// <o> NRFX_QDEC_CONFIG_PIO_B - B pin  <0-31> \n\n\n\n\n\n#ifndef NRFX_QDEC_CONFIG_PIO_B\n\n#define NRFX_QDEC_CONFIG_PIO_B 31\n\n#endif\n\n\n\n// <o> NRFX_QDEC_CONFIG_PIO_LED - LED pin  <0-31> \n\n\n\n\n\n#ifndef NRFX_QDEC_CONFIG_PIO_LED\n\n#define NRFX_QDEC_CONFIG_PIO_LED 31\n\n#endif\n\n\n\n// <o> NRFX_QDEC_CONFIG_LEDPRE - LED pre \n\n#ifndef NRFX_QDEC_CONFIG_LEDPRE\n\n#define NRFX_QDEC_CONFIG_LEDPRE 511\n\n#endif\n\n\n\n// <o> NRFX_QDEC_CONFIG_LEDPOL  - LED polarity\n\n \n\n// <0=> Active low \n\n// <1=> Active high \n\n\n\n#ifndef NRFX_QDEC_CONFIG_LEDPOL\n\n#define NRFX_QDEC_CONFIG_LEDPOL 1\n\n#endif\n\n\n\n// <q> NRFX_QDEC_CONFIG_DBFEN  - Debouncing enable\n\n \n\n\n\n#ifndef NRFX_QDEC_CONFIG_DBFEN\n\n#define NRFX_QDEC_CONFIG_DBFEN 0\n\n#endif\n\n\n\n// <q> NRFX_QDEC_CONFIG_SAMPLE_INTEN  - Sample ready interrupt enable\n\n \n\n\n\n#ifndef NRFX_QDEC_CONFIG_SAMPLE_INTEN\n\n#define NRFX_QDEC_CONFIG_SAMPLE_INTEN 0\n\n#endif\n\n\n\n// <o> NRFX_QDEC_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_QDEC_CONFIG_IRQ_PRIORITY\n\n#define NRFX_QDEC_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> NRFX_QDEC_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_QDEC_CONFIG_LOG_ENABLED\n\n#define NRFX_QDEC_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_QDEC_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_QDEC_CONFIG_LOG_LEVEL\n\n#define NRFX_QDEC_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_QDEC_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_QDEC_CONFIG_INFO_COLOR\n\n#define NRFX_QDEC_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_QDEC_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_QDEC_CONFIG_DEBUG_COLOR\n\n#define NRFX_QDEC_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRFX_RNG_ENABLED - nrfx_rng - RNG peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_RNG_ENABLED\n\n#define NRFX_RNG_ENABLED 0\n\n#endif\n\n// <q> NRFX_RNG_CONFIG_ERROR_CORRECTION  - Error correction\n\n \n\n\n\n#ifndef NRFX_RNG_CONFIG_ERROR_CORRECTION\n\n#define NRFX_RNG_CONFIG_ERROR_CORRECTION 1\n\n#endif\n\n\n\n// <o> NRFX_RNG_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_RNG_CONFIG_IRQ_PRIORITY\n\n#define NRFX_RNG_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> NRFX_RNG_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_RNG_CONFIG_LOG_ENABLED\n\n#define NRFX_RNG_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_RNG_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_RNG_CONFIG_LOG_LEVEL\n\n#define NRFX_RNG_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_RNG_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_RNG_CONFIG_INFO_COLOR\n\n#define NRFX_RNG_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_RNG_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_RNG_CONFIG_DEBUG_COLOR\n\n#define NRFX_RNG_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRFX_RTC_ENABLED - nrfx_rtc - RTC peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_RTC_ENABLED\n\n#define NRFX_RTC_ENABLED 0\n\n#endif\n\n// <q> NRFX_RTC0_ENABLED  - Enable RTC0 instance\n\n \n\n\n\n#ifndef NRFX_RTC0_ENABLED\n\n#define NRFX_RTC0_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_RTC1_ENABLED  - Enable RTC1 instance\n\n \n\n\n\n#ifndef NRFX_RTC1_ENABLED\n\n#define NRFX_RTC1_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_RTC2_ENABLED  - Enable RTC2 instance\n\n \n\n\n\n#ifndef NRFX_RTC2_ENABLED\n\n#define NRFX_RTC2_ENABLED 0\n\n#endif\n\n\n\n// <o> NRFX_RTC_MAXIMUM_LATENCY_US - Maximum possible time[us] in highest priority interrupt \n\n#ifndef NRFX_RTC_MAXIMUM_LATENCY_US\n\n#define NRFX_RTC_MAXIMUM_LATENCY_US 2000\n\n#endif\n\n\n\n// <o> NRFX_RTC_DEFAULT_CONFIG_FREQUENCY - Frequency  <16-32768> \n\n\n\n\n\n#ifndef NRFX_RTC_DEFAULT_CONFIG_FREQUENCY\n\n#define NRFX_RTC_DEFAULT_CONFIG_FREQUENCY 32768\n\n#endif\n\n\n\n// <q> NRFX_RTC_DEFAULT_CONFIG_RELIABLE  - Ensures safe compare event triggering\n\n \n\n\n\n#ifndef NRFX_RTC_DEFAULT_CONFIG_RELIABLE\n\n#define NRFX_RTC_DEFAULT_CONFIG_RELIABLE 0\n\n#endif\n\n\n\n// <o> NRFX_RTC_DEFAULT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_RTC_DEFAULT_CONFIG_IRQ_PRIORITY\n\n#define NRFX_RTC_DEFAULT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> NRFX_RTC_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_RTC_CONFIG_LOG_ENABLED\n\n#define NRFX_RTC_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_RTC_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_RTC_CONFIG_LOG_LEVEL\n\n#define NRFX_RTC_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_RTC_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_RTC_CONFIG_INFO_COLOR\n\n#define NRFX_RTC_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_RTC_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_RTC_CONFIG_DEBUG_COLOR\n\n#define NRFX_RTC_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRFX_SAADC_ENABLED - nrfx_saadc - SAADC peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_SAADC_ENABLED\n\n#define NRFX_SAADC_ENABLED 0\n\n#endif\n\n// <o> NRFX_SAADC_CONFIG_RESOLUTION  - Resolution\n\n \n\n// <0=> 8 bit \n\n// <1=> 10 bit \n\n// <2=> 12 bit \n\n// <3=> 14 bit \n\n\n\n#ifndef NRFX_SAADC_CONFIG_RESOLUTION\n\n#define NRFX_SAADC_CONFIG_RESOLUTION 1\n\n#endif\n\n\n\n// <o> NRFX_SAADC_CONFIG_OVERSAMPLE  - Sample period\n\n \n\n// <0=> Disabled \n\n// <1=> 2x \n\n// <2=> 4x \n\n// <3=> 8x \n\n// <4=> 16x \n\n// <5=> 32x \n\n// <6=> 64x \n\n// <7=> 128x \n\n// <8=> 256x \n\n\n\n#ifndef NRFX_SAADC_CONFIG_OVERSAMPLE\n\n#define NRFX_SAADC_CONFIG_OVERSAMPLE 0\n\n#endif\n\n\n\n// <q> NRFX_SAADC_CONFIG_LP_MODE  - Enabling low power mode\n\n \n\n\n\n#ifndef NRFX_SAADC_CONFIG_LP_MODE\n\n#define NRFX_SAADC_CONFIG_LP_MODE 0\n\n#endif\n\n\n\n// <o> NRFX_SAADC_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_SAADC_CONFIG_IRQ_PRIORITY\n\n#define NRFX_SAADC_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> NRFX_SAADC_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_SAADC_CONFIG_LOG_ENABLED\n\n#define NRFX_SAADC_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_SAADC_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_SAADC_CONFIG_LOG_LEVEL\n\n#define NRFX_SAADC_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_SAADC_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_SAADC_CONFIG_INFO_COLOR\n\n#define NRFX_SAADC_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_SAADC_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_SAADC_CONFIG_DEBUG_COLOR\n\n#define NRFX_SAADC_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRFX_SPIM_ENABLED - nrfx_spim - SPIM peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_SPIM_ENABLED\n\n#define NRFX_SPIM_ENABLED 0\n\n#endif\n\n// <q> NRFX_SPIM0_ENABLED  - Enable SPIM0 instance\n\n \n\n\n\n#ifndef NRFX_SPIM0_ENABLED\n\n#define NRFX_SPIM0_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_SPIM1_ENABLED  - Enable SPIM1 instance\n\n \n\n\n\n#ifndef NRFX_SPIM1_ENABLED\n\n#define NRFX_SPIM1_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_SPIM2_ENABLED  - Enable SPIM2 instance\n\n \n\n\n\n#ifndef NRFX_SPIM2_ENABLED\n\n#define NRFX_SPIM2_ENABLED 0\n\n#endif\n\n\n\n// <o> NRFX_SPIM_MISO_PULL_CFG  - MISO pin pull configuration.\n\n \n\n// <0=> NRF_GPIO_PIN_NOPULL \n\n// <1=> NRF_GPIO_PIN_PULLDOWN \n\n// <3=> NRF_GPIO_PIN_PULLUP \n\n\n\n#ifndef NRFX_SPIM_MISO_PULL_CFG\n\n#define NRFX_SPIM_MISO_PULL_CFG 1\n\n#endif\n\n\n\n// <o> NRFX_SPIM_DEFAULT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_SPIM_DEFAULT_CONFIG_IRQ_PRIORITY\n\n#define NRFX_SPIM_DEFAULT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> NRFX_SPIM_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_SPIM_CONFIG_LOG_ENABLED\n\n#define NRFX_SPIM_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_SPIM_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_SPIM_CONFIG_LOG_LEVEL\n\n#define NRFX_SPIM_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_SPIM_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_SPIM_CONFIG_INFO_COLOR\n\n#define NRFX_SPIM_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_SPIM_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_SPIM_CONFIG_DEBUG_COLOR\n\n#define NRFX_SPIM_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <q> NRFX_SPIM_NRF52_ANOMALY_109_WORKAROUND_ENABLED  - Enables nRF52 anomaly 109 workaround for SPIM.\n\n \n\n\n\n// <i> The workaround uses interrupts to wake up the CPU by catching\n\n// <i> a start event of zero-length transmission to start the clock. This \n\n// <i> ensures that the DMA transfer will be executed without issues and\n\n// <i> that the proper transfer will be started. See more in the Errata \n\n// <i> document or Anomaly 109 Addendum located at \n\n// <i> https://infocenter.nordicsemi.com/\n\n\n\n#ifndef NRFX_SPIM_NRF52_ANOMALY_109_WORKAROUND_ENABLED\n\n#define NRFX_SPIM_NRF52_ANOMALY_109_WORKAROUND_ENABLED 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRFX_SPIS_ENABLED - nrfx_spis - SPIS peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_SPIS_ENABLED\n\n#define NRFX_SPIS_ENABLED 0\n\n#endif\n\n// <q> NRFX_SPIS0_ENABLED  - Enable SPIS0 instance\n\n \n\n\n\n#ifndef NRFX_SPIS0_ENABLED\n\n#define NRFX_SPIS0_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_SPIS1_ENABLED  - Enable SPIS1 instance\n\n \n\n\n\n#ifndef NRFX_SPIS1_ENABLED\n\n#define NRFX_SPIS1_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_SPIS2_ENABLED  - Enable SPIS2 instance\n\n \n\n\n\n#ifndef NRFX_SPIS2_ENABLED\n\n#define NRFX_SPIS2_ENABLED 0\n\n#endif\n\n\n\n// <o> NRFX_SPIS_DEFAULT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_SPIS_DEFAULT_CONFIG_IRQ_PRIORITY\n\n#define NRFX_SPIS_DEFAULT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <o> NRFX_SPIS_DEFAULT_DEF - SPIS default DEF character  <0-255> \n\n\n\n\n\n#ifndef NRFX_SPIS_DEFAULT_DEF\n\n#define NRFX_SPIS_DEFAULT_DEF 255\n\n#endif\n\n\n\n// <o> NRFX_SPIS_DEFAULT_ORC - SPIS default ORC character  <0-255> \n\n\n\n\n\n#ifndef NRFX_SPIS_DEFAULT_ORC\n\n#define NRFX_SPIS_DEFAULT_ORC 255\n\n#endif\n\n\n\n// <e> NRFX_SPIS_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_SPIS_CONFIG_LOG_ENABLED\n\n#define NRFX_SPIS_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_SPIS_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_SPIS_CONFIG_LOG_LEVEL\n\n#define NRFX_SPIS_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_SPIS_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_SPIS_CONFIG_INFO_COLOR\n\n#define NRFX_SPIS_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_SPIS_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_SPIS_CONFIG_DEBUG_COLOR\n\n#define NRFX_SPIS_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <q> NRFX_SPIS_NRF52_ANOMALY_109_WORKAROUND_ENABLED  - Enables nRF52 Anomaly 109 workaround for SPIS.\n\n \n\n\n\n// <i> The workaround uses a GPIOTE channel to generate interrupts\n\n// <i> on falling edges detected on the CSN line. This will make\n\n// <i> the CPU active for the moment when SPIS starts DMA transfers,\n\n// <i> and this way the transfers will be protected.\n\n// <i> This workaround uses GPIOTE driver, so this driver must be\n\n// <i> enabled as well.\n\n\n\n#ifndef NRFX_SPIS_NRF52_ANOMALY_109_WORKAROUND_ENABLED\n\n#define NRFX_SPIS_NRF52_ANOMALY_109_WORKAROUND_ENABLED 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRFX_SPI_ENABLED - nrfx_spi - SPI peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_SPI_ENABLED\n\n#define NRFX_SPI_ENABLED 0\n\n#endif\n\n// <q> NRFX_SPI0_ENABLED  - Enable SPI0 instance\n\n \n\n\n\n#ifndef NRFX_SPI0_ENABLED\n\n#define NRFX_SPI0_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_SPI1_ENABLED  - Enable SPI1 instance\n\n \n\n\n\n#ifndef NRFX_SPI1_ENABLED\n\n#define NRFX_SPI1_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_SPI2_ENABLED  - Enable SPI2 instance\n\n \n\n\n\n#ifndef NRFX_SPI2_ENABLED\n\n#define NRFX_SPI2_ENABLED 0\n\n#endif\n\n\n\n// <o> NRFX_SPI_MISO_PULL_CFG  - MISO pin pull configuration.\n\n \n\n// <0=> NRF_GPIO_PIN_NOPULL \n\n// <1=> NRF_GPIO_PIN_PULLDOWN \n\n// <3=> NRF_GPIO_PIN_PULLUP \n\n\n\n#ifndef NRFX_SPI_MISO_PULL_CFG\n\n#define NRFX_SPI_MISO_PULL_CFG 1\n\n#endif\n\n\n\n// <o> NRFX_SPI_DEFAULT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_SPI_DEFAULT_CONFIG_IRQ_PRIORITY\n\n#define NRFX_SPI_DEFAULT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> NRFX_SPI_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_SPI_CONFIG_LOG_ENABLED\n\n#define NRFX_SPI_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_SPI_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_SPI_CONFIG_LOG_LEVEL\n\n#define NRFX_SPI_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_SPI_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_SPI_CONFIG_INFO_COLOR\n\n#define NRFX_SPI_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_SPI_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_SPI_CONFIG_DEBUG_COLOR\n\n#define NRFX_SPI_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRFX_SWI_ENABLED - nrfx_swi - SWI/EGU peripheral allocator\n\n//==========================================================\n\n#ifndef NRFX_SWI_ENABLED\n\n#define NRFX_SWI_ENABLED 0\n\n#endif\n\n// <q> NRFX_EGU_ENABLED  - Enable EGU support\n\n \n\n\n\n#ifndef NRFX_EGU_ENABLED\n\n#define NRFX_EGU_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_SWI0_DISABLED  - Exclude SWI0 from being utilized by the driver\n\n \n\n\n\n#ifndef NRFX_SWI0_DISABLED\n\n#define NRFX_SWI0_DISABLED 0\n\n#endif\n\n\n\n// <q> NRFX_SWI1_DISABLED  - Exclude SWI1 from being utilized by the driver\n\n \n\n\n\n#ifndef NRFX_SWI1_DISABLED\n\n#define NRFX_SWI1_DISABLED 0\n\n#endif\n\n\n\n// <q> NRFX_SWI2_DISABLED  - Exclude SWI2 from being utilized by the driver\n\n \n\n\n\n#ifndef NRFX_SWI2_DISABLED\n\n#define NRFX_SWI2_DISABLED 0\n\n#endif\n\n\n\n// <q> NRFX_SWI3_DISABLED  - Exclude SWI3 from being utilized by the driver\n\n \n\n\n\n#ifndef NRFX_SWI3_DISABLED\n\n#define NRFX_SWI3_DISABLED 0\n\n#endif\n\n\n\n// <q> NRFX_SWI4_DISABLED  - Exclude SWI4 from being utilized by the driver\n\n \n\n\n\n#ifndef NRFX_SWI4_DISABLED\n\n#define NRFX_SWI4_DISABLED 0\n\n#endif\n\n\n\n// <q> NRFX_SWI5_DISABLED  - Exclude SWI5 from being utilized by the driver\n\n \n\n\n\n#ifndef NRFX_SWI5_DISABLED\n\n#define NRFX_SWI5_DISABLED 0\n\n#endif\n\n\n\n// <e> NRFX_SWI_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_SWI_CONFIG_LOG_ENABLED\n\n#define NRFX_SWI_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_SWI_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_SWI_CONFIG_LOG_LEVEL\n\n#define NRFX_SWI_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_SWI_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_SWI_CONFIG_INFO_COLOR\n\n#define NRFX_SWI_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_SWI_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_SWI_CONFIG_DEBUG_COLOR\n\n#define NRFX_SWI_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRFX_TIMER_ENABLED - nrfx_timer - TIMER periperal driver\n\n//==========================================================\n\n#ifndef NRFX_TIMER_ENABLED\n\n#define NRFX_TIMER_ENABLED 0\n\n#endif\n\n// <q> NRFX_TIMER0_ENABLED  - Enable TIMER0 instance\n\n \n\n\n\n#ifndef NRFX_TIMER0_ENABLED\n\n#define NRFX_TIMER0_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_TIMER1_ENABLED  - Enable TIMER1 instance\n\n \n\n\n\n#ifndef NRFX_TIMER1_ENABLED\n\n#define NRFX_TIMER1_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_TIMER2_ENABLED  - Enable TIMER2 instance\n\n \n\n\n\n#ifndef NRFX_TIMER2_ENABLED\n\n#define NRFX_TIMER2_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_TIMER3_ENABLED  - Enable TIMER3 instance\n\n \n\n\n\n#ifndef NRFX_TIMER3_ENABLED\n\n#define NRFX_TIMER3_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_TIMER4_ENABLED  - Enable TIMER4 instance\n\n \n\n\n\n#ifndef NRFX_TIMER4_ENABLED\n\n#define NRFX_TIMER4_ENABLED 0\n\n#endif\n\n\n\n// <o> NRFX_TIMER_DEFAULT_CONFIG_FREQUENCY  - Timer frequency if in Timer mode\n\n \n\n// <0=> 16 MHz \n\n// <1=> 8 MHz \n\n// <2=> 4 MHz \n\n// <3=> 2 MHz \n\n// <4=> 1 MHz \n\n// <5=> 500 kHz \n\n// <6=> 250 kHz \n\n// <7=> 125 kHz \n\n// <8=> 62.5 kHz \n\n// <9=> 31.25 kHz \n\n\n\n#ifndef NRFX_TIMER_DEFAULT_CONFIG_FREQUENCY\n\n#define NRFX_TIMER_DEFAULT_CONFIG_FREQUENCY 0\n\n#endif\n\n\n\n// <o> NRFX_TIMER_DEFAULT_CONFIG_MODE  - Timer mode or operation\n\n \n\n// <0=> Timer \n\n// <1=> Counter \n\n\n\n#ifndef NRFX_TIMER_DEFAULT_CONFIG_MODE\n\n#define NRFX_TIMER_DEFAULT_CONFIG_MODE 0\n\n#endif\n\n\n\n// <o> NRFX_TIMER_DEFAULT_CONFIG_BIT_WIDTH  - Timer counter bit width\n\n \n\n// <0=> 16 bit \n\n// <1=> 8 bit \n\n// <2=> 24 bit \n\n// <3=> 32 bit \n\n\n\n#ifndef NRFX_TIMER_DEFAULT_CONFIG_BIT_WIDTH\n\n#define NRFX_TIMER_DEFAULT_CONFIG_BIT_WIDTH 0\n\n#endif\n\n\n\n// <o> NRFX_TIMER_DEFAULT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_TIMER_DEFAULT_CONFIG_IRQ_PRIORITY\n\n#define NRFX_TIMER_DEFAULT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> NRFX_TIMER_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_TIMER_CONFIG_LOG_ENABLED\n\n#define NRFX_TIMER_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_TIMER_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_TIMER_CONFIG_LOG_LEVEL\n\n#define NRFX_TIMER_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_TIMER_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_TIMER_CONFIG_INFO_COLOR\n\n#define NRFX_TIMER_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_TIMER_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_TIMER_CONFIG_DEBUG_COLOR\n\n#define NRFX_TIMER_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRFX_TWIM_ENABLED - nrfx_twim - TWIM peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_TWIM_ENABLED\n\n#define NRFX_TWIM_ENABLED 0\n\n#endif\n\n// <q> NRFX_TWIM0_ENABLED  - Enable TWIM0 instance\n\n \n\n\n\n#ifndef NRFX_TWIM0_ENABLED\n\n#define NRFX_TWIM0_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_TWIM1_ENABLED  - Enable TWIM1 instance\n\n \n\n\n\n#ifndef NRFX_TWIM1_ENABLED\n\n#define NRFX_TWIM1_ENABLED 0\n\n#endif\n\n\n\n// <o> NRFX_TWIM_DEFAULT_CONFIG_FREQUENCY  - Frequency\n\n \n\n// <26738688=> 100k \n\n// <67108864=> 250k \n\n// <104857600=> 400k \n\n\n\n#ifndef NRFX_TWIM_DEFAULT_CONFIG_FREQUENCY\n\n#define NRFX_TWIM_DEFAULT_CONFIG_FREQUENCY 26738688\n\n#endif\n\n\n\n// <q> NRFX_TWIM_DEFAULT_CONFIG_HOLD_BUS_UNINIT  - Enables bus holding after uninit\n\n \n\n\n\n#ifndef NRFX_TWIM_DEFAULT_CONFIG_HOLD_BUS_UNINIT\n\n#define NRFX_TWIM_DEFAULT_CONFIG_HOLD_BUS_UNINIT 0\n\n#endif\n\n\n\n// <o> NRFX_TWIM_DEFAULT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_TWIM_DEFAULT_CONFIG_IRQ_PRIORITY\n\n#define NRFX_TWIM_DEFAULT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> NRFX_TWIM_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_TWIM_CONFIG_LOG_ENABLED\n\n#define NRFX_TWIM_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_TWIM_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_TWIM_CONFIG_LOG_LEVEL\n\n#define NRFX_TWIM_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_TWIM_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_TWIM_CONFIG_INFO_COLOR\n\n#define NRFX_TWIM_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_TWIM_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_TWIM_CONFIG_DEBUG_COLOR\n\n#define NRFX_TWIM_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <q> NRFX_TWIM_NRF52_ANOMALY_109_WORKAROUND_ENABLED  - Enables nRF52 anomaly 109 workaround for TWIM.\n\n \n\n\n\n// <i> The workaround uses interrupts to wake up the CPU by catching\n\n// <i> the start event of zero-frequency transmission, clear the \n\n// <i> peripheral, set desired frequency, start the peripheral, and\n\n// <i> the proper transmission. See more in the Errata document or\n\n// <i> Anomaly 109 Addendum located at https://infocenter.nordicsemi.com/\n\n\n\n#ifndef NRFX_TWIM_NRF52_ANOMALY_109_WORKAROUND_ENABLED\n\n#define NRFX_TWIM_NRF52_ANOMALY_109_WORKAROUND_ENABLED 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRFX_TWIS_ENABLED - nrfx_twis - TWIS peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_TWIS_ENABLED\n\n#define NRFX_TWIS_ENABLED 0\n\n#endif\n\n// <q> NRFX_TWIS0_ENABLED  - Enable TWIS0 instance\n\n \n\n\n\n#ifndef NRFX_TWIS0_ENABLED\n\n#define NRFX_TWIS0_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_TWIS1_ENABLED  - Enable TWIS1 instance\n\n \n\n\n\n#ifndef NRFX_TWIS1_ENABLED\n\n#define NRFX_TWIS1_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_TWIS_ASSUME_INIT_AFTER_RESET_ONLY  - Assume that any instance would be initialized only once\n\n \n\n\n\n// <i> Optimization flag. Registers used by TWIS are shared by other peripherals. Normally, during initialization driver tries to clear all registers to known state before doing the initialization itself. This gives initialization safe procedure, no matter when it would be called. If you activate TWIS only once and do never uninitialize it - set this flag to 1 what gives more optimal code.\n\n\n\n#ifndef NRFX_TWIS_ASSUME_INIT_AFTER_RESET_ONLY\n\n#define NRFX_TWIS_ASSUME_INIT_AFTER_RESET_ONLY 0\n\n#endif\n\n\n\n// <q> NRFX_TWIS_NO_SYNC_MODE  - Remove support for synchronous mode\n\n \n\n\n\n// <i> Synchronous mode would be used in specific situations. And it uses some additional code and data memory to safely process state machine by polling it in status functions. If this functionality is not required it may be disabled to free some resources.\n\n\n\n#ifndef NRFX_TWIS_NO_SYNC_MODE\n\n#define NRFX_TWIS_NO_SYNC_MODE 0\n\n#endif\n\n\n\n// <o> NRFX_TWIS_DEFAULT_CONFIG_ADDR0 - Address0 \n\n#ifndef NRFX_TWIS_DEFAULT_CONFIG_ADDR0\n\n#define NRFX_TWIS_DEFAULT_CONFIG_ADDR0 0\n\n#endif\n\n\n\n// <o> NRFX_TWIS_DEFAULT_CONFIG_ADDR1 - Address1 \n\n#ifndef NRFX_TWIS_DEFAULT_CONFIG_ADDR1\n\n#define NRFX_TWIS_DEFAULT_CONFIG_ADDR1 0\n\n#endif\n\n\n\n// <o> NRFX_TWIS_DEFAULT_CONFIG_SCL_PULL  - SCL pin pull configuration\n\n \n\n// <0=> Disabled \n\n// <1=> Pull down \n\n// <3=> Pull up \n\n\n\n#ifndef NRFX_TWIS_DEFAULT_CONFIG_SCL_PULL\n\n#define NRFX_TWIS_DEFAULT_CONFIG_SCL_PULL 0\n\n#endif\n\n\n\n// <o> NRFX_TWIS_DEFAULT_CONFIG_SDA_PULL  - SDA pin pull configuration\n\n \n\n// <0=> Disabled \n\n// <1=> Pull down \n\n// <3=> Pull up \n\n\n\n#ifndef NRFX_TWIS_DEFAULT_CONFIG_SDA_PULL\n\n#define NRFX_TWIS_DEFAULT_CONFIG_SDA_PULL 0\n\n#endif\n\n\n\n// <o> NRFX_TWIS_DEFAULT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_TWIS_DEFAULT_CONFIG_IRQ_PRIORITY\n\n#define NRFX_TWIS_DEFAULT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> NRFX_TWIS_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_TWIS_CONFIG_LOG_ENABLED\n\n#define NRFX_TWIS_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_TWIS_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_TWIS_CONFIG_LOG_LEVEL\n\n#define NRFX_TWIS_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_TWIS_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_TWIS_CONFIG_INFO_COLOR\n\n#define NRFX_TWIS_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_TWIS_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_TWIS_CONFIG_DEBUG_COLOR\n\n#define NRFX_TWIS_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRFX_TWI_ENABLED - nrfx_twi - TWI peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_TWI_ENABLED\n\n#define NRFX_TWI_ENABLED 0\n\n#endif\n\n// <q> NRFX_TWI0_ENABLED  - Enable TWI0 instance\n\n \n\n\n\n#ifndef NRFX_TWI0_ENABLED\n\n#define NRFX_TWI0_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_TWI1_ENABLED  - Enable TWI1 instance\n\n \n\n\n\n#ifndef NRFX_TWI1_ENABLED\n\n#define NRFX_TWI1_ENABLED 0\n\n#endif\n\n\n\n// <o> NRFX_TWI_DEFAULT_CONFIG_FREQUENCY  - Frequency\n\n \n\n// <26738688=> 100k \n\n// <67108864=> 250k \n\n// <104857600=> 400k \n\n\n\n#ifndef NRFX_TWI_DEFAULT_CONFIG_FREQUENCY\n\n#define NRFX_TWI_DEFAULT_CONFIG_FREQUENCY 26738688\n\n#endif\n\n\n\n// <q> NRFX_TWI_DEFAULT_CONFIG_HOLD_BUS_UNINIT  - Enables bus holding after uninit\n\n \n\n\n\n#ifndef NRFX_TWI_DEFAULT_CONFIG_HOLD_BUS_UNINIT\n\n#define NRFX_TWI_DEFAULT_CONFIG_HOLD_BUS_UNINIT 0\n\n#endif\n\n\n\n// <o> NRFX_TWI_DEFAULT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_TWI_DEFAULT_CONFIG_IRQ_PRIORITY\n\n#define NRFX_TWI_DEFAULT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> NRFX_TWI_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_TWI_CONFIG_LOG_ENABLED\n\n#define NRFX_TWI_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_TWI_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_TWI_CONFIG_LOG_LEVEL\n\n#define NRFX_TWI_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_TWI_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_TWI_CONFIG_INFO_COLOR\n\n#define NRFX_TWI_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_TWI_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_TWI_CONFIG_DEBUG_COLOR\n\n#define NRFX_TWI_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRFX_UARTE_ENABLED - nrfx_uarte - UARTE peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_UARTE_ENABLED\n\n#define NRFX_UARTE_ENABLED 1\n\n#endif\n\n// <o> NRFX_UARTE0_ENABLED - Enable UARTE0 instance \n\n#ifndef NRFX_UARTE0_ENABLED\n\n#define NRFX_UARTE0_ENABLED 0\n\n#endif\n\n\n\n// <o> NRFX_UARTE_DEFAULT_CONFIG_HWFC  - Hardware Flow Control\n\n \n\n// <0=> Disabled \n\n// <1=> Enabled \n\n\n\n#ifndef NRFX_UARTE_DEFAULT_CONFIG_HWFC\n\n#define NRFX_UARTE_DEFAULT_CONFIG_HWFC 0\n\n#endif\n\n\n\n// <o> NRFX_UARTE_DEFAULT_CONFIG_PARITY  - Parity\n\n \n\n// <0=> Excluded \n\n// <14=> Included \n\n\n\n#ifndef NRFX_UARTE_DEFAULT_CONFIG_PARITY\n\n#define NRFX_UARTE_DEFAULT_CONFIG_PARITY 0\n\n#endif\n\n\n\n// <o> NRFX_UARTE_DEFAULT_CONFIG_BAUDRATE  - Default Baudrate\n\n \n\n// <323584=> 1200 baud \n\n// <643072=> 2400 baud \n\n// <1290240=> 4800 baud \n\n// <2576384=> 9600 baud \n\n// <3862528=> 14400 baud \n\n// <5152768=> 19200 baud \n\n// <7716864=> 28800 baud \n\n// <8388608=> 31250 baud \n\n// <10289152=> 38400 baud \n\n// <15007744=> 56000 baud \n\n// <15400960=> 57600 baud \n\n// <20615168=> 76800 baud \n\n// <30801920=> 115200 baud \n\n// <61865984=> 230400 baud \n\n// <67108864=> 250000 baud \n\n// <121634816=> 460800 baud \n\n// <251658240=> 921600 baud \n\n// <268435456=> 1000000 baud \n\n\n\n#ifndef NRFX_UARTE_DEFAULT_CONFIG_BAUDRATE\n\n#define NRFX_UARTE_DEFAULT_CONFIG_BAUDRATE 30801920\n\n#endif\n\n\n\n// <o> NRFX_UARTE_DEFAULT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_UARTE_DEFAULT_CONFIG_IRQ_PRIORITY\n\n#define NRFX_UARTE_DEFAULT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> NRFX_UARTE_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_UARTE_CONFIG_LOG_ENABLED\n\n#define NRFX_UARTE_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_UARTE_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_UARTE_CONFIG_LOG_LEVEL\n\n#define NRFX_UARTE_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_UARTE_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_UARTE_CONFIG_INFO_COLOR\n\n#define NRFX_UARTE_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_UARTE_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_UARTE_CONFIG_DEBUG_COLOR\n\n#define NRFX_UARTE_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRFX_UART_ENABLED - nrfx_uart - UART peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_UART_ENABLED\n\n#define NRFX_UART_ENABLED 1\n\n#endif\n\n// <o> NRFX_UART0_ENABLED - Enable UART0 instance \n\n#ifndef NRFX_UART0_ENABLED\n\n#define NRFX_UART0_ENABLED 0\n\n#endif\n\n\n\n// <o> NRFX_UART_DEFAULT_CONFIG_HWFC  - Hardware Flow Control\n\n \n\n// <0=> Disabled \n\n// <1=> Enabled \n\n\n\n#ifndef NRFX_UART_DEFAULT_CONFIG_HWFC\n\n#define NRFX_UART_DEFAULT_CONFIG_HWFC 0\n\n#endif\n\n\n\n// <o> NRFX_UART_DEFAULT_CONFIG_PARITY  - Parity\n\n \n\n// <0=> Excluded \n\n// <14=> Included \n\n\n\n#ifndef NRFX_UART_DEFAULT_CONFIG_PARITY\n\n#define NRFX_UART_DEFAULT_CONFIG_PARITY 0\n\n#endif\n\n\n\n// <o> NRFX_UART_DEFAULT_CONFIG_BAUDRATE  - Default Baudrate\n\n \n\n// <323584=> 1200 baud \n\n// <643072=> 2400 baud \n\n// <1290240=> 4800 baud \n\n// <2576384=> 9600 baud \n\n// <3866624=> 14400 baud \n\n// <5152768=> 19200 baud \n\n// <7729152=> 28800 baud \n\n// <8388608=> 31250 baud \n\n// <10309632=> 38400 baud \n\n// <15007744=> 56000 baud \n\n// <15462400=> 57600 baud \n\n// <20615168=> 76800 baud \n\n// <30924800=> 115200 baud \n\n// <61845504=> 230400 baud \n\n// <67108864=> 250000 baud \n\n// <123695104=> 460800 baud \n\n// <247386112=> 921600 baud \n\n// <268435456=> 1000000 baud \n\n\n\n#ifndef NRFX_UART_DEFAULT_CONFIG_BAUDRATE\n\n#define NRFX_UART_DEFAULT_CONFIG_BAUDRATE 30924800\n\n#endif\n\n\n\n// <o> NRFX_UART_DEFAULT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_UART_DEFAULT_CONFIG_IRQ_PRIORITY\n\n#define NRFX_UART_DEFAULT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> NRFX_UART_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_UART_CONFIG_LOG_ENABLED\n\n#define NRFX_UART_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_UART_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_UART_CONFIG_LOG_LEVEL\n\n#define NRFX_UART_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_UART_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_UART_CONFIG_INFO_COLOR\n\n#define NRFX_UART_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_UART_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_UART_CONFIG_DEBUG_COLOR\n\n#define NRFX_UART_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRFX_WDT_ENABLED - nrfx_wdt - WDT peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_WDT_ENABLED\n\n#define NRFX_WDT_ENABLED 0\n\n#endif\n\n// <o> NRFX_WDT_CONFIG_BEHAVIOUR  - WDT behavior in CPU SLEEP or HALT mode\n\n \n\n// <1=> Run in SLEEP, Pause in HALT \n\n// <8=> Pause in SLEEP, Run in HALT \n\n// <9=> Run in SLEEP and HALT \n\n// <0=> Pause in SLEEP and HALT \n\n\n\n#ifndef NRFX_WDT_CONFIG_BEHAVIOUR\n\n#define NRFX_WDT_CONFIG_BEHAVIOUR 1\n\n#endif\n\n\n\n// <o> NRFX_WDT_CONFIG_RELOAD_VALUE - Reload value in ms  <1-131072000> \n\n\n\n\n\n#ifndef NRFX_WDT_CONFIG_RELOAD_VALUE\n\n#define NRFX_WDT_CONFIG_RELOAD_VALUE 2000\n\n#endif\n\n\n\n// <o> NRFX_WDT_CONFIG_NO_IRQ  - Remove WDT IRQ handling from WDT driver\n\n \n\n// <0=> Include WDT IRQ handling \n\n// <1=> Remove WDT IRQ handling \n\n\n\n#ifndef NRFX_WDT_CONFIG_NO_IRQ\n\n#define NRFX_WDT_CONFIG_NO_IRQ 0\n\n#endif\n\n\n\n// <o> NRFX_WDT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_WDT_CONFIG_IRQ_PRIORITY\n\n#define NRFX_WDT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> NRFX_WDT_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_WDT_CONFIG_LOG_ENABLED\n\n#define NRFX_WDT_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_WDT_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_WDT_CONFIG_LOG_LEVEL\n\n#define NRFX_WDT_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_WDT_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_WDT_CONFIG_INFO_COLOR\n\n#define NRFX_WDT_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_WDT_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_WDT_CONFIG_DEBUG_COLOR\n\n#define NRFX_WDT_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRF_CLOCK_ENABLED - nrf_drv_clock - CLOCK peripheral driver - legacy layer\n\n//==========================================================\n\n#ifndef NRF_CLOCK_ENABLED\n\n#define NRF_CLOCK_ENABLED 1\n\n#endif\n\n// <o> CLOCK_CONFIG_LF_SRC  - LF Clock Source\n\n \n\n// <0=> RC \n\n// <1=> XTAL \n\n// <2=> Synth \n\n// <131073=> External Low Swing \n\n// <196609=> External Full Swing \n\n\n\n#ifndef CLOCK_CONFIG_LF_SRC\n\n#define CLOCK_CONFIG_LF_SRC 1\n\n#endif\n\n\n\n// <q> CLOCK_CONFIG_LF_CAL_ENABLED  - Calibration enable for LF Clock Source\n\n \n\n\n\n#ifndef CLOCK_CONFIG_LF_CAL_ENABLED\n\n#define CLOCK_CONFIG_LF_CAL_ENABLED 0\n\n#endif\n\n\n\n// <o> CLOCK_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef CLOCK_CONFIG_IRQ_PRIORITY\n\n#define CLOCK_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> PDM_ENABLED - nrf_drv_pdm - PDM peripheral driver - legacy layer\n\n//==========================================================\n\n#ifndef PDM_ENABLED\n\n#define PDM_ENABLED 0\n\n#endif\n\n// <o> PDM_CONFIG_MODE  - Mode\n\n \n\n// <0=> Stereo \n\n// <1=> Mono \n\n\n\n#ifndef PDM_CONFIG_MODE\n\n#define PDM_CONFIG_MODE 1\n\n#endif\n\n\n\n// <o> PDM_CONFIG_EDGE  - Edge\n\n \n\n// <0=> Left falling \n\n// <1=> Left rising \n\n\n\n#ifndef PDM_CONFIG_EDGE\n\n#define PDM_CONFIG_EDGE 0\n\n#endif\n\n\n\n// <o> PDM_CONFIG_CLOCK_FREQ  - Clock frequency\n\n \n\n// <134217728=> 1000k \n\n// <138412032=> 1032k (default) \n\n// <142606336=> 1067k \n\n\n\n#ifndef PDM_CONFIG_CLOCK_FREQ\n\n#define PDM_CONFIG_CLOCK_FREQ 138412032\n\n#endif\n\n\n\n// <o> PDM_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef PDM_CONFIG_IRQ_PRIORITY\n\n#define PDM_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> POWER_ENABLED - nrf_drv_power - POWER peripheral driver - legacy layer\n\n//==========================================================\n\n#ifndef POWER_ENABLED\n\n#define POWER_ENABLED 0\n\n#endif\n\n// <o> POWER_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef POWER_CONFIG_IRQ_PRIORITY\n\n#define POWER_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <q> POWER_CONFIG_DEFAULT_DCDCEN  - The default configuration of main DCDC regulator\n\n \n\n\n\n// <i> This settings means only that components for DCDC regulator are installed and it can be enabled.\n\n\n\n#ifndef POWER_CONFIG_DEFAULT_DCDCEN\n\n#define POWER_CONFIG_DEFAULT_DCDCEN 0\n\n#endif\n\n\n\n// <q> POWER_CONFIG_DEFAULT_DCDCENHV  - The default configuration of High Voltage DCDC regulator\n\n \n\n\n\n// <i> This settings means only that components for DCDC regulator are installed and it can be enabled.\n\n\n\n#ifndef POWER_CONFIG_DEFAULT_DCDCENHV\n\n#define POWER_CONFIG_DEFAULT_DCDCENHV 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <q> PPI_ENABLED  - nrf_drv_ppi - PPI peripheral driver - legacy layer\n\n \n\n\n\n#ifndef PPI_ENABLED\n\n#define PPI_ENABLED 0\n\n#endif\n\n\n\n// <e> PWM_ENABLED - nrf_drv_pwm - PWM peripheral driver - legacy layer\n\n//==========================================================\n\n#ifndef PWM_ENABLED\n\n#define PWM_ENABLED 0\n\n#endif\n\n// <o> PWM_DEFAULT_CONFIG_OUT0_PIN - Out0 pin  <0-31> \n\n\n\n\n\n#ifndef PWM_DEFAULT_CONFIG_OUT0_PIN\n\n#define PWM_DEFAULT_CONFIG_OUT0_PIN 31\n\n#endif\n\n\n\n// <o> PWM_DEFAULT_CONFIG_OUT1_PIN - Out1 pin  <0-31> \n\n\n\n\n\n#ifndef PWM_DEFAULT_CONFIG_OUT1_PIN\n\n#define PWM_DEFAULT_CONFIG_OUT1_PIN 31\n\n#endif\n\n\n\n// <o> PWM_DEFAULT_CONFIG_OUT2_PIN - Out2 pin  <0-31> \n\n\n\n\n\n#ifndef PWM_DEFAULT_CONFIG_OUT2_PIN\n\n#define PWM_DEFAULT_CONFIG_OUT2_PIN 31\n\n#endif\n\n\n\n// <o> PWM_DEFAULT_CONFIG_OUT3_PIN - Out3 pin  <0-31> \n\n\n\n\n\n#ifndef PWM_DEFAULT_CONFIG_OUT3_PIN\n\n#define PWM_DEFAULT_CONFIG_OUT3_PIN 31\n\n#endif\n\n\n\n// <o> PWM_DEFAULT_CONFIG_BASE_CLOCK  - Base clock\n\n \n\n// <0=> 16 MHz \n\n// <1=> 8 MHz \n\n// <2=> 4 MHz \n\n// <3=> 2 MHz \n\n// <4=> 1 MHz \n\n// <5=> 500 kHz \n\n// <6=> 250 kHz \n\n// <7=> 125 kHz \n\n\n\n#ifndef PWM_DEFAULT_CONFIG_BASE_CLOCK\n\n#define PWM_DEFAULT_CONFIG_BASE_CLOCK 4\n\n#endif\n\n\n\n// <o> PWM_DEFAULT_CONFIG_COUNT_MODE  - Count mode\n\n \n\n// <0=> Up \n\n// <1=> Up and Down \n\n\n\n#ifndef PWM_DEFAULT_CONFIG_COUNT_MODE\n\n#define PWM_DEFAULT_CONFIG_COUNT_MODE 0\n\n#endif\n\n\n\n// <o> PWM_DEFAULT_CONFIG_TOP_VALUE - Top value \n\n#ifndef PWM_DEFAULT_CONFIG_TOP_VALUE\n\n#define PWM_DEFAULT_CONFIG_TOP_VALUE 1000\n\n#endif\n\n\n\n// <o> PWM_DEFAULT_CONFIG_LOAD_MODE  - Load mode\n\n \n\n// <0=> Common \n\n// <1=> Grouped \n\n// <2=> Individual \n\n// <3=> Waveform \n\n\n\n#ifndef PWM_DEFAULT_CONFIG_LOAD_MODE\n\n#define PWM_DEFAULT_CONFIG_LOAD_MODE 0\n\n#endif\n\n\n\n// <o> PWM_DEFAULT_CONFIG_STEP_MODE  - Step mode\n\n \n\n// <0=> Auto \n\n// <1=> Triggered \n\n\n\n#ifndef PWM_DEFAULT_CONFIG_STEP_MODE\n\n#define PWM_DEFAULT_CONFIG_STEP_MODE 0\n\n#endif\n\n\n\n// <o> PWM_DEFAULT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef PWM_DEFAULT_CONFIG_IRQ_PRIORITY\n\n#define PWM_DEFAULT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <q> PWM0_ENABLED  - Enable PWM0 instance\n\n \n\n\n\n#ifndef PWM0_ENABLED\n\n#define PWM0_ENABLED 0\n\n#endif\n\n\n\n// <q> PWM1_ENABLED  - Enable PWM1 instance\n\n \n\n\n\n#ifndef PWM1_ENABLED\n\n#define PWM1_ENABLED 0\n\n#endif\n\n\n\n// <q> PWM2_ENABLED  - Enable PWM2 instance\n\n \n\n\n\n#ifndef PWM2_ENABLED\n\n#define PWM2_ENABLED 0\n\n#endif\n\n\n\n// <e> PWM_NRF52_ANOMALY_109_WORKAROUND_ENABLED - Enables nRF52 Anomaly 109 workaround for PWM.\n\n\n\n// <i> The workaround uses interrupts to wake up the CPU and ensure\n\n// <i> it is active when PWM is about to start a DMA transfer. For\n\n// <i> initial transfer, done when a playback is started via PPI,\n\n// <i> a specific EGU instance is used to generate the interrupt.\n\n// <i> During the playback, the PWM interrupt triggered on SEQEND\n\n// <i> event of a preceding sequence is used to protect the transfer\n\n// <i> done for the next sequence to be played.\n\n//==========================================================\n\n#ifndef PWM_NRF52_ANOMALY_109_WORKAROUND_ENABLED\n\n#define PWM_NRF52_ANOMALY_109_WORKAROUND_ENABLED 0\n\n#endif\n\n// <o> PWM_NRF52_ANOMALY_109_EGU_INSTANCE  - EGU instance used by the nRF52 Anomaly 109 workaround for PWM.\n\n \n\n// <0=> EGU0 \n\n// <1=> EGU1 \n\n// <2=> EGU2 \n\n// <3=> EGU3 \n\n// <4=> EGU4 \n\n// <5=> EGU5 \n\n\n\n#ifndef PWM_NRF52_ANOMALY_109_EGU_INSTANCE\n\n#define PWM_NRF52_ANOMALY_109_EGU_INSTANCE 5\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> QDEC_ENABLED - nrf_drv_qdec - QDEC peripheral driver - legacy layer\n\n//==========================================================\n\n#ifndef QDEC_ENABLED\n\n#define QDEC_ENABLED 0\n\n#endif\n\n// <o> QDEC_CONFIG_REPORTPER  - Report period\n\n \n\n// <0=> 10 Samples \n\n// <1=> 40 Samples \n\n// <2=> 80 Samples \n\n// <3=> 120 Samples \n\n// <4=> 160 Samples \n\n// <5=> 200 Samples \n\n// <6=> 240 Samples \n\n// <7=> 280 Samples \n\n\n\n#ifndef QDEC_CONFIG_REPORTPER\n\n#define QDEC_CONFIG_REPORTPER 0\n\n#endif\n\n\n\n// <o> QDEC_CONFIG_SAMPLEPER  - Sample period\n\n \n\n// <0=> 128 us \n\n// <1=> 256 us \n\n// <2=> 512 us \n\n// <3=> 1024 us \n\n// <4=> 2048 us \n\n// <5=> 4096 us \n\n// <6=> 8192 us \n\n// <7=> 16384 us \n\n\n\n#ifndef QDEC_CONFIG_SAMPLEPER\n\n#define QDEC_CONFIG_SAMPLEPER 7\n\n#endif\n\n\n\n// <o> QDEC_CONFIG_PIO_A - A pin  <0-31> \n\n\n\n\n\n#ifndef QDEC_CONFIG_PIO_A\n\n#define QDEC_CONFIG_PIO_A 31\n\n#endif\n\n\n\n// <o> QDEC_CONFIG_PIO_B - B pin  <0-31> \n\n\n\n\n\n#ifndef QDEC_CONFIG_PIO_B\n\n#define QDEC_CONFIG_PIO_B 31\n\n#endif\n\n\n\n// <o> QDEC_CONFIG_PIO_LED - LED pin  <0-31> \n\n\n\n\n\n#ifndef QDEC_CONFIG_PIO_LED\n\n#define QDEC_CONFIG_PIO_LED 31\n\n#endif\n\n\n\n// <o> QDEC_CONFIG_LEDPRE - LED pre \n\n#ifndef QDEC_CONFIG_LEDPRE\n\n#define QDEC_CONFIG_LEDPRE 511\n\n#endif\n\n\n\n// <o> QDEC_CONFIG_LEDPOL  - LED polarity\n\n \n\n// <0=> Active low \n\n// <1=> Active high \n\n\n\n#ifndef QDEC_CONFIG_LEDPOL\n\n#define QDEC_CONFIG_LEDPOL 1\n\n#endif\n\n\n\n// <q> QDEC_CONFIG_DBFEN  - Debouncing enable\n\n \n\n\n\n#ifndef QDEC_CONFIG_DBFEN\n\n#define QDEC_CONFIG_DBFEN 0\n\n#endif\n\n\n\n// <q> QDEC_CONFIG_SAMPLE_INTEN  - Sample ready interrupt enable\n\n \n\n\n\n#ifndef QDEC_CONFIG_SAMPLE_INTEN\n\n#define QDEC_CONFIG_SAMPLE_INTEN 0\n\n#endif\n\n\n\n// <o> QDEC_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef QDEC_CONFIG_IRQ_PRIORITY\n\n#define QDEC_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> QSPI_ENABLED - nrf_drv_qspi - QSPI peripheral driver - legacy layer\n\n//==========================================================\n\n#ifndef QSPI_ENABLED\n\n#define QSPI_ENABLED 0\n\n#endif\n\n// <o> QSPI_CONFIG_SCK_DELAY - tSHSL, tWHSL and tSHWL in number of 16 MHz periods (62.5 ns).  <0-255> \n\n\n\n\n\n#ifndef QSPI_CONFIG_SCK_DELAY\n\n#define QSPI_CONFIG_SCK_DELAY 1\n\n#endif\n\n\n\n// <o> QSPI_CONFIG_XIP_OFFSET - Address offset in the external memory for Execute in Place operation. \n\n#ifndef QSPI_CONFIG_XIP_OFFSET\n\n#define QSPI_CONFIG_XIP_OFFSET 0\n\n#endif\n\n\n\n// <o> QSPI_CONFIG_READOC  - Number of data lines and opcode used for reading.\n\n \n\n// <0=> FastRead \n\n// <1=> Read2O \n\n// <2=> Read2IO \n\n// <3=> Read4O \n\n// <4=> Read4IO \n\n\n\n#ifndef QSPI_CONFIG_READOC\n\n#define QSPI_CONFIG_READOC 0\n\n#endif\n\n\n\n// <o> QSPI_CONFIG_WRITEOC  - Number of data lines and opcode used for writing.\n\n \n\n// <0=> PP \n\n// <1=> PP2O \n\n// <2=> PP4O \n\n// <3=> PP4IO \n\n\n\n#ifndef QSPI_CONFIG_WRITEOC\n\n#define QSPI_CONFIG_WRITEOC 0\n\n#endif\n\n\n\n// <o> QSPI_CONFIG_ADDRMODE  - Addressing mode.\n\n \n\n// <0=> 24bit \n\n// <1=> 32bit \n\n\n\n#ifndef QSPI_CONFIG_ADDRMODE\n\n#define QSPI_CONFIG_ADDRMODE 0\n\n#endif\n\n\n\n// <o> QSPI_CONFIG_MODE  - SPI mode.\n\n \n\n// <0=> Mode 0 \n\n// <1=> Mode 1 \n\n\n\n#ifndef QSPI_CONFIG_MODE\n\n#define QSPI_CONFIG_MODE 0\n\n#endif\n\n\n\n// <o> QSPI_CONFIG_FREQUENCY  - Frequency divider.\n\n \n\n// <0=> 32MHz/1 \n\n// <1=> 32MHz/2 \n\n// <2=> 32MHz/3 \n\n// <3=> 32MHz/4 \n\n// <4=> 32MHz/5 \n\n// <5=> 32MHz/6 \n\n// <6=> 32MHz/7 \n\n// <7=> 32MHz/8 \n\n// <8=> 32MHz/9 \n\n// <9=> 32MHz/10 \n\n// <10=> 32MHz/11 \n\n// <11=> 32MHz/12 \n\n// <12=> 32MHz/13 \n\n// <13=> 32MHz/14 \n\n// <14=> 32MHz/15 \n\n// <15=> 32MHz/16 \n\n\n\n#ifndef QSPI_CONFIG_FREQUENCY\n\n#define QSPI_CONFIG_FREQUENCY 15\n\n#endif\n\n\n\n// <s> QSPI_PIN_SCK - SCK pin value.\n\n#ifndef QSPI_PIN_SCK\n\n#define QSPI_PIN_SCK NRF_QSPI_PIN_NOT_CONNECTED\n\n#endif\n\n\n\n// <s> QSPI_PIN_CSN - CSN pin value.\n\n#ifndef QSPI_PIN_CSN\n\n#define QSPI_PIN_CSN NRF_QSPI_PIN_NOT_CONNECTED\n\n#endif\n\n\n\n// <s> QSPI_PIN_IO0 - IO0 pin value.\n\n#ifndef QSPI_PIN_IO0\n\n#define QSPI_PIN_IO0 NRF_QSPI_PIN_NOT_CONNECTED\n\n#endif\n\n\n\n// <s> QSPI_PIN_IO1 - IO1 pin value.\n\n#ifndef QSPI_PIN_IO1\n\n#define QSPI_PIN_IO1 NRF_QSPI_PIN_NOT_CONNECTED\n\n#endif\n\n\n\n// <s> QSPI_PIN_IO2 - IO2 pin value.\n\n#ifndef QSPI_PIN_IO2\n\n#define QSPI_PIN_IO2 NRF_QSPI_PIN_NOT_CONNECTED\n\n#endif\n\n\n\n// <s> QSPI_PIN_IO3 - IO3 pin value.\n\n#ifndef QSPI_PIN_IO3\n\n#define QSPI_PIN_IO3 NRF_QSPI_PIN_NOT_CONNECTED\n\n#endif\n\n\n\n// <o> QSPI_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef QSPI_CONFIG_IRQ_PRIORITY\n\n#define QSPI_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> RNG_ENABLED - nrf_drv_rng - RNG peripheral driver - legacy layer\n\n//==========================================================\n\n#ifndef RNG_ENABLED\n\n#define RNG_ENABLED 0\n\n#endif\n\n// <q> RNG_CONFIG_ERROR_CORRECTION  - Error correction\n\n \n\n\n\n#ifndef RNG_CONFIG_ERROR_CORRECTION\n\n#define RNG_CONFIG_ERROR_CORRECTION 1\n\n#endif\n\n\n\n// <o> RNG_CONFIG_POOL_SIZE - Pool size \n\n#ifndef RNG_CONFIG_POOL_SIZE\n\n#define RNG_CONFIG_POOL_SIZE 64\n\n#endif\n\n\n\n// <o> RNG_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef RNG_CONFIG_IRQ_PRIORITY\n\n#define RNG_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> RTC_ENABLED - nrf_drv_rtc - RTC peripheral driver - legacy layer\n\n//==========================================================\n\n#ifndef RTC_ENABLED\n\n#define RTC_ENABLED 0\n\n#endif\n\n// <o> RTC_DEFAULT_CONFIG_FREQUENCY - Frequency  <16-32768> \n\n\n\n\n\n#ifndef RTC_DEFAULT_CONFIG_FREQUENCY\n\n#define RTC_DEFAULT_CONFIG_FREQUENCY 32768\n\n#endif\n\n\n\n// <q> RTC_DEFAULT_CONFIG_RELIABLE  - Ensures safe compare event triggering\n\n \n\n\n\n#ifndef RTC_DEFAULT_CONFIG_RELIABLE\n\n#define RTC_DEFAULT_CONFIG_RELIABLE 0\n\n#endif\n\n\n\n// <o> RTC_DEFAULT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef RTC_DEFAULT_CONFIG_IRQ_PRIORITY\n\n#define RTC_DEFAULT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <q> RTC0_ENABLED  - Enable RTC0 instance\n\n \n\n\n\n#ifndef RTC0_ENABLED\n\n#define RTC0_ENABLED 0\n\n#endif\n\n\n\n// <q> RTC1_ENABLED  - Enable RTC1 instance\n\n \n\n\n\n#ifndef RTC1_ENABLED\n\n#define RTC1_ENABLED 0\n\n#endif\n\n\n\n// <q> RTC2_ENABLED  - Enable RTC2 instance\n\n \n\n\n\n#ifndef RTC2_ENABLED\n\n#define RTC2_ENABLED 0\n\n#endif\n\n\n\n// <o> NRF_MAXIMUM_LATENCY_US - Maximum possible time[us] in highest priority interrupt \n\n#ifndef NRF_MAXIMUM_LATENCY_US\n\n#define NRF_MAXIMUM_LATENCY_US 2000\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> SAADC_ENABLED - nrf_drv_saadc - SAADC peripheral driver - legacy layer\n\n//==========================================================\n\n#ifndef SAADC_ENABLED\n\n#define SAADC_ENABLED 0\n\n#endif\n\n// <o> SAADC_CONFIG_RESOLUTION  - Resolution\n\n \n\n// <0=> 8 bit \n\n// <1=> 10 bit \n\n// <2=> 12 bit \n\n// <3=> 14 bit \n\n\n\n#ifndef SAADC_CONFIG_RESOLUTION\n\n#define SAADC_CONFIG_RESOLUTION 1\n\n#endif\n\n\n\n// <o> SAADC_CONFIG_OVERSAMPLE  - Sample period\n\n \n\n// <0=> Disabled \n\n// <1=> 2x \n\n// <2=> 4x \n\n// <3=> 8x \n\n// <4=> 16x \n\n// <5=> 32x \n\n// <6=> 64x \n\n// <7=> 128x \n\n// <8=> 256x \n\n\n\n#ifndef SAADC_CONFIG_OVERSAMPLE\n\n#define SAADC_CONFIG_OVERSAMPLE 0\n\n#endif\n\n\n\n// <q> SAADC_CONFIG_LP_MODE  - Enabling low power mode\n\n \n\n\n\n#ifndef SAADC_CONFIG_LP_MODE\n\n#define SAADC_CONFIG_LP_MODE 0\n\n#endif\n\n\n\n// <o> SAADC_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef SAADC_CONFIG_IRQ_PRIORITY\n\n#define SAADC_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> SPIS_ENABLED - nrf_drv_spis - SPIS peripheral driver - legacy layer\n\n//==========================================================\n\n#ifndef SPIS_ENABLED\n\n#define SPIS_ENABLED 0\n\n#endif\n\n// <o> SPIS_DEFAULT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef SPIS_DEFAULT_CONFIG_IRQ_PRIORITY\n\n#define SPIS_DEFAULT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <o> SPIS_DEFAULT_MODE  - Mode\n\n \n\n// <0=> MODE_0 \n\n// <1=> MODE_1 \n\n// <2=> MODE_2 \n\n// <3=> MODE_3 \n\n\n\n#ifndef SPIS_DEFAULT_MODE\n\n#define SPIS_DEFAULT_MODE 0\n\n#endif\n\n\n\n// <o> SPIS_DEFAULT_BIT_ORDER  - SPIS default bit order\n\n \n\n// <0=> MSB first \n\n// <1=> LSB first \n\n\n\n#ifndef SPIS_DEFAULT_BIT_ORDER\n\n#define SPIS_DEFAULT_BIT_ORDER 0\n\n#endif\n\n\n\n// <o> SPIS_DEFAULT_DEF - SPIS default DEF character  <0-255> \n\n\n\n\n\n#ifndef SPIS_DEFAULT_DEF\n\n#define SPIS_DEFAULT_DEF 255\n\n#endif\n\n\n\n// <o> SPIS_DEFAULT_ORC - SPIS default ORC character  <0-255> \n\n\n\n\n\n#ifndef SPIS_DEFAULT_ORC\n\n#define SPIS_DEFAULT_ORC 255\n\n#endif\n\n\n\n// <q> SPIS0_ENABLED  - Enable SPIS0 instance\n\n \n\n\n\n#ifndef SPIS0_ENABLED\n\n#define SPIS0_ENABLED 0\n\n#endif\n\n\n\n// <q> SPIS1_ENABLED  - Enable SPIS1 instance\n\n \n\n\n\n#ifndef SPIS1_ENABLED\n\n#define SPIS1_ENABLED 0\n\n#endif\n\n\n\n// <q> SPIS2_ENABLED  - Enable SPIS2 instance\n\n \n\n\n\n#ifndef SPIS2_ENABLED\n\n#define SPIS2_ENABLED 0\n\n#endif\n\n\n\n// <q> SPIS_NRF52_ANOMALY_109_WORKAROUND_ENABLED  - Enables nRF52 Anomaly 109 workaround for SPIS.\n\n \n\n\n\n// <i> The workaround uses a GPIOTE channel to generate interrupts\n\n// <i> on falling edges detected on the CSN line. This will make\n\n// <i> the CPU active for the moment when SPIS starts DMA transfers,\n\n// <i> and this way the transfers will be protected.\n\n// <i> This workaround uses GPIOTE driver, so this driver must be\n\n// <i> enabled as well.\n\n\n\n#ifndef SPIS_NRF52_ANOMALY_109_WORKAROUND_ENABLED\n\n#define SPIS_NRF52_ANOMALY_109_WORKAROUND_ENABLED 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> SPI_ENABLED - nrf_drv_spi - SPI/SPIM peripheral driver - legacy layer\n\n//==========================================================\n\n#ifndef SPI_ENABLED\n\n#define SPI_ENABLED 0\n\n#endif\n\n// <o> SPI_DEFAULT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef SPI_DEFAULT_CONFIG_IRQ_PRIORITY\n\n#define SPI_DEFAULT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <o> NRF_SPI_DRV_MISO_PULLUP_CFG  - MISO PIN pull-up configuration.\n\n \n\n// <0=> NRF_GPIO_PIN_NOPULL \n\n// <1=> NRF_GPIO_PIN_PULLDOWN \n\n// <3=> NRF_GPIO_PIN_PULLUP \n\n\n\n#ifndef NRF_SPI_DRV_MISO_PULLUP_CFG\n\n#define NRF_SPI_DRV_MISO_PULLUP_CFG 1\n\n#endif\n\n\n\n// <e> SPI0_ENABLED - Enable SPI0 instance\n\n//==========================================================\n\n#ifndef SPI0_ENABLED\n\n#define SPI0_ENABLED 0\n\n#endif\n\n// <q> SPI0_USE_EASY_DMA  - Use EasyDMA\n\n \n\n\n\n#ifndef SPI0_USE_EASY_DMA\n\n#define SPI0_USE_EASY_DMA 1\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> SPI1_ENABLED - Enable SPI1 instance\n\n//==========================================================\n\n#ifndef SPI1_ENABLED\n\n#define SPI1_ENABLED 0\n\n#endif\n\n// <q> SPI1_USE_EASY_DMA  - Use EasyDMA\n\n \n\n\n\n#ifndef SPI1_USE_EASY_DMA\n\n#define SPI1_USE_EASY_DMA 1\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> SPI2_ENABLED - Enable SPI2 instance\n\n//==========================================================\n\n#ifndef SPI2_ENABLED\n\n#define SPI2_ENABLED 0\n\n#endif\n\n// <q> SPI2_USE_EASY_DMA  - Use EasyDMA\n\n \n\n\n\n#ifndef SPI2_USE_EASY_DMA\n\n#define SPI2_USE_EASY_DMA 1\n\n#endif\n\n\n\n// </e>\n\n\n\n// <q> SPIM_NRF52_ANOMALY_109_WORKAROUND_ENABLED  - Enables nRF52 anomaly 109 workaround for SPIM.\n\n \n\n\n\n// <i> The workaround uses interrupts to wake up the CPU by catching\n\n// <i> a start event of zero-length transmission to start the clock. This \n\n// <i> ensures that the DMA transfer will be executed without issues and\n\n// <i> that the proper transfer will be started. See more in the Errata \n\n// <i> document or Anomaly 109 Addendum located at \n\n// <i> https://infocenter.nordicsemi.com/\n\n\n\n#ifndef SPIM_NRF52_ANOMALY_109_WORKAROUND_ENABLED\n\n#define SPIM_NRF52_ANOMALY_109_WORKAROUND_ENABLED 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> TIMER_ENABLED - nrf_drv_timer - TIMER periperal driver - legacy layer\n\n//==========================================================\n\n#ifndef TIMER_ENABLED\n\n#define TIMER_ENABLED 0\n\n#endif\n\n// <o> TIMER_DEFAULT_CONFIG_FREQUENCY  - Timer frequency if in Timer mode\n\n \n\n// <0=> 16 MHz \n\n// <1=> 8 MHz \n\n// <2=> 4 MHz \n\n// <3=> 2 MHz \n\n// <4=> 1 MHz \n\n// <5=> 500 kHz \n\n// <6=> 250 kHz \n\n// <7=> 125 kHz \n\n// <8=> 62.5 kHz \n\n// <9=> 31.25 kHz \n\n\n\n#ifndef TIMER_DEFAULT_CONFIG_FREQUENCY\n\n#define TIMER_DEFAULT_CONFIG_FREQUENCY 0\n\n#endif\n\n\n\n// <o> TIMER_DEFAULT_CONFIG_MODE  - Timer mode or operation\n\n \n\n// <0=> Timer \n\n// <1=> Counter \n\n\n\n#ifndef TIMER_DEFAULT_CONFIG_MODE\n\n#define TIMER_DEFAULT_CONFIG_MODE 0\n\n#endif\n\n\n\n// <o> TIMER_DEFAULT_CONFIG_BIT_WIDTH  - Timer counter bit width\n\n \n\n// <0=> 16 bit \n\n// <1=> 8 bit \n\n// <2=> 24 bit \n\n// <3=> 32 bit \n\n\n\n#ifndef TIMER_DEFAULT_CONFIG_BIT_WIDTH\n\n#define TIMER_DEFAULT_CONFIG_BIT_WIDTH 0\n\n#endif\n\n\n\n// <o> TIMER_DEFAULT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef TIMER_DEFAULT_CONFIG_IRQ_PRIORITY\n\n#define TIMER_DEFAULT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <q> TIMER0_ENABLED  - Enable TIMER0 instance\n\n \n\n\n\n#ifndef TIMER0_ENABLED\n\n#define TIMER0_ENABLED 0\n\n#endif\n\n\n\n// <q> TIMER1_ENABLED  - Enable TIMER1 instance\n\n \n\n\n\n#ifndef TIMER1_ENABLED\n\n#define TIMER1_ENABLED 0\n\n#endif\n\n\n\n// <q> TIMER2_ENABLED  - Enable TIMER2 instance\n\n \n\n\n\n#ifndef TIMER2_ENABLED\n\n#define TIMER2_ENABLED 0\n\n#endif\n\n\n\n// <q> TIMER3_ENABLED  - Enable TIMER3 instance\n\n \n\n\n\n#ifndef TIMER3_ENABLED\n\n#define TIMER3_ENABLED 0\n\n#endif\n\n\n\n// <q> TIMER4_ENABLED  - Enable TIMER4 instance\n\n \n\n\n\n#ifndef TIMER4_ENABLED\n\n#define TIMER4_ENABLED 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> TWIS_ENABLED - nrf_drv_twis - TWIS peripheral driver - legacy layer\n\n//==========================================================\n\n#ifndef TWIS_ENABLED\n\n#define TWIS_ENABLED 0\n\n#endif\n\n// <q> TWIS0_ENABLED  - Enable TWIS0 instance\n\n \n\n\n\n#ifndef TWIS0_ENABLED\n\n#define TWIS0_ENABLED 0\n\n#endif\n\n\n\n// <q> TWIS1_ENABLED  - Enable TWIS1 instance\n\n \n\n\n\n#ifndef TWIS1_ENABLED\n\n#define TWIS1_ENABLED 0\n\n#endif\n\n\n\n// <q> TWIS_ASSUME_INIT_AFTER_RESET_ONLY  - Assume that any instance would be initialized only once\n\n \n\n\n\n// <i> Optimization flag. Registers used by TWIS are shared by other peripherals. Normally, during initialization driver tries to clear all registers to known state before doing the initialization itself. This gives initialization safe procedure, no matter when it would be called. If you activate TWIS only once and do never uninitialize it - set this flag to 1 what gives more optimal code.\n\n\n\n#ifndef TWIS_ASSUME_INIT_AFTER_RESET_ONLY\n\n#define TWIS_ASSUME_INIT_AFTER_RESET_ONLY 0\n\n#endif\n\n\n\n// <q> TWIS_NO_SYNC_MODE  - Remove support for synchronous mode\n\n \n\n\n\n// <i> Synchronous mode would be used in specific situations. And it uses some additional code and data memory to safely process state machine by polling it in status functions. If this functionality is not required it may be disabled to free some resources.\n\n\n\n#ifndef TWIS_NO_SYNC_MODE\n\n#define TWIS_NO_SYNC_MODE 0\n\n#endif\n\n\n\n// <o> TWIS_DEFAULT_CONFIG_ADDR0 - Address0 \n\n#ifndef TWIS_DEFAULT_CONFIG_ADDR0\n\n#define TWIS_DEFAULT_CONFIG_ADDR0 0\n\n#endif\n\n\n\n// <o> TWIS_DEFAULT_CONFIG_ADDR1 - Address1 \n\n#ifndef TWIS_DEFAULT_CONFIG_ADDR1\n\n#define TWIS_DEFAULT_CONFIG_ADDR1 0\n\n#endif\n\n\n\n// <o> TWIS_DEFAULT_CONFIG_SCL_PULL  - SCL pin pull configuration\n\n \n\n// <0=> Disabled \n\n// <1=> Pull down \n\n// <3=> Pull up \n\n\n\n#ifndef TWIS_DEFAULT_CONFIG_SCL_PULL\n\n#define TWIS_DEFAULT_CONFIG_SCL_PULL 0\n\n#endif\n\n\n\n// <o> TWIS_DEFAULT_CONFIG_SDA_PULL  - SDA pin pull configuration\n\n \n\n// <0=> Disabled \n\n// <1=> Pull down \n\n// <3=> Pull up \n\n\n\n#ifndef TWIS_DEFAULT_CONFIG_SDA_PULL\n\n#define TWIS_DEFAULT_CONFIG_SDA_PULL 0\n\n#endif\n\n\n\n// <o> TWIS_DEFAULT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef TWIS_DEFAULT_CONFIG_IRQ_PRIORITY\n\n#define TWIS_DEFAULT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> TWI_ENABLED - nrf_drv_twi - TWI/TWIM peripheral driver - legacy layer\n\n//==========================================================\n\n#ifndef TWI_ENABLED\n\n#define TWI_ENABLED 0\n\n#endif\n\n// <o> TWI_DEFAULT_CONFIG_FREQUENCY  - Frequency\n\n \n\n// <26738688=> 100k \n\n// <67108864=> 250k \n\n// <104857600=> 400k \n\n\n\n#ifndef TWI_DEFAULT_CONFIG_FREQUENCY\n\n#define TWI_DEFAULT_CONFIG_FREQUENCY 26738688\n\n#endif\n\n\n\n// <q> TWI_DEFAULT_CONFIG_CLR_BUS_INIT  - Enables bus clearing procedure during init\n\n \n\n\n\n#ifndef TWI_DEFAULT_CONFIG_CLR_BUS_INIT\n\n#define TWI_DEFAULT_CONFIG_CLR_BUS_INIT 0\n\n#endif\n\n\n\n// <q> TWI_DEFAULT_CONFIG_HOLD_BUS_UNINIT  - Enables bus holding after uninit\n\n \n\n\n\n#ifndef TWI_DEFAULT_CONFIG_HOLD_BUS_UNINIT\n\n#define TWI_DEFAULT_CONFIG_HOLD_BUS_UNINIT 0\n\n#endif\n\n\n\n// <o> TWI_DEFAULT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef TWI_DEFAULT_CONFIG_IRQ_PRIORITY\n\n#define TWI_DEFAULT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> TWI0_ENABLED - Enable TWI0 instance\n\n//==========================================================\n\n#ifndef TWI0_ENABLED\n\n#define TWI0_ENABLED 0\n\n#endif\n\n// <q> TWI0_USE_EASY_DMA  - Use EasyDMA (if present)\n\n \n\n\n\n#ifndef TWI0_USE_EASY_DMA\n\n#define TWI0_USE_EASY_DMA 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> TWI1_ENABLED - Enable TWI1 instance\n\n//==========================================================\n\n#ifndef TWI1_ENABLED\n\n#define TWI1_ENABLED 0\n\n#endif\n\n// <q> TWI1_USE_EASY_DMA  - Use EasyDMA (if present)\n\n \n\n\n\n#ifndef TWI1_USE_EASY_DMA\n\n#define TWI1_USE_EASY_DMA 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <q> TWIM_NRF52_ANOMALY_109_WORKAROUND_ENABLED  - Enables nRF52 anomaly 109 workaround for TWIM.\n\n \n\n\n\n// <i> The workaround uses interrupts to wake up the CPU by catching\n\n// <i> the start event of zero-frequency transmission, clear the \n\n// <i> peripheral, set desired frequency, start the peripheral, and\n\n// <i> the proper transmission. See more in the Errata document or\n\n// <i> Anomaly 109 Addendum located at https://infocenter.nordicsemi.com/\n\n\n\n#ifndef TWIM_NRF52_ANOMALY_109_WORKAROUND_ENABLED\n\n#define TWIM_NRF52_ANOMALY_109_WORKAROUND_ENABLED 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> UART_ENABLED - nrf_drv_uart - UART/UARTE peripheral driver - legacy layer\n\n//==========================================================\n\n#ifndef UART_ENABLED\n\n#define UART_ENABLED 1\n\n#endif\n\n// <o> UART_DEFAULT_CONFIG_HWFC  - Hardware Flow Control\n\n \n\n// <0=> Disabled \n\n// <1=> Enabled \n\n\n\n#ifndef UART_DEFAULT_CONFIG_HWFC\n\n#define UART_DEFAULT_CONFIG_HWFC 0\n\n#endif\n\n\n\n// <o> UART_DEFAULT_CONFIG_PARITY  - Parity\n\n \n\n// <0=> Excluded \n\n// <14=> Included \n\n\n\n#ifndef UART_DEFAULT_CONFIG_PARITY\n\n#define UART_DEFAULT_CONFIG_PARITY 0\n\n#endif\n\n\n\n// <o> UART_DEFAULT_CONFIG_BAUDRATE  - Default Baudrate\n\n \n\n// <323584=> 1200 baud \n\n// <643072=> 2400 baud \n\n// <1290240=> 4800 baud \n\n// <2576384=> 9600 baud \n\n// <3862528=> 14400 baud \n\n// <5152768=> 19200 baud \n\n// <7716864=> 28800 baud \n\n// <10289152=> 38400 baud \n\n// <15400960=> 57600 baud \n\n// <20615168=> 76800 baud \n\n// <30801920=> 115200 baud \n\n// <61865984=> 230400 baud \n\n// <67108864=> 250000 baud \n\n// <121634816=> 460800 baud \n\n// <251658240=> 921600 baud \n\n// <268435456=> 1000000 baud \n\n\n\n#ifndef UART_DEFAULT_CONFIG_BAUDRATE\n\n#define UART_DEFAULT_CONFIG_BAUDRATE 30801920\n\n#endif\n\n\n\n// <o> UART_DEFAULT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef UART_DEFAULT_CONFIG_IRQ_PRIORITY\n\n#define UART_DEFAULT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <q> UART_EASY_DMA_SUPPORT  - Driver supporting EasyDMA\n\n \n\n\n\n#ifndef UART_EASY_DMA_SUPPORT\n\n#define UART_EASY_DMA_SUPPORT 1\n\n#endif\n\n\n\n// <q> UART_LEGACY_SUPPORT  - Driver supporting Legacy mode\n\n \n\n\n\n#ifndef UART_LEGACY_SUPPORT\n\n#define UART_LEGACY_SUPPORT 1\n\n#endif\n\n\n\n// <e> UART0_ENABLED - Enable UART0 instance\n\n//==========================================================\n\n#ifndef UART0_ENABLED\n\n#define UART0_ENABLED 1\n\n#endif\n\n// <q> UART0_CONFIG_USE_EASY_DMA  - Default setting for using EasyDMA\n\n \n\n\n\n#ifndef UART0_CONFIG_USE_EASY_DMA\n\n#define UART0_CONFIG_USE_EASY_DMA 1\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> USBD_ENABLED - nrf_drv_usbd - Software Component\n\n//==========================================================\n\n#ifndef USBD_ENABLED\n\n#define USBD_ENABLED 0\n\n#endif\n\n// <o> USBD_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef USBD_CONFIG_IRQ_PRIORITY\n\n#define USBD_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <o> USBD_CONFIG_DMASCHEDULER_MODE  - USBD SMA scheduler working scheme\n\n \n\n// <0=> Prioritized access \n\n// <1=> Round Robin \n\n\n\n#ifndef USBD_CONFIG_DMASCHEDULER_MODE\n\n#define USBD_CONFIG_DMASCHEDULER_MODE 0\n\n#endif\n\n\n\n// <q> USBD_CONFIG_DMASCHEDULER_ISO_BOOST  - Give priority to isochronous transfers\n\n \n\n\n\n// <i> This option gives priority to isochronous transfers.\n\n// <i> Enabling it assures that isochronous transfers are always processed,\n\n// <i> even if multiple other transfers are pending.\n\n// <i> Isochronous endpoints are prioritized before the usbd_dma_scheduler_algorithm\n\n// <i> function is called, so the option is independent of the algorithm chosen.\n\n\n\n#ifndef USBD_CONFIG_DMASCHEDULER_ISO_BOOST\n\n#define USBD_CONFIG_DMASCHEDULER_ISO_BOOST 1\n\n#endif\n\n\n\n// <q> USBD_CONFIG_ISO_IN_ZLP  - Respond to an IN token on ISO IN endpoint with ZLP when no data is ready\n\n \n\n\n\n// <i> If set, ISO IN endpoint will respond to an IN token with ZLP when no data is ready to be sent.\n\n// <i> Else, there will be no response.\n\n// <i> NOTE: This option does not work on Engineering A chip.\n\n\n\n#ifndef USBD_CONFIG_ISO_IN_ZLP\n\n#define USBD_CONFIG_ISO_IN_ZLP 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> WDT_ENABLED - nrf_drv_wdt - WDT peripheral driver - legacy layer\n\n//==========================================================\n\n#ifndef WDT_ENABLED\n\n#define WDT_ENABLED 0\n\n#endif\n\n// <o> WDT_CONFIG_BEHAVIOUR  - WDT behavior in CPU SLEEP or HALT mode\n\n \n\n// <1=> Run in SLEEP, Pause in HALT \n\n// <8=> Pause in SLEEP, Run in HALT \n\n// <9=> Run in SLEEP and HALT \n\n// <0=> Pause in SLEEP and HALT \n\n\n\n#ifndef WDT_CONFIG_BEHAVIOUR\n\n#define WDT_CONFIG_BEHAVIOUR 1\n\n#endif\n\n\n\n// <o> WDT_CONFIG_RELOAD_VALUE - Reload value  <15-4294967295> \n\n\n\n\n\n#ifndef WDT_CONFIG_RELOAD_VALUE\n\n#define WDT_CONFIG_RELOAD_VALUE 2000\n\n#endif\n\n\n\n// <o> WDT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef WDT_CONFIG_IRQ_PRIORITY\n\n#define WDT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// </e>\n\n\n\n// <h> nrfx_qspi - QSPI peripheral driver\n\n\n\n//==========================================================\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> nrfx_usbd - USBD peripheral driver\n\n\n\n//==========================================================\n\n// </h> \n\n//==========================================================\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> nRF_Drivers_External \n\n\n\n//==========================================================\n\n// <q> NRF_TWI_SENSOR_ENABLED  - nrf_twi_sensor - nRF TWI Sensor module\n\n \n\n\n\n#ifndef NRF_TWI_SENSOR_ENABLED\n\n#define NRF_TWI_SENSOR_ENABLED 0\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> nRF_Libraries \n\n\n\n//==========================================================\n\n// <q> APP_FIFO_ENABLED  - app_fifo - Software FIFO implementation\n\n \n\n\n\n#ifndef APP_FIFO_ENABLED\n\n#define APP_FIFO_ENABLED 1\n\n#endif\n\n\n\n// <q> APP_GPIOTE_ENABLED  - app_gpiote - GPIOTE events dispatcher\n\n \n\n\n\n#ifndef APP_GPIOTE_ENABLED\n\n#define APP_GPIOTE_ENABLED 0\n\n#endif\n\n\n\n// <q> APP_PWM_ENABLED  - app_pwm - PWM functionality\n\n \n\n\n\n#ifndef APP_PWM_ENABLED\n\n#define APP_PWM_ENABLED 0\n\n#endif\n\n\n\n// <e> APP_SCHEDULER_ENABLED - app_scheduler - Events scheduler\n\n//==========================================================\n\n#ifndef APP_SCHEDULER_ENABLED\n\n#define APP_SCHEDULER_ENABLED 1\n\n#endif\n\n// <q> APP_SCHEDULER_WITH_PAUSE  - Enabling pause feature\n\n \n\n\n\n#ifndef APP_SCHEDULER_WITH_PAUSE\n\n#define APP_SCHEDULER_WITH_PAUSE 0\n\n#endif\n\n\n\n// <q> APP_SCHEDULER_WITH_PROFILER  - Enabling scheduler profiling\n\n \n\n\n\n#ifndef APP_SCHEDULER_WITH_PROFILER\n\n#define APP_SCHEDULER_WITH_PROFILER 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> APP_SDCARD_ENABLED - app_sdcard - SD/MMC card support using SPI\n\n//==========================================================\n\n#ifndef APP_SDCARD_ENABLED\n\n#define APP_SDCARD_ENABLED 0\n\n#endif\n\n// <o> APP_SDCARD_SPI_INSTANCE  - SPI instance used\n\n \n\n// <0=> 0 \n\n// <1=> 1 \n\n// <2=> 2 \n\n\n\n#ifndef APP_SDCARD_SPI_INSTANCE\n\n#define APP_SDCARD_SPI_INSTANCE 0\n\n#endif\n\n\n\n// <o> APP_SDCARD_FREQ_INIT  - SPI frequency\n\n \n\n// <33554432=> 125 kHz \n\n// <67108864=> 250 kHz \n\n// <134217728=> 500 kHz \n\n// <268435456=> 1 MHz \n\n// <536870912=> 2 MHz \n\n// <1073741824=> 4 MHz \n\n// <2147483648=> 8 MHz \n\n\n\n#ifndef APP_SDCARD_FREQ_INIT\n\n#define APP_SDCARD_FREQ_INIT 67108864\n\n#endif\n\n\n\n// <o> APP_SDCARD_FREQ_DATA  - SPI frequency\n\n \n\n// <33554432=> 125 kHz \n\n// <67108864=> 250 kHz \n\n// <134217728=> 500 kHz \n\n// <268435456=> 1 MHz \n\n// <536870912=> 2 MHz \n\n// <1073741824=> 4 MHz \n\n// <2147483648=> 8 MHz \n\n\n\n#ifndef APP_SDCARD_FREQ_DATA\n\n#define APP_SDCARD_FREQ_DATA 1073741824\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> APP_TIMER_ENABLED - app_timer - Application timer functionality\n\n//==========================================================\n\n#ifndef APP_TIMER_ENABLED\n\n#define APP_TIMER_ENABLED 1\n\n#endif\n\n// <o> APP_TIMER_CONFIG_RTC_FREQUENCY  - Configure RTC prescaler.\n\n \n\n// <0=> 32768 Hz \n\n// <1=> 16384 Hz \n\n// <3=> 8192 Hz \n\n// <7=> 4096 Hz \n\n// <15=> 2048 Hz \n\n// <31=> 1024 Hz \n\n\n\n#ifndef APP_TIMER_CONFIG_RTC_FREQUENCY\n\n#define APP_TIMER_CONFIG_RTC_FREQUENCY 1\n\n#endif\n\n\n\n// <o> APP_TIMER_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef APP_TIMER_CONFIG_IRQ_PRIORITY\n\n#define APP_TIMER_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <o> APP_TIMER_CONFIG_OP_QUEUE_SIZE - Capacity of timer requests queue. \n\n// <i> Size of the queue depends on how many timers are used\n\n// <i> in the system, how often timers are started and overall\n\n// <i> system latency. If queue size is too small app_timer calls\n\n// <i> will fail.\n\n\n\n#ifndef APP_TIMER_CONFIG_OP_QUEUE_SIZE\n\n#define APP_TIMER_CONFIG_OP_QUEUE_SIZE 10\n\n#endif\n\n\n\n// <q> APP_TIMER_CONFIG_USE_SCHEDULER  - Enable scheduling app_timer events to app_scheduler\n\n \n\n\n\n#ifndef APP_TIMER_CONFIG_USE_SCHEDULER\n\n#define APP_TIMER_CONFIG_USE_SCHEDULER 0\n\n#endif\n\n\n\n// <q> APP_TIMER_KEEPS_RTC_ACTIVE  - Enable RTC always on\n\n \n\n\n\n// <i> If option is enabled RTC is kept running even if there is no active timers.\n\n// <i> This option can be used when app_timer is used for timestamping.\n\n\n\n#ifndef APP_TIMER_KEEPS_RTC_ACTIVE\n\n#define APP_TIMER_KEEPS_RTC_ACTIVE 0\n\n#endif\n\n\n\n// <o> APP_TIMER_SAFE_WINDOW_MS - Maximum possible latency (in milliseconds) of handling app_timer event. \n\n// <i> Maximum possible timeout that can be set is reduced by safe window.\n\n// <i> Example: RTC frequency 16384 Hz, maximum possible timeout 1024 seconds - APP_TIMER_SAFE_WINDOW_MS.\n\n// <i> Since RTC is not stopped when processor is halted in debugging session, this value\n\n// <i> must cover it if debugging is needed. It is possible to halt processor for APP_TIMER_SAFE_WINDOW_MS\n\n// <i> without corrupting app_timer behavior.\n\n\n\n#ifndef APP_TIMER_SAFE_WINDOW_MS\n\n#define APP_TIMER_SAFE_WINDOW_MS 300000\n\n#endif\n\n\n\n// <h> App Timer Legacy configuration - Legacy configuration.\n\n\n\n//==========================================================\n\n// <q> APP_TIMER_WITH_PROFILER  - Enable app_timer profiling\n\n \n\n\n\n#ifndef APP_TIMER_WITH_PROFILER\n\n#define APP_TIMER_WITH_PROFILER 0\n\n#endif\n\n\n\n// <q> APP_TIMER_CONFIG_SWI_NUMBER  - Configure SWI instance used.\n\n \n\n\n\n#ifndef APP_TIMER_CONFIG_SWI_NUMBER\n\n#define APP_TIMER_CONFIG_SWI_NUMBER 0\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// </e>\n\n\n\n// <e> APP_UART_ENABLED - app_uart - UART driver\n\n//==========================================================\n\n#ifndef APP_UART_ENABLED\n\n#define APP_UART_ENABLED 1\n\n#endif\n\n// <o> APP_UART_DRIVER_INSTANCE  - UART instance used\n\n \n\n// <0=> 0 \n\n\n\n#ifndef APP_UART_DRIVER_INSTANCE\n\n#define APP_UART_DRIVER_INSTANCE 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <q> APP_USBD_AUDIO_ENABLED  - app_usbd_audio - USB AUDIO class\n\n \n\n\n\n#ifndef APP_USBD_AUDIO_ENABLED\n\n#define APP_USBD_AUDIO_ENABLED 0\n\n#endif\n\n\n\n// <e> APP_USBD_ENABLED - app_usbd - USB Device library\n\n//==========================================================\n\n#ifndef APP_USBD_ENABLED\n\n#define APP_USBD_ENABLED 0\n\n#endif\n\n// <o> APP_USBD_VID - Vendor ID.  <0x0000-0xFFFF> \n\n\n\n\n\n// <i> Note: This value is not editable in Configuration Wizard.\n\n// <i> Vendor ID ordered from USB IF: http://www.usb.org/developers/vendor/\n\n\n\n#ifndef APP_USBD_VID\n\n#define APP_USBD_VID 0\n\n#endif\n\n\n\n// <o> APP_USBD_PID - Product ID.  <0x0000-0xFFFF> \n\n\n\n\n\n// <i> Note: This value is not editable in Configuration Wizard.\n\n// <i> Selected Product ID\n\n\n\n#ifndef APP_USBD_PID\n\n#define APP_USBD_PID 0\n\n#endif\n\n\n\n// <o> APP_USBD_DEVICE_VER_MAJOR - Major device version  <0-99> \n\n\n\n\n\n// <i> Major device version, will be converted automatically to BCD notation. Use just decimal values.\n\n\n\n#ifndef APP_USBD_DEVICE_VER_MAJOR\n\n#define APP_USBD_DEVICE_VER_MAJOR 1\n\n#endif\n\n\n\n// <o> APP_USBD_DEVICE_VER_MINOR - Minor device version  <0-9> \n\n\n\n\n\n// <i> Minor device version, will be converted automatically to BCD notation. Use just decimal values.\n\n\n\n#ifndef APP_USBD_DEVICE_VER_MINOR\n\n#define APP_USBD_DEVICE_VER_MINOR 0\n\n#endif\n\n\n\n// <o> APP_USBD_DEVICE_VER_SUB - Sub-minor device version  <0-9> \n\n\n\n\n\n// <i> Sub-minor device version, will be converted automatically to BCD notation. Use just decimal values.\n\n\n\n#ifndef APP_USBD_DEVICE_VER_SUB\n\n#define APP_USBD_DEVICE_VER_SUB 0\n\n#endif\n\n\n\n// <q> APP_USBD_CONFIG_SELF_POWERED  - Self-powered device, as opposed to bus-powered.\n\n \n\n\n\n#ifndef APP_USBD_CONFIG_SELF_POWERED\n\n#define APP_USBD_CONFIG_SELF_POWERED 1\n\n#endif\n\n\n\n// <o> APP_USBD_CONFIG_MAX_POWER - MaxPower field in configuration descriptor in milliamps.  <0-500> \n\n\n\n\n\n#ifndef APP_USBD_CONFIG_MAX_POWER\n\n#define APP_USBD_CONFIG_MAX_POWER 100\n\n#endif\n\n\n\n// <q> APP_USBD_CONFIG_POWER_EVENTS_PROCESS  - Process power events.\n\n \n\n\n\n// <i> Enable processing power events in USB event handler.\n\n\n\n#ifndef APP_USBD_CONFIG_POWER_EVENTS_PROCESS\n\n#define APP_USBD_CONFIG_POWER_EVENTS_PROCESS 1\n\n#endif\n\n\n\n// <e> APP_USBD_CONFIG_EVENT_QUEUE_ENABLE - Enable event queue.\n\n\n\n// <i> This is the default configuration when all the events are placed into internal queue.\n\n// <i> Disable it when an external queue is used like app_scheduler or if you wish to process all events inside interrupts.\n\n// <i> Processing all events from the interrupt level adds requirement not to call any functions that modifies the USBD library state from the context higher than USB interrupt context.\n\n// <i> Functions that modify USBD state are functions for sleep, wakeup, start, stop, enable, and disable.\n\n//==========================================================\n\n#ifndef APP_USBD_CONFIG_EVENT_QUEUE_ENABLE\n\n#define APP_USBD_CONFIG_EVENT_QUEUE_ENABLE 1\n\n#endif\n\n// <o> APP_USBD_CONFIG_EVENT_QUEUE_SIZE - The size of the event queue.  <16-64> \n\n\n\n\n\n// <i> The size of the queue for the events that would be processed in the main loop.\n\n\n\n#ifndef APP_USBD_CONFIG_EVENT_QUEUE_SIZE\n\n#define APP_USBD_CONFIG_EVENT_QUEUE_SIZE 32\n\n#endif\n\n\n\n// <o> APP_USBD_CONFIG_SOF_HANDLING_MODE  - Change SOF events handling mode.\n\n \n\n\n\n// <i> Normal queue   - SOF events are pushed normally into the event queue.\n\n// <i> Compress queue - SOF events are counted and binded with other events or executed when the queue is empty.\n\n// <i>                  This prevents the queue from filling up with SOF events.\n\n// <i> Interrupt      - SOF events are processed in interrupt.\n\n// <0=> Normal queue \n\n// <1=> Compress queue \n\n// <2=> Interrupt \n\n\n\n#ifndef APP_USBD_CONFIG_SOF_HANDLING_MODE\n\n#define APP_USBD_CONFIG_SOF_HANDLING_MODE 1\n\n#endif\n\n\n\n// </e>\n\n\n\n// <q> APP_USBD_CONFIG_SOF_TIMESTAMP_PROVIDE  - Provide a function that generates timestamps for logs based on the current SOF.\n\n \n\n\n\n// <i> The function app_usbd_sof_timestamp_get is implemented if the logger is enabled. \n\n// <i> Use it when initializing the logger. \n\n// <i> SOF processing is always enabled when this configuration parameter is active. \n\n// <i> Note: This option is configured outside of APP_USBD_CONFIG_LOG_ENABLED. \n\n// <i> This means that it works even if the logging in this very module is disabled. \n\n\n\n#ifndef APP_USBD_CONFIG_SOF_TIMESTAMP_PROVIDE\n\n#define APP_USBD_CONFIG_SOF_TIMESTAMP_PROVIDE 0\n\n#endif\n\n\n\n// <o> APP_USBD_CONFIG_DESC_STRING_SIZE - Maximum size of the NULL-terminated string of the string descriptor.  <31-254> \n\n\n\n\n\n// <i> 31 characters can be stored in the internal USB buffer used for transfers.\n\n// <i> Any value higher than 31 creates an additional buffer just for descriptor strings.\n\n\n\n#ifndef APP_USBD_CONFIG_DESC_STRING_SIZE\n\n#define APP_USBD_CONFIG_DESC_STRING_SIZE 31\n\n#endif\n\n\n\n// <q> APP_USBD_CONFIG_DESC_STRING_UTF_ENABLED  - Enable UTF8 conversion.\n\n \n\n\n\n// <i> Enable UTF8-encoded characters. In normal processing, only ASCII characters are available.\n\n\n\n#ifndef APP_USBD_CONFIG_DESC_STRING_UTF_ENABLED\n\n#define APP_USBD_CONFIG_DESC_STRING_UTF_ENABLED 0\n\n#endif\n\n\n\n// <s> APP_USBD_STRINGS_LANGIDS - Supported languages identifiers.\n\n\n\n// <i> Note: This value is not editable in Configuration Wizard.\n\n// <i> Comma-separated list of supported languages.\n\n#ifndef APP_USBD_STRINGS_LANGIDS\n\n#define APP_USBD_STRINGS_LANGIDS APP_USBD_LANG_AND_SUBLANG(APP_USBD_LANG_ENGLISH, APP_USBD_SUBLANG_ENGLISH_US)\n\n#endif\n\n\n\n// <e> APP_USBD_STRING_ID_MANUFACTURER - Define manufacturer string ID.\n\n\n\n// <i> Setting ID to 0 disables the string.\n\n//==========================================================\n\n#ifndef APP_USBD_STRING_ID_MANUFACTURER\n\n#define APP_USBD_STRING_ID_MANUFACTURER 1\n\n#endif\n\n// <q> APP_USBD_STRINGS_MANUFACTURER_EXTERN  - Define whether @ref APP_USBD_STRINGS_MANUFACTURER is created by macro or declared as a global variable.\n\n \n\n\n\n#ifndef APP_USBD_STRINGS_MANUFACTURER_EXTERN\n\n#define APP_USBD_STRINGS_MANUFACTURER_EXTERN 0\n\n#endif\n\n\n\n// <s> APP_USBD_STRINGS_MANUFACTURER - String descriptor for the manufacturer name.\n\n\n\n// <i> Note: This value is not editable in Configuration Wizard.\n\n// <i> Comma-separated list of manufacturer names for each defined language.\n\n// <i> Use @ref APP_USBD_STRING_DESC macro to create string descriptor from a NULL-terminated string.\n\n// <i> Use @ref APP_USBD_STRING_RAW8_DESC macro to create string descriptor from comma-separated uint8_t values.\n\n// <i> Use @ref APP_USBD_STRING_RAW16_DESC macro to create string descriptor from comma-separated uint16_t values.\n\n// <i> Alternatively, configure the macro to point to any internal variable pointer that already contains the descriptor.\n\n// <i> Setting string to NULL disables that string.\n\n// <i> The order of manufacturer names must be the same like in @ref APP_USBD_STRINGS_LANGIDS.\n\n#ifndef APP_USBD_STRINGS_MANUFACTURER\n\n#define APP_USBD_STRINGS_MANUFACTURER APP_USBD_STRING_DESC(\"Nordic Semiconductor\")\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> APP_USBD_STRING_ID_PRODUCT - Define product string ID.\n\n\n\n// <i> Setting ID to 0 disables the string.\n\n//==========================================================\n\n#ifndef APP_USBD_STRING_ID_PRODUCT\n\n#define APP_USBD_STRING_ID_PRODUCT 2\n\n#endif\n\n// <q> APP_USBD_STRINGS_PRODUCT_EXTERN  - Define whether @ref APP_USBD_STRINGS_PRODUCT is created by macro or declared as a global variable.\n\n \n\n\n\n#ifndef APP_USBD_STRINGS_PRODUCT_EXTERN\n\n#define APP_USBD_STRINGS_PRODUCT_EXTERN 0\n\n#endif\n\n\n\n// <s> APP_USBD_STRINGS_PRODUCT - String descriptor for the product name.\n\n\n\n// <i> Note: This value is not editable in Configuration Wizard.\n\n// <i> List of product names that is defined the same way like in @ref APP_USBD_STRINGS_MANUFACTURER.\n\n#ifndef APP_USBD_STRINGS_PRODUCT\n\n#define APP_USBD_STRINGS_PRODUCT APP_USBD_STRING_DESC(\"nRF52 USB Product\")\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> APP_USBD_STRING_ID_SERIAL - Define serial number string ID.\n\n\n\n// <i> Setting ID to 0 disables the string.\n\n//==========================================================\n\n#ifndef APP_USBD_STRING_ID_SERIAL\n\n#define APP_USBD_STRING_ID_SERIAL 3\n\n#endif\n\n// <q> APP_USBD_STRING_SERIAL_EXTERN  - Define whether @ref APP_USBD_STRING_SERIAL is created by macro or declared as a global variable.\n\n \n\n\n\n#ifndef APP_USBD_STRING_SERIAL_EXTERN\n\n#define APP_USBD_STRING_SERIAL_EXTERN 0\n\n#endif\n\n\n\n// <s> APP_USBD_STRING_SERIAL - String descriptor for the serial number.\n\n\n\n// <i> Note: This value is not editable in Configuration Wizard.\n\n// <i> Serial number that is defined the same way like in @ref APP_USBD_STRINGS_MANUFACTURER.\n\n#ifndef APP_USBD_STRING_SERIAL\n\n#define APP_USBD_STRING_SERIAL APP_USBD_STRING_DESC(\"000000000000\")\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> APP_USBD_STRING_ID_CONFIGURATION - Define configuration string ID.\n\n\n\n// <i> Setting ID to 0 disables the string.\n\n//==========================================================\n\n#ifndef APP_USBD_STRING_ID_CONFIGURATION\n\n#define APP_USBD_STRING_ID_CONFIGURATION 4\n\n#endif\n\n// <q> APP_USBD_STRING_CONFIGURATION_EXTERN  - Define whether @ref APP_USBD_STRINGS_CONFIGURATION is created by macro or declared as global variable.\n\n \n\n\n\n#ifndef APP_USBD_STRING_CONFIGURATION_EXTERN\n\n#define APP_USBD_STRING_CONFIGURATION_EXTERN 0\n\n#endif\n\n\n\n// <s> APP_USBD_STRINGS_CONFIGURATION - String descriptor for the device configuration.\n\n\n\n// <i> Note: This value is not editable in Configuration Wizard.\n\n// <i> Configuration string that is defined the same way like in @ref APP_USBD_STRINGS_MANUFACTURER.\n\n#ifndef APP_USBD_STRINGS_CONFIGURATION\n\n#define APP_USBD_STRINGS_CONFIGURATION APP_USBD_STRING_DESC(\"Default configuration\")\n\n#endif\n\n\n\n// </e>\n\n\n\n// <s> APP_USBD_STRINGS_USER - Default values for user strings.\n\n\n\n// <i> Note: This value is not editable in Configuration Wizard.\n\n// <i> This value stores all application specific user strings with the default initialization.\n\n// <i> The setup is done by X-macros.\n\n// <i> Expected macro parameters:\n\n// <i> @code\n\n// <i> X(mnemonic, [=str_idx], ...)\n\n// <i> @endcode\n\n// <i> - @c mnemonic: Mnemonic of the string descriptor that would be added to\n\n// <i>                @ref app_usbd_string_desc_idx_t enumerator.\n\n// <i> - @c str_idx : String index value, can be set or left empty.\n\n// <i>                For example, WinUSB driver requires descriptor to be present on 0xEE index.\n\n// <i>                Then use X(USBD_STRING_WINUSB, =0xEE, (APP_USBD_STRING_DESC(...)))\n\n// <i> - @c ...     : List of string descriptors for each defined language.\n\n#ifndef APP_USBD_STRINGS_USER\n\n#define APP_USBD_STRINGS_USER X(APP_USER_1, , APP_USBD_STRING_DESC(\"User 1\"))\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> APP_USBD_HID_ENABLED - app_usbd_hid - USB HID class\n\n//==========================================================\n\n#ifndef APP_USBD_HID_ENABLED\n\n#define APP_USBD_HID_ENABLED 0\n\n#endif\n\n// <o> APP_USBD_HID_DEFAULT_IDLE_RATE - Default idle rate for HID class.   <0-255> \n\n\n\n\n\n// <i> 0 means indefinite duration, any other value is multiplied by 4 milliseconds. Refer to Chapter 7.2.4 of HID 1.11 Specification.\n\n\n\n#ifndef APP_USBD_HID_DEFAULT_IDLE_RATE\n\n#define APP_USBD_HID_DEFAULT_IDLE_RATE 0\n\n#endif\n\n\n\n// <o> APP_USBD_HID_REPORT_IDLE_TABLE_SIZE - Size of idle rate table.   <1-255> \n\n\n\n\n\n// <i> Must be higher than the highest report ID used.\n\n\n\n#ifndef APP_USBD_HID_REPORT_IDLE_TABLE_SIZE\n\n#define APP_USBD_HID_REPORT_IDLE_TABLE_SIZE 4\n\n#endif\n\n\n\n// </e>\n\n\n\n// <q> APP_USBD_HID_GENERIC_ENABLED  - app_usbd_hid_generic - USB HID generic\n\n \n\n\n\n#ifndef APP_USBD_HID_GENERIC_ENABLED\n\n#define APP_USBD_HID_GENERIC_ENABLED 0\n\n#endif\n\n\n\n// <q> APP_USBD_HID_KBD_ENABLED  - app_usbd_hid_kbd - USB HID keyboard\n\n \n\n\n\n#ifndef APP_USBD_HID_KBD_ENABLED\n\n#define APP_USBD_HID_KBD_ENABLED 0\n\n#endif\n\n\n\n// <q> APP_USBD_HID_MOUSE_ENABLED  - app_usbd_hid_mouse - USB HID mouse\n\n \n\n\n\n#ifndef APP_USBD_HID_MOUSE_ENABLED\n\n#define APP_USBD_HID_MOUSE_ENABLED 0\n\n#endif\n\n\n\n// <q> APP_USBD_MSC_ENABLED  - app_usbd_msc - USB MSC class\n\n \n\n\n\n#ifndef APP_USBD_MSC_ENABLED\n\n#define APP_USBD_MSC_ENABLED 0\n\n#endif\n\n\n\n// <q> CRC16_ENABLED  - crc16 - CRC16 calculation routines\n\n \n\n\n\n#ifndef CRC16_ENABLED\n\n#define CRC16_ENABLED 0\n\n#endif\n\n\n\n// <q> CRC32_ENABLED  - crc32 - CRC32 calculation routines\n\n \n\n\n\n#ifndef CRC32_ENABLED\n\n#define CRC32_ENABLED 0\n\n#endif\n\n\n\n// <q> ECC_ENABLED  - ecc - Elliptic Curve Cryptography Library\n\n \n\n\n\n#ifndef ECC_ENABLED\n\n#define ECC_ENABLED 0\n\n#endif\n\n\n\n// <e> FDS_ENABLED - fds - Flash data storage module\n\n//==========================================================\n\n#ifndef FDS_ENABLED\n\n#define FDS_ENABLED 0\n\n#endif\n\n// <h> Pages - Virtual page settings\n\n\n\n// <i> Configure the number of virtual pages to use and their size.\n\n//==========================================================\n\n// <o> FDS_VIRTUAL_PAGES - Number of virtual flash pages to use. \n\n// <i> One of the virtual pages is reserved by the system for garbage collection.\n\n// <i> Therefore, the minimum is two virtual pages: one page to store data and one page to be used by the system for garbage collection.\n\n// <i> The total amount of flash memory that is used by FDS amounts to @ref FDS_VIRTUAL_PAGES * @ref FDS_VIRTUAL_PAGE_SIZE * 4 bytes.\n\n\n\n#ifndef FDS_VIRTUAL_PAGES\n\n#define FDS_VIRTUAL_PAGES 3\n\n#endif\n\n\n\n// <o> FDS_VIRTUAL_PAGE_SIZE  - The size of a virtual flash page.\n\n \n\n\n\n// <i> Expressed in number of 4-byte words.\n\n// <i> By default, a virtual page is the same size as a physical page.\n\n// <i> The size of a virtual page must be a multiple of the size of a physical page.\n\n// <1024=> 1024 \n\n// <2048=> 2048 \n\n\n\n#ifndef FDS_VIRTUAL_PAGE_SIZE\n\n#define FDS_VIRTUAL_PAGE_SIZE 1024\n\n#endif\n\n\n\n// <o> FDS_VIRTUAL_PAGES_RESERVED - The number of virtual flash pages that are used by other modules. \n\n// <i> FDS module stores its data in the last pages of the flash memory.\n\n// <i> By setting this value, you can move flash end address used by the FDS.\n\n// <i> As a result the reserved space can be used by other modules.\n\n\n\n#ifndef FDS_VIRTUAL_PAGES_RESERVED\n\n#define FDS_VIRTUAL_PAGES_RESERVED 0\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> Backend - Backend configuration\n\n\n\n// <i> Configure which nrf_fstorage backend is used by FDS to write to flash.\n\n//==========================================================\n\n// <o> FDS_BACKEND  - FDS flash backend.\n\n \n\n\n\n// <i> NRF_FSTORAGE_SD uses the nrf_fstorage_sd backend implementation using the SoftDevice API. Use this if you have a SoftDevice present.\n\n// <i> NRF_FSTORAGE_NVMC uses the nrf_fstorage_nvmc implementation. Use this setting if you don't use the SoftDevice.\n\n// <1=> NRF_FSTORAGE_NVMC \n\n// <2=> NRF_FSTORAGE_SD \n\n\n\n#ifndef FDS_BACKEND\n\n#define FDS_BACKEND 2\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> Queue - Queue settings\n\n\n\n//==========================================================\n\n// <o> FDS_OP_QUEUE_SIZE - Size of the internal queue. \n\n// <i> Increase this value if you frequently get synchronous FDS_ERR_NO_SPACE_IN_QUEUES errors.\n\n\n\n#ifndef FDS_OP_QUEUE_SIZE\n\n#define FDS_OP_QUEUE_SIZE 4\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> CRC - CRC functionality\n\n\n\n//==========================================================\n\n// <e> FDS_CRC_CHECK_ON_READ - Enable CRC checks.\n\n\n\n// <i> Save a record's CRC when it is written to flash and check it when the record is opened.\n\n// <i> Records with an incorrect CRC can still be 'seen' by the user using FDS functions, but they cannot be opened.\n\n// <i> Additionally, they will not be garbage collected until they are deleted.\n\n//==========================================================\n\n#ifndef FDS_CRC_CHECK_ON_READ\n\n#define FDS_CRC_CHECK_ON_READ 0\n\n#endif\n\n// <o> FDS_CRC_CHECK_ON_WRITE  - Perform a CRC check on newly written records.\n\n \n\n\n\n// <i> Perform a CRC check on newly written records.\n\n// <i> This setting can be used to make sure that the record data was not altered while being written to flash.\n\n// <1=> Enabled \n\n// <0=> Disabled \n\n\n\n#ifndef FDS_CRC_CHECK_ON_WRITE\n\n#define FDS_CRC_CHECK_ON_WRITE 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> Users - Number of users\n\n\n\n//==========================================================\n\n// <o> FDS_MAX_USERS - Maximum number of callbacks that can be registered. \n\n#ifndef FDS_MAX_USERS\n\n#define FDS_MAX_USERS 4\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// </e>\n\n\n\n// <q> HARDFAULT_HANDLER_ENABLED  - hardfault_default - HardFault default handler for debugging and release\n\n \n\n\n\n#ifndef HARDFAULT_HANDLER_ENABLED\n\n#define HARDFAULT_HANDLER_ENABLED 0\n\n#endif\n\n\n\n// <e> HCI_MEM_POOL_ENABLED - hci_mem_pool - memory pool implementation used by HCI\n\n//==========================================================\n\n#ifndef HCI_MEM_POOL_ENABLED\n\n#define HCI_MEM_POOL_ENABLED 0\n\n#endif\n\n// <o> HCI_TX_BUF_SIZE - TX buffer size in bytes. \n\n#ifndef HCI_TX_BUF_SIZE\n\n#define HCI_TX_BUF_SIZE 600\n\n#endif\n\n\n\n// <o> HCI_RX_BUF_SIZE - RX buffer size in bytes. \n\n#ifndef HCI_RX_BUF_SIZE\n\n#define HCI_RX_BUF_SIZE 600\n\n#endif\n\n\n\n// <o> HCI_RX_BUF_QUEUE_SIZE - RX buffer queue size. \n\n#ifndef HCI_RX_BUF_QUEUE_SIZE\n\n#define HCI_RX_BUF_QUEUE_SIZE 4\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> HCI_SLIP_ENABLED - hci_slip - SLIP protocol implementation used by HCI\n\n//==========================================================\n\n#ifndef HCI_SLIP_ENABLED\n\n#define HCI_SLIP_ENABLED 0\n\n#endif\n\n// <o> HCI_UART_BAUDRATE  - Default Baudrate\n\n \n\n// <323584=> 1200 baud \n\n// <643072=> 2400 baud \n\n// <1290240=> 4800 baud \n\n// <2576384=> 9600 baud \n\n// <3862528=> 14400 baud \n\n// <5152768=> 19200 baud \n\n// <7716864=> 28800 baud \n\n// <10289152=> 38400 baud \n\n// <15400960=> 57600 baud \n\n// <20615168=> 76800 baud \n\n// <30801920=> 115200 baud \n\n// <61865984=> 230400 baud \n\n// <67108864=> 250000 baud \n\n// <121634816=> 460800 baud \n\n// <251658240=> 921600 baud \n\n// <268435456=> 1000000 baud \n\n\n\n#ifndef HCI_UART_BAUDRATE\n\n#define HCI_UART_BAUDRATE 30801920\n\n#endif\n\n\n\n// <o> HCI_UART_FLOW_CONTROL  - Hardware Flow Control\n\n \n\n// <0=> Disabled \n\n// <1=> Enabled \n\n\n\n#ifndef HCI_UART_FLOW_CONTROL\n\n#define HCI_UART_FLOW_CONTROL 0\n\n#endif\n\n\n\n// <o> HCI_UART_RX_PIN - UART RX pin \n\n#ifndef HCI_UART_RX_PIN\n\n#define HCI_UART_RX_PIN 8\n\n#endif\n\n\n\n// <o> HCI_UART_TX_PIN - UART TX pin \n\n#ifndef HCI_UART_TX_PIN\n\n#define HCI_UART_TX_PIN 6\n\n#endif\n\n\n\n// <o> HCI_UART_RTS_PIN - UART RTS pin \n\n#ifndef HCI_UART_RTS_PIN\n\n#define HCI_UART_RTS_PIN 5\n\n#endif\n\n\n\n// <o> HCI_UART_CTS_PIN - UART CTS pin \n\n#ifndef HCI_UART_CTS_PIN\n\n#define HCI_UART_CTS_PIN 7\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> HCI_TRANSPORT_ENABLED - hci_transport - HCI transport\n\n//==========================================================\n\n#ifndef HCI_TRANSPORT_ENABLED\n\n#define HCI_TRANSPORT_ENABLED 0\n\n#endif\n\n// <o> HCI_MAX_PACKET_SIZE_IN_BITS - Maximum size of a single application packet in bits. \n\n#ifndef HCI_MAX_PACKET_SIZE_IN_BITS\n\n#define HCI_MAX_PACKET_SIZE_IN_BITS 8000\n\n#endif\n\n\n\n// </e>\n\n\n\n// <q> LED_SOFTBLINK_ENABLED  - led_softblink - led_softblink module\n\n \n\n\n\n#ifndef LED_SOFTBLINK_ENABLED\n\n#define LED_SOFTBLINK_ENABLED 0\n\n#endif\n\n\n\n// <q> LOW_POWER_PWM_ENABLED  - low_power_pwm - low_power_pwm module\n\n \n\n\n\n#ifndef LOW_POWER_PWM_ENABLED\n\n#define LOW_POWER_PWM_ENABLED 0\n\n#endif\n\n\n\n// <e> MEM_MANAGER_ENABLED - mem_manager - Dynamic memory allocator\n\n//==========================================================\n\n#ifndef MEM_MANAGER_ENABLED\n\n#define MEM_MANAGER_ENABLED 0\n\n#endif\n\n// <o> MEMORY_MANAGER_SMALL_BLOCK_COUNT - Size of each memory blocks identified as 'small' block.  <0-255> \n\n\n\n\n\n#ifndef MEMORY_MANAGER_SMALL_BLOCK_COUNT\n\n#define MEMORY_MANAGER_SMALL_BLOCK_COUNT 1\n\n#endif\n\n\n\n// <o> MEMORY_MANAGER_SMALL_BLOCK_SIZE -  Size of each memory blocks identified as 'small' block. \n\n// <i>  Size of each memory blocks identified as 'small' block. Memory block are recommended to be word-sized.\n\n\n\n#ifndef MEMORY_MANAGER_SMALL_BLOCK_SIZE\n\n#define MEMORY_MANAGER_SMALL_BLOCK_SIZE 32\n\n#endif\n\n\n\n// <o> MEMORY_MANAGER_MEDIUM_BLOCK_COUNT - Size of each memory blocks identified as 'medium' block.  <0-255> \n\n\n\n\n\n#ifndef MEMORY_MANAGER_MEDIUM_BLOCK_COUNT\n\n#define MEMORY_MANAGER_MEDIUM_BLOCK_COUNT 0\n\n#endif\n\n\n\n// <o> MEMORY_MANAGER_MEDIUM_BLOCK_SIZE -  Size of each memory blocks identified as 'medium' block. \n\n// <i>  Size of each memory blocks identified as 'medium' block. Memory block are recommended to be word-sized.\n\n\n\n#ifndef MEMORY_MANAGER_MEDIUM_BLOCK_SIZE\n\n#define MEMORY_MANAGER_MEDIUM_BLOCK_SIZE 256\n\n#endif\n\n\n\n// <o> MEMORY_MANAGER_LARGE_BLOCK_COUNT - Size of each memory blocks identified as 'large' block.  <0-255> \n\n\n\n\n\n#ifndef MEMORY_MANAGER_LARGE_BLOCK_COUNT\n\n#define MEMORY_MANAGER_LARGE_BLOCK_COUNT 0\n\n#endif\n\n\n\n// <o> MEMORY_MANAGER_LARGE_BLOCK_SIZE -  Size of each memory blocks identified as 'large' block. \n\n// <i>  Size of each memory blocks identified as 'large' block. Memory block are recommended to be word-sized.\n\n\n\n#ifndef MEMORY_MANAGER_LARGE_BLOCK_SIZE\n\n#define MEMORY_MANAGER_LARGE_BLOCK_SIZE 256\n\n#endif\n\n\n\n// <o> MEMORY_MANAGER_XLARGE_BLOCK_COUNT - Size of each memory blocks identified as 'extra large' block.  <0-255> \n\n\n\n\n\n#ifndef MEMORY_MANAGER_XLARGE_BLOCK_COUNT\n\n#define MEMORY_MANAGER_XLARGE_BLOCK_COUNT 0\n\n#endif\n\n\n\n// <o> MEMORY_MANAGER_XLARGE_BLOCK_SIZE -  Size of each memory blocks identified as 'extra large' block. \n\n// <i>  Size of each memory blocks identified as 'extra large' block. Memory block are recommended to be word-sized.\n\n\n\n#ifndef MEMORY_MANAGER_XLARGE_BLOCK_SIZE\n\n#define MEMORY_MANAGER_XLARGE_BLOCK_SIZE 1320\n\n#endif\n\n\n\n// <o> MEMORY_MANAGER_XXLARGE_BLOCK_COUNT - Size of each memory blocks identified as 'extra extra large' block.  <0-255> \n\n\n\n\n\n#ifndef MEMORY_MANAGER_XXLARGE_BLOCK_COUNT\n\n#define MEMORY_MANAGER_XXLARGE_BLOCK_COUNT 0\n\n#endif\n\n\n\n// <o> MEMORY_MANAGER_XXLARGE_BLOCK_SIZE -  Size of each memory blocks identified as 'extra extra large' block. \n\n// <i>  Size of each memory blocks identified as 'extra extra large' block. Memory block are recommended to be word-sized.\n\n\n\n#ifndef MEMORY_MANAGER_XXLARGE_BLOCK_SIZE\n\n#define MEMORY_MANAGER_XXLARGE_BLOCK_SIZE 3444\n\n#endif\n\n\n\n// <o> MEMORY_MANAGER_XSMALL_BLOCK_COUNT - Size of each memory blocks identified as 'extra small' block.  <0-255> \n\n\n\n\n\n#ifndef MEMORY_MANAGER_XSMALL_BLOCK_COUNT\n\n#define MEMORY_MANAGER_XSMALL_BLOCK_COUNT 0\n\n#endif\n\n\n\n// <o> MEMORY_MANAGER_XSMALL_BLOCK_SIZE -  Size of each memory blocks identified as 'extra small' block. \n\n// <i>  Size of each memory blocks identified as 'extra large' block. Memory block are recommended to be word-sized.\n\n\n\n#ifndef MEMORY_MANAGER_XSMALL_BLOCK_SIZE\n\n#define MEMORY_MANAGER_XSMALL_BLOCK_SIZE 64\n\n#endif\n\n\n\n// <o> MEMORY_MANAGER_XXSMALL_BLOCK_COUNT - Size of each memory blocks identified as 'extra extra small' block.  <0-255> \n\n\n\n\n\n#ifndef MEMORY_MANAGER_XXSMALL_BLOCK_COUNT\n\n#define MEMORY_MANAGER_XXSMALL_BLOCK_COUNT 0\n\n#endif\n\n\n\n// <o> MEMORY_MANAGER_XXSMALL_BLOCK_SIZE -  Size of each memory blocks identified as 'extra extra small' block. \n\n// <i>  Size of each memory blocks identified as 'extra extra small' block. Memory block are recommended to be word-sized.\n\n\n\n#ifndef MEMORY_MANAGER_XXSMALL_BLOCK_SIZE\n\n#define MEMORY_MANAGER_XXSMALL_BLOCK_SIZE 32\n\n#endif\n\n\n\n// <e> MEM_MANAGER_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef MEM_MANAGER_CONFIG_LOG_ENABLED\n\n#define MEM_MANAGER_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> MEM_MANAGER_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef MEM_MANAGER_CONFIG_LOG_LEVEL\n\n#define MEM_MANAGER_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> MEM_MANAGER_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef MEM_MANAGER_CONFIG_INFO_COLOR\n\n#define MEM_MANAGER_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> MEM_MANAGER_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef MEM_MANAGER_CONFIG_DEBUG_COLOR\n\n#define MEM_MANAGER_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <q> MEM_MANAGER_DISABLE_API_PARAM_CHECK  - Disable API parameter checks in the module.\n\n \n\n\n\n#ifndef MEM_MANAGER_DISABLE_API_PARAM_CHECK\n\n#define MEM_MANAGER_DISABLE_API_PARAM_CHECK 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_BALLOC_ENABLED - nrf_balloc - Block allocator module\n\n//==========================================================\n\n#ifndef NRF_BALLOC_ENABLED\n\n#define NRF_BALLOC_ENABLED 1\n\n#endif\n\n// <e> NRF_BALLOC_CONFIG_DEBUG_ENABLED - Enables debug mode in the module.\n\n//==========================================================\n\n#ifndef NRF_BALLOC_CONFIG_DEBUG_ENABLED\n\n#define NRF_BALLOC_CONFIG_DEBUG_ENABLED 0\n\n#endif\n\n// <o> NRF_BALLOC_CONFIG_HEAD_GUARD_WORDS - Number of words used as head guard.  <0-255> \n\n\n\n\n\n#ifndef NRF_BALLOC_CONFIG_HEAD_GUARD_WORDS\n\n#define NRF_BALLOC_CONFIG_HEAD_GUARD_WORDS 1\n\n#endif\n\n\n\n// <o> NRF_BALLOC_CONFIG_TAIL_GUARD_WORDS - Number of words used as tail guard.  <0-255> \n\n\n\n\n\n#ifndef NRF_BALLOC_CONFIG_TAIL_GUARD_WORDS\n\n#define NRF_BALLOC_CONFIG_TAIL_GUARD_WORDS 1\n\n#endif\n\n\n\n// <q> NRF_BALLOC_CONFIG_BASIC_CHECKS_ENABLED  - Enables basic checks in this module.\n\n \n\n\n\n#ifndef NRF_BALLOC_CONFIG_BASIC_CHECKS_ENABLED\n\n#define NRF_BALLOC_CONFIG_BASIC_CHECKS_ENABLED 0\n\n#endif\n\n\n\n// <q> NRF_BALLOC_CONFIG_DOUBLE_FREE_CHECK_ENABLED  - Enables double memory free check in this module.\n\n \n\n\n\n#ifndef NRF_BALLOC_CONFIG_DOUBLE_FREE_CHECK_ENABLED\n\n#define NRF_BALLOC_CONFIG_DOUBLE_FREE_CHECK_ENABLED 0\n\n#endif\n\n\n\n// <q> NRF_BALLOC_CONFIG_DATA_TRASHING_CHECK_ENABLED  - Enables free memory corruption check in this module.\n\n \n\n\n\n#ifndef NRF_BALLOC_CONFIG_DATA_TRASHING_CHECK_ENABLED\n\n#define NRF_BALLOC_CONFIG_DATA_TRASHING_CHECK_ENABLED 0\n\n#endif\n\n\n\n// <q> NRF_BALLOC_CLI_CMDS  - Enable CLI commands specific to the module\n\n \n\n\n\n#ifndef NRF_BALLOC_CLI_CMDS\n\n#define NRF_BALLOC_CLI_CMDS 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRF_CSENSE_ENABLED - nrf_csense - Capacitive sensor module\n\n//==========================================================\n\n#ifndef NRF_CSENSE_ENABLED\n\n#define NRF_CSENSE_ENABLED 0\n\n#endif\n\n// <o> NRF_CSENSE_PAD_HYSTERESIS - Minimum value of change required to determine that a pad was touched. \n\n#ifndef NRF_CSENSE_PAD_HYSTERESIS\n\n#define NRF_CSENSE_PAD_HYSTERESIS 15\n\n#endif\n\n\n\n// <o> NRF_CSENSE_PAD_DEVIATION - Minimum value measured on a pad required to take it into account while calculating the step. \n\n#ifndef NRF_CSENSE_PAD_DEVIATION\n\n#define NRF_CSENSE_PAD_DEVIATION 70\n\n#endif\n\n\n\n// <o> NRF_CSENSE_MIN_PAD_VALUE - Minimum normalized value on a pad required to take its value into account. \n\n#ifndef NRF_CSENSE_MIN_PAD_VALUE\n\n#define NRF_CSENSE_MIN_PAD_VALUE 20\n\n#endif\n\n\n\n// <o> NRF_CSENSE_MAX_PADS_NUMBER - Maximum number of pads used for one instance. \n\n#ifndef NRF_CSENSE_MAX_PADS_NUMBER\n\n#define NRF_CSENSE_MAX_PADS_NUMBER 20\n\n#endif\n\n\n\n// <o> NRF_CSENSE_MAX_VALUE - Maximum normalized value obtained from measurement. \n\n#ifndef NRF_CSENSE_MAX_VALUE\n\n#define NRF_CSENSE_MAX_VALUE 1000\n\n#endif\n\n\n\n// <o> NRF_CSENSE_OUTPUT_PIN - Output pin used by the low-level module. \n\n// <i> This is used when capacitive sensor does not use COMP.\n\n\n\n#ifndef NRF_CSENSE_OUTPUT_PIN\n\n#define NRF_CSENSE_OUTPUT_PIN 26\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_DRV_CSENSE_ENABLED - nrf_drv_csense - Capacitive sensor low-level module\n\n//==========================================================\n\n#ifndef NRF_DRV_CSENSE_ENABLED\n\n#define NRF_DRV_CSENSE_ENABLED 0\n\n#endif\n\n// <e> USE_COMP - Use the comparator to implement the capacitive sensor driver.\n\n\n\n// <i> Due to Anomaly 84, COMP I_SOURCE is not functional. It has too high a varation.\n\n//==========================================================\n\n#ifndef USE_COMP\n\n#define USE_COMP 0\n\n#endif\n\n// <o> TIMER0_FOR_CSENSE - First TIMER instance used by the driver (not used on nRF51). \n\n#ifndef TIMER0_FOR_CSENSE\n\n#define TIMER0_FOR_CSENSE 1\n\n#endif\n\n\n\n// <o> TIMER1_FOR_CSENSE - Second TIMER instance used by the driver (not used on nRF51). \n\n#ifndef TIMER1_FOR_CSENSE\n\n#define TIMER1_FOR_CSENSE 2\n\n#endif\n\n\n\n// <o> MEASUREMENT_PERIOD - Single measurement period. \n\n// <i> Time of a single measurement can be calculated as\n\n// <i> T = (1/2)*MEASUREMENT_PERIOD*(1/f_OSC) where f_OSC = I_SOURCE / (2C*(VUP-VDOWN) ).\n\n// <i> I_SOURCE, VUP, and VDOWN are values used to initialize COMP and C is the capacitance of the used pad.\n\n\n\n#ifndef MEASUREMENT_PERIOD\n\n#define MEASUREMENT_PERIOD 20\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRF_FSTORAGE_ENABLED - nrf_fstorage - Flash abstraction library\n\n//==========================================================\n\n#ifndef NRF_FSTORAGE_ENABLED\n\n#define NRF_FSTORAGE_ENABLED 0\n\n#endif\n\n// <h> nrf_fstorage - Common settings\n\n\n\n// <i> Common settings to all fstorage implementations\n\n//==========================================================\n\n// <q> NRF_FSTORAGE_PARAM_CHECK_DISABLED  - Disable user input validation\n\n \n\n\n\n// <i> If selected, use ASSERT to validate user input.\n\n// <i> This effectively removes user input validation in production code.\n\n// <i> Recommended setting: OFF, only enable this setting if size is a major concern.\n\n\n\n#ifndef NRF_FSTORAGE_PARAM_CHECK_DISABLED\n\n#define NRF_FSTORAGE_PARAM_CHECK_DISABLED 0\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> nrf_fstorage_sd - Implementation using the SoftDevice\n\n\n\n// <i> Configuration options for the fstorage implementation using the SoftDevice\n\n//==========================================================\n\n// <o> NRF_FSTORAGE_SD_QUEUE_SIZE - Size of the internal queue of operations \n\n// <i> Increase this value if API calls frequently return the error @ref NRF_ERROR_NO_MEM.\n\n\n\n#ifndef NRF_FSTORAGE_SD_QUEUE_SIZE\n\n#define NRF_FSTORAGE_SD_QUEUE_SIZE 4\n\n#endif\n\n\n\n// <o> NRF_FSTORAGE_SD_MAX_RETRIES - Maximum number of attempts at executing an operation when the SoftDevice is busy \n\n// <i> Increase this value if events frequently return the @ref NRF_ERROR_TIMEOUT error.\n\n// <i> The SoftDevice might fail to schedule flash access due to high BLE activity.\n\n\n\n#ifndef NRF_FSTORAGE_SD_MAX_RETRIES\n\n#define NRF_FSTORAGE_SD_MAX_RETRIES 8\n\n#endif\n\n\n\n// <o> NRF_FSTORAGE_SD_MAX_WRITE_SIZE - Maximum number of bytes to be written to flash in a single operation \n\n// <i> This value must be a multiple of four.\n\n// <i> Lowering this value can increase the chances of the SoftDevice being able to execute flash operations in between radio activity.\n\n// <i> This value is bound by the maximum number of bytes that can be written to flash in a single call to @ref sd_flash_write.\n\n// <i> That is 1024 bytes for nRF51 ICs and 4096 bytes for nRF52 ICs.\n\n\n\n#ifndef NRF_FSTORAGE_SD_MAX_WRITE_SIZE\n\n#define NRF_FSTORAGE_SD_MAX_WRITE_SIZE 4096\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// </e>\n\n\n\n// <q> NRF_GFX_ENABLED  - nrf_gfx - GFX module\n\n \n\n\n\n#ifndef NRF_GFX_ENABLED\n\n#define NRF_GFX_ENABLED 0\n\n#endif\n\n\n\n// <q> NRF_MEMOBJ_ENABLED  - nrf_memobj - Linked memory allocator module\n\n \n\n\n\n#ifndef NRF_MEMOBJ_ENABLED\n\n#define NRF_MEMOBJ_ENABLED 1\n\n#endif\n\n\n\n// <e> NRF_PWR_MGMT_ENABLED - nrf_pwr_mgmt - Power management module\n\n//==========================================================\n\n#ifndef NRF_PWR_MGMT_ENABLED\n\n#define NRF_PWR_MGMT_ENABLED 1\n\n#endif\n\n// <e> NRF_PWR_MGMT_CONFIG_DEBUG_PIN_ENABLED - Enables pin debug in the module.\n\n\n\n// <i> Selected pin will be set when CPU is in sleep mode.\n\n//==========================================================\n\n#ifndef NRF_PWR_MGMT_CONFIG_DEBUG_PIN_ENABLED\n\n#define NRF_PWR_MGMT_CONFIG_DEBUG_PIN_ENABLED 0\n\n#endif\n\n// <o> NRF_PWR_MGMT_SLEEP_DEBUG_PIN  - Pin number\n\n \n\n// <0=> 0 (P0.0) \n\n// <1=> 1 (P0.1) \n\n// <2=> 2 (P0.2) \n\n// <3=> 3 (P0.3) \n\n// <4=> 4 (P0.4) \n\n// <5=> 5 (P0.5) \n\n// <6=> 6 (P0.6) \n\n// <7=> 7 (P0.7) \n\n// <8=> 8 (P0.8) \n\n// <9=> 9 (P0.9) \n\n// <10=> 10 (P0.10) \n\n// <11=> 11 (P0.11) \n\n// <12=> 12 (P0.12) \n\n// <13=> 13 (P0.13) \n\n// <14=> 14 (P0.14) \n\n// <15=> 15 (P0.15) \n\n// <16=> 16 (P0.16) \n\n// <17=> 17 (P0.17) \n\n// <18=> 18 (P0.18) \n\n// <19=> 19 (P0.19) \n\n// <20=> 20 (P0.20) \n\n// <21=> 21 (P0.21) \n\n// <22=> 22 (P0.22) \n\n// <23=> 23 (P0.23) \n\n// <24=> 24 (P0.24) \n\n// <25=> 25 (P0.25) \n\n// <26=> 26 (P0.26) \n\n// <27=> 27 (P0.27) \n\n// <28=> 28 (P0.28) \n\n// <29=> 29 (P0.29) \n\n// <30=> 30 (P0.30) \n\n// <31=> 31 (P0.31) \n\n// <4294967295=> Not connected \n\n\n\n#ifndef NRF_PWR_MGMT_SLEEP_DEBUG_PIN\n\n#define NRF_PWR_MGMT_SLEEP_DEBUG_PIN 31\n\n#endif\n\n\n\n// </e>\n\n\n\n// <q> NRF_PWR_MGMT_CONFIG_CPU_USAGE_MONITOR_ENABLED  - Enables CPU usage monitor.\n\n \n\n\n\n// <i> Module will trace percentage of CPU usage in one second intervals.\n\n\n\n#ifndef NRF_PWR_MGMT_CONFIG_CPU_USAGE_MONITOR_ENABLED\n\n#define NRF_PWR_MGMT_CONFIG_CPU_USAGE_MONITOR_ENABLED 0\n\n#endif\n\n\n\n// <e> NRF_PWR_MGMT_CONFIG_STANDBY_TIMEOUT_ENABLED - Enable standby timeout.\n\n//==========================================================\n\n#ifndef NRF_PWR_MGMT_CONFIG_STANDBY_TIMEOUT_ENABLED\n\n#define NRF_PWR_MGMT_CONFIG_STANDBY_TIMEOUT_ENABLED 0\n\n#endif\n\n// <o> NRF_PWR_MGMT_CONFIG_STANDBY_TIMEOUT_S - Standby timeout (in seconds). \n\n// <i> Shutdown procedure will begin no earlier than after this number of seconds.\n\n\n\n#ifndef NRF_PWR_MGMT_CONFIG_STANDBY_TIMEOUT_S\n\n#define NRF_PWR_MGMT_CONFIG_STANDBY_TIMEOUT_S 3\n\n#endif\n\n\n\n// </e>\n\n\n\n// <q> NRF_PWR_MGMT_CONFIG_FPU_SUPPORT_ENABLED  - Enables FPU event cleaning.\n\n \n\n\n\n#ifndef NRF_PWR_MGMT_CONFIG_FPU_SUPPORT_ENABLED\n\n#define NRF_PWR_MGMT_CONFIG_FPU_SUPPORT_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_PWR_MGMT_CONFIG_AUTO_SHUTDOWN_RETRY  - Blocked shutdown procedure will be retried every second.\n\n \n\n\n\n#ifndef NRF_PWR_MGMT_CONFIG_AUTO_SHUTDOWN_RETRY\n\n#define NRF_PWR_MGMT_CONFIG_AUTO_SHUTDOWN_RETRY 0\n\n#endif\n\n\n\n// <q> NRF_PWR_MGMT_CONFIG_USE_SCHEDULER  - Module will use @ref app_scheduler.\n\n \n\n\n\n#ifndef NRF_PWR_MGMT_CONFIG_USE_SCHEDULER\n\n#define NRF_PWR_MGMT_CONFIG_USE_SCHEDULER 0\n\n#endif\n\n\n\n// <o> NRF_PWR_MGMT_CONFIG_HANDLER_PRIORITY_COUNT - The number of priorities for module handlers. \n\n// <i> The number of stages of the shutdown process.\n\n\n\n#ifndef NRF_PWR_MGMT_CONFIG_HANDLER_PRIORITY_COUNT\n\n#define NRF_PWR_MGMT_CONFIG_HANDLER_PRIORITY_COUNT 3\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_QUEUE_ENABLED - nrf_queue - Queue module\n\n//==========================================================\n\n#ifndef NRF_QUEUE_ENABLED\n\n#define NRF_QUEUE_ENABLED 1\n\n#endif\n\n// <q> NRF_QUEUE_CLI_CMDS  - Enable CLI commands specific to the module\n\n \n\n\n\n#ifndef NRF_QUEUE_CLI_CMDS\n\n#define NRF_QUEUE_CLI_CMDS 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <q> NRF_SECTION_ITER_ENABLED  - nrf_section_iter - Section iterator\n\n \n\n\n\n#ifndef NRF_SECTION_ITER_ENABLED\n\n#define NRF_SECTION_ITER_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_SORTLIST_ENABLED  - nrf_sortlist - Sorted list\n\n \n\n\n\n#ifndef NRF_SORTLIST_ENABLED\n\n#define NRF_SORTLIST_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_SPI_MNGR_ENABLED  - nrf_spi_mngr - SPI transaction manager\n\n \n\n\n\n#ifndef NRF_SPI_MNGR_ENABLED\n\n#define NRF_SPI_MNGR_ENABLED 0\n\n#endif\n\n\n\n// <q> NRF_STRERROR_ENABLED  - nrf_strerror - Library for converting error code to string.\n\n \n\n\n\n#ifndef NRF_STRERROR_ENABLED\n\n#define NRF_STRERROR_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_TWI_MNGR_ENABLED  - nrf_twi_mngr - TWI transaction manager\n\n \n\n\n\n#ifndef NRF_TWI_MNGR_ENABLED\n\n#define NRF_TWI_MNGR_ENABLED 0\n\n#endif\n\n\n\n// <q> RETARGET_ENABLED  - retarget - Retargeting stdio functions\n\n \n\n\n\n#ifndef RETARGET_ENABLED\n\n#define RETARGET_ENABLED 1\n\n#endif\n\n\n\n// <q> SLIP_ENABLED  - slip - SLIP encoding and decoding\n\n \n\n\n\n#ifndef SLIP_ENABLED\n\n#define SLIP_ENABLED 0\n\n#endif\n\n\n\n// <e> TASK_MANAGER_ENABLED - task_manager - Task manager.\n\n//==========================================================\n\n#ifndef TASK_MANAGER_ENABLED\n\n#define TASK_MANAGER_ENABLED 0\n\n#endif\n\n// <q> TASK_MANAGER_CLI_CMDS  - Enable CLI commands specific to the module\n\n \n\n\n\n#ifndef TASK_MANAGER_CLI_CMDS\n\n#define TASK_MANAGER_CLI_CMDS 0\n\n#endif\n\n\n\n// <o> TASK_MANAGER_CONFIG_MAX_TASKS - Maximum number of tasks which can be created \n\n#ifndef TASK_MANAGER_CONFIG_MAX_TASKS\n\n#define TASK_MANAGER_CONFIG_MAX_TASKS 2\n\n#endif\n\n\n\n// <o> TASK_MANAGER_CONFIG_STACK_SIZE - Stack size for every task (power of 2) \n\n#ifndef TASK_MANAGER_CONFIG_STACK_SIZE\n\n#define TASK_MANAGER_CONFIG_STACK_SIZE 1024\n\n#endif\n\n\n\n// <q> TASK_MANAGER_CONFIG_STACK_PROFILER_ENABLED  - Enable stack profiling.\n\n \n\n\n\n#ifndef TASK_MANAGER_CONFIG_STACK_PROFILER_ENABLED\n\n#define TASK_MANAGER_CONFIG_STACK_PROFILER_ENABLED 1\n\n#endif\n\n\n\n// <o> TASK_MANAGER_CONFIG_STACK_GUARD  - Configures stack guard.\n\n \n\n// <0=> Disabled \n\n// <4=> 32 bytes \n\n// <5=> 64 bytes \n\n// <6=> 128 bytes \n\n// <7=> 256 bytes \n\n// <8=> 512 bytes \n\n\n\n#ifndef TASK_MANAGER_CONFIG_STACK_GUARD\n\n#define TASK_MANAGER_CONFIG_STACK_GUARD 7\n\n#endif\n\n\n\n// </e>\n\n\n\n// <h> app_button - buttons handling module\n\n\n\n//==========================================================\n\n// <q> BUTTON_ENABLED  - Enables Button module\n\n \n\n\n\n#ifndef BUTTON_ENABLED\n\n#define BUTTON_ENABLED 1\n\n#endif\n\n\n\n// <q> BUTTON_HIGH_ACCURACY_ENABLED  - Enables GPIOTE high accuracy for buttons\n\n \n\n\n\n#ifndef BUTTON_HIGH_ACCURACY_ENABLED\n\n#define BUTTON_HIGH_ACCURACY_ENABLED 0\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> app_usbd_cdc_acm - USB CDC ACM class\n\n\n\n//==========================================================\n\n// <q> APP_USBD_CDC_ACM_ENABLED  - Enabling USBD CDC ACM Class library\n\n \n\n\n\n#ifndef APP_USBD_CDC_ACM_ENABLED\n\n#define APP_USBD_CDC_ACM_ENABLED 0\n\n#endif\n\n\n\n// <q> APP_USBD_CDC_ACM_ZLP_ON_EPSIZE_WRITE  - Send ZLP on write with same size as endpoint\n\n \n\n\n\n// <i> If enabled, CDC ACM class will automatically send a zero length packet after transfer which has the same size as endpoint.\n\n// <i> This may limit throughput if a lot of binary data is sent, but in terminal mode operation it makes sure that the data is always displayed right after it is sent.\n\n\n\n#ifndef APP_USBD_CDC_ACM_ZLP_ON_EPSIZE_WRITE\n\n#define APP_USBD_CDC_ACM_ZLP_ON_EPSIZE_WRITE 1\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> nrf_cli - Command line interface\n\n\n\n//==========================================================\n\n// <q> NRF_CLI_ENABLED  - Enable/disable the CLI module.\n\n \n\n\n\n#ifndef NRF_CLI_ENABLED\n\n#define NRF_CLI_ENABLED 0\n\n#endif\n\n\n\n// <o> NRF_CLI_ARGC_MAX - Maximum number of parameters passed to the command handler. \n\n#ifndef NRF_CLI_ARGC_MAX\n\n#define NRF_CLI_ARGC_MAX 12\n\n#endif\n\n\n\n// <q> NRF_CLI_BUILD_IN_CMDS_ENABLED  - CLI built-in commands.\n\n \n\n\n\n#ifndef NRF_CLI_BUILD_IN_CMDS_ENABLED\n\n#define NRF_CLI_BUILD_IN_CMDS_ENABLED 1\n\n#endif\n\n\n\n// <o> NRF_CLI_CMD_BUFF_SIZE - Maximum buffer size for a single command. \n\n#ifndef NRF_CLI_CMD_BUFF_SIZE\n\n#define NRF_CLI_CMD_BUFF_SIZE 128\n\n#endif\n\n\n\n// <q> NRF_CLI_ECHO_STATUS  - CLI echo status. If set, echo is ON.\n\n \n\n\n\n#ifndef NRF_CLI_ECHO_STATUS\n\n#define NRF_CLI_ECHO_STATUS 1\n\n#endif\n\n\n\n// <q> NRF_CLI_WILDCARD_ENABLED  - Enable wildcard functionality for CLI commands.\n\n \n\n\n\n#ifndef NRF_CLI_WILDCARD_ENABLED\n\n#define NRF_CLI_WILDCARD_ENABLED 0\n\n#endif\n\n\n\n// <q> NRF_CLI_METAKEYS_ENABLED  - Enable additional control keys for CLI commands like ctrl+a, ctrl+e, ctrl+w, ctrl+u\n\n \n\n\n\n#ifndef NRF_CLI_METAKEYS_ENABLED\n\n#define NRF_CLI_METAKEYS_ENABLED 0\n\n#endif\n\n\n\n// <o> NRF_CLI_PRINTF_BUFF_SIZE - Maximum print buffer size. \n\n#ifndef NRF_CLI_PRINTF_BUFF_SIZE\n\n#define NRF_CLI_PRINTF_BUFF_SIZE 23\n\n#endif\n\n\n\n// <e> NRF_CLI_HISTORY_ENABLED - Enable CLI history mode.\n\n//==========================================================\n\n#ifndef NRF_CLI_HISTORY_ENABLED\n\n#define NRF_CLI_HISTORY_ENABLED 1\n\n#endif\n\n// <o> NRF_CLI_HISTORY_ELEMENT_SIZE - Size of one memory object reserved for CLI history. \n\n#ifndef NRF_CLI_HISTORY_ELEMENT_SIZE\n\n#define NRF_CLI_HISTORY_ELEMENT_SIZE 32\n\n#endif\n\n\n\n// <o> NRF_CLI_HISTORY_ELEMENT_COUNT - Number of history memory objects. \n\n#ifndef NRF_CLI_HISTORY_ELEMENT_COUNT\n\n#define NRF_CLI_HISTORY_ELEMENT_COUNT 8\n\n#endif\n\n\n\n// </e>\n\n\n\n// <q> NRF_CLI_VT100_COLORS_ENABLED  - CLI VT100 colors.\n\n \n\n\n\n#ifndef NRF_CLI_VT100_COLORS_ENABLED\n\n#define NRF_CLI_VT100_COLORS_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CLI_STATISTICS_ENABLED  - Enable CLI statistics.\n\n \n\n\n\n#ifndef NRF_CLI_STATISTICS_ENABLED\n\n#define NRF_CLI_STATISTICS_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CLI_LOG_BACKEND  - Enable logger backend interface.\n\n \n\n\n\n#ifndef NRF_CLI_LOG_BACKEND\n\n#define NRF_CLI_LOG_BACKEND 1\n\n#endif\n\n\n\n// <q> NRF_CLI_USES_TASK_MANAGER_ENABLED  - Enable CLI to use task_manager\n\n \n\n\n\n#ifndef NRF_CLI_USES_TASK_MANAGER_ENABLED\n\n#define NRF_CLI_USES_TASK_MANAGER_ENABLED 0\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> nrf_fprintf - fprintf function.\n\n\n\n//==========================================================\n\n// <q> NRF_FPRINTF_ENABLED  - Enable/disable fprintf module.\n\n \n\n\n\n#ifndef NRF_FPRINTF_ENABLED\n\n#define NRF_FPRINTF_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_FPRINTF_FLAG_AUTOMATIC_CR_ON_LF_ENABLED  - For each printed LF, function will add CR.\n\n \n\n\n\n#ifndef NRF_FPRINTF_FLAG_AUTOMATIC_CR_ON_LF_ENABLED\n\n#define NRF_FPRINTF_FLAG_AUTOMATIC_CR_ON_LF_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_FPRINTF_DOUBLE_ENABLED  - Enable IEEE-754 double precision formatting.\n\n \n\n\n\n#ifndef NRF_FPRINTF_DOUBLE_ENABLED\n\n#define NRF_FPRINTF_DOUBLE_ENABLED 0\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> nRF_Log \n\n\n\n//==========================================================\n\n// <e> NRF_LOG_BACKEND_RTT_ENABLED - nrf_log_backend_rtt - Log RTT backend\n\n//==========================================================\n\n#ifndef NRF_LOG_BACKEND_RTT_ENABLED\n\n#define NRF_LOG_BACKEND_RTT_ENABLED 1\n\n#endif\n\n// <o> NRF_LOG_BACKEND_RTT_TEMP_BUFFER_SIZE - Size of buffer for partially processed strings. \n\n// <i> Size of the buffer is a trade-off between RAM usage and processing.\n\n// <i> if buffer is smaller then strings will often be fragmented.\n\n// <i> It is recommended to use size which will fit typical log and only the\n\n// <i> longer one will be fragmented.\n\n\n\n#ifndef NRF_LOG_BACKEND_RTT_TEMP_BUFFER_SIZE\n\n#define NRF_LOG_BACKEND_RTT_TEMP_BUFFER_SIZE 64\n\n#endif\n\n\n\n// <o> NRF_LOG_BACKEND_RTT_TX_RETRY_DELAY_MS - Period before retrying writing to RTT \n\n#ifndef NRF_LOG_BACKEND_RTT_TX_RETRY_DELAY_MS\n\n#define NRF_LOG_BACKEND_RTT_TX_RETRY_DELAY_MS 1\n\n#endif\n\n\n\n// <o> NRF_LOG_BACKEND_RTT_TX_RETRY_CNT - Writing to RTT retries. \n\n// <i> If RTT fails to accept any new data after retries\n\n// <i> module assumes that host is not active and on next\n\n// <i> request it will perform only one write attempt.\n\n// <i> On successful writing, module assumes that host is active\n\n// <i> and scheme with retry is applied again.\n\n\n\n#ifndef NRF_LOG_BACKEND_RTT_TX_RETRY_CNT\n\n#define NRF_LOG_BACKEND_RTT_TX_RETRY_CNT 3\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_LOG_ENABLED - nrf_log - Logger\n\n//==========================================================\n\n#ifndef NRF_LOG_ENABLED\n\n#define NRF_LOG_ENABLED 1\n\n#endif\n\n// <h> Log message pool - Configuration of log message pool\n\n\n\n//==========================================================\n\n// <o> NRF_LOG_MSGPOOL_ELEMENT_SIZE - Size of a single element in the pool of memory objects. \n\n// <i> If a small value is set, then performance of logs processing\n\n// <i> is degraded because data is fragmented. Bigger value impacts\n\n// <i> RAM memory utilization. The size is set to fit a message with\n\n// <i> a timestamp and up to 2 arguments in a single memory object.\n\n\n\n#ifndef NRF_LOG_MSGPOOL_ELEMENT_SIZE\n\n#define NRF_LOG_MSGPOOL_ELEMENT_SIZE 20\n\n#endif\n\n\n\n// <o> NRF_LOG_MSGPOOL_ELEMENT_COUNT - Number of elements in the pool of memory objects \n\n// <i> If a small value is set, then it may lead to a deadlock\n\n// <i> in certain cases if backend has high latency and holds\n\n// <i> multiple messages for long time. Bigger value impacts\n\n// <i> RAM memory usage.\n\n\n\n#ifndef NRF_LOG_MSGPOOL_ELEMENT_COUNT\n\n#define NRF_LOG_MSGPOOL_ELEMENT_COUNT 8\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <q> NRF_LOG_ALLOW_OVERFLOW  - Configures behavior when circular buffer is full.\n\n \n\n\n\n// <i> If set then oldest logs are overwritten. Otherwise a \n\n// <i> marker is injected informing about overflow.\n\n\n\n#ifndef NRF_LOG_ALLOW_OVERFLOW\n\n#define NRF_LOG_ALLOW_OVERFLOW 1\n\n#endif\n\n\n\n// <o> NRF_LOG_BUFSIZE  - Size of the buffer for storing logs (in bytes).\n\n \n\n\n\n// <i> Must be power of 2 and multiple of 4.\n\n// <i> If NRF_LOG_DEFERRED = 0 then buffer size can be reduced to minimum.\n\n// <128=> 128 \n\n// <256=> 256 \n\n// <512=> 512 \n\n// <1024=> 1024 \n\n// <2048=> 2048 \n\n// <4096=> 4096 \n\n// <8192=> 8192 \n\n// <16384=> 16384 \n\n\n\n#ifndef NRF_LOG_BUFSIZE\n\n#define NRF_LOG_BUFSIZE 1024\n\n#endif\n\n\n\n// <q> NRF_LOG_CLI_CMDS  - Enable CLI commands for the module.\n\n \n\n\n\n#ifndef NRF_LOG_CLI_CMDS\n\n#define NRF_LOG_CLI_CMDS 0\n\n#endif\n\n\n\n// <o> NRF_LOG_DEFAULT_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_LOG_DEFAULT_LEVEL\n\n#define NRF_LOG_DEFAULT_LEVEL 3\n\n#endif\n\n\n\n// <q> NRF_LOG_DEFERRED  - Enable deffered logger.\n\n \n\n\n\n// <i> Log data is buffered and can be processed in idle.\n\n\n\n#ifndef NRF_LOG_DEFERRED\n\n#define NRF_LOG_DEFERRED 1\n\n#endif\n\n\n\n// <q> NRF_LOG_FILTERS_ENABLED  - Enable dynamic filtering of logs.\n\n \n\n\n\n#ifndef NRF_LOG_FILTERS_ENABLED\n\n#define NRF_LOG_FILTERS_ENABLED 0\n\n#endif\n\n\n\n// <q> NRF_LOG_NON_DEFFERED_CRITICAL_REGION_ENABLED  - Enable use of critical region for non deffered mode when flushing logs.\n\n \n\n\n\n// <i> When enabled NRF_LOG_FLUSH is called from critical section when non deffered mode is used.\n\n// <i> Log output will never be corrupted as access to the log backend is exclusive\n\n// <i> but system will spend significant amount of time in critical section\n\n\n\n#ifndef NRF_LOG_NON_DEFFERED_CRITICAL_REGION_ENABLED\n\n#define NRF_LOG_NON_DEFFERED_CRITICAL_REGION_ENABLED 0\n\n#endif\n\n\n\n// <o> NRF_LOG_STR_PUSH_BUFFER_SIZE  - Size of the buffer dedicated for strings stored using @ref NRF_LOG_PUSH.\n\n \n\n// <16=> 16 \n\n// <32=> 32 \n\n// <64=> 64 \n\n// <128=> 128 \n\n// <256=> 256 \n\n// <512=> 512 \n\n// <1024=> 1024 \n\n\n\n#ifndef NRF_LOG_STR_PUSH_BUFFER_SIZE\n\n#define NRF_LOG_STR_PUSH_BUFFER_SIZE 128\n\n#endif\n\n\n\n// <o> NRF_LOG_STR_PUSH_BUFFER_SIZE  - Size of the buffer dedicated for strings stored using @ref NRF_LOG_PUSH.\n\n \n\n// <16=> 16 \n\n// <32=> 32 \n\n// <64=> 64 \n\n// <128=> 128 \n\n// <256=> 256 \n\n// <512=> 512 \n\n// <1024=> 1024 \n\n\n\n#ifndef NRF_LOG_STR_PUSH_BUFFER_SIZE\n\n#define NRF_LOG_STR_PUSH_BUFFER_SIZE 128\n\n#endif\n\n\n\n// <e> NRF_LOG_USES_COLORS - If enabled then ANSI escape code for colors is prefixed to every string\n\n//==========================================================\n\n#ifndef NRF_LOG_USES_COLORS\n\n#define NRF_LOG_USES_COLORS 0\n\n#endif\n\n// <o> NRF_LOG_COLOR_DEFAULT  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_LOG_COLOR_DEFAULT\n\n#define NRF_LOG_COLOR_DEFAULT 0\n\n#endif\n\n\n\n// <o> NRF_LOG_ERROR_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_LOG_ERROR_COLOR\n\n#define NRF_LOG_ERROR_COLOR 2\n\n#endif\n\n\n\n// <o> NRF_LOG_WARNING_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_LOG_WARNING_COLOR\n\n#define NRF_LOG_WARNING_COLOR 4\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_LOG_USES_TIMESTAMP - Enable timestamping\n\n\n\n// <i> Function for getting the timestamp is provided by the user\n\n//==========================================================\n\n#ifndef NRF_LOG_USES_TIMESTAMP\n\n#define NRF_LOG_USES_TIMESTAMP 0\n\n#endif\n\n// <o> NRF_LOG_TIMESTAMP_DEFAULT_FREQUENCY - Default frequency of the timestamp (in Hz) or 0 to use app_timer frequency. \n\n#ifndef NRF_LOG_TIMESTAMP_DEFAULT_FREQUENCY\n\n#define NRF_LOG_TIMESTAMP_DEFAULT_FREQUENCY 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <h> nrf_log module configuration \n\n\n\n//==========================================================\n\n// <h> nrf_log in nRF_Core \n\n\n\n//==========================================================\n\n// <e> NRF_MPU_LIB_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRF_MPU_LIB_CONFIG_LOG_ENABLED\n\n#define NRF_MPU_LIB_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRF_MPU_LIB_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_MPU_LIB_CONFIG_LOG_LEVEL\n\n#define NRF_MPU_LIB_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_MPU_LIB_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_MPU_LIB_CONFIG_INFO_COLOR\n\n#define NRF_MPU_LIB_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRF_MPU_LIB_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_MPU_LIB_CONFIG_DEBUG_COLOR\n\n#define NRF_MPU_LIB_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_STACK_GUARD_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRF_STACK_GUARD_CONFIG_LOG_ENABLED\n\n#define NRF_STACK_GUARD_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRF_STACK_GUARD_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_STACK_GUARD_CONFIG_LOG_LEVEL\n\n#define NRF_STACK_GUARD_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_STACK_GUARD_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_STACK_GUARD_CONFIG_INFO_COLOR\n\n#define NRF_STACK_GUARD_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRF_STACK_GUARD_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_STACK_GUARD_CONFIG_DEBUG_COLOR\n\n#define NRF_STACK_GUARD_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> TASK_MANAGER_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef TASK_MANAGER_CONFIG_LOG_ENABLED\n\n#define TASK_MANAGER_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> TASK_MANAGER_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef TASK_MANAGER_CONFIG_LOG_LEVEL\n\n#define TASK_MANAGER_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> TASK_MANAGER_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef TASK_MANAGER_CONFIG_INFO_COLOR\n\n#define TASK_MANAGER_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> TASK_MANAGER_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef TASK_MANAGER_CONFIG_DEBUG_COLOR\n\n#define TASK_MANAGER_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> nrf_log in nRF_Drivers \n\n\n\n//==========================================================\n\n// <e> CLOCK_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef CLOCK_CONFIG_LOG_ENABLED\n\n#define CLOCK_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> CLOCK_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef CLOCK_CONFIG_LOG_LEVEL\n\n#define CLOCK_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> CLOCK_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef CLOCK_CONFIG_INFO_COLOR\n\n#define CLOCK_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> CLOCK_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef CLOCK_CONFIG_DEBUG_COLOR\n\n#define CLOCK_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> COMP_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef COMP_CONFIG_LOG_ENABLED\n\n#define COMP_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> COMP_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef COMP_CONFIG_LOG_LEVEL\n\n#define COMP_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> COMP_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef COMP_CONFIG_INFO_COLOR\n\n#define COMP_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> COMP_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef COMP_CONFIG_DEBUG_COLOR\n\n#define COMP_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> GPIOTE_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef GPIOTE_CONFIG_LOG_ENABLED\n\n#define GPIOTE_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> GPIOTE_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef GPIOTE_CONFIG_LOG_LEVEL\n\n#define GPIOTE_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> GPIOTE_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef GPIOTE_CONFIG_INFO_COLOR\n\n#define GPIOTE_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> GPIOTE_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef GPIOTE_CONFIG_DEBUG_COLOR\n\n#define GPIOTE_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> LPCOMP_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef LPCOMP_CONFIG_LOG_ENABLED\n\n#define LPCOMP_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> LPCOMP_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef LPCOMP_CONFIG_LOG_LEVEL\n\n#define LPCOMP_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> LPCOMP_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef LPCOMP_CONFIG_INFO_COLOR\n\n#define LPCOMP_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> LPCOMP_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef LPCOMP_CONFIG_DEBUG_COLOR\n\n#define LPCOMP_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> MAX3421E_HOST_CONFIG_LOG_ENABLED - Enable logging in the module\n\n//==========================================================\n\n#ifndef MAX3421E_HOST_CONFIG_LOG_ENABLED\n\n#define MAX3421E_HOST_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> MAX3421E_HOST_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef MAX3421E_HOST_CONFIG_LOG_LEVEL\n\n#define MAX3421E_HOST_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> MAX3421E_HOST_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef MAX3421E_HOST_CONFIG_INFO_COLOR\n\n#define MAX3421E_HOST_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> MAX3421E_HOST_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef MAX3421E_HOST_CONFIG_DEBUG_COLOR\n\n#define MAX3421E_HOST_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRFX_USBD_CONFIG_LOG_ENABLED - Enable logging in the module\n\n//==========================================================\n\n#ifndef NRFX_USBD_CONFIG_LOG_ENABLED\n\n#define NRFX_USBD_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_USBD_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_USBD_CONFIG_LOG_LEVEL\n\n#define NRFX_USBD_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_USBD_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_USBD_CONFIG_INFO_COLOR\n\n#define NRFX_USBD_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_USBD_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_USBD_CONFIG_DEBUG_COLOR\n\n#define NRFX_USBD_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> PDM_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef PDM_CONFIG_LOG_ENABLED\n\n#define PDM_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> PDM_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef PDM_CONFIG_LOG_LEVEL\n\n#define PDM_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> PDM_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef PDM_CONFIG_INFO_COLOR\n\n#define PDM_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> PDM_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef PDM_CONFIG_DEBUG_COLOR\n\n#define PDM_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> PPI_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef PPI_CONFIG_LOG_ENABLED\n\n#define PPI_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> PPI_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef PPI_CONFIG_LOG_LEVEL\n\n#define PPI_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> PPI_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef PPI_CONFIG_INFO_COLOR\n\n#define PPI_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> PPI_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef PPI_CONFIG_DEBUG_COLOR\n\n#define PPI_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> PWM_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef PWM_CONFIG_LOG_ENABLED\n\n#define PWM_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> PWM_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef PWM_CONFIG_LOG_LEVEL\n\n#define PWM_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> PWM_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef PWM_CONFIG_INFO_COLOR\n\n#define PWM_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> PWM_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef PWM_CONFIG_DEBUG_COLOR\n\n#define PWM_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> QDEC_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef QDEC_CONFIG_LOG_ENABLED\n\n#define QDEC_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> QDEC_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef QDEC_CONFIG_LOG_LEVEL\n\n#define QDEC_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> QDEC_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef QDEC_CONFIG_INFO_COLOR\n\n#define QDEC_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> QDEC_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef QDEC_CONFIG_DEBUG_COLOR\n\n#define QDEC_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> RNG_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef RNG_CONFIG_LOG_ENABLED\n\n#define RNG_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> RNG_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef RNG_CONFIG_LOG_LEVEL\n\n#define RNG_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> RNG_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef RNG_CONFIG_INFO_COLOR\n\n#define RNG_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> RNG_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef RNG_CONFIG_DEBUG_COLOR\n\n#define RNG_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// <q> RNG_CONFIG_RANDOM_NUMBER_LOG_ENABLED  - Enables logging of random numbers.\n\n \n\n\n\n#ifndef RNG_CONFIG_RANDOM_NUMBER_LOG_ENABLED\n\n#define RNG_CONFIG_RANDOM_NUMBER_LOG_ENABLED 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> RTC_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef RTC_CONFIG_LOG_ENABLED\n\n#define RTC_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> RTC_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef RTC_CONFIG_LOG_LEVEL\n\n#define RTC_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> RTC_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef RTC_CONFIG_INFO_COLOR\n\n#define RTC_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> RTC_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef RTC_CONFIG_DEBUG_COLOR\n\n#define RTC_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> SAADC_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef SAADC_CONFIG_LOG_ENABLED\n\n#define SAADC_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> SAADC_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef SAADC_CONFIG_LOG_LEVEL\n\n#define SAADC_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> SAADC_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef SAADC_CONFIG_INFO_COLOR\n\n#define SAADC_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> SAADC_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef SAADC_CONFIG_DEBUG_COLOR\n\n#define SAADC_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> SPIS_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef SPIS_CONFIG_LOG_ENABLED\n\n#define SPIS_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> SPIS_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef SPIS_CONFIG_LOG_LEVEL\n\n#define SPIS_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> SPIS_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef SPIS_CONFIG_INFO_COLOR\n\n#define SPIS_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> SPIS_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef SPIS_CONFIG_DEBUG_COLOR\n\n#define SPIS_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> SPI_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef SPI_CONFIG_LOG_ENABLED\n\n#define SPI_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> SPI_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef SPI_CONFIG_LOG_LEVEL\n\n#define SPI_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> SPI_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef SPI_CONFIG_INFO_COLOR\n\n#define SPI_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> SPI_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef SPI_CONFIG_DEBUG_COLOR\n\n#define SPI_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> TIMER_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef TIMER_CONFIG_LOG_ENABLED\n\n#define TIMER_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> TIMER_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef TIMER_CONFIG_LOG_LEVEL\n\n#define TIMER_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> TIMER_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef TIMER_CONFIG_INFO_COLOR\n\n#define TIMER_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> TIMER_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef TIMER_CONFIG_DEBUG_COLOR\n\n#define TIMER_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> TWIS_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef TWIS_CONFIG_LOG_ENABLED\n\n#define TWIS_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> TWIS_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef TWIS_CONFIG_LOG_LEVEL\n\n#define TWIS_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> TWIS_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef TWIS_CONFIG_INFO_COLOR\n\n#define TWIS_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> TWIS_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef TWIS_CONFIG_DEBUG_COLOR\n\n#define TWIS_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> TWI_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef TWI_CONFIG_LOG_ENABLED\n\n#define TWI_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> TWI_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef TWI_CONFIG_LOG_LEVEL\n\n#define TWI_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> TWI_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef TWI_CONFIG_INFO_COLOR\n\n#define TWI_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> TWI_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef TWI_CONFIG_DEBUG_COLOR\n\n#define TWI_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> UART_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef UART_CONFIG_LOG_ENABLED\n\n#define UART_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> UART_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef UART_CONFIG_LOG_LEVEL\n\n#define UART_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> UART_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef UART_CONFIG_INFO_COLOR\n\n#define UART_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> UART_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef UART_CONFIG_DEBUG_COLOR\n\n#define UART_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> USBD_CONFIG_LOG_ENABLED - Enable logging in the module\n\n//==========================================================\n\n#ifndef USBD_CONFIG_LOG_ENABLED\n\n#define USBD_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> USBD_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef USBD_CONFIG_LOG_LEVEL\n\n#define USBD_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> USBD_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef USBD_CONFIG_INFO_COLOR\n\n#define USBD_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> USBD_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef USBD_CONFIG_DEBUG_COLOR\n\n#define USBD_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> WDT_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef WDT_CONFIG_LOG_ENABLED\n\n#define WDT_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> WDT_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef WDT_CONFIG_LOG_LEVEL\n\n#define WDT_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> WDT_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef WDT_CONFIG_INFO_COLOR\n\n#define WDT_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> WDT_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef WDT_CONFIG_DEBUG_COLOR\n\n#define WDT_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> nrf_log in nRF_Libraries \n\n\n\n//==========================================================\n\n// <e> APP_BUTTON_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef APP_BUTTON_CONFIG_LOG_ENABLED\n\n#define APP_BUTTON_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> APP_BUTTON_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef APP_BUTTON_CONFIG_LOG_LEVEL\n\n#define APP_BUTTON_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> APP_BUTTON_CONFIG_INITIAL_LOG_LEVEL  - Initial severity level if dynamic filtering is enabled.\n\n \n\n\n\n// <i> If module generates a lot of logs, initial log level can\n\n// <i> be decreased to prevent flooding. Severity level can be\n\n// <i> increased on instance basis.\n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef APP_BUTTON_CONFIG_INITIAL_LOG_LEVEL\n\n#define APP_BUTTON_CONFIG_INITIAL_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> APP_BUTTON_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef APP_BUTTON_CONFIG_INFO_COLOR\n\n#define APP_BUTTON_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> APP_BUTTON_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef APP_BUTTON_CONFIG_DEBUG_COLOR\n\n#define APP_BUTTON_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> APP_TIMER_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef APP_TIMER_CONFIG_LOG_ENABLED\n\n#define APP_TIMER_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> APP_TIMER_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef APP_TIMER_CONFIG_LOG_LEVEL\n\n#define APP_TIMER_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> APP_TIMER_CONFIG_INITIAL_LOG_LEVEL  - Initial severity level if dynamic filtering is enabled.\n\n \n\n\n\n// <i> If module generates a lot of logs, initial log level can\n\n// <i> be decreased to prevent flooding. Severity level can be\n\n// <i> increased on instance basis.\n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef APP_TIMER_CONFIG_INITIAL_LOG_LEVEL\n\n#define APP_TIMER_CONFIG_INITIAL_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> APP_TIMER_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef APP_TIMER_CONFIG_INFO_COLOR\n\n#define APP_TIMER_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> APP_TIMER_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef APP_TIMER_CONFIG_DEBUG_COLOR\n\n#define APP_TIMER_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> APP_USBD_CDC_ACM_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef APP_USBD_CDC_ACM_CONFIG_LOG_ENABLED\n\n#define APP_USBD_CDC_ACM_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> APP_USBD_CDC_ACM_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef APP_USBD_CDC_ACM_CONFIG_LOG_LEVEL\n\n#define APP_USBD_CDC_ACM_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> APP_USBD_CDC_ACM_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef APP_USBD_CDC_ACM_CONFIG_INFO_COLOR\n\n#define APP_USBD_CDC_ACM_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> APP_USBD_CDC_ACM_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef APP_USBD_CDC_ACM_CONFIG_DEBUG_COLOR\n\n#define APP_USBD_CDC_ACM_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> APP_USBD_CONFIG_LOG_ENABLED - Enable logging in the module.\n\n//==========================================================\n\n#ifndef APP_USBD_CONFIG_LOG_ENABLED\n\n#define APP_USBD_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> APP_USBD_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef APP_USBD_CONFIG_LOG_LEVEL\n\n#define APP_USBD_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> APP_USBD_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef APP_USBD_CONFIG_INFO_COLOR\n\n#define APP_USBD_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> APP_USBD_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef APP_USBD_CONFIG_DEBUG_COLOR\n\n#define APP_USBD_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> APP_USBD_DUMMY_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef APP_USBD_DUMMY_CONFIG_LOG_ENABLED\n\n#define APP_USBD_DUMMY_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> APP_USBD_DUMMY_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef APP_USBD_DUMMY_CONFIG_LOG_LEVEL\n\n#define APP_USBD_DUMMY_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> APP_USBD_DUMMY_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef APP_USBD_DUMMY_CONFIG_INFO_COLOR\n\n#define APP_USBD_DUMMY_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> APP_USBD_DUMMY_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef APP_USBD_DUMMY_CONFIG_DEBUG_COLOR\n\n#define APP_USBD_DUMMY_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> APP_USBD_MSC_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef APP_USBD_MSC_CONFIG_LOG_ENABLED\n\n#define APP_USBD_MSC_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> APP_USBD_MSC_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef APP_USBD_MSC_CONFIG_LOG_LEVEL\n\n#define APP_USBD_MSC_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> APP_USBD_MSC_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef APP_USBD_MSC_CONFIG_INFO_COLOR\n\n#define APP_USBD_MSC_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> APP_USBD_MSC_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef APP_USBD_MSC_CONFIG_DEBUG_COLOR\n\n#define APP_USBD_MSC_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> APP_USBD_NRF_DFU_TRIGGER_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef APP_USBD_NRF_DFU_TRIGGER_CONFIG_LOG_ENABLED\n\n#define APP_USBD_NRF_DFU_TRIGGER_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> APP_USBD_NRF_DFU_TRIGGER_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef APP_USBD_NRF_DFU_TRIGGER_CONFIG_LOG_LEVEL\n\n#define APP_USBD_NRF_DFU_TRIGGER_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> APP_USBD_NRF_DFU_TRIGGER_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef APP_USBD_NRF_DFU_TRIGGER_CONFIG_INFO_COLOR\n\n#define APP_USBD_NRF_DFU_TRIGGER_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> APP_USBD_NRF_DFU_TRIGGER_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef APP_USBD_NRF_DFU_TRIGGER_CONFIG_DEBUG_COLOR\n\n#define APP_USBD_NRF_DFU_TRIGGER_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_ATFIFO_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRF_ATFIFO_CONFIG_LOG_ENABLED\n\n#define NRF_ATFIFO_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRF_ATFIFO_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_ATFIFO_CONFIG_LOG_LEVEL\n\n#define NRF_ATFIFO_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_ATFIFO_CONFIG_LOG_INIT_FILTER_LEVEL  - Initial severity level if dynamic filtering is enabled\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_ATFIFO_CONFIG_LOG_INIT_FILTER_LEVEL\n\n#define NRF_ATFIFO_CONFIG_LOG_INIT_FILTER_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_ATFIFO_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_ATFIFO_CONFIG_INFO_COLOR\n\n#define NRF_ATFIFO_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRF_ATFIFO_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_ATFIFO_CONFIG_DEBUG_COLOR\n\n#define NRF_ATFIFO_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_BALLOC_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRF_BALLOC_CONFIG_LOG_ENABLED\n\n#define NRF_BALLOC_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRF_BALLOC_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_BALLOC_CONFIG_LOG_LEVEL\n\n#define NRF_BALLOC_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_BALLOC_CONFIG_INITIAL_LOG_LEVEL  - Initial severity level if dynamic filtering is enabled.\n\n \n\n\n\n// <i> If module generates a lot of logs, initial log level can\n\n// <i> be decreased to prevent flooding. Severity level can be\n\n// <i> increased on instance basis.\n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_BALLOC_CONFIG_INITIAL_LOG_LEVEL\n\n#define NRF_BALLOC_CONFIG_INITIAL_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_BALLOC_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_BALLOC_CONFIG_INFO_COLOR\n\n#define NRF_BALLOC_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRF_BALLOC_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_BALLOC_CONFIG_DEBUG_COLOR\n\n#define NRF_BALLOC_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_BLOCK_DEV_EMPTY_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRF_BLOCK_DEV_EMPTY_CONFIG_LOG_ENABLED\n\n#define NRF_BLOCK_DEV_EMPTY_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRF_BLOCK_DEV_EMPTY_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_BLOCK_DEV_EMPTY_CONFIG_LOG_LEVEL\n\n#define NRF_BLOCK_DEV_EMPTY_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_BLOCK_DEV_EMPTY_CONFIG_LOG_INIT_FILTER_LEVEL  - Initial severity level if dynamic filtering is enabled\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_BLOCK_DEV_EMPTY_CONFIG_LOG_INIT_FILTER_LEVEL\n\n#define NRF_BLOCK_DEV_EMPTY_CONFIG_LOG_INIT_FILTER_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_BLOCK_DEV_EMPTY_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_BLOCK_DEV_EMPTY_CONFIG_INFO_COLOR\n\n#define NRF_BLOCK_DEV_EMPTY_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRF_BLOCK_DEV_EMPTY_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_BLOCK_DEV_EMPTY_CONFIG_DEBUG_COLOR\n\n#define NRF_BLOCK_DEV_EMPTY_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_BLOCK_DEV_QSPI_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRF_BLOCK_DEV_QSPI_CONFIG_LOG_ENABLED\n\n#define NRF_BLOCK_DEV_QSPI_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRF_BLOCK_DEV_QSPI_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_BLOCK_DEV_QSPI_CONFIG_LOG_LEVEL\n\n#define NRF_BLOCK_DEV_QSPI_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_BLOCK_DEV_QSPI_CONFIG_LOG_INIT_FILTER_LEVEL  - Initial severity level if dynamic filtering is enabled\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_BLOCK_DEV_QSPI_CONFIG_LOG_INIT_FILTER_LEVEL\n\n#define NRF_BLOCK_DEV_QSPI_CONFIG_LOG_INIT_FILTER_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_BLOCK_DEV_QSPI_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_BLOCK_DEV_QSPI_CONFIG_INFO_COLOR\n\n#define NRF_BLOCK_DEV_QSPI_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRF_BLOCK_DEV_QSPI_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_BLOCK_DEV_QSPI_CONFIG_DEBUG_COLOR\n\n#define NRF_BLOCK_DEV_QSPI_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_BLOCK_DEV_RAM_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRF_BLOCK_DEV_RAM_CONFIG_LOG_ENABLED\n\n#define NRF_BLOCK_DEV_RAM_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRF_BLOCK_DEV_RAM_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_BLOCK_DEV_RAM_CONFIG_LOG_LEVEL\n\n#define NRF_BLOCK_DEV_RAM_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_BLOCK_DEV_RAM_CONFIG_LOG_INIT_FILTER_LEVEL  - Initial severity level if dynamic filtering is enabled\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_BLOCK_DEV_RAM_CONFIG_LOG_INIT_FILTER_LEVEL\n\n#define NRF_BLOCK_DEV_RAM_CONFIG_LOG_INIT_FILTER_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_BLOCK_DEV_RAM_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_BLOCK_DEV_RAM_CONFIG_INFO_COLOR\n\n#define NRF_BLOCK_DEV_RAM_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRF_BLOCK_DEV_RAM_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_BLOCK_DEV_RAM_CONFIG_DEBUG_COLOR\n\n#define NRF_BLOCK_DEV_RAM_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_CLI_BLE_UART_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRF_CLI_BLE_UART_CONFIG_LOG_ENABLED\n\n#define NRF_CLI_BLE_UART_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRF_CLI_BLE_UART_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_CLI_BLE_UART_CONFIG_LOG_LEVEL\n\n#define NRF_CLI_BLE_UART_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_CLI_BLE_UART_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_CLI_BLE_UART_CONFIG_INFO_COLOR\n\n#define NRF_CLI_BLE_UART_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRF_CLI_BLE_UART_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_CLI_BLE_UART_CONFIG_DEBUG_COLOR\n\n#define NRF_CLI_BLE_UART_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_CLI_LIBUARTE_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRF_CLI_LIBUARTE_CONFIG_LOG_ENABLED\n\n#define NRF_CLI_LIBUARTE_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRF_CLI_LIBUARTE_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_CLI_LIBUARTE_CONFIG_LOG_LEVEL\n\n#define NRF_CLI_LIBUARTE_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_CLI_LIBUARTE_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_CLI_LIBUARTE_CONFIG_INFO_COLOR\n\n#define NRF_CLI_LIBUARTE_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRF_CLI_LIBUARTE_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_CLI_LIBUARTE_CONFIG_DEBUG_COLOR\n\n#define NRF_CLI_LIBUARTE_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_CLI_UART_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRF_CLI_UART_CONFIG_LOG_ENABLED\n\n#define NRF_CLI_UART_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRF_CLI_UART_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_CLI_UART_CONFIG_LOG_LEVEL\n\n#define NRF_CLI_UART_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_CLI_UART_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_CLI_UART_CONFIG_INFO_COLOR\n\n#define NRF_CLI_UART_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRF_CLI_UART_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_CLI_UART_CONFIG_DEBUG_COLOR\n\n#define NRF_CLI_UART_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_LIBUARTE_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRF_LIBUARTE_CONFIG_LOG_ENABLED\n\n#define NRF_LIBUARTE_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRF_LIBUARTE_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_LIBUARTE_CONFIG_LOG_LEVEL\n\n#define NRF_LIBUARTE_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_LIBUARTE_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_LIBUARTE_CONFIG_INFO_COLOR\n\n#define NRF_LIBUARTE_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRF_LIBUARTE_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_LIBUARTE_CONFIG_DEBUG_COLOR\n\n#define NRF_LIBUARTE_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_MEMOBJ_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRF_MEMOBJ_CONFIG_LOG_ENABLED\n\n#define NRF_MEMOBJ_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRF_MEMOBJ_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_MEMOBJ_CONFIG_LOG_LEVEL\n\n#define NRF_MEMOBJ_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_MEMOBJ_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_MEMOBJ_CONFIG_INFO_COLOR\n\n#define NRF_MEMOBJ_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRF_MEMOBJ_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_MEMOBJ_CONFIG_DEBUG_COLOR\n\n#define NRF_MEMOBJ_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_PWR_MGMT_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRF_PWR_MGMT_CONFIG_LOG_ENABLED\n\n#define NRF_PWR_MGMT_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRF_PWR_MGMT_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_PWR_MGMT_CONFIG_LOG_LEVEL\n\n#define NRF_PWR_MGMT_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_PWR_MGMT_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_PWR_MGMT_CONFIG_INFO_COLOR\n\n#define NRF_PWR_MGMT_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRF_PWR_MGMT_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_PWR_MGMT_CONFIG_DEBUG_COLOR\n\n#define NRF_PWR_MGMT_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_QUEUE_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRF_QUEUE_CONFIG_LOG_ENABLED\n\n#define NRF_QUEUE_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRF_QUEUE_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_QUEUE_CONFIG_LOG_LEVEL\n\n#define NRF_QUEUE_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_QUEUE_CONFIG_LOG_INIT_FILTER_LEVEL  - Initial severity level if dynamic filtering is enabled\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_QUEUE_CONFIG_LOG_INIT_FILTER_LEVEL\n\n#define NRF_QUEUE_CONFIG_LOG_INIT_FILTER_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_QUEUE_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_QUEUE_CONFIG_INFO_COLOR\n\n#define NRF_QUEUE_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRF_QUEUE_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_QUEUE_CONFIG_DEBUG_COLOR\n\n#define NRF_QUEUE_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_SDH_ANT_LOG_ENABLED - Enable logging in SoftDevice handler (ANT) module.\n\n//==========================================================\n\n#ifndef NRF_SDH_ANT_LOG_ENABLED\n\n#define NRF_SDH_ANT_LOG_ENABLED 0\n\n#endif\n\n// <o> NRF_SDH_ANT_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_SDH_ANT_LOG_LEVEL\n\n#define NRF_SDH_ANT_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_SDH_ANT_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_SDH_ANT_INFO_COLOR\n\n#define NRF_SDH_ANT_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRF_SDH_ANT_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_SDH_ANT_DEBUG_COLOR\n\n#define NRF_SDH_ANT_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_SDH_BLE_LOG_ENABLED - Enable logging in SoftDevice handler (BLE) module.\n\n//==========================================================\n\n#ifndef NRF_SDH_BLE_LOG_ENABLED\n\n#define NRF_SDH_BLE_LOG_ENABLED 1\n\n#endif\n\n// <o> NRF_SDH_BLE_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_SDH_BLE_LOG_LEVEL\n\n#define NRF_SDH_BLE_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_SDH_BLE_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_SDH_BLE_INFO_COLOR\n\n#define NRF_SDH_BLE_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRF_SDH_BLE_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_SDH_BLE_DEBUG_COLOR\n\n#define NRF_SDH_BLE_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_SDH_LOG_ENABLED - Enable logging in SoftDevice handler module.\n\n//==========================================================\n\n#ifndef NRF_SDH_LOG_ENABLED\n\n#define NRF_SDH_LOG_ENABLED 1\n\n#endif\n\n// <o> NRF_SDH_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_SDH_LOG_LEVEL\n\n#define NRF_SDH_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_SDH_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_SDH_INFO_COLOR\n\n#define NRF_SDH_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRF_SDH_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_SDH_DEBUG_COLOR\n\n#define NRF_SDH_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_SDH_SOC_LOG_ENABLED - Enable logging in SoftDevice handler (SoC) module.\n\n//==========================================================\n\n#ifndef NRF_SDH_SOC_LOG_ENABLED\n\n#define NRF_SDH_SOC_LOG_ENABLED 1\n\n#endif\n\n// <o> NRF_SDH_SOC_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_SDH_SOC_LOG_LEVEL\n\n#define NRF_SDH_SOC_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_SDH_SOC_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_SDH_SOC_INFO_COLOR\n\n#define NRF_SDH_SOC_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRF_SDH_SOC_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_SDH_SOC_DEBUG_COLOR\n\n#define NRF_SDH_SOC_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_SORTLIST_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRF_SORTLIST_CONFIG_LOG_ENABLED\n\n#define NRF_SORTLIST_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRF_SORTLIST_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_SORTLIST_CONFIG_LOG_LEVEL\n\n#define NRF_SORTLIST_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_SORTLIST_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_SORTLIST_CONFIG_INFO_COLOR\n\n#define NRF_SORTLIST_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRF_SORTLIST_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_SORTLIST_CONFIG_DEBUG_COLOR\n\n#define NRF_SORTLIST_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_TWI_SENSOR_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRF_TWI_SENSOR_CONFIG_LOG_ENABLED\n\n#define NRF_TWI_SENSOR_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRF_TWI_SENSOR_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_TWI_SENSOR_CONFIG_LOG_LEVEL\n\n#define NRF_TWI_SENSOR_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_TWI_SENSOR_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_TWI_SENSOR_CONFIG_INFO_COLOR\n\n#define NRF_TWI_SENSOR_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRF_TWI_SENSOR_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_TWI_SENSOR_CONFIG_DEBUG_COLOR\n\n#define NRF_TWI_SENSOR_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> PM_LOG_ENABLED - Enable logging in Peer Manager and its submodules.\n\n//==========================================================\n\n#ifndef PM_LOG_ENABLED\n\n#define PM_LOG_ENABLED 1\n\n#endif\n\n// <o> PM_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef PM_LOG_LEVEL\n\n#define PM_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> PM_LOG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef PM_LOG_INFO_COLOR\n\n#define PM_LOG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> PM_LOG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef PM_LOG_DEBUG_COLOR\n\n#define PM_LOG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> nrf_log in nRF_Serialization \n\n\n\n//==========================================================\n\n// <e> SER_HAL_TRANSPORT_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef SER_HAL_TRANSPORT_CONFIG_LOG_ENABLED\n\n#define SER_HAL_TRANSPORT_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> SER_HAL_TRANSPORT_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef SER_HAL_TRANSPORT_CONFIG_LOG_LEVEL\n\n#define SER_HAL_TRANSPORT_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> SER_HAL_TRANSPORT_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef SER_HAL_TRANSPORT_CONFIG_INFO_COLOR\n\n#define SER_HAL_TRANSPORT_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> SER_HAL_TRANSPORT_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef SER_HAL_TRANSPORT_CONFIG_DEBUG_COLOR\n\n#define SER_HAL_TRANSPORT_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// </e>\n\n\n\n// <q> NRF_LOG_STR_FORMATTER_TIMESTAMP_FORMAT_ENABLED  - nrf_log_str_formatter - Log string formatter\n\n \n\n\n\n#ifndef NRF_LOG_STR_FORMATTER_TIMESTAMP_FORMAT_ENABLED\n\n#define NRF_LOG_STR_FORMATTER_TIMESTAMP_FORMAT_ENABLED 1\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> nRF_NFC \n\n\n\n//==========================================================\n\n// <q> NFC_AC_REC_ENABLED  - nfc_ac_rec - NFC NDEF Alternative Carrier record encoder\n\n \n\n\n\n#ifndef NFC_AC_REC_ENABLED\n\n#define NFC_AC_REC_ENABLED 0\n\n#endif\n\n\n\n// <q> NFC_AC_REC_PARSER_ENABLED  - nfc_ac_rec_parser - Alternative Carrier record parser\n\n \n\n\n\n#ifndef NFC_AC_REC_PARSER_ENABLED\n\n#define NFC_AC_REC_PARSER_ENABLED 0\n\n#endif\n\n\n\n// <e> NFC_BLE_OOB_ADVDATA_ENABLED - nfc_ble_oob_advdata - AD data for OOB pairing encoder\n\n//==========================================================\n\n#ifndef NFC_BLE_OOB_ADVDATA_ENABLED\n\n#define NFC_BLE_OOB_ADVDATA_ENABLED 0\n\n#endif\n\n// <o> ADVANCED_ADVDATA_SUPPORT  - Non-mandatory AD types for BLE OOB pairing are encoded inside the NDEF message (e.g. service UUIDs)\n\n \n\n// <1=> Enabled \n\n// <0=> Disabled \n\n\n\n#ifndef ADVANCED_ADVDATA_SUPPORT\n\n#define ADVANCED_ADVDATA_SUPPORT 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <q> NFC_BLE_OOB_ADVDATA_PARSER_ENABLED  - nfc_ble_oob_advdata_parser - BLE OOB pairing AD data parser\n\n \n\n\n\n#ifndef NFC_BLE_OOB_ADVDATA_PARSER_ENABLED\n\n#define NFC_BLE_OOB_ADVDATA_PARSER_ENABLED 0\n\n#endif\n\n\n\n// <e> NFC_BLE_PAIR_LIB_ENABLED - nfc_ble_pair_lib - Library parameters\n\n//==========================================================\n\n#ifndef NFC_BLE_PAIR_LIB_ENABLED\n\n#define NFC_BLE_PAIR_LIB_ENABLED 0\n\n#endif\n\n// <e> NFC_BLE_PAIR_LIB_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NFC_BLE_PAIR_LIB_LOG_ENABLED\n\n#define NFC_BLE_PAIR_LIB_LOG_ENABLED 0\n\n#endif\n\n// <o> NFC_BLE_PAIR_LIB_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NFC_BLE_PAIR_LIB_LOG_LEVEL\n\n#define NFC_BLE_PAIR_LIB_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NFC_BLE_PAIR_LIB_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NFC_BLE_PAIR_LIB_INFO_COLOR\n\n#define NFC_BLE_PAIR_LIB_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NFC_BLE_PAIR_LIB_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NFC_BLE_PAIR_LIB_DEBUG_COLOR\n\n#define NFC_BLE_PAIR_LIB_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <h> NFC_BLE_PAIR_LIB_SECURITY_PARAMETERS - Common Peer Manager security parameters.\n\n\n\n//==========================================================\n\n// <e> BLE_NFC_SEC_PARAM_BOND - Enables device bonding.\n\n\n\n// <i> If bonding is enabled at least one of the BLE_NFC_SEC_PARAM_KDIST options must be enabled.\n\n//==========================================================\n\n#ifndef BLE_NFC_SEC_PARAM_BOND\n\n#define BLE_NFC_SEC_PARAM_BOND 1\n\n#endif\n\n// <q> BLE_NFC_SEC_PARAM_KDIST_OWN_ENC  - Enables Long Term Key and Master Identification distribution by device.\n\n \n\n\n\n#ifndef BLE_NFC_SEC_PARAM_KDIST_OWN_ENC\n\n#define BLE_NFC_SEC_PARAM_KDIST_OWN_ENC 1\n\n#endif\n\n\n\n// <q> BLE_NFC_SEC_PARAM_KDIST_OWN_ID  - Enables Identity Resolving Key and Identity Address Information distribution by device.\n\n \n\n\n\n#ifndef BLE_NFC_SEC_PARAM_KDIST_OWN_ID\n\n#define BLE_NFC_SEC_PARAM_KDIST_OWN_ID 1\n\n#endif\n\n\n\n// <q> BLE_NFC_SEC_PARAM_KDIST_PEER_ENC  - Enables Long Term Key and Master Identification distribution by peer.\n\n \n\n\n\n#ifndef BLE_NFC_SEC_PARAM_KDIST_PEER_ENC\n\n#define BLE_NFC_SEC_PARAM_KDIST_PEER_ENC 1\n\n#endif\n\n\n\n// <q> BLE_NFC_SEC_PARAM_KDIST_PEER_ID  - Enables Identity Resolving Key and Identity Address Information distribution by peer.\n\n \n\n\n\n#ifndef BLE_NFC_SEC_PARAM_KDIST_PEER_ID\n\n#define BLE_NFC_SEC_PARAM_KDIST_PEER_ID 1\n\n#endif\n\n\n\n// </e>\n\n\n\n// <o> BLE_NFC_SEC_PARAM_MIN_KEY_SIZE  - Minimal size of a security key.\n\n \n\n// <7=> 7 \n\n// <8=> 8 \n\n// <9=> 9 \n\n// <10=> 10 \n\n// <11=> 11 \n\n// <12=> 12 \n\n// <13=> 13 \n\n// <14=> 14 \n\n// <15=> 15 \n\n// <16=> 16 \n\n\n\n#ifndef BLE_NFC_SEC_PARAM_MIN_KEY_SIZE\n\n#define BLE_NFC_SEC_PARAM_MIN_KEY_SIZE 7\n\n#endif\n\n\n\n// <o> BLE_NFC_SEC_PARAM_MAX_KEY_SIZE  - Maximal size of a security key.\n\n \n\n// <7=> 7 \n\n// <8=> 8 \n\n// <9=> 9 \n\n// <10=> 10 \n\n// <11=> 11 \n\n// <12=> 12 \n\n// <13=> 13 \n\n// <14=> 14 \n\n// <15=> 15 \n\n// <16=> 16 \n\n\n\n#ifndef BLE_NFC_SEC_PARAM_MAX_KEY_SIZE\n\n#define BLE_NFC_SEC_PARAM_MAX_KEY_SIZE 16\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// </e>\n\n\n\n// <q> NFC_BLE_PAIR_MSG_ENABLED  - nfc_ble_pair_msg - NDEF message for OOB pairing encoder\n\n \n\n\n\n#ifndef NFC_BLE_PAIR_MSG_ENABLED\n\n#define NFC_BLE_PAIR_MSG_ENABLED 0\n\n#endif\n\n\n\n// <q> NFC_CH_COMMON_ENABLED  - nfc_ble_pair_common - OOB pairing common data\n\n \n\n\n\n#ifndef NFC_CH_COMMON_ENABLED\n\n#define NFC_CH_COMMON_ENABLED 0\n\n#endif\n\n\n\n// <q> NFC_EP_OOB_REC_ENABLED  - nfc_ep_oob_rec - EP record for BLE pairing encoder\n\n \n\n\n\n#ifndef NFC_EP_OOB_REC_ENABLED\n\n#define NFC_EP_OOB_REC_ENABLED 0\n\n#endif\n\n\n\n// <q> NFC_HS_REC_ENABLED  - nfc_hs_rec - Handover Select NDEF record encoder\n\n \n\n\n\n#ifndef NFC_HS_REC_ENABLED\n\n#define NFC_HS_REC_ENABLED 0\n\n#endif\n\n\n\n// <q> NFC_LE_OOB_REC_ENABLED  - nfc_le_oob_rec - LE record for BLE pairing encoder\n\n \n\n\n\n#ifndef NFC_LE_OOB_REC_ENABLED\n\n#define NFC_LE_OOB_REC_ENABLED 0\n\n#endif\n\n\n\n// <q> NFC_LE_OOB_REC_PARSER_ENABLED  - nfc_le_oob_rec_parser - LE record parser\n\n \n\n\n\n#ifndef NFC_LE_OOB_REC_PARSER_ENABLED\n\n#define NFC_LE_OOB_REC_PARSER_ENABLED 0\n\n#endif\n\n\n\n// <q> NFC_NDEF_LAUNCHAPP_MSG_ENABLED  - nfc_launchapp_msg - Encoding data for NDEF Application Launching message for NFC Tag\n\n \n\n\n\n#ifndef NFC_NDEF_LAUNCHAPP_MSG_ENABLED\n\n#define NFC_NDEF_LAUNCHAPP_MSG_ENABLED 0\n\n#endif\n\n\n\n// <q> NFC_NDEF_LAUNCHAPP_REC_ENABLED  - nfc_launchapp_rec - Encoding data for NDEF Application Launching record for NFC Tag\n\n \n\n\n\n#ifndef NFC_NDEF_LAUNCHAPP_REC_ENABLED\n\n#define NFC_NDEF_LAUNCHAPP_REC_ENABLED 0\n\n#endif\n\n\n\n// <e> NFC_NDEF_MSG_ENABLED - nfc_ndef_msg - NFC NDEF Message generator module\n\n//==========================================================\n\n#ifndef NFC_NDEF_MSG_ENABLED\n\n#define NFC_NDEF_MSG_ENABLED 0\n\n#endif\n\n// <o> NFC_NDEF_MSG_TAG_TYPE  - NFC Tag Type\n\n \n\n// <2=> Type 2 Tag \n\n// <4=> Type 4 Tag \n\n\n\n#ifndef NFC_NDEF_MSG_TAG_TYPE\n\n#define NFC_NDEF_MSG_TAG_TYPE 2\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NFC_NDEF_MSG_PARSER_ENABLED - nfc_ndef_msg_parser - NFC NDEF message parser module\n\n//==========================================================\n\n#ifndef NFC_NDEF_MSG_PARSER_ENABLED\n\n#define NFC_NDEF_MSG_PARSER_ENABLED 0\n\n#endif\n\n// <e> NFC_NDEF_MSG_PARSER_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NFC_NDEF_MSG_PARSER_LOG_ENABLED\n\n#define NFC_NDEF_MSG_PARSER_LOG_ENABLED 0\n\n#endif\n\n// <o> NFC_NDEF_MSG_PARSER_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NFC_NDEF_MSG_PARSER_LOG_LEVEL\n\n#define NFC_NDEF_MSG_PARSER_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NFC_NDEF_MSG_PARSER_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NFC_NDEF_MSG_PARSER_INFO_COLOR\n\n#define NFC_NDEF_MSG_PARSER_INFO_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <q> NFC_NDEF_RECORD_ENABLED  - nfc_ndef_record - NFC NDEF Record generator module\n\n \n\n\n\n#ifndef NFC_NDEF_RECORD_ENABLED\n\n#define NFC_NDEF_RECORD_ENABLED 0\n\n#endif\n\n\n\n// <e> NFC_NDEF_RECORD_PARSER_ENABLED - nfc_ndef_record_parser - NFC NDEF Record parser module\n\n//==========================================================\n\n#ifndef NFC_NDEF_RECORD_PARSER_ENABLED\n\n#define NFC_NDEF_RECORD_PARSER_ENABLED 0\n\n#endif\n\n// <e> NFC_NDEF_RECORD_PARSER_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NFC_NDEF_RECORD_PARSER_LOG_ENABLED\n\n#define NFC_NDEF_RECORD_PARSER_LOG_ENABLED 0\n\n#endif\n\n// <o> NFC_NDEF_RECORD_PARSER_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NFC_NDEF_RECORD_PARSER_LOG_LEVEL\n\n#define NFC_NDEF_RECORD_PARSER_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NFC_NDEF_RECORD_PARSER_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NFC_NDEF_RECORD_PARSER_INFO_COLOR\n\n#define NFC_NDEF_RECORD_PARSER_INFO_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <q> NFC_NDEF_TEXT_RECORD_ENABLED  - nfc_text_rec - Encoding data for a text record for NFC Tag\n\n \n\n\n\n#ifndef NFC_NDEF_TEXT_RECORD_ENABLED\n\n#define NFC_NDEF_TEXT_RECORD_ENABLED 0\n\n#endif\n\n\n\n// <q> NFC_NDEF_URI_MSG_ENABLED  - nfc_uri_msg - Encoding data for NDEF message with URI record for NFC Tag\n\n \n\n\n\n#ifndef NFC_NDEF_URI_MSG_ENABLED\n\n#define NFC_NDEF_URI_MSG_ENABLED 0\n\n#endif\n\n\n\n// <q> NFC_NDEF_URI_REC_ENABLED  - nfc_uri_rec - Encoding data for a URI record for NFC Tag\n\n \n\n\n\n#ifndef NFC_NDEF_URI_REC_ENABLED\n\n#define NFC_NDEF_URI_REC_ENABLED 0\n\n#endif\n\n\n\n// <e> NFC_PLATFORM_ENABLED - nfc_platform - NFC platform module for Clock control.\n\n//==========================================================\n\n#ifndef NFC_PLATFORM_ENABLED\n\n#define NFC_PLATFORM_ENABLED 0\n\n#endif\n\n// <e> NFC_PLATFORM_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NFC_PLATFORM_LOG_ENABLED\n\n#define NFC_PLATFORM_LOG_ENABLED 0\n\n#endif\n\n// <o> NFC_PLATFORM_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NFC_PLATFORM_LOG_LEVEL\n\n#define NFC_PLATFORM_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NFC_PLATFORM_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NFC_PLATFORM_INFO_COLOR\n\n#define NFC_PLATFORM_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NFC_PLATFORM_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NFC_PLATFORM_DEBUG_COLOR\n\n#define NFC_PLATFORM_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NFC_T2T_PARSER_ENABLED - nfc_type_2_tag_parser - Parser for decoding Type 2 Tag data\n\n//==========================================================\n\n#ifndef NFC_T2T_PARSER_ENABLED\n\n#define NFC_T2T_PARSER_ENABLED 0\n\n#endif\n\n// <e> NFC_T2T_PARSER_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NFC_T2T_PARSER_LOG_ENABLED\n\n#define NFC_T2T_PARSER_LOG_ENABLED 0\n\n#endif\n\n// <o> NFC_T2T_PARSER_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NFC_T2T_PARSER_LOG_LEVEL\n\n#define NFC_T2T_PARSER_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NFC_T2T_PARSER_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NFC_T2T_PARSER_INFO_COLOR\n\n#define NFC_T2T_PARSER_INFO_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NFC_T4T_APDU_ENABLED - nfc_t4t_apdu - APDU encoder/decoder for Type 4 Tag\n\n//==========================================================\n\n#ifndef NFC_T4T_APDU_ENABLED\n\n#define NFC_T4T_APDU_ENABLED 0\n\n#endif\n\n// <e> NFC_T4T_APDU_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NFC_T4T_APDU_LOG_ENABLED\n\n#define NFC_T4T_APDU_LOG_ENABLED 0\n\n#endif\n\n// <o> NFC_T4T_APDU_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NFC_T4T_APDU_LOG_LEVEL\n\n#define NFC_T4T_APDU_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NFC_T4T_APDU_LOG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NFC_T4T_APDU_LOG_COLOR\n\n#define NFC_T4T_APDU_LOG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NFC_T4T_CC_FILE_PARSER_ENABLED - nfc_t4t_cc_file - Capability Container file for Type 4 Tag\n\n//==========================================================\n\n#ifndef NFC_T4T_CC_FILE_PARSER_ENABLED\n\n#define NFC_T4T_CC_FILE_PARSER_ENABLED 0\n\n#endif\n\n// <e> NFC_T4T_CC_FILE_PARSER_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NFC_T4T_CC_FILE_PARSER_LOG_ENABLED\n\n#define NFC_T4T_CC_FILE_PARSER_LOG_ENABLED 0\n\n#endif\n\n// <o> NFC_T4T_CC_FILE_PARSER_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NFC_T4T_CC_FILE_PARSER_LOG_LEVEL\n\n#define NFC_T4T_CC_FILE_PARSER_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NFC_T4T_CC_FILE_PARSER_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NFC_T4T_CC_FILE_PARSER_INFO_COLOR\n\n#define NFC_T4T_CC_FILE_PARSER_INFO_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NFC_T4T_HL_DETECTION_PROCEDURES_ENABLED - nfc_t4t_hl_detection_procedures - NDEF Detection Procedure for Type 4 Tag\n\n//==========================================================\n\n#ifndef NFC_T4T_HL_DETECTION_PROCEDURES_ENABLED\n\n#define NFC_T4T_HL_DETECTION_PROCEDURES_ENABLED 0\n\n#endif\n\n// <e> NFC_T4T_HL_DETECTION_PROCEDURES_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NFC_T4T_HL_DETECTION_PROCEDURES_LOG_ENABLED\n\n#define NFC_T4T_HL_DETECTION_PROCEDURES_LOG_ENABLED 0\n\n#endif\n\n// <o> NFC_T4T_HL_DETECTION_PROCEDURES_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NFC_T4T_HL_DETECTION_PROCEDURES_LOG_LEVEL\n\n#define NFC_T4T_HL_DETECTION_PROCEDURES_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NFC_T4T_HL_DETECTION_PROCEDURES_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NFC_T4T_HL_DETECTION_PROCEDURES_INFO_COLOR\n\n#define NFC_T4T_HL_DETECTION_PROCEDURES_INFO_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <o> APDU_BUFF_SIZE - Size (in bytes) of the buffer for APDU storage \n\n#ifndef APDU_BUFF_SIZE\n\n#define APDU_BUFF_SIZE 250\n\n#endif\n\n\n\n// <o> CC_STORAGE_BUFF_SIZE - Size (in bytes) of the buffer for CC file storage \n\n#ifndef CC_STORAGE_BUFF_SIZE\n\n#define CC_STORAGE_BUFF_SIZE 64\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NFC_T4T_TLV_BLOCK_PARSER_ENABLED - nfc_t4t_tlv_block - TLV block for Type 4 Tag\n\n//==========================================================\n\n#ifndef NFC_T4T_TLV_BLOCK_PARSER_ENABLED\n\n#define NFC_T4T_TLV_BLOCK_PARSER_ENABLED 0\n\n#endif\n\n// <e> NFC_T4T_TLV_BLOCK_PARSER_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NFC_T4T_TLV_BLOCK_PARSER_LOG_ENABLED\n\n#define NFC_T4T_TLV_BLOCK_PARSER_LOG_ENABLED 0\n\n#endif\n\n// <o> NFC_T4T_TLV_BLOCK_PARSER_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NFC_T4T_TLV_BLOCK_PARSER_LOG_LEVEL\n\n#define NFC_T4T_TLV_BLOCK_PARSER_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NFC_T4T_TLV_BLOCK_PARSER_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NFC_T4T_TLV_BLOCK_PARSER_INFO_COLOR\n\n#define NFC_T4T_TLV_BLOCK_PARSER_INFO_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> nRF_Segger_RTT \n\n\n\n//==========================================================\n\n// <h> segger_rtt - SEGGER RTT\n\n\n\n//==========================================================\n\n// <o> SEGGER_RTT_CONFIG_BUFFER_SIZE_UP - Size of upstream buffer. \n\n// <i> Note that either @ref NRF_LOG_BACKEND_RTT_OUTPUT_BUFFER_SIZE\n\n// <i> or this value is actually used. It depends on which one is bigger.\n\n\n\n#ifndef SEGGER_RTT_CONFIG_BUFFER_SIZE_UP\n\n#define SEGGER_RTT_CONFIG_BUFFER_SIZE_UP 512\n\n#endif\n\n\n\n// <o> SEGGER_RTT_CONFIG_MAX_NUM_UP_BUFFERS - Maximum number of upstream buffers. \n\n#ifndef SEGGER_RTT_CONFIG_MAX_NUM_UP_BUFFERS\n\n#define SEGGER_RTT_CONFIG_MAX_NUM_UP_BUFFERS 2\n\n#endif\n\n\n\n// <o> SEGGER_RTT_CONFIG_BUFFER_SIZE_DOWN - Size of downstream buffer. \n\n#ifndef SEGGER_RTT_CONFIG_BUFFER_SIZE_DOWN\n\n#define SEGGER_RTT_CONFIG_BUFFER_SIZE_DOWN 16\n\n#endif\n\n\n\n// <o> SEGGER_RTT_CONFIG_MAX_NUM_DOWN_BUFFERS - Maximum number of downstream buffers. \n\n#ifndef SEGGER_RTT_CONFIG_MAX_NUM_DOWN_BUFFERS\n\n#define SEGGER_RTT_CONFIG_MAX_NUM_DOWN_BUFFERS 2\n\n#endif\n\n\n\n// <o> SEGGER_RTT_CONFIG_DEFAULT_MODE  - RTT behavior if the buffer is full.\n\n \n\n\n\n// <i> The following modes are supported:\n\n// <i> - SKIP  - Do not block, output nothing.\n\n// <i> - TRIM  - Do not block, output as much as fits.\n\n// <i> - BLOCK - Wait until there is space in the buffer.\n\n// <0=> SKIP \n\n// <1=> TRIM \n\n// <2=> BLOCK_IF_FIFO_FULL \n\n\n\n#ifndef SEGGER_RTT_CONFIG_DEFAULT_MODE\n\n#define SEGGER_RTT_CONFIG_DEFAULT_MODE 0\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> nRF_SoftDevice \n\n\n\n//==========================================================\n\n// <e> NRF_SDH_BLE_ENABLED - nrf_sdh_ble - SoftDevice BLE event handler\n\n//==========================================================\n\n#ifndef NRF_SDH_BLE_ENABLED\n\n#define NRF_SDH_BLE_ENABLED 1\n\n#endif\n\n// <h> BLE Stack configuration - Stack configuration parameters\n\n\n\n// <i> The SoftDevice handler will configure the stack with these parameters when calling @ref nrf_sdh_ble_default_cfg_set.\n\n// <i> Other libraries might depend on these values; keep them up-to-date even if you are not explicitely calling @ref nrf_sdh_ble_default_cfg_set.\n\n//==========================================================\n\n// <o> NRF_SDH_BLE_GAP_DATA_LENGTH   <27-251> \n\n\n\n\n\n// <i> Requested BLE GAP data length to be negotiated.\n\n\n\n#ifndef NRF_SDH_BLE_GAP_DATA_LENGTH\n\n#define NRF_SDH_BLE_GAP_DATA_LENGTH 251\n\n#endif\n\n\n\n// <o> NRF_SDH_BLE_PERIPHERAL_LINK_COUNT - Maximum number of peripheral links. \n\n#ifndef NRF_SDH_BLE_PERIPHERAL_LINK_COUNT\n\n#define NRF_SDH_BLE_PERIPHERAL_LINK_COUNT 0\n\n#endif\n\n\n\n// <o> NRF_SDH_BLE_CENTRAL_LINK_COUNT - Maximum number of central links. \n\n#ifndef NRF_SDH_BLE_CENTRAL_LINK_COUNT\n\n#define NRF_SDH_BLE_CENTRAL_LINK_COUNT 1\n\n#endif\n\n\n\n// <o> NRF_SDH_BLE_TOTAL_LINK_COUNT - Total link count. \n\n// <i> Maximum number of total concurrent connections using the default configuration.\n\n\n\n#ifndef NRF_SDH_BLE_TOTAL_LINK_COUNT\n\n#define NRF_SDH_BLE_TOTAL_LINK_COUNT 1\n\n#endif\n\n\n\n// <o> NRF_SDH_BLE_GAP_EVENT_LENGTH - GAP event length. \n\n// <i> The time set aside for this connection on every connection interval in 1.25 ms units.\n\n\n\n#ifndef NRF_SDH_BLE_GAP_EVENT_LENGTH\n\n#define NRF_SDH_BLE_GAP_EVENT_LENGTH 6\n\n#endif\n\n\n\n// <o> NRF_SDH_BLE_GATT_MAX_MTU_SIZE - Static maximum MTU size. \n\n#ifndef NRF_SDH_BLE_GATT_MAX_MTU_SIZE\n\n#define NRF_SDH_BLE_GATT_MAX_MTU_SIZE 247\n\n#endif\n\n\n\n// <o> NRF_SDH_BLE_GATTS_ATTR_TAB_SIZE - Attribute Table size in bytes. The size must be a multiple of 4. \n\n#ifndef NRF_SDH_BLE_GATTS_ATTR_TAB_SIZE\n\n#define NRF_SDH_BLE_GATTS_ATTR_TAB_SIZE 1408\n\n#endif\n\n\n\n// <o> NRF_SDH_BLE_VS_UUID_COUNT - The number of vendor-specific UUIDs. \n\n#ifndef NRF_SDH_BLE_VS_UUID_COUNT\n\n#define NRF_SDH_BLE_VS_UUID_COUNT 1\n\n#endif\n\n\n\n// <q> NRF_SDH_BLE_SERVICE_CHANGED  - Include the Service Changed characteristic in the Attribute Table.\n\n \n\n\n\n#ifndef NRF_SDH_BLE_SERVICE_CHANGED\n\n#define NRF_SDH_BLE_SERVICE_CHANGED 0\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> BLE Observers - Observers and priority levels\n\n\n\n//==========================================================\n\n// <o> NRF_SDH_BLE_OBSERVER_PRIO_LEVELS - Total number of priority levels for BLE observers. \n\n// <i> This setting configures the number of priority levels available for BLE event handlers.\n\n// <i> The priority level of a handler determines the order in which it receives events, with respect to other handlers.\n\n\n\n#ifndef NRF_SDH_BLE_OBSERVER_PRIO_LEVELS\n\n#define NRF_SDH_BLE_OBSERVER_PRIO_LEVELS 4\n\n#endif\n\n\n\n// <h> BLE Observers priorities - Invididual priorities\n\n\n\n//==========================================================\n\n// <o> BLE_ADV_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Advertising module.\n\n\n\n#ifndef BLE_ADV_BLE_OBSERVER_PRIO\n\n#define BLE_ADV_BLE_OBSERVER_PRIO 1\n\n#endif\n\n\n\n// <o> BLE_ANCS_C_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Apple Notification Service Client.\n\n\n\n#ifndef BLE_ANCS_C_BLE_OBSERVER_PRIO\n\n#define BLE_ANCS_C_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_ANS_C_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Alert Notification Service Client.\n\n\n\n#ifndef BLE_ANS_C_BLE_OBSERVER_PRIO\n\n#define BLE_ANS_C_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_BAS_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Battery Service.\n\n\n\n#ifndef BLE_BAS_BLE_OBSERVER_PRIO\n\n#define BLE_BAS_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_BAS_C_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Battery Service Client.\n\n\n\n#ifndef BLE_BAS_C_BLE_OBSERVER_PRIO\n\n#define BLE_BAS_C_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_BPS_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Blood Pressure Service.\n\n\n\n#ifndef BLE_BPS_BLE_OBSERVER_PRIO\n\n#define BLE_BPS_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_CONN_PARAMS_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Connection parameters module.\n\n\n\n#ifndef BLE_CONN_PARAMS_BLE_OBSERVER_PRIO\n\n#define BLE_CONN_PARAMS_BLE_OBSERVER_PRIO 1\n\n#endif\n\n\n\n// <o> BLE_CONN_STATE_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Connection State module.\n\n\n\n#ifndef BLE_CONN_STATE_BLE_OBSERVER_PRIO\n\n#define BLE_CONN_STATE_BLE_OBSERVER_PRIO 0\n\n#endif\n\n\n\n// <o> BLE_CSCS_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Cycling Speed and Cadence Service.\n\n\n\n#ifndef BLE_CSCS_BLE_OBSERVER_PRIO\n\n#define BLE_CSCS_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_CTS_C_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Current Time Service Client.\n\n\n\n#ifndef BLE_CTS_C_BLE_OBSERVER_PRIO\n\n#define BLE_CTS_C_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_DB_DISC_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Database Discovery module.\n\n\n\n#ifndef BLE_DB_DISC_BLE_OBSERVER_PRIO\n\n#define BLE_DB_DISC_BLE_OBSERVER_PRIO 1\n\n#endif\n\n\n\n// <o> BLE_DFU_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the DFU Service.\n\n\n\n#ifndef BLE_DFU_BLE_OBSERVER_PRIO\n\n#define BLE_DFU_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_DIS_C_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Device Information Client.\n\n\n\n#ifndef BLE_DIS_C_BLE_OBSERVER_PRIO\n\n#define BLE_DIS_C_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_GLS_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Glucose Service.\n\n\n\n#ifndef BLE_GLS_BLE_OBSERVER_PRIO\n\n#define BLE_GLS_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_HIDS_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Human Interface Device Service.\n\n\n\n#ifndef BLE_HIDS_BLE_OBSERVER_PRIO\n\n#define BLE_HIDS_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_HRS_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Heart Rate Service.\n\n\n\n#ifndef BLE_HRS_BLE_OBSERVER_PRIO\n\n#define BLE_HRS_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_HRS_C_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Heart Rate Service Client.\n\n\n\n#ifndef BLE_HRS_C_BLE_OBSERVER_PRIO\n\n#define BLE_HRS_C_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_HTS_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Health Thermometer Service.\n\n\n\n#ifndef BLE_HTS_BLE_OBSERVER_PRIO\n\n#define BLE_HTS_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_IAS_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Immediate Alert Service.\n\n\n\n#ifndef BLE_IAS_BLE_OBSERVER_PRIO\n\n#define BLE_IAS_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_IAS_C_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Immediate Alert Service Client.\n\n\n\n#ifndef BLE_IAS_C_BLE_OBSERVER_PRIO\n\n#define BLE_IAS_C_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_LBS_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the LED Button Service.\n\n\n\n#ifndef BLE_LBS_BLE_OBSERVER_PRIO\n\n#define BLE_LBS_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_LBS_C_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the LED Button Service Client.\n\n\n\n#ifndef BLE_LBS_C_BLE_OBSERVER_PRIO\n\n#define BLE_LBS_C_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_LLS_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Link Loss Service.\n\n\n\n#ifndef BLE_LLS_BLE_OBSERVER_PRIO\n\n#define BLE_LLS_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_LNS_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Location Navigation Service.\n\n\n\n#ifndef BLE_LNS_BLE_OBSERVER_PRIO\n\n#define BLE_LNS_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_NUS_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the UART Service.\n\n\n\n#ifndef BLE_NUS_BLE_OBSERVER_PRIO\n\n#define BLE_NUS_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_NUS_C_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the UART Central Service.\n\n\n\n#ifndef BLE_NUS_C_BLE_OBSERVER_PRIO\n\n#define BLE_NUS_C_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_OTS_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Object transfer service.\n\n\n\n#ifndef BLE_OTS_BLE_OBSERVER_PRIO\n\n#define BLE_OTS_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_OTS_C_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Object transfer service client.\n\n\n\n#ifndef BLE_OTS_C_BLE_OBSERVER_PRIO\n\n#define BLE_OTS_C_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_RSCS_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Running Speed and Cadence Service.\n\n\n\n#ifndef BLE_RSCS_BLE_OBSERVER_PRIO\n\n#define BLE_RSCS_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_RSCS_C_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Running Speed and Cadence Client.\n\n\n\n#ifndef BLE_RSCS_C_BLE_OBSERVER_PRIO\n\n#define BLE_RSCS_C_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_TPS_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the TX Power Service.\n\n\n\n#ifndef BLE_TPS_BLE_OBSERVER_PRIO\n\n#define BLE_TPS_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BSP_BTN_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Button Control module.\n\n\n\n#ifndef BSP_BTN_BLE_OBSERVER_PRIO\n\n#define BSP_BTN_BLE_OBSERVER_PRIO 1\n\n#endif\n\n\n\n// <o> NFC_BLE_PAIR_LIB_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the NFC pairing library.\n\n\n\n#ifndef NFC_BLE_PAIR_LIB_BLE_OBSERVER_PRIO\n\n#define NFC_BLE_PAIR_LIB_BLE_OBSERVER_PRIO 1\n\n#endif\n\n\n\n// <o> NFC_BLE_PAIR_LIB_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the NFC pairing library.\n\n\n\n#ifndef NFC_BLE_PAIR_LIB_BLE_OBSERVER_PRIO\n\n#define NFC_BLE_PAIR_LIB_BLE_OBSERVER_PRIO 1\n\n#endif\n\n\n\n// <o> NFC_BLE_PAIR_LIB_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the NFC pairing library.\n\n\n\n#ifndef NFC_BLE_PAIR_LIB_BLE_OBSERVER_PRIO\n\n#define NFC_BLE_PAIR_LIB_BLE_OBSERVER_PRIO 1\n\n#endif\n\n\n\n// <o> NRF_BLE_BMS_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Bond Management Service.\n\n\n\n#ifndef NRF_BLE_BMS_BLE_OBSERVER_PRIO\n\n#define NRF_BLE_BMS_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> NRF_BLE_CGMS_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Contiuon Glucose Monitoring Service.\n\n\n\n#ifndef NRF_BLE_CGMS_BLE_OBSERVER_PRIO\n\n#define NRF_BLE_CGMS_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> NRF_BLE_ES_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Eddystone module.\n\n\n\n#ifndef NRF_BLE_ES_BLE_OBSERVER_PRIO\n\n#define NRF_BLE_ES_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> NRF_BLE_GATTS_C_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the GATT Service Client.\n\n\n\n#ifndef NRF_BLE_GATTS_C_BLE_OBSERVER_PRIO\n\n#define NRF_BLE_GATTS_C_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> NRF_BLE_GATT_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the GATT module.\n\n\n\n#ifndef NRF_BLE_GATT_BLE_OBSERVER_PRIO\n\n#define NRF_BLE_GATT_BLE_OBSERVER_PRIO 1\n\n#endif\n\n\n\n// <o> NRF_BLE_GQ_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the GATT Queue module.\n\n\n\n#ifndef NRF_BLE_GQ_BLE_OBSERVER_PRIO\n\n#define NRF_BLE_GQ_BLE_OBSERVER_PRIO 1\n\n#endif\n\n\n\n// <o> NRF_BLE_QWR_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Queued writes module.\n\n\n\n#ifndef NRF_BLE_QWR_BLE_OBSERVER_PRIO\n\n#define NRF_BLE_QWR_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> NRF_BLE_SCAN_OBSERVER_PRIO  \n\n// <i> Priority for dispatching the BLE events to the Scanning Module.\n\n\n\n#ifndef NRF_BLE_SCAN_OBSERVER_PRIO\n\n#define NRF_BLE_SCAN_OBSERVER_PRIO 1\n\n#endif\n\n\n\n// <o> PM_BLE_OBSERVER_PRIO - Priority with which BLE events are dispatched to the Peer Manager module. \n\n#ifndef PM_BLE_OBSERVER_PRIO\n\n#define PM_BLE_OBSERVER_PRIO 1\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n\n\n// </e>\n\n\n\n// <e> NRF_SDH_ENABLED - nrf_sdh - SoftDevice handler\n\n//==========================================================\n\n#ifndef NRF_SDH_ENABLED\n\n#define NRF_SDH_ENABLED 1\n\n#endif\n\n// <h> Dispatch model \n\n\n\n// <i> This setting configures how Stack events are dispatched to the application.\n\n//==========================================================\n\n// <o> NRF_SDH_DISPATCH_MODEL\n\n \n\n\n\n// <i> NRF_SDH_DISPATCH_MODEL_INTERRUPT: SoftDevice events are passed to the application from the interrupt context.\n\n// <i> NRF_SDH_DISPATCH_MODEL_APPSH: SoftDevice events are scheduled using @ref app_scheduler.\n\n// <i> NRF_SDH_DISPATCH_MODEL_POLLING: SoftDevice events are to be fetched manually.\n\n// <0=> NRF_SDH_DISPATCH_MODEL_INTERRUPT \n\n// <1=> NRF_SDH_DISPATCH_MODEL_APPSH \n\n// <2=> NRF_SDH_DISPATCH_MODEL_POLLING \n\n\n\n#ifndef NRF_SDH_DISPATCH_MODEL\n\n#define NRF_SDH_DISPATCH_MODEL 0\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> Clock - SoftDevice clock configuration\n\n\n\n//==========================================================\n\n// <o> NRF_SDH_CLOCK_LF_SRC  - SoftDevice clock source.\n\n \n\n// <0=> NRF_CLOCK_LF_SRC_RC \n\n// <1=> NRF_CLOCK_LF_SRC_XTAL \n\n// <2=> NRF_CLOCK_LF_SRC_SYNTH \n\n\n\n#ifndef NRF_SDH_CLOCK_LF_SRC\n\n#define NRF_SDH_CLOCK_LF_SRC 1\n\n#endif\n\n\n\n// <o> NRF_SDH_CLOCK_LF_RC_CTIV - SoftDevice calibration timer interval. \n\n#ifndef NRF_SDH_CLOCK_LF_RC_CTIV\n\n#define NRF_SDH_CLOCK_LF_RC_CTIV 0\n\n#endif\n\n\n\n// <o> NRF_SDH_CLOCK_LF_RC_TEMP_CTIV - SoftDevice calibration timer interval under constant temperature. \n\n// <i> How often (in number of calibration intervals) the RC oscillator shall be calibrated\n\n// <i>  if the temperature has not changed.\n\n\n\n#ifndef NRF_SDH_CLOCK_LF_RC_TEMP_CTIV\n\n#define NRF_SDH_CLOCK_LF_RC_TEMP_CTIV 0\n\n#endif\n\n\n\n// <o> NRF_SDH_CLOCK_LF_ACCURACY  - External clock accuracy used in the LL to compute timing.\n\n \n\n// <0=> NRF_CLOCK_LF_ACCURACY_250_PPM \n\n// <1=> NRF_CLOCK_LF_ACCURACY_500_PPM \n\n// <2=> NRF_CLOCK_LF_ACCURACY_150_PPM \n\n// <3=> NRF_CLOCK_LF_ACCURACY_100_PPM \n\n// <4=> NRF_CLOCK_LF_ACCURACY_75_PPM \n\n// <5=> NRF_CLOCK_LF_ACCURACY_50_PPM \n\n// <6=> NRF_CLOCK_LF_ACCURACY_30_PPM \n\n// <7=> NRF_CLOCK_LF_ACCURACY_20_PPM \n\n// <8=> NRF_CLOCK_LF_ACCURACY_10_PPM \n\n// <9=> NRF_CLOCK_LF_ACCURACY_5_PPM \n\n// <10=> NRF_CLOCK_LF_ACCURACY_2_PPM \n\n// <11=> NRF_CLOCK_LF_ACCURACY_1_PPM \n\n\n\n#ifndef NRF_SDH_CLOCK_LF_ACCURACY\n\n#define NRF_SDH_CLOCK_LF_ACCURACY 7\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> SDH Observers - Observers and priority levels\n\n\n\n//==========================================================\n\n// <o> NRF_SDH_REQ_OBSERVER_PRIO_LEVELS - Total number of priority levels for request observers. \n\n// <i> This setting configures the number of priority levels available for the SoftDevice request event handlers.\n\n// <i> The priority level of a handler determines the order in which it receives events, with respect to other handlers.\n\n\n\n#ifndef NRF_SDH_REQ_OBSERVER_PRIO_LEVELS\n\n#define NRF_SDH_REQ_OBSERVER_PRIO_LEVELS 2\n\n#endif\n\n\n\n// <o> NRF_SDH_STATE_OBSERVER_PRIO_LEVELS - Total number of priority levels for state observers. \n\n// <i> This setting configures the number of priority levels available for the SoftDevice state event handlers.\n\n// <i> The priority level of a handler determines the order in which it receives events, with respect to other handlers.\n\n\n\n#ifndef NRF_SDH_STATE_OBSERVER_PRIO_LEVELS\n\n#define NRF_SDH_STATE_OBSERVER_PRIO_LEVELS 2\n\n#endif\n\n\n\n// <o> NRF_SDH_STACK_OBSERVER_PRIO_LEVELS - Total number of priority levels for stack event observers. \n\n// <i> This setting configures the number of priority levels available for the SoftDevice stack event handlers (ANT, BLE, SoC).\n\n// <i> The priority level of a handler determines the order in which it receives events, with respect to other handlers.\n\n\n\n#ifndef NRF_SDH_STACK_OBSERVER_PRIO_LEVELS\n\n#define NRF_SDH_STACK_OBSERVER_PRIO_LEVELS 2\n\n#endif\n\n\n\n\n\n// <h> State Observers priorities - Invididual priorities\n\n\n\n//==========================================================\n\n// <o> CLOCK_CONFIG_STATE_OBSERVER_PRIO  \n\n// <i> Priority with which state events are dispatched to the Clock driver.\n\n\n\n#ifndef CLOCK_CONFIG_STATE_OBSERVER_PRIO\n\n#define CLOCK_CONFIG_STATE_OBSERVER_PRIO 0\n\n#endif\n\n\n\n// <o> POWER_CONFIG_STATE_OBSERVER_PRIO  \n\n// <i> Priority with which state events are dispatched to the Power driver.\n\n\n\n#ifndef POWER_CONFIG_STATE_OBSERVER_PRIO\n\n#define POWER_CONFIG_STATE_OBSERVER_PRIO 0\n\n#endif\n\n\n\n// <o> RNG_CONFIG_STATE_OBSERVER_PRIO  \n\n// <i> Priority with which state events are dispatched to this module.\n\n\n\n#ifndef RNG_CONFIG_STATE_OBSERVER_PRIO\n\n#define RNG_CONFIG_STATE_OBSERVER_PRIO 0\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> Stack Event Observers priorities - Invididual priorities\n\n\n\n//==========================================================\n\n// <o> NRF_SDH_ANT_STACK_OBSERVER_PRIO  \n\n// <i> This setting configures the priority with which ANT events are processed with respect to other events coming from the stack.\n\n// <i> Modify this setting if you need to have ANT events dispatched before or after other stack events, such as BLE or SoC.\n\n// <i> Zero is the highest priority.\n\n\n\n#ifndef NRF_SDH_ANT_STACK_OBSERVER_PRIO\n\n#define NRF_SDH_ANT_STACK_OBSERVER_PRIO 0\n\n#endif\n\n\n\n// <o> NRF_SDH_BLE_STACK_OBSERVER_PRIO  \n\n// <i> This setting configures the priority with which BLE events are processed with respect to other events coming from the stack.\n\n// <i> Modify this setting if you need to have BLE events dispatched before or after other stack events, such as ANT or SoC.\n\n// <i> Zero is the highest priority.\n\n\n\n#ifndef NRF_SDH_BLE_STACK_OBSERVER_PRIO\n\n#define NRF_SDH_BLE_STACK_OBSERVER_PRIO 0\n\n#endif\n\n\n\n// <o> NRF_SDH_SOC_STACK_OBSERVER_PRIO  \n\n// <i> This setting configures the priority with which SoC events are processed with respect to other events coming from the stack.\n\n// <i> Modify this setting if you need to have SoC events dispatched before or after other stack events, such as ANT or BLE.\n\n// <i> Zero is the highest priority.\n\n\n\n#ifndef NRF_SDH_SOC_STACK_OBSERVER_PRIO\n\n#define NRF_SDH_SOC_STACK_OBSERVER_PRIO 0\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n\n\n// </e>\n\n\n\n// <e> NRF_SDH_SOC_ENABLED - nrf_sdh_soc - SoftDevice SoC event handler\n\n//==========================================================\n\n#ifndef NRF_SDH_SOC_ENABLED\n\n#define NRF_SDH_SOC_ENABLED 1\n\n#endif\n\n// <h> SoC Observers - Observers and priority levels\n\n\n\n//==========================================================\n\n// <o> NRF_SDH_SOC_OBSERVER_PRIO_LEVELS - Total number of priority levels for SoC observers. \n\n// <i> This setting configures the number of priority levels available for the SoC event handlers.\n\n// <i> The priority level of a handler determines the order in which it receives events, with respect to other handlers.\n\n\n\n#ifndef NRF_SDH_SOC_OBSERVER_PRIO_LEVELS\n\n#define NRF_SDH_SOC_OBSERVER_PRIO_LEVELS 2\n\n#endif\n\n\n\n// <h> SoC Observers priorities - Invididual priorities\n\n\n\n//==========================================================\n\n// <o> BLE_DFU_SOC_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the DFU Service.\n\n\n\n#ifndef BLE_DFU_SOC_OBSERVER_PRIO\n\n#define BLE_DFU_SOC_OBSERVER_PRIO 1\n\n#endif\n\n\n\n// <o> CLOCK_CONFIG_SOC_OBSERVER_PRIO  \n\n// <i> Priority with which SoC events are dispatched to the Clock driver.\n\n\n\n#ifndef CLOCK_CONFIG_SOC_OBSERVER_PRIO\n\n#define CLOCK_CONFIG_SOC_OBSERVER_PRIO 0\n\n#endif\n\n\n\n// <o> POWER_CONFIG_SOC_OBSERVER_PRIO  \n\n// <i> Priority with which SoC events are dispatched to the Power driver.\n\n\n\n#ifndef POWER_CONFIG_SOC_OBSERVER_PRIO\n\n#define POWER_CONFIG_SOC_OBSERVER_PRIO 0\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n\n\n// </e>\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <<< end of configuration section >>>\n\n#endif //SDK_CONFIG_H",
    "assembly": ".file\t\"151.c\"\n\t.text\n\t.ident\t\"GCC: (MinGW-W64 x86_64-ucrt-posix-seh, built by Brecht Sanders, r8) 13.2.0\"",
    "generation_time": 2.327002763748169,
    "tokens_generated": 80,
    "metrics": {
      "length_ratio": 0.00048079009839502914,
      "line_ratio": 4.1564487302049126e-05,
      "token_overlap": 0.0,
      "token_precision": 0.0,
      "keyword_coverage": 0.0,
      "keyword_match_ratio": 0.0,
      "brace_ratio": 0,
      "semicolon_ratio": 1.3333333333333333
    }
  },
  {
    "filename": "158",
    "optimization": "Ofast",
    "generated_c": ".file_filename[1]\n.file_directory[2]\n.file_path[3]\n.file_type[4]\n.file_dir[5]\n.file_prefix[6]",
    "reference_c": "/**********************************************************************************************\n*\n*   raylib v4.0 - A simple and easy-to-use library to enjoy videogames programming (www.raylib.com)\n*\n*   FEATURES:\n*       - NO external dependencies, all required libraries included with raylib\n*       - Multiplatform: Windows, Linux, FreeBSD, OpenBSD, NetBSD, DragonFly,\n*                        MacOS, Haiku, Android, Raspberry Pi, DRM native, HTML5.\n*       - Written in plain C code (C99) in PascalCase/camelCase notation\n*       - Hardware accelerated with OpenGL (1.1, 2.1, 3.3, 4.3 or ES2 - choose at compile)\n*       - Unique OpenGL abstraction layer (usable as standalone module): [rlgl]\n*       - Multiple Fonts formats supported (TTF, XNA fonts, AngelCode fonts)\n*       - Outstanding texture formats support, including compressed formats (DXT, ETC, ASTC)\n*       - Full 3d support for 3d Shapes, Models, Billboards, Heightmaps and more!\n*       - Flexible Materials system, supporting classic maps and PBR maps\n*       - Animated 3D models supported (skeletal bones animation) (IQM)\n*       - Shaders support, including Model shaders and Postprocessing shaders\n*       - Powerful math module for Vector, Matrix and Quaternion operations: [raymath]\n*       - Audio loading and playing with streaming support (WAV, OGG, MP3, FLAC, XM, MOD)\n*       - VR stereo rendering with configurable HMD device parameters\n*       - Bindings to multiple programming languages available!\n*\n*   NOTES:\n*       - One default Font is loaded on InitWindow()->LoadFontDefault() [core, text]\n*       - One default Texture2D is loaded on rlglInit(), 1x1 white pixel R8G8B8A8 [rlgl] (OpenGL 3.3 or ES2)\n*       - One default Shader is loaded on rlglInit()->rlLoadShaderDefault() [rlgl] (OpenGL 3.3 or ES2)\n*       - One default RenderBatch is loaded on rlglInit()->rlLoadRenderBatch() [rlgl] (OpenGL 3.3 or ES2)\n*\n*   DEPENDENCIES (included):\n*       [rcore] rglfw (Camilla L\u00f6wy - github.com/glfw/glfw) for window/context management and input (PLATFORM_DESKTOP)\n*       [rlgl] glad (David Herberth - github.com/Dav1dde/glad) for OpenGL 3.3 extensions loading (PLATFORM_DESKTOP)\n*       [raudio] miniaudio (David Reid - github.com/mackron/miniaudio) for audio device/context management\n*\n*   OPTIONAL DEPENDENCIES (included):\n*       [rcore] msf_gif (Miles Fogle) for GIF recording\n*       [rcore] sinfl (Micha Mettke) for DEFLATE decompression algorythm\n*       [rcore] sdefl (Micha Mettke) for DEFLATE compression algorythm\n*       [rtextures] stb_image (Sean Barret) for images loading (BMP, TGA, PNG, JPEG, HDR...)\n*       [rtextures] stb_image_write (Sean Barret) for image writing (BMP, TGA, PNG, JPG)\n*       [rtextures] stb_image_resize (Sean Barret) for image resizing algorithms\n*       [rtext] stb_truetype (Sean Barret) for ttf fonts loading\n*       [rtext] stb_rect_pack (Sean Barret) for rectangles packing\n*       [rmodels] par_shapes (Philip Rideout) for parametric 3d shapes generation\n*       [rmodels] tinyobj_loader_c (Syoyo Fujita) for models loading (OBJ, MTL)\n*       [rmodels] cgltf (Johannes Kuhlmann) for models loading (glTF)\n*       [raudio] dr_wav (David Reid) for WAV audio file loading\n*       [raudio] dr_flac (David Reid) for FLAC audio file loading\n*       [raudio] dr_mp3 (David Reid) for MP3 audio file loading\n*       [raudio] stb_vorbis (Sean Barret) for OGG audio loading\n*       [raudio] jar_xm (Joshua Reisenauer) for XM audio module loading\n*       [raudio] jar_mod (Joshua Reisenauer) for MOD audio module loading\n*\n*\n*   LICENSE: zlib/libpng\n*\n*   raylib is licensed under an unmodified zlib/libpng license, which is an OSI-certified,\n*   BSD-like license that allows static linking with closed source software:\n*\n*   Copyright (c) 2013-2021 Ramon Santamaria (@raysan5)\n*\n*   This software is provided \"as-is\", without any express or implied warranty. In no event\n*   will the authors be held liable for any damages arising from the use of this software.\n*\n*   Permission is granted to anyone to use this software for any purpose, including commercial\n*   applications, and to alter it and redistribute it freely, subject to the following restrictions:\n*\n*     1. The origin of this software must not be misrepresented; you must not claim that you\n*     wrote the original software. If you use this software in a product, an acknowledgment\n*     in the product documentation would be appreciated but is not required.\n*\n*     2. Altered source versions must be plainly marked as such, and must not be misrepresented\n*     as being the original software.\n*\n*     3. This notice may not be removed or altered from any source distribution.\n*\n**********************************************************************************************/\n\n#ifndef RAYLIB_H\n#define RAYLIB_H\n\n#include <stdarg.h>     // Required for: va_list - Only used by TraceLogCallback\n\n#define RAYLIB_VERSION  \"4.0\"\n\n// Function specifiers in case library is build/used as a shared library (Windows)\n// NOTE: Microsoft specifiers to tell compiler that symbols are imported/exported from a .dll\n#if defined(_WIN32)\n    #if defined(BUILD_LIBTYPE_SHARED)\n        #define RLAPI __declspec(dllexport)     // We are building the library as a Win32 shared library (.dll)\n    #elif defined(USE_LIBTYPE_SHARED)\n        #define RLAPI __declspec(dllimport)     // We are using the library as a Win32 shared library (.dll)\n    #endif\n#endif\n\n#ifndef RLAPI\n    #define RLAPI       // Functions defined as 'extern' by default (implicit specifiers)\n#endif\n\n//----------------------------------------------------------------------------------\n// Some basic Defines\n//----------------------------------------------------------------------------------\n#ifndef PI\n    #define PI 3.14159265358979323846f\n#endif\n#ifndef DEG2RAD\n    #define DEG2RAD (PI/180.0f)\n#endif\n#ifndef RAD2DEG\n    #define RAD2DEG (180.0f/PI)\n#endif\n\n// Allow custom memory allocators\n#ifndef RL_MALLOC\n    #define RL_MALLOC(sz)       malloc(sz)\n#endif\n#ifndef RL_CALLOC\n    #define RL_CALLOC(n,sz)     calloc(n,sz)\n#endif\n#ifndef RL_REALLOC\n    #define RL_REALLOC(ptr,sz)  realloc(ptr,sz)\n#endif\n#ifndef RL_FREE\n    #define RL_FREE(ptr)        free(ptr)\n#endif\n\n// NOTE: MSVC C++ compiler does not support compound literals (C99 feature)\n// Plain structures in C++ (without constructors) can be initialized with { }\n#if defined(__cplusplus)\n    #define CLITERAL(type)      type\n#else\n    #define CLITERAL(type)      (type)\n#endif\n\n// NOTE: We set some defines with some data types declared by raylib\n// Other modules (raymath, rlgl) also require some of those types, so,\n// to be able to use those other modules as standalone (not depending on raylib)\n// this defines are very useful for internal check and avoid type (re)definitions\n#define RL_COLOR_TYPE\n#define RL_RECTANGLE_TYPE\n#define RL_VECTOR2_TYPE\n#define RL_VECTOR3_TYPE\n#define RL_VECTOR4_TYPE\n#define RL_QUATERNION_TYPE\n#define RL_MATRIX_TYPE\n\n// Some Basic Colors\n// NOTE: Custom raylib color palette for amazing visuals on WHITE background\n#define LIGHTGRAY  CLITERAL(Color){ 200, 200, 200, 255 }   // Light Gray\n#define GRAY       CLITERAL(Color){ 130, 130, 130, 255 }   // Gray\n#define DARKGRAY   CLITERAL(Color){ 80, 80, 80, 255 }      // Dark Gray\n#define YELLOW     CLITERAL(Color){ 253, 249, 0, 255 }     // Yellow\n#define GOLD       CLITERAL(Color){ 255, 203, 0, 255 }     // Gold\n#define ORANGE     CLITERAL(Color){ 255, 161, 0, 255 }     // Orange\n#define PINK       CLITERAL(Color){ 255, 109, 194, 255 }   // Pink\n#define RED        CLITERAL(Color){ 230, 41, 55, 255 }     // Red\n#define MAROON     CLITERAL(Color){ 190, 33, 55, 255 }     // Maroon\n#define GREEN      CLITERAL(Color){ 0, 228, 48, 255 }      // Green\n#define LIME       CLITERAL(Color){ 0, 158, 47, 255 }      // Lime\n#define DARKGREEN  CLITERAL(Color){ 0, 117, 44, 255 }      // Dark Green\n#define SKYBLUE    CLITERAL(Color){ 102, 191, 255, 255 }   // Sky Blue\n#define BLUE       CLITERAL(Color){ 0, 121, 241, 255 }     // Blue\n#define DARKBLUE   CLITERAL(Color){ 0, 82, 172, 255 }      // Dark Blue\n#define PURPLE     CLITERAL(Color){ 200, 122, 255, 255 }   // Purple\n#define VIOLET     CLITERAL(Color){ 135, 60, 190, 255 }    // Violet\n#define DARKPURPLE CLITERAL(Color){ 112, 31, 126, 255 }    // Dark Purple\n#define BEIGE      CLITERAL(Color){ 211, 176, 131, 255 }   // Beige\n#define BROWN      CLITERAL(Color){ 127, 106, 79, 255 }    // Brown\n#define DARKBROWN  CLITERAL(Color){ 76, 63, 47, 255 }      // Dark Brown\n\n#define WHITE      CLITERAL(Color){ 255, 255, 255, 255 }   // White\n#define BLACK      CLITERAL(Color){ 0, 0, 0, 255 }         // Black\n#define BLANK      CLITERAL(Color){ 0, 0, 0, 0 }           // Blank (Transparent)\n#define MAGENTA    CLITERAL(Color){ 255, 0, 255, 255 }     // Magenta\n#define RAYWHITE   CLITERAL(Color){ 245, 245, 245, 255 }   // My own White (raylib logo)\n\n//----------------------------------------------------------------------------------\n// Structures Definition\n//----------------------------------------------------------------------------------\n// Boolean type\n#if defined(__STDC__) && __STDC_VERSION__ >= 199901L\n    #include <stdbool.h>\n#elif !defined(__cplusplus) && !defined(bool)\n    typedef enum bool { false, true } bool;\n    #define RL_BOOL_TYPE\n#endif\n\n// Vector2, 2 components\ntypedef struct Vector2 {\n    float x;                // Vector x component\n    float y;                // Vector y component\n} Vector2;\n\n// Vector3, 3 components\ntypedef struct Vector3 {\n    float x;                // Vector x component\n    float y;                // Vector y component\n    float z;                // Vector z component\n} Vector3;\n\n// Vector4, 4 components\ntypedef struct Vector4 {\n    float x;                // Vector x component\n    float y;                // Vector y component\n    float z;                // Vector z component\n    float w;                // Vector w component\n} Vector4;\n\n// Quaternion, 4 components (Vector4 alias)\ntypedef Vector4 Quaternion;\n\n// Matrix, 4x4 components, column major, OpenGL style, right handed\ntypedef struct Matrix {\n    float m0, m4, m8, m12;  // Matrix first row (4 components)\n    float m1, m5, m9, m13;  // Matrix second row (4 components)\n    float m2, m6, m10, m14; // Matrix third row (4 components)\n    float m3, m7, m11, m15; // Matrix fourth row (4 components)\n} Matrix;\n\n// Color, 4 components, R8G8B8A8 (32bit)\ntypedef struct Color {\n    unsigned char r;        // Color red value\n    unsigned char g;        // Color green value\n    unsigned char b;        // Color blue value\n    unsigned char a;        // Color alpha value\n} Color;\n\n// Rectangle, 4 components\ntypedef struct Rectangle {\n    float x;                // Rectangle top-left corner position x\n    float y;                // Rectangle top-left corner position y\n    float width;            // Rectangle width\n    float height;           // Rectangle height\n} Rectangle;\n\n// Image, pixel data stored in CPU memory (RAM)\ntypedef struct Image {\n    void *data;             // Image raw data\n    int width;              // Image base width\n    int height;             // Image base height\n    int mipmaps;            // Mipmap levels, 1 by default\n    int format;             // Data format (PixelFormat type)\n} Image;\n\n// Texture, tex data stored in GPU memory (VRAM)\ntypedef struct Texture {\n    unsigned int id;        // OpenGL texture id\n    int width;              // Texture base width\n    int height;             // Texture base height\n    int mipmaps;            // Mipmap levels, 1 by default\n    int format;             // Data format (PixelFormat type)\n} Texture;\n\n// Texture2D, same as Texture\ntypedef Texture Texture2D;\n\n// TextureCubemap, same as Texture\ntypedef Texture TextureCubemap;\n\n// RenderTexture, fbo for texture rendering\ntypedef struct RenderTexture {\n    unsigned int id;        // OpenGL framebuffer object id\n    Texture texture;        // Color buffer attachment texture\n    Texture depth;          // Depth buffer attachment texture\n} RenderTexture;\n\n// RenderTexture2D, same as RenderTexture\ntypedef RenderTexture RenderTexture2D;\n\n// NPatchInfo, n-patch layout info\ntypedef struct NPatchInfo {\n    Rectangle source;       // Texture source rectangle\n    int left;               // Left border offset\n    int top;                // Top border offset\n    int right;              // Right border offset\n    int bottom;             // Bottom border offset\n    int layout;             // Layout of the n-patch: 3x3, 1x3 or 3x1\n} NPatchInfo;\n\n// GlyphInfo, font characters glyphs info\ntypedef struct GlyphInfo {\n    int value;              // Character value (Unicode)\n    int offsetX;            // Character offset X when drawing\n    int offsetY;            // Character offset Y when drawing\n    int advanceX;           // Character advance position X\n    Image image;            // Character image data\n} GlyphInfo;\n\n// Font, font texture and GlyphInfo array data\ntypedef struct Font {\n    int baseSize;           // Base size (default chars height)\n    int glyphCount;         // Number of glyph characters\n    int glyphPadding;       // Padding around the glyph characters\n    Texture2D texture;      // Texture atlas containing the glyphs\n    Rectangle *recs;        // Rectangles in texture for the glyphs\n    GlyphInfo *glyphs;      // Glyphs info data\n} Font;\n\n// Camera, defines position/orientation in 3d space\ntypedef struct Camera3D {\n    Vector3 position;       // Camera position\n    Vector3 target;         // Camera target it looks-at\n    Vector3 up;             // Camera up vector (rotation over its axis)\n    float fovy;             // Camera field-of-view apperture in Y (degrees) in perspective, used as near plane width in orthographic\n    int projection;         // Camera projection: CAMERA_PERSPECTIVE or CAMERA_ORTHOGRAPHIC\n} Camera3D;\n\ntypedef Camera3D Camera;    // Camera type fallback, defaults to Camera3D\n\n// Camera2D, defines position/orientation in 2d space\ntypedef struct Camera2D {\n    Vector2 offset;         // Camera offset (displacement from target)\n    Vector2 target;         // Camera target (rotation and zoom origin)\n    float rotation;         // Camera rotation in degrees\n    float zoom;             // Camera zoom (scaling), should be 1.0f by default\n} Camera2D;\n\n// Mesh, vertex data and vao/vbo\ntypedef struct Mesh {\n    int vertexCount;        // Number of vertices stored in arrays\n    int triangleCount;      // Number of triangles stored (indexed or not)\n\n    // Vertex attributes data\n    float *vertices;        // Vertex position (XYZ - 3 components per vertex) (shader-location = 0)\n    float *texcoords;       // Vertex texture coordinates (UV - 2 components per vertex) (shader-location = 1)\n    float *texcoords2;      // Vertex second texture coordinates (useful for lightmaps) (shader-location = 5)\n    float *normals;         // Vertex normals (XYZ - 3 components per vertex) (shader-location = 2)\n    float *tangents;        // Vertex tangents (XYZW - 4 components per vertex) (shader-location = 4)\n    unsigned char *colors;      // Vertex colors (RGBA - 4 components per vertex) (shader-location = 3)\n    unsigned short *indices;    // Vertex indices (in case vertex data comes indexed)\n\n    // Animation vertex data\n    float *animVertices;    // Animated vertex positions (after bones transformations)\n    float *animNormals;     // Animated normals (after bones transformations)\n    unsigned char *boneIds; // Vertex bone ids, max 255 bone ids, up to 4 bones influence by vertex (skinning)\n    float *boneWeights;     // Vertex bone weight, up to 4 bones influence by vertex (skinning)\n\n    // OpenGL identifiers\n    unsigned int vaoId;     // OpenGL Vertex Array Object id\n    unsigned int *vboId;    // OpenGL Vertex Buffer Objects id (default vertex data)\n} Mesh;\n\n// Shader\ntypedef struct Shader {\n    unsigned int id;        // Shader program id\n    int *locs;              // Shader locations array (RL_MAX_SHADER_LOCATIONS)\n} Shader;\n\n// MaterialMap\ntypedef struct MaterialMap {\n    Texture2D texture;      // Material map texture\n    Color color;            // Material map color\n    float value;            // Material map value\n} MaterialMap;\n\n// Material, includes shader and maps\ntypedef struct Material {\n    Shader shader;          // Material shader\n    MaterialMap *maps;      // Material maps array (MAX_MATERIAL_MAPS)\n    float params[4];        // Material generic parameters (if required)\n} Material;\n\n// Transform, vectex transformation data\ntypedef struct Transform {\n    Vector3 translation;    // Translation\n    Quaternion rotation;    // Rotation\n    Vector3 scale;          // Scale\n} Transform;\n\n// Bone, skeletal animation bone\ntypedef struct BoneInfo {\n    char name[32];          // Bone name\n    int parent;             // Bone parent\n} BoneInfo;\n\n// Model, meshes, materials and animation data\ntypedef struct Model {\n    Matrix transform;       // Local transform matrix\n\n    int meshCount;          // Number of meshes\n    int materialCount;      // Number of materials\n    Mesh *meshes;           // Meshes array\n    Material *materials;    // Materials array\n    int *meshMaterial;      // Mesh material number\n\n    // Animation data\n    int boneCount;          // Number of bones\n    BoneInfo *bones;        // Bones information (skeleton)\n    Transform *bindPose;    // Bones base transformation (pose)\n} Model;\n\n// ModelAnimation\ntypedef struct ModelAnimation {\n    int boneCount;          // Number of bones\n    int frameCount;         // Number of animation frames\n    BoneInfo *bones;        // Bones information (skeleton)\n    Transform **framePoses; // Poses array by frame\n} ModelAnimation;\n\n// Ray, ray for raycasting\ntypedef struct Ray {\n    Vector3 position;       // Ray position (origin)\n    Vector3 direction;      // Ray direction\n} Ray;\n\n// RayCollision, ray hit information\ntypedef struct RayCollision {\n    bool hit;               // Did the ray hit something?\n    float distance;         // Distance to nearest hit\n    Vector3 point;          // Point of nearest hit\n    Vector3 normal;         // Surface normal of hit\n} RayCollision;\n\n// BoundingBox\ntypedef struct BoundingBox {\n    Vector3 min;            // Minimum vertex box-corner\n    Vector3 max;            // Maximum vertex box-corner\n} BoundingBox;\n\n// Wave, audio wave data\ntypedef struct Wave {\n    unsigned int frameCount;    // Total number of frames (considering channels)\n    unsigned int sampleRate;    // Frequency (samples per second)\n    unsigned int sampleSize;    // Bit depth (bits per sample): 8, 16, 32 (24 not supported)\n    unsigned int channels;      // Number of channels (1-mono, 2-stereo, ...)\n    void *data;                 // Buffer data pointer\n} Wave;\n\ntypedef struct rAudioBuffer rAudioBuffer;\n\n// AudioStream, custom audio stream\ntypedef struct AudioStream {\n    rAudioBuffer *buffer;       // Pointer to internal data used by the audio system\n\n    unsigned int sampleRate;    // Frequency (samples per second)\n    unsigned int sampleSize;    // Bit depth (bits per sample): 8, 16, 32 (24 not supported)\n    unsigned int channels;      // Number of channels (1-mono, 2-stereo, ...)\n} AudioStream;\n\n// Sound\ntypedef struct Sound {\n    AudioStream stream;         // Audio stream\n    unsigned int frameCount;    // Total number of frames (considering channels)\n} Sound;\n\n// Music, audio stream, anything longer than ~10 seconds should be streamed\ntypedef struct Music {\n    AudioStream stream;         // Audio stream\n    unsigned int frameCount;    // Total number of frames (considering channels)\n    bool looping;               // Music looping enable\n\n    int ctxType;                // Type of music context (audio filetype)\n    void *ctxData;              // Audio context data, depends on type\n} Music;\n\n// VrDeviceInfo, Head-Mounted-Display device parameters\ntypedef struct VrDeviceInfo {\n    int hResolution;                // Horizontal resolution in pixels\n    int vResolution;                // Vertical resolution in pixels\n    float hScreenSize;              // Horizontal size in meters\n    float vScreenSize;              // Vertical size in meters\n    float vScreenCenter;            // Screen center in meters\n    float eyeToScreenDistance;      // Distance between eye and display in meters\n    float lensSeparationDistance;   // Lens separation distance in meters\n    float interpupillaryDistance;   // IPD (distance between pupils) in meters\n    float lensDistortionValues[4];  // Lens distortion constant parameters\n    float chromaAbCorrection[4];    // Chromatic aberration correction parameters\n} VrDeviceInfo;\n\n// VrStereoConfig, VR stereo rendering configuration for simulator\ntypedef struct VrStereoConfig {\n    Matrix projection[2];           // VR projection matrices (per eye)\n    Matrix viewOffset[2];           // VR view offset matrices (per eye)\n    float leftLensCenter[2];        // VR left lens center\n    float rightLensCenter[2];       // VR right lens center\n    float leftScreenCenter[2];      // VR left screen center\n    float rightScreenCenter[2];     // VR right screen center\n    float scale[2];                 // VR distortion scale\n    float scaleIn[2];               // VR distortion scale in\n} VrStereoConfig;\n\n//----------------------------------------------------------------------------------\n// Enumerators Definition\n//----------------------------------------------------------------------------------\n// System/Window config flags\n// NOTE: Every bit registers one state (use it with bit masks)\n// By default all flags are set to 0\ntypedef enum {\n    FLAG_VSYNC_HINT         = 0x00000040,   // Set to try enabling V-Sync on GPU\n    FLAG_FULLSCREEN_MODE    = 0x00000002,   // Set to run program in fullscreen\n    FLAG_WINDOW_RESIZABLE   = 0x00000004,   // Set to allow resizable window\n    FLAG_WINDOW_UNDECORATED = 0x00000008,   // Set to disable window decoration (frame and buttons)\n    FLAG_WINDOW_HIDDEN      = 0x00000080,   // Set to hide window\n    FLAG_WINDOW_MINIMIZED   = 0x00000200,   // Set to minimize window (iconify)\n    FLAG_WINDOW_MAXIMIZED   = 0x00000400,   // Set to maximize window (expanded to monitor)\n    FLAG_WINDOW_UNFOCUSED   = 0x00000800,   // Set to window non focused\n    FLAG_WINDOW_TOPMOST     = 0x00001000,   // Set to window always on top\n    FLAG_WINDOW_ALWAYS_RUN  = 0x00000100,   // Set to allow windows running while minimized\n    FLAG_WINDOW_TRANSPARENT = 0x00000010,   // Set to allow transparent framebuffer\n    FLAG_WINDOW_HIGHDPI     = 0x00002000,   // Set to support HighDPI\n    FLAG_MSAA_4X_HINT       = 0x00000020,   // Set to try enabling MSAA 4X\n    FLAG_INTERLACED_HINT    = 0x00010000    // Set to try enabling interlaced video format (for V3D)\n} ConfigFlags;\n\n// Trace log level\n// NOTE: Organized by priority level\ntypedef enum {\n    LOG_ALL = 0,        // Display all logs\n    LOG_TRACE,          // Trace logging, intended for internal use only\n    LOG_DEBUG,          // Debug logging, used for internal debugging, it should be disabled on release builds\n    LOG_INFO,           // Info logging, used for program execution info\n    LOG_WARNING,        // Warning logging, used on recoverable failures\n    LOG_ERROR,          // Error logging, used on unrecoverable failures\n    LOG_FATAL,          // Fatal logging, used to abort program: exit(EXIT_FAILURE)\n    LOG_NONE            // Disable logging\n} TraceLogLevel;\n\n// Keyboard keys (US keyboard layout)\n// NOTE: Use GetKeyPressed() to allow redefining\n// required keys for alternative layouts\ntypedef enum {\n    KEY_NULL            = 0,        // Key: NULL, used for no key pressed\n    // Alphanumeric keys\n    KEY_APOSTROPHE      = 39,       // Key: '\n    KEY_COMMA           = 44,       // Key: ,\n    KEY_MINUS           = 45,       // Key: -\n    KEY_PERIOD          = 46,       // Key: .\n    KEY_SLASH           = 47,       // Key: /\n    KEY_ZERO            = 48,       // Key: 0\n    KEY_ONE             = 49,       // Key: 1\n    KEY_TWO             = 50,       // Key: 2\n    KEY_THREE           = 51,       // Key: 3\n    KEY_FOUR            = 52,       // Key: 4\n    KEY_FIVE            = 53,       // Key: 5\n    KEY_SIX             = 54,       // Key: 6\n    KEY_SEVEN           = 55,       // Key: 7\n    KEY_EIGHT           = 56,       // Key: 8\n    KEY_NINE            = 57,       // Key: 9\n    KEY_SEMICOLON       = 59,       // Key: ;\n    KEY_EQUAL           = 61,       // Key: =\n    KEY_A               = 65,       // Key: A | a\n    KEY_B               = 66,       // Key: B | b\n    KEY_C               = 67,       // Key: C | c\n    KEY_D               = 68,       // Key: D | d\n    KEY_E               = 69,       // Key: E | e\n    KEY_F               = 70,       // Key: F | f\n    KEY_G               = 71,       // Key: G | g\n    KEY_H               = 72,       // Key: H | h\n    KEY_I               = 73,       // Key: I | i\n    KEY_J               = 74,       // Key: J | j\n    KEY_K               = 75,       // Key: K | k\n    KEY_L               = 76,       // Key: L | l\n    KEY_M               = 77,       // Key: M | m\n    KEY_N               = 78,       // Key: N | n\n    KEY_O               = 79,       // Key: O | o\n    KEY_P               = 80,       // Key: P | p\n    KEY_Q               = 81,       // Key: Q | q\n    KEY_R               = 82,       // Key: R | r\n    KEY_S               = 83,       // Key: S | s\n    KEY_T               = 84,       // Key: T | t\n    KEY_U               = 85,       // Key: U | u\n    KEY_V               = 86,       // Key: V | v\n    KEY_W               = 87,       // Key: W | w\n    KEY_X               = 88,       // Key: X | x\n    KEY_Y               = 89,       // Key: Y | y\n    KEY_Z               = 90,       // Key: Z | z\n    KEY_LEFT_BRACKET    = 91,       // Key: [\n    KEY_BACKSLASH       = 92,       // Key: '\\'\n    KEY_RIGHT_BRACKET   = 93,       // Key: ]\n    KEY_GRAVE           = 96,       // Key: `\n    // Function keys\n    KEY_SPACE           = 32,       // Key: Space\n    KEY_ESCAPE          = 256,      // Key: Esc\n    KEY_ENTER           = 257,      // Key: Enter\n    KEY_TAB             = 258,      // Key: Tab\n    KEY_BACKSPACE       = 259,      // Key: Backspace\n    KEY_INSERT          = 260,      // Key: Ins\n    KEY_DELETE          = 261,      // Key: Del\n    KEY_RIGHT           = 262,      // Key: Cursor right\n    KEY_LEFT            = 263,      // Key: Cursor left\n    KEY_DOWN            = 264,      // Key: Cursor down\n    KEY_UP              = 265,      // Key: Cursor up\n    KEY_PAGE_UP         = 266,      // Key: Page up\n    KEY_PAGE_DOWN       = 267,      // Key: Page down\n    KEY_HOME            = 268,      // Key: Home\n    KEY_END             = 269,      // Key: End\n    KEY_CAPS_LOCK       = 280,      // Key: Caps lock\n    KEY_SCROLL_LOCK     = 281,      // Key: Scroll down\n    KEY_NUM_LOCK        = 282,      // Key: Num lock\n    KEY_PRINT_SCREEN    = 283,      // Key: Print screen\n    KEY_PAUSE           = 284,      // Key: Pause\n    KEY_F1              = 290,      // Key: F1\n    KEY_F2              = 291,      // Key: F2\n    KEY_F3              = 292,      // Key: F3\n    KEY_F4              = 293,      // Key: F4\n    KEY_F5              = 294,      // Key: F5\n    KEY_F6              = 295,      // Key: F6\n    KEY_F7              = 296,      // Key: F7\n    KEY_F8              = 297,      // Key: F8\n    KEY_F9              = 298,      // Key: F9\n    KEY_F10             = 299,      // Key: F10\n    KEY_F11             = 300,      // Key: F11\n    KEY_F12             = 301,      // Key: F12\n    KEY_LEFT_SHIFT      = 340,      // Key: Shift left\n    KEY_LEFT_CONTROL    = 341,      // Key: Control left\n    KEY_LEFT_ALT        = 342,      // Key: Alt left\n    KEY_LEFT_SUPER      = 343,      // Key: Super left\n    KEY_RIGHT_SHIFT     = 344,      // Key: Shift right\n    KEY_RIGHT_CONTROL   = 345,      // Key: Control right\n    KEY_RIGHT_ALT       = 346,      // Key: Alt right\n    KEY_RIGHT_SUPER     = 347,      // Key: Super right\n    KEY_KB_MENU         = 348,      // Key: KB menu\n    // Keypad keys\n    KEY_KP_0            = 320,      // Key: Keypad 0\n    KEY_KP_1            = 321,      // Key: Keypad 1\n    KEY_KP_2            = 322,      // Key: Keypad 2\n    KEY_KP_3            = 323,      // Key: Keypad 3\n    KEY_KP_4            = 324,      // Key: Keypad 4\n    KEY_KP_5            = 325,      // Key: Keypad 5\n    KEY_KP_6            = 326,      // Key: Keypad 6\n    KEY_KP_7            = 327,      // Key: Keypad 7\n    KEY_KP_8            = 328,      // Key: Keypad 8\n    KEY_KP_9            = 329,      // Key: Keypad 9\n    KEY_KP_DECIMAL      = 330,      // Key: Keypad .\n    KEY_KP_DIVIDE       = 331,      // Key: Keypad /\n    KEY_KP_MULTIPLY     = 332,      // Key: Keypad *\n    KEY_KP_SUBTRACT     = 333,      // Key: Keypad -\n    KEY_KP_ADD          = 334,      // Key: Keypad +\n    KEY_KP_ENTER        = 335,      // Key: Keypad Enter\n    KEY_KP_EQUAL        = 336,      // Key: Keypad =\n    // Android key buttons\n    KEY_BACK            = 4,        // Key: Android back button\n    KEY_MENU            = 82,       // Key: Android menu button\n    KEY_VOLUME_UP       = 24,       // Key: Android volume up button\n    KEY_VOLUME_DOWN     = 25        // Key: Android volume down button\n} KeyboardKey;\n\n// Add backwards compatibility support for deprecated names\n#define MOUSE_LEFT_BUTTON   MOUSE_BUTTON_LEFT\n#define MOUSE_RIGHT_BUTTON  MOUSE_BUTTON_RIGHT\n#define MOUSE_MIDDLE_BUTTON MOUSE_BUTTON_MIDDLE\n\n// Mouse buttons\ntypedef enum {\n    MOUSE_BUTTON_LEFT    = 0,       // Mouse button left\n    MOUSE_BUTTON_RIGHT   = 1,       // Mouse button right\n    MOUSE_BUTTON_MIDDLE  = 2,       // Mouse button middle (pressed wheel)\n    MOUSE_BUTTON_SIDE    = 3,       // Mouse button side (advanced mouse device)\n    MOUSE_BUTTON_EXTRA   = 4,       // Mouse button extra (advanced mouse device)\n    MOUSE_BUTTON_FORWARD = 5,       // Mouse button fordward (advanced mouse device)\n    MOUSE_BUTTON_BACK    = 6,       // Mouse button back (advanced mouse device)\n} MouseButton;\n\n// Mouse cursor\ntypedef enum {\n    MOUSE_CURSOR_DEFAULT       = 0,     // Default pointer shape\n    MOUSE_CURSOR_ARROW         = 1,     // Arrow shape\n    MOUSE_CURSOR_IBEAM         = 2,     // Text writing cursor shape\n    MOUSE_CURSOR_CROSSHAIR     = 3,     // Cross shape\n    MOUSE_CURSOR_POINTING_HAND = 4,     // Pointing hand cursor\n    MOUSE_CURSOR_RESIZE_EW     = 5,     // Horizontal resize/move arrow shape\n    MOUSE_CURSOR_RESIZE_NS     = 6,     // Vertical resize/move arrow shape\n    MOUSE_CURSOR_RESIZE_NWSE   = 7,     // Top-left to bottom-right diagonal resize/move arrow shape\n    MOUSE_CURSOR_RESIZE_NESW   = 8,     // The top-right to bottom-left diagonal resize/move arrow shape\n    MOUSE_CURSOR_RESIZE_ALL    = 9,     // The omni-directional resize/move cursor shape\n    MOUSE_CURSOR_NOT_ALLOWED   = 10     // The operation-not-allowed shape\n} MouseCursor;\n\n// Gamepad buttons\ntypedef enum {\n    GAMEPAD_BUTTON_UNKNOWN = 0,         // Unknown button, just for error checking\n    GAMEPAD_BUTTON_LEFT_FACE_UP,        // Gamepad left DPAD up button\n    GAMEPAD_BUTTON_LEFT_FACE_RIGHT,     // Gamepad left DPAD right button\n    GAMEPAD_BUTTON_LEFT_FACE_DOWN,      // Gamepad left DPAD down button\n    GAMEPAD_BUTTON_LEFT_FACE_LEFT,      // Gamepad left DPAD left button\n    GAMEPAD_BUTTON_RIGHT_FACE_UP,       // Gamepad right button up (i.e. PS3: Triangle, Xbox: Y)\n    GAMEPAD_BUTTON_RIGHT_FACE_RIGHT,    // Gamepad right button right (i.e. PS3: Square, Xbox: X)\n    GAMEPAD_BUTTON_RIGHT_FACE_DOWN,     // Gamepad right button down (i.e. PS3: Cross, Xbox: A)\n    GAMEPAD_BUTTON_RIGHT_FACE_LEFT,     // Gamepad right button left (i.e. PS3: Circle, Xbox: B)\n    GAMEPAD_BUTTON_LEFT_TRIGGER_1,      // Gamepad top/back trigger left (first), it could be a trailing button\n    GAMEPAD_BUTTON_LEFT_TRIGGER_2,      // Gamepad top/back trigger left (second), it could be a trailing button\n    GAMEPAD_BUTTON_RIGHT_TRIGGER_1,     // Gamepad top/back trigger right (one), it could be a trailing button\n    GAMEPAD_BUTTON_RIGHT_TRIGGER_2,     // Gamepad top/back trigger right (second), it could be a trailing button\n    GAMEPAD_BUTTON_MIDDLE_LEFT,         // Gamepad center buttons, left one (i.e. PS3: Select)\n    GAMEPAD_BUTTON_MIDDLE,              // Gamepad center buttons, middle one (i.e. PS3: PS, Xbox: XBOX)\n    GAMEPAD_BUTTON_MIDDLE_RIGHT,        // Gamepad center buttons, right one (i.e. PS3: Start)\n    GAMEPAD_BUTTON_LEFT_THUMB,          // Gamepad joystick pressed button left\n    GAMEPAD_BUTTON_RIGHT_THUMB          // Gamepad joystick pressed button right\n} GamepadButton;\n\n// Gamepad axis\ntypedef enum {\n    GAMEPAD_AXIS_LEFT_X        = 0,     // Gamepad left stick X axis\n    GAMEPAD_AXIS_LEFT_Y        = 1,     // Gamepad left stick Y axis\n    GAMEPAD_AXIS_RIGHT_X       = 2,     // Gamepad right stick X axis\n    GAMEPAD_AXIS_RIGHT_Y       = 3,     // Gamepad right stick Y axis\n    GAMEPAD_AXIS_LEFT_TRIGGER  = 4,     // Gamepad back trigger left, pressure level: [1..-1]\n    GAMEPAD_AXIS_RIGHT_TRIGGER = 5      // Gamepad back trigger right, pressure level: [1..-1]\n} GamepadAxis;\n\n// Material map index\ntypedef enum {\n    MATERIAL_MAP_ALBEDO    = 0,     // Albedo material (same as: MATERIAL_MAP_DIFFUSE)\n    MATERIAL_MAP_METALNESS,         // Metalness material (same as: MATERIAL_MAP_SPECULAR)\n    MATERIAL_MAP_NORMAL,            // Normal material\n    MATERIAL_MAP_ROUGHNESS,         // Roughness material\n    MATERIAL_MAP_OCCLUSION,         // Ambient occlusion material\n    MATERIAL_MAP_EMISSION,          // Emission material\n    MATERIAL_MAP_HEIGHT,            // Heightmap material\n    MATERIAL_MAP_CUBEMAP,           // Cubemap material (NOTE: Uses GL_TEXTURE_CUBE_MAP)\n    MATERIAL_MAP_IRRADIANCE,        // Irradiance material (NOTE: Uses GL_TEXTURE_CUBE_MAP)\n    MATERIAL_MAP_PREFILTER,         // Prefilter material (NOTE: Uses GL_TEXTURE_CUBE_MAP)\n    MATERIAL_MAP_BRDF               // Brdf material\n} MaterialMapIndex;\n\n#define MATERIAL_MAP_DIFFUSE      MATERIAL_MAP_ALBEDO\n#define MATERIAL_MAP_SPECULAR     MATERIAL_MAP_METALNESS\n\n// Shader location index\ntypedef enum {\n    SHADER_LOC_VERTEX_POSITION = 0, // Shader location: vertex attribute: position\n    SHADER_LOC_VERTEX_TEXCOORD01,   // Shader location: vertex attribute: texcoord01\n    SHADER_LOC_VERTEX_TEXCOORD02,   // Shader location: vertex attribute: texcoord02\n    SHADER_LOC_VERTEX_NORMAL,       // Shader location: vertex attribute: normal\n    SHADER_LOC_VERTEX_TANGENT,      // Shader location: vertex attribute: tangent\n    SHADER_LOC_VERTEX_COLOR,        // Shader location: vertex attribute: color\n    SHADER_LOC_MATRIX_MVP,          // Shader location: matrix uniform: model-view-projection\n    SHADER_LOC_MATRIX_VIEW,         // Shader location: matrix uniform: view (camera transform)\n    SHADER_LOC_MATRIX_PROJECTION,   // Shader location: matrix uniform: projection\n    SHADER_LOC_MATRIX_MODEL,        // Shader location: matrix uniform: model (transform)\n    SHADER_LOC_MATRIX_NORMAL,       // Shader location: matrix uniform: normal\n    SHADER_LOC_VECTOR_VIEW,         // Shader location: vector uniform: view\n    SHADER_LOC_COLOR_DIFFUSE,       // Shader location: vector uniform: diffuse color\n    SHADER_LOC_COLOR_SPECULAR,      // Shader location: vector uniform: specular color\n    SHADER_LOC_COLOR_AMBIENT,       // Shader location: vector uniform: ambient color\n    SHADER_LOC_MAP_ALBEDO,          // Shader location: sampler2d texture: albedo (same as: SHADER_LOC_MAP_DIFFUSE)\n    SHADER_LOC_MAP_METALNESS,       // Shader location: sampler2d texture: metalness (same as: SHADER_LOC_MAP_SPECULAR)\n    SHADER_LOC_MAP_NORMAL,          // Shader location: sampler2d texture: normal\n    SHADER_LOC_MAP_ROUGHNESS,       // Shader location: sampler2d texture: roughness\n    SHADER_LOC_MAP_OCCLUSION,       // Shader location: sampler2d texture: occlusion\n    SHADER_LOC_MAP_EMISSION,        // Shader location: sampler2d texture: emission\n    SHADER_LOC_MAP_HEIGHT,          // Shader location: sampler2d texture: height\n    SHADER_LOC_MAP_CUBEMAP,         // Shader location: samplerCube texture: cubemap\n    SHADER_LOC_MAP_IRRADIANCE,      // Shader location: samplerCube texture: irradiance\n    SHADER_LOC_MAP_PREFILTER,       // Shader location: samplerCube texture: prefilter\n    SHADER_LOC_MAP_BRDF             // Shader location: sampler2d texture: brdf\n} ShaderLocationIndex;\n\n#define SHADER_LOC_MAP_DIFFUSE      SHADER_LOC_MAP_ALBEDO\n#define SHADER_LOC_MAP_SPECULAR     SHADER_LOC_MAP_METALNESS\n\n// Shader uniform data type\ntypedef enum {\n    SHADER_UNIFORM_FLOAT = 0,       // Shader uniform type: float\n    SHADER_UNIFORM_VEC2,            // Shader uniform type: vec2 (2 float)\n    SHADER_UNIFORM_VEC3,            // Shader uniform type: vec3 (3 float)\n    SHADER_UNIFORM_VEC4,            // Shader uniform type: vec4 (4 float)\n    SHADER_UNIFORM_INT,             // Shader uniform type: int\n    SHADER_UNIFORM_IVEC2,           // Shader uniform type: ivec2 (2 int)\n    SHADER_UNIFORM_IVEC3,           // Shader uniform type: ivec3 (3 int)\n    SHADER_UNIFORM_IVEC4,           // Shader uniform type: ivec4 (4 int)\n    SHADER_UNIFORM_SAMPLER2D        // Shader uniform type: sampler2d\n} ShaderUniformDataType;\n\n// Shader attribute data types\ntypedef enum {\n    SHADER_ATTRIB_FLOAT = 0,        // Shader attribute type: float\n    SHADER_ATTRIB_VEC2,             // Shader attribute type: vec2 (2 float)\n    SHADER_ATTRIB_VEC3,             // Shader attribute type: vec3 (3 float)\n    SHADER_ATTRIB_VEC4              // Shader attribute type: vec4 (4 float)\n} ShaderAttributeDataType;\n\n// Pixel formats\n// NOTE: Support depends on OpenGL version and platform\ntypedef enum {\n    PIXELFORMAT_UNCOMPRESSED_GRAYSCALE = 1, // 8 bit per pixel (no alpha)\n    PIXELFORMAT_UNCOMPRESSED_GRAY_ALPHA,    // 8*2 bpp (2 channels)\n    PIXELFORMAT_UNCOMPRESSED_R5G6B5,        // 16 bpp\n    PIXELFORMAT_UNCOMPRESSED_R8G8B8,        // 24 bpp\n    PIXELFORMAT_UNCOMPRESSED_R5G5B5A1,      // 16 bpp (1 bit alpha)\n    PIXELFORMAT_UNCOMPRESSED_R4G4B4A4,      // 16 bpp (4 bit alpha)\n    PIXELFORMAT_UNCOMPRESSED_R8G8B8A8,      // 32 bpp\n    PIXELFORMAT_UNCOMPRESSED_R32,           // 32 bpp (1 channel - float)\n    PIXELFORMAT_UNCOMPRESSED_R32G32B32,     // 32*3 bpp (3 channels - float)\n    PIXELFORMAT_UNCOMPRESSED_R32G32B32A32,  // 32*4 bpp (4 channels - float)\n    PIXELFORMAT_COMPRESSED_DXT1_RGB,        // 4 bpp (no alpha)\n    PIXELFORMAT_COMPRESSED_DXT1_RGBA,       // 4 bpp (1 bit alpha)\n    PIXELFORMAT_COMPRESSED_DXT3_RGBA,       // 8 bpp\n    PIXELFORMAT_COMPRESSED_DXT5_RGBA,       // 8 bpp\n    PIXELFORMAT_COMPRESSED_ETC1_RGB,        // 4 bpp\n    PIXELFORMAT_COMPRESSED_ETC2_RGB,        // 4 bpp\n    PIXELFORMAT_COMPRESSED_ETC2_EAC_RGBA,   // 8 bpp\n    PIXELFORMAT_COMPRESSED_PVRT_RGB,        // 4 bpp\n    PIXELFORMAT_COMPRESSED_PVRT_RGBA,       // 4 bpp\n    PIXELFORMAT_COMPRESSED_ASTC_4x4_RGBA,   // 8 bpp\n    PIXELFORMAT_COMPRESSED_ASTC_8x8_RGBA    // 2 bpp\n} PixelFormat;\n\n// Texture parameters: filter mode\n// NOTE 1: Filtering considers mipmaps if available in the texture\n// NOTE 2: Filter is accordingly set for minification and magnification\ntypedef enum {\n    TEXTURE_FILTER_POINT = 0,               // No filter, just pixel aproximation\n    TEXTURE_FILTER_BILINEAR,                // Linear filtering\n    TEXTURE_FILTER_TRILINEAR,               // Trilinear filtering (linear with mipmaps)\n    TEXTURE_FILTER_ANISOTROPIC_4X,          // Anisotropic filtering 4x\n    TEXTURE_FILTER_ANISOTROPIC_8X,          // Anisotropic filtering 8x\n    TEXTURE_FILTER_ANISOTROPIC_16X,         // Anisotropic filtering 16x\n} TextureFilter;\n\n// Texture parameters: wrap mode\ntypedef enum {\n    TEXTURE_WRAP_REPEAT = 0,                // Repeats texture in tiled mode\n    TEXTURE_WRAP_CLAMP,                     // Clamps texture to edge pixel in tiled mode\n    TEXTURE_WRAP_MIRROR_REPEAT,             // Mirrors and repeats the texture in tiled mode\n    TEXTURE_WRAP_MIRROR_CLAMP               // Mirrors and clamps to border the texture in tiled mode\n} TextureWrap;\n\n// Cubemap layouts\ntypedef enum {\n    CUBEMAP_LAYOUT_AUTO_DETECT = 0,         // Automatically detect layout type\n    CUBEMAP_LAYOUT_LINE_VERTICAL,           // Layout is defined by a vertical line with faces\n    CUBEMAP_LAYOUT_LINE_HORIZONTAL,         // Layout is defined by an horizontal line with faces\n    CUBEMAP_LAYOUT_CROSS_THREE_BY_FOUR,     // Layout is defined by a 3x4 cross with cubemap faces\n    CUBEMAP_LAYOUT_CROSS_FOUR_BY_THREE,     // Layout is defined by a 4x3 cross with cubemap faces\n    CUBEMAP_LAYOUT_PANORAMA                 // Layout is defined by a panorama image (equirectangular map)\n} CubemapLayout;\n\n// Font type, defines generation method\ntypedef enum {\n    FONT_DEFAULT = 0,               // Default font generation, anti-aliased\n    FONT_BITMAP,                    // Bitmap font generation, no anti-aliasing\n    FONT_SDF                        // SDF font generation, requires external shader\n} FontType;\n\n// Color blending modes (pre-defined)\ntypedef enum {\n    BLEND_ALPHA = 0,                // Blend textures considering alpha (default)\n    BLEND_ADDITIVE,                 // Blend textures adding colors\n    BLEND_MULTIPLIED,               // Blend textures multiplying colors\n    BLEND_ADD_COLORS,               // Blend textures adding colors (alternative)\n    BLEND_SUBTRACT_COLORS,          // Blend textures subtracting colors (alternative)\n    BLEND_CUSTOM                    // Belnd textures using custom src/dst factors (use rlSetBlendMode())\n} BlendMode;\n\n// Gesture\n// NOTE: It could be used as flags to enable only some gestures\ntypedef enum {\n    GESTURE_NONE        = 0,        // No gesture\n    GESTURE_TAP         = 1,        // Tap gesture\n    GESTURE_DOUBLETAP   = 2,        // Double tap gesture\n    GESTURE_HOLD        = 4,        // Hold gesture\n    GESTURE_DRAG        = 8,        // Drag gesture\n    GESTURE_SWIPE_RIGHT = 16,       // Swipe right gesture\n    GESTURE_SWIPE_LEFT  = 32,       // Swipe left gesture\n    GESTURE_SWIPE_UP    = 64,       // Swipe up gesture\n    GESTURE_SWIPE_DOWN  = 128,      // Swipe down gesture\n    GESTURE_PINCH_IN    = 256,      // Pinch in gesture\n    GESTURE_PINCH_OUT   = 512       // Pinch out gesture\n} Gesture;\n\n// Camera system modes\ntypedef enum {\n    CAMERA_CUSTOM = 0,              // Custom camera\n    CAMERA_FREE,                    // Free camera\n    CAMERA_ORBITAL,                 // Orbital camera\n    CAMERA_FIRST_PERSON,            // First person camera\n    CAMERA_THIRD_PERSON             // Third person camera\n} CameraMode;\n\n// Camera projection\ntypedef enum {\n    CAMERA_PERSPECTIVE = 0,         // Perspective projection\n    CAMERA_ORTHOGRAPHIC             // Orthographic projection\n} CameraProjection;\n\n// N-patch layout\ntypedef enum {\n    NPATCH_NINE_PATCH = 0,          // Npatch layout: 3x3 tiles\n    NPATCH_THREE_PATCH_VERTICAL,    // Npatch layout: 1x3 tiles\n    NPATCH_THREE_PATCH_HORIZONTAL   // Npatch layout: 3x1 tiles\n} NPatchLayout;\n\n// Callbacks to hook some internal functions\n// WARNING: This callbacks are intended for advance users\ntypedef void (*TraceLogCallback)(int logLevel, const char *text, va_list args);  // Logging: Redirect trace log messages\ntypedef unsigned char *(*LoadFileDataCallback)(const char *fileName, unsigned int *bytesRead);      // FileIO: Load binary data\ntypedef bool (*SaveFileDataCallback)(const char *fileName, void *data, unsigned int bytesToWrite);  // FileIO: Save binary data\ntypedef char *(*LoadFileTextCallback)(const char *fileName);       // FileIO: Load text data\ntypedef bool (*SaveFileTextCallback)(const char *fileName, char *text);     // FileIO: Save text data\n\n//------------------------------------------------------------------------------------\n// Global Variables Definition\n//------------------------------------------------------------------------------------\n// It's lonely here...\n\n//------------------------------------------------------------------------------------\n// Window and Graphics Device Functions (Module: core)\n//------------------------------------------------------------------------------------\n\n#if defined(__cplusplus)\nextern \"C\" {            // Prevents name mangling of functions\n#endif\n\n// Window-related functions\nRLAPI void InitWindow(int width, int height, const char *title);  // Initialize window and OpenGL context\nRLAPI bool WindowShouldClose(void);                               // Check if KEY_ESCAPE pressed or Close icon pressed\nRLAPI void CloseRaylib(void);                                     // Close window and unload OpenGL context\nRLAPI bool IsWindowReady(void);                                   // Check if window has been initialized successfully\nRLAPI bool IsWindowFullscreen(void);                              // Check if window is currently fullscreen\nRLAPI bool IsWindowHidden(void);                                  // Check if window is currently hidden (only PLATFORM_DESKTOP)\nRLAPI bool IsWindowMinimized(void);                               // Check if window is currently minimized (only PLATFORM_DESKTOP)\nRLAPI bool IsWindowMaximized(void);                               // Check if window is currently maximized (only PLATFORM_DESKTOP)\nRLAPI bool IsWindowFocused(void);                                 // Check if window is currently focused (only PLATFORM_DESKTOP)\nRLAPI bool IsWindowResized(void);                                 // Check if window has been resized last frame\nRLAPI bool IsWindowState(unsigned int flag);                      // Check if one specific window flag is enabled\nRLAPI void SetWindowState(unsigned int flags);                    // Set window configuration state using flags\nRLAPI void ClearWindowState(unsigned int flags);                  // Clear window configuration state flags\nRLAPI void ToggleFullscreen(void);                                // Toggle window state: fullscreen/windowed (only PLATFORM_DESKTOP)\nRLAPI void MaximizeWindow(void);                                  // Set window state: maximized, if resizable (only PLATFORM_DESKTOP)\nRLAPI void MinimizeWindow(void);                                  // Set window state: minimized, if resizable (only PLATFORM_DESKTOP)\nRLAPI void RestoreWindow(void);                                   // Set window state: not minimized/maximized (only PLATFORM_DESKTOP)\nRLAPI void SetWindowIcon(Image image);                            // Set icon for window (only PLATFORM_DESKTOP)\nRLAPI void SetWindowTitle(const char *title);                     // Set title for window (only PLATFORM_DESKTOP)\nRLAPI void SetWindowPosition(int x, int y);                       // Set window position on screen (only PLATFORM_DESKTOP)\nRLAPI void SetWindowMonitor(int monitor);                         // Set monitor for the current window (fullscreen mode)\nRLAPI void SetWindowMinSize(int width, int height);               // Set window minimum dimensions (for FLAG_WINDOW_RESIZABLE)\nRLAPI void SetWindowSize(int width, int height);                  // Set window dimensions\nRLAPI void *GetWindowHandle(void);                                // Get native window handle\nRLAPI int GetScreenWidth(void);                                   // Get current screen width\nRLAPI int GetScreenHeight(void);                                  // Get current screen height\nRLAPI int GetMonitorCount(void);                                  // Get number of connected monitors\nRLAPI int GetCurrentMonitor(void);                                // Get current connected monitor\nRLAPI Vector2 GetMonitorPosition(int monitor);                    // Get specified monitor position\nRLAPI int GetMonitorWidth(int monitor);                           // Get specified monitor width (max available by monitor)\nRLAPI int GetMonitorHeight(int monitor);                          // Get specified monitor height (max available by monitor)\nRLAPI int GetMonitorPhysicalWidth(int monitor);                   // Get specified monitor physical width in millimetres\nRLAPI int GetMonitorPhysicalHeight(int monitor);                  // Get specified monitor physical height in millimetres\nRLAPI int GetMonitorRefreshRate(int monitor);                     // Get specified monitor refresh rate\nRLAPI Vector2 GetWindowPosition(void);                            // Get window position XY on monitor\nRLAPI Vector2 GetWindowScaleDPI(void);                            // Get window scale DPI factor\nRLAPI const char *GetMonitorName(int monitor);                    // Get the human-readable, UTF-8 encoded name of the primary monitor\nRLAPI void SetClipboardText(const char *text);                    // Set clipboard text content\nRLAPI const char *GetClipboardText(void);                         // Get clipboard text content\n\n// Custom frame control functions\n// NOTE: Those functions are intended for advance users that want full control over the frame processing\n// By default EndDrawing() does this job: draws everything + SwapScreenBuffer() + manage frame timming + PollInputEvents()\n// To avoid that behaviour and control frame processes manually, enable in config.h: SUPPORT_CUSTOM_FRAME_CONTROL\nRLAPI void SwapScreenBuffer(void);                                // Swap back buffer with front buffer (screen drawing)\nRLAPI void PollInputEvents(void);                                 // Register all input events\nRLAPI void WaitTime(float ms);                                    // Wait for some milliseconds (halt program execution)\n\n// Cursor-related functions\nRLAPI void ShowCursor(void);                                      // Shows cursor\nRLAPI void HideCursor(void);                                      // Hides cursor\nRLAPI bool IsCursorHidden(void);                                  // Check if cursor is not visible\nRLAPI void EnableCursor(void);                                    // Enables cursor (unlock cursor)\nRLAPI void DisableCursor(void);                                   // Disables cursor (lock cursor)\nRLAPI bool IsCursorOnScreen(void);                                // Check if cursor is on the screen\n\n// Drawing-related functions\nRLAPI void ClearBackground(Color color);                          // Set background color (framebuffer clear color)\nRLAPI void BeginDrawing(void);                                    // Setup canvas (framebuffer) to start drawing\nRLAPI void EndDrawing(void);                                      // End canvas drawing and swap buffers (double buffering)\nRLAPI void BeginMode2D(Camera2D camera);                          // Begin 2D mode with custom camera (2D)\nRLAPI void EndMode2D(void);                                       // Ends 2D mode with custom camera\nRLAPI void BeginMode3D(Camera3D camera);                          // Begin 3D mode with custom camera (3D)\nRLAPI void EndMode3D(void);                                       // Ends 3D mode and returns to default 2D orthographic mode\nRLAPI void BeginTextureMode(RenderTexture2D target);              // Begin drawing to render texture\nRLAPI void EndTextureMode(void);                                  // Ends drawing to render texture\nRLAPI void BeginShaderMode(Shader shader);                        // Begin custom shader drawing\nRLAPI void EndShaderMode(void);                                   // End custom shader drawing (use default shader)\nRLAPI void BeginBlendMode(int mode);                              // Begin blending mode (alpha, additive, multiplied, subtract, custom)\nRLAPI void EndBlendMode(void);                                    // End blending mode (reset to default: alpha blending)\nRLAPI void BeginScissorMode(int x, int y, int width, int height); // Begin scissor mode (define screen area for following drawing)\nRLAPI void EndScissorMode(void);                                  // End scissor mode\nRLAPI void BeginVrStereoMode(VrStereoConfig config);              // Begin stereo rendering (requires VR simulator)\nRLAPI void EndVrStereoMode(void);                                 // End stereo rendering (requires VR simulator)\n\n// VR stereo config functions for VR simulator\nRLAPI VrStereoConfig LoadVrStereoConfig(VrDeviceInfo device);     // Load VR stereo config for VR simulator device parameters\nRLAPI void UnloadVrStereoConfig(VrStereoConfig config);           // Unload VR stereo config\n\n// Shader management functions\n// NOTE: Shader functionality is not available on OpenGL 1.1\nRLAPI Shader LoadShader(const char *vsFileName, const char *fsFileName);   // Load shader from files and bind default locations\nRLAPI Shader LoadShaderFromMemory(const char *vsCode, const char *fsCode); // Load shader from code strings and bind default locations\nRLAPI int GetShaderLocation(Shader shader, const char *uniformName);       // Get shader uniform location\nRLAPI int GetShaderLocationAttrib(Shader shader, const char *attribName);  // Get shader attribute location\nRLAPI void SetShaderValue(Shader shader, int locIndex, const void *value, int uniformType);               // Set shader uniform value\nRLAPI void SetShaderValueV(Shader shader, int locIndex, const void *value, int uniformType, int count);   // Set shader uniform value vector\nRLAPI void SetShaderValueMatrix(Shader shader, int locIndex, Matrix mat);         // Set shader uniform value (matrix 4x4)\nRLAPI void SetShaderValueTexture(Shader shader, int locIndex, Texture2D texture); // Set shader uniform value for texture (sampler2d)\nRLAPI void UnloadShader(Shader shader);                                    // Unload shader from GPU memory (VRAM)\n\n// Screen-space-related functions\nRLAPI Ray GetMouseRay(Vector2 mousePosition, Camera camera);      // Get a ray trace from mouse position\nRLAPI Matrix GetCameraMatrix(Camera camera);                      // Get camera transform matrix (view matrix)\nRLAPI Matrix GetCameraMatrix2D(Camera2D camera);                  // Get camera 2d transform matrix\nRLAPI Vector2 GetWorldToScreen(Vector3 position, Camera camera);  // Get the screen space position for a 3d world space position\nRLAPI Vector2 GetWorldToScreenEx(Vector3 position, Camera camera, int width, int height); // Get size position for a 3d world space position\nRLAPI Vector2 GetWorldToScreen2D(Vector2 position, Camera2D camera); // Get the screen space position for a 2d camera world space position\nRLAPI Vector2 GetScreenToWorld2D(Vector2 position, Camera2D camera); // Get the world space position for a 2d camera screen space position\n\n// Timing-related functions\nRLAPI void SetTargetFPS(int fps);                                 // Set target FPS (maximum)\nRLAPI int GetFPS(void);                                           // Get current FPS\nRLAPI float GetFrameTime(void);                                   // Get time in seconds for last frame drawn (delta time)\nRLAPI double GetTime(void);                                       // Get elapsed time in seconds since InitWindow()\n\n// Misc. functions\nRLAPI int GetRandomValue(int min, int max);                       // Get a random value between min and max (both included)\nRLAPI void SetRandomSeed(unsigned int seed);                      // Set the seed for the random number generator\nRLAPI void TakeScreenshot(const char *fileName);                  // Takes a screenshot of current screen (filename extension defines format)\nRLAPI void SetConfigFlags(unsigned int flags);                    // Setup init configuration flags (view FLAGS)\n\nRLAPI void TraceLog(int logLevel, const char *text, ...);         // Show trace log messages (LOG_DEBUG, LOG_INFO, LOG_WARNING, LOG_ERROR...)\nRLAPI void SetTraceLogLevel(int logLevel);                        // Set the current threshold (minimum) log level\nRLAPI void *MemAlloc(int size);                                   // Internal memory allocator\nRLAPI void *MemRealloc(void *ptr, int size);                      // Internal memory reallocator\nRLAPI void MemFree(void *ptr);                                    // Internal memory free\n\n// Set custom callbacks\n// WARNING: Callbacks setup is intended for advance users\nRLAPI void SetTraceLogCallback(TraceLogCallback callback);         // Set custom trace log\nRLAPI void SetLoadFileDataCallback(LoadFileDataCallback callback); // Set custom file binary data loader\nRLAPI void SetSaveFileDataCallback(SaveFileDataCallback callback); // Set custom file binary data saver\nRLAPI void SetLoadFileTextCallback(LoadFileTextCallback callback); // Set custom file text data loader\nRLAPI void SetSaveFileTextCallback(SaveFileTextCallback callback); // Set custom file text data saver\n\n// Files management functions\nRLAPI unsigned char *LoadFileData(const char *fileName, unsigned int *bytesRead);     // Load file data as byte array (read)\nRLAPI void UnloadFileData(unsigned char *data);                   // Unload file data allocated by LoadFileData()\nRLAPI bool SaveFileData(const char *fileName, void *data, unsigned int bytesToWrite); // Save data to file from byte array (write), returns true on success\nRLAPI char *LoadFileText(const char *fileName);                   // Load text data from file (read), returns a '\\0' terminated string\nRLAPI void UnloadFileText(char *text);                            // Unload file text data allocated by LoadFileText()\nRLAPI bool SaveFileText(const char *fileName, char *text);        // Save text data to file (write), string must be '\\0' terminated, returns true on success\nRLAPI bool FileExists(const char *fileName);                      // Check if file exists\nRLAPI bool DirectoryExists(const char *dirPath);                  // Check if a directory path exists\nRLAPI bool IsFileExtension(const char *fileName, const char *ext);// Check file extension (including point: .png, .wav)\nRLAPI const char *GetFileExtension(const char *fileName);         // Get pointer to extension for a filename string (includes dot: '.png')\nRLAPI const char *GetFileName(const char *filePath);              // Get pointer to filename for a path string\nRLAPI const char *GetFileNameWithoutExt(const char *filePath);    // Get filename string without extension (uses static string)\nRLAPI const char *GetDirectoryPath(const char *filePath);         // Get full path for a given fileName with path (uses static string)\nRLAPI const char *GetPrevDirectoryPath(const char *dirPath);      // Get previous directory path for a given path (uses static string)\nRLAPI const char *GetWorkingDirectory(void);                      // Get current working directory (uses static string)\nRLAPI char **GetDirectoryFiles(const char *dirPath, int *count);  // Get filenames in a directory path (memory should be freed)\nRLAPI void ClearDirectoryFiles(void);                             // Clear directory files paths buffers (free memory)\nRLAPI bool ChangeDirectory(const char *dir);                      // Change working directory, return true on success\nRLAPI bool IsFileDropped(void);                                   // Check if a file has been dropped into window\nRLAPI char **GetDroppedFiles(int *count);                         // Get dropped files names (memory should be freed)\nRLAPI void ClearDroppedFiles(void);                               // Clear dropped files paths buffer (free memory)\nRLAPI long GetFileModTime(const char *fileName);                  // Get file modification time (last write time)\n\n// Compression/Encoding functionality\nRLAPI unsigned char *CompressData(unsigned char *data, int dataLength, int *compDataLength);        // Compress data (DEFLATE algorithm)\nRLAPI unsigned char *DecompressData(unsigned char *compData, int compDataLength, int *dataLength);  // Decompress data (DEFLATE algorithm)\nRLAPI char *EncodeDataBase64(const unsigned char *data, int dataLength, int *outputLength);         // Encode data to Base64 string\nRLAPI unsigned char *DecodeDataBase64(unsigned char *data, int *outputLength);                      // Decode Base64 string data\n\n// Persistent storage management\nRLAPI bool SaveStorageValue(unsigned int position, int value);    // Save integer value to storage file (to defined position), returns true on success\nRLAPI int LoadStorageValue(unsigned int position);                // Load integer value from storage file (from defined position)\n\nRLAPI void OpenURL(const char *url);                              // Open URL with default system browser (if available)\n\n//------------------------------------------------------------------------------------\n// Input Handling Functions (Module: core)\n//------------------------------------------------------------------------------------\n\n// Input-related functions: keyboard\nRLAPI bool IsKeyPressed(int key);                             // Check if a key has been pressed once\nRLAPI bool IsKeyDown(int key);                                // Check if a key is being pressed\nRLAPI bool IsKeyReleased(int key);                            // Check if a key has been released once\nRLAPI bool IsKeyUp(int key);                                  // Check if a key is NOT being pressed\nRLAPI void SetExitKey(int key);                               // Set a custom key to exit program (default is ESC)\nRLAPI int GetKeyPressed(void);                                // Get key pressed (keycode), call it multiple times for keys queued, returns 0 when the queue is empty\nRLAPI int GetCharPressed(void);                               // Get char pressed (unicode), call it multiple times for chars queued, returns 0 when the queue is empty\n\n// Input-related functions: gamepads\nRLAPI bool IsGamepadAvailable(int gamepad);                   // Check if a gamepad is available\nRLAPI const char *GetGamepadName(int gamepad);                // Get gamepad internal name id\nRLAPI bool IsGamepadButtonPressed(int gamepad, int button);   // Check if a gamepad button has been pressed once\nRLAPI bool IsGamepadButtonDown(int gamepad, int button);      // Check if a gamepad button is being pressed\nRLAPI bool IsGamepadButtonReleased(int gamepad, int button);  // Check if a gamepad button has been released once\nRLAPI bool IsGamepadButtonUp(int gamepad, int button);        // Check if a gamepad button is NOT being pressed\nRLAPI int GetGamepadButtonPressed(void);                      // Get the last gamepad button pressed\nRLAPI int GetGamepadAxisCount(int gamepad);                   // Get gamepad axis count for a gamepad\nRLAPI float GetGamepadAxisMovement(int gamepad, int axis);    // Get axis movement value for a gamepad axis\nRLAPI int SetGamepadMappings(const char *mappings);           // Set internal gamepad mappings (SDL_GameControllerDB)\n\n// Input-related functions: mouse\nRLAPI bool IsMouseButtonPressed(int button);                  // Check if a mouse button has been pressed once\nRLAPI bool IsMouseButtonDown(int button);                     // Check if a mouse button is being pressed\nRLAPI bool IsMouseButtonReleased(int button);                 // Check if a mouse button has been released once\nRLAPI bool IsMouseButtonUp(int button);                       // Check if a mouse button is NOT being pressed\nRLAPI int GetMouseX(void);                                    // Get mouse position X\nRLAPI int GetMouseY(void);                                    // Get mouse position Y\nRLAPI Vector2 GetMousePosition(void);                         // Get mouse position XY\nRLAPI Vector2 GetMouseDelta(void);                            // Get mouse delta between frames\nRLAPI void SetMousePosition(int x, int y);                    // Set mouse position XY\nRLAPI void SetMouseOffset(int offsetX, int offsetY);          // Set mouse offset\nRLAPI void SetMouseScale(float scaleX, float scaleY);         // Set mouse scaling\nRLAPI float GetMouseWheelMove(void);                          // Get mouse wheel movement Y\nRLAPI void SetMouseCursor(int cursor);                        // Set mouse cursor\n\n// Input-related functions: touch\nRLAPI int GetTouchX(void);                                    // Get touch position X for touch point 0 (relative to screen size)\nRLAPI int GetTouchY(void);                                    // Get touch position Y for touch point 0 (relative to screen size)\nRLAPI Vector2 GetTouchPosition(int index);                    // Get touch position XY for a touch point index (relative to screen size)\nRLAPI int GetTouchPointId(int index);                         // Get touch point identifier for given index\nRLAPI int GetTouchPointCount(void);                           // Get number of touch points\n\n//------------------------------------------------------------------------------------\n// Gestures and Touch Handling Functions (Module: rgestures)\n//------------------------------------------------------------------------------------\nRLAPI void SetGesturesEnabled(unsigned int flags);      // Enable a set of gestures using flags\nRLAPI bool IsGestureDetected(int gesture);              // Check if a gesture have been detected\nRLAPI int GetGestureDetected(void);                     // Get latest detected gesture\nRLAPI float GetGestureHoldDuration(void);               // Get gesture hold time in milliseconds\nRLAPI Vector2 GetGestureDragVector(void);               // Get gesture drag vector\nRLAPI float GetGestureDragAngle(void);                  // Get gesture drag angle\nRLAPI Vector2 GetGesturePinchVector(void);              // Get gesture pinch delta\nRLAPI float GetGesturePinchAngle(void);                 // Get gesture pinch angle\n\n//------------------------------------------------------------------------------------\n// Camera System Functions (Module: rcamera)\n//------------------------------------------------------------------------------------\nRLAPI void SetCameraMode(Camera camera, int mode);      // Set camera mode (multiple camera modes available)\nRLAPI void UpdateCamera(Camera *camera);                // Update camera position for selected mode\n\nRLAPI void SetCameraPanControl(int keyPan);             // Set camera pan key to combine with mouse movement (free camera)\nRLAPI void SetCameraAltControl(int keyAlt);             // Set camera alt key to combine with mouse movement (free camera)\nRLAPI void SetCameraSmoothZoomControl(int keySmoothZoom); // Set camera smooth zoom key to combine with mouse (free camera)\nRLAPI void SetCameraMoveControls(int keyFront, int keyBack, int keyRight, int keyLeft, int keyUp, int keyDown); // Set camera move controls (1st person and 3rd person cameras)\n\n//------------------------------------------------------------------------------------\n// Basic Shapes Drawing Functions (Module: shapes)\n//------------------------------------------------------------------------------------\n// Set texture and rectangle to be used on shapes drawing\n// NOTE: It can be useful when using basic shapes and one single font,\n// defining a font char white rectangle would allow drawing everything in a single draw call\nRLAPI void SetShapesTexture(Texture2D texture, Rectangle source);       // Set texture and rectangle to be used on shapes drawing\n\n// Basic shapes drawing functions\nRLAPI void DrawPixel(int posX, int posY, Color color);                                                   // Draw a pixel\nRLAPI void DrawPixelV(Vector2 position, Color color);                                                    // Draw a pixel (Vector version)\nRLAPI void DrawLine(int startPosX, int startPosY, int endPosX, int endPosY, Color color);                // Draw a line\nRLAPI void DrawLineV(Vector2 startPos, Vector2 endPos, Color color);                                     // Draw a line (Vector version)\nRLAPI void DrawLineEx(Vector2 startPos, Vector2 endPos, float thick, Color color);                       // Draw a line defining thickness\nRLAPI void DrawLineBezier(Vector2 startPos, Vector2 endPos, float thick, Color color);                   // Draw a line using cubic-bezier curves in-out\nRLAPI void DrawLineBezierQuad(Vector2 startPos, Vector2 endPos, Vector2 controlPos, float thick, Color color); // Draw line using quadratic bezier curves with a control point\nRLAPI void DrawLineBezierCubic(Vector2 startPos, Vector2 endPos, Vector2 startControlPos, Vector2 endControlPos, float thick, Color color); // Draw line using cubic bezier curves with 2 control points\nRLAPI void DrawLineStrip(Vector2 *points, int pointCount, Color color);                                  // Draw lines sequence\nRLAPI void DrawCircle(int centerX, int centerY, float radius, Color color);                              // Draw a color-filled circle\nRLAPI void DrawCircleSector(Vector2 center, float radius, float startAngle, float endAngle, int segments, Color color);      // Draw a piece of a circle\nRLAPI void DrawCircleSectorLines(Vector2 center, float radius, float startAngle, float endAngle, int segments, Color color); // Draw circle sector outline\nRLAPI void DrawCircleGradient(int centerX, int centerY, float radius, Color color1, Color color2);       // Draw a gradient-filled circle\nRLAPI void DrawCircleV(Vector2 center, float radius, Color color);                                       // Draw a color-filled circle (Vector version)\nRLAPI void DrawCircleLines(int centerX, int centerY, float radius, Color color);                         // Draw circle outline\nRLAPI void DrawEllipse(int centerX, int centerY, float radiusH, float radiusV, Color color);             // Draw ellipse\nRLAPI void DrawEllipseLines(int centerX, int centerY, float radiusH, float radiusV, Color color);        // Draw ellipse outline\nRLAPI void DrawRing(Vector2 center, float innerRadius, float outerRadius, float startAngle, float endAngle, int segments, Color color); // Draw ring\nRLAPI void DrawRingLines(Vector2 center, float innerRadius, float outerRadius, float startAngle, float endAngle, int segments, Color color);    // Draw ring outline\nRLAPI void DrawRectangle(int posX, int posY, int width, int height, Color color);                        // Draw a color-filled rectangle\nRLAPI void DrawRectangleV(Vector2 position, Vector2 size, Color color);                                  // Draw a color-filled rectangle (Vector version)\nRLAPI void DrawRectangleRec(Rectangle rec, Color color);                                                 // Draw a color-filled rectangle\nRLAPI void DrawRectanglePro(Rectangle rec, Vector2 origin, float rotation, Color color);                 // Draw a color-filled rectangle with pro parameters\nRLAPI void DrawRectangleGradientV(int posX, int posY, int width, int height, Color color1, Color color2);// Draw a vertical-gradient-filled rectangle\nRLAPI void DrawRectangleGradientH(int posX, int posY, int width, int height, Color color1, Color color2);// Draw a horizontal-gradient-filled rectangle\nRLAPI void DrawRectangleGradientEx(Rectangle rec, Color col1, Color col2, Color col3, Color col4);       // Draw a gradient-filled rectangle with custom vertex colors\nRLAPI void DrawRectangleLines(int posX, int posY, int width, int height, Color color);                   // Draw rectangle outline\nRLAPI void DrawRectangleLinesEx(Rectangle rec, float lineThick, Color color);                            // Draw rectangle outline with extended parameters\nRLAPI void DrawRectangleRounded(Rectangle rec, float roundness, int segments, Color color);              // Draw rectangle with rounded edges\nRLAPI void DrawRectangleRoundedLines(Rectangle rec, float roundness, int segments, float lineThick, Color color); // Draw rectangle with rounded edges outline\nRLAPI void DrawTriangle(Vector2 v1, Vector2 v2, Vector2 v3, Color color);                                // Draw a color-filled triangle (vertex in counter-clockwise order!)\nRLAPI void DrawTriangleLines(Vector2 v1, Vector2 v2, Vector2 v3, Color color);                           // Draw triangle outline (vertex in counter-clockwise order!)\nRLAPI void DrawTriangleFan(Vector2 *points, int pointCount, Color color);                                // Draw a triangle fan defined by points (first vertex is the center)\nRLAPI void DrawTriangleStrip(Vector2 *points, int pointCount, Color color);                              // Draw a triangle strip defined by points\nRLAPI void DrawPoly(Vector2 center, int sides, float radius, float rotation, Color color);               // Draw a regular polygon (Vector version)\nRLAPI void DrawPolyLines(Vector2 center, int sides, float radius, float rotation, Color color);          // Draw a polygon outline of n sides\nRLAPI void DrawPolyLinesEx(Vector2 center, int sides, float radius, float rotation, float lineThick, Color color); // Draw a polygon outline of n sides with extended parameters\n\n// Basic shapes collision detection functions\nRLAPI bool CheckCollisionRecs(Rectangle rec1, Rectangle rec2);                                           // Check collision between two rectangles\nRLAPI bool CheckCollisionCircles(Vector2 center1, float radius1, Vector2 center2, float radius2);        // Check collision between two circles\nRLAPI bool CheckCollisionCircleRec(Vector2 center, float radius, Rectangle rec);                         // Check collision between circle and rectangle\nRLAPI bool CheckCollisionPointRec(Vector2 point, Rectangle rec);                                         // Check if point is inside rectangle\nRLAPI bool CheckCollisionPointCircle(Vector2 point, Vector2 center, float radius);                       // Check if point is inside circle\nRLAPI bool CheckCollisionPointTriangle(Vector2 point, Vector2 p1, Vector2 p2, Vector2 p3);               // Check if point is inside a triangle\nRLAPI bool CheckCollisionLines(Vector2 startPos1, Vector2 endPos1, Vector2 startPos2, Vector2 endPos2, Vector2 *collisionPoint); // Check the collision between two lines defined by two points each, returns collision point by reference\nRLAPI bool CheckCollisionPointLine(Vector2 point, Vector2 p1, Vector2 p2, int threshold);                // Check if point belongs to line created between two points [p1] and [p2] with defined margin in pixels [threshold]\nRLAPI Rectangle GetCollisionRec(Rectangle rec1, Rectangle rec2);                                         // Get collision rectangle for two rectangles collision\n\n//------------------------------------------------------------------------------------\n// Texture Loading and Drawing Functions (Module: textures)\n//------------------------------------------------------------------------------------\n\n// Image loading functions\n// NOTE: This functions do not require GPU access\nRLAPI Image LoadImage(const char *fileName);                                                             // Load image from file into CPU memory (RAM)\nRLAPI Image LoadImageRaw(const char *fileName, int width, int height, int format, int headerSize);       // Load image from RAW file data\nRLAPI Image LoadImageAnim(const char *fileName, int *frames);                                            // Load image sequence from file (frames appended to image.data)\nRLAPI Image LoadImageFromMemory(const char *fileType, const unsigned char *fileData, int dataSize);      // Load image from memory buffer, fileType refers to extension: i.e. '.png'\nRLAPI Image LoadImageFromTexture(Texture2D texture);                                                     // Load image from GPU texture data\nRLAPI Image LoadImageFromScreen(void);                                                                   // Load image from screen buffer and (screenshot)\nRLAPI void UnloadImage(Image image);                                                                     // Unload image from CPU memory (RAM)\nRLAPI bool ExportImage(Image image, const char *fileName);                                               // Export image data to file, returns true on success\nRLAPI bool ExportImageAsCode(Image image, const char *fileName);                                         // Export image as code file defining an array of bytes, returns true on success\n\n// Image generation functions\nRLAPI Image GenImageColor(int width, int height, Color color);                                           // Generate image: plain color\nRLAPI Image GenImageGradientV(int width, int height, Color top, Color bottom);                           // Generate image: vertical gradient\nRLAPI Image GenImageGradientH(int width, int height, Color left, Color right);                           // Generate image: horizontal gradient\nRLAPI Image GenImageGradientRadial(int width, int height, float density, Color inner, Color outer);      // Generate image: radial gradient\nRLAPI Image GenImageChecked(int width, int height, int checksX, int checksY, Color col1, Color col2);    // Generate image: checked\nRLAPI Image GenImageWhiteNoise(int width, int height, float factor);                                     // Generate image: white noise\nRLAPI Image GenImageCellular(int width, int height, int tileSize);                                       // Generate image: cellular algorithm, bigger tileSize means bigger cells\n\n// Image manipulation functions\nRLAPI Image ImageCopy(Image image);                                                                      // Create an image duplicate (useful for transformations)\nRLAPI Image ImageFromImage(Image image, Rectangle rec);                                                  // Create an image from another image piece\nRLAPI Image ImageText(const char *text, int fontSize, Color color);                                      // Create an image from text (default font)\nRLAPI Image ImageTextEx(Font font, const char *text, float fontSize, float spacing, Color tint);         // Create an image from text (custom sprite font)\nRLAPI void ImageFormat(Image *image, int newFormat);                                                     // Convert image data to desired format\nRLAPI void ImageToPOT(Image *image, Color fill);                                                         // Convert image to POT (power-of-two)\nRLAPI void ImageCrop(Image *image, Rectangle crop);                                                      // Crop an image to a defined rectangle\nRLAPI void ImageAlphaCrop(Image *image, float threshold);                                                // Crop image depending on alpha value\nRLAPI void ImageAlphaClear(Image *image, Color color, float threshold);                                  // Clear alpha channel to desired color\nRLAPI void ImageAlphaMask(Image *image, Image alphaMask);                                                // Apply alpha mask to image\nRLAPI void ImageAlphaPremultiply(Image *image);                                                          // Premultiply alpha channel\nRLAPI void ImageResize(Image *image, int newWidth, int newHeight);                                       // Resize image (Bicubic scaling algorithm)\nRLAPI void ImageResizeNN(Image *image, int newWidth,int newHeight);                                      // Resize image (Nearest-Neighbor scaling algorithm)\nRLAPI void ImageResizeCanvas(Image *image, int newWidth, int newHeight, int offsetX, int offsetY, Color fill);  // Resize canvas and fill with color\nRLAPI void ImageMipmaps(Image *image);                                                                   // Compute all mipmap levels for a provided image\nRLAPI void ImageDither(Image *image, int rBpp, int gBpp, int bBpp, int aBpp);                            // Dither image data to 16bpp or lower (Floyd-Steinberg dithering)\nRLAPI void ImageFlipVertical(Image *image);                                                              // Flip image vertically\nRLAPI void ImageFlipHorizontal(Image *image);                                                            // Flip image horizontally\nRLAPI void ImageRotateCW(Image *image);                                                                  // Rotate image clockwise 90deg\nRLAPI void ImageRotateCCW(Image *image);                                                                 // Rotate image counter-clockwise 90deg\nRLAPI void ImageColorTint(Image *image, Color color);                                                    // Modify image color: tint\nRLAPI void ImageColorInvert(Image *image);                                                               // Modify image color: invert\nRLAPI void ImageColorGrayscale(Image *image);                                                            // Modify image color: grayscale\nRLAPI void ImageColorContrast(Image *image, float contrast);                                             // Modify image color: contrast (-100 to 100)\nRLAPI void ImageColorBrightness(Image *image, int brightness);                                           // Modify image color: brightness (-255 to 255)\nRLAPI void ImageColorReplace(Image *image, Color color, Color replace);                                  // Modify image color: replace color\nRLAPI Color *LoadImageColors(Image image);                                                               // Load color data from image as a Color array (RGBA - 32bit)\nRLAPI Color *LoadImagePalette(Image image, int maxPaletteSize, int *colorCount);                         // Load colors palette from image as a Color array (RGBA - 32bit)\nRLAPI void UnloadImageColors(Color *colors);                                                             // Unload color data loaded with LoadImageColors()\nRLAPI void UnloadImagePalette(Color *colors);                                                            // Unload colors palette loaded with LoadImagePalette()\nRLAPI Rectangle GetImageAlphaBorder(Image image, float threshold);                                       // Get image alpha border rectangle\nRLAPI Color GetImageColor(Image image, int x, int y);                                                    // Get image pixel color at (x, y) position\n\n// Image drawing functions\n// NOTE: Image software-rendering functions (CPU)\nRLAPI void ImageClearBackground(Image *dst, Color color);                                                // Clear image background with given color\nRLAPI void ImageDrawPixel(Image *dst, int posX, int posY, Color color);                                  // Draw pixel within an image\nRLAPI void ImageDrawPixelV(Image *dst, Vector2 position, Color color);                                   // Draw pixel within an image (Vector version)\nRLAPI void ImageDrawLine(Image *dst, int startPosX, int startPosY, int endPosX, int endPosY, Color color); // Draw line within an image\nRLAPI void ImageDrawLineV(Image *dst, Vector2 start, Vector2 end, Color color);                          // Draw line within an image (Vector version)\nRLAPI void ImageDrawCircle(Image *dst, int centerX, int centerY, int radius, Color color);               // Draw circle within an image\nRLAPI void ImageDrawCircleV(Image *dst, Vector2 center, int radius, Color color);                        // Draw circle within an image (Vector version)\nRLAPI void ImageDrawRectangle(Image *dst, int posX, int posY, int width, int height, Color color);       // Draw rectangle within an image\nRLAPI void ImageDrawRectangleV(Image *dst, Vector2 position, Vector2 size, Color color);                 // Draw rectangle within an image (Vector version)\nRLAPI void ImageDrawRectangleRec(Image *dst, Rectangle rec, Color color);                                // Draw rectangle within an image\nRLAPI void ImageDrawRectangleLines(Image *dst, Rectangle rec, int thick, Color color);                   // Draw rectangle lines within an image\nRLAPI void ImageDraw(Image *dst, Image src, Rectangle srcRec, Rectangle dstRec, Color tint);             // Draw a source image within a destination image (tint applied to source)\nRLAPI void ImageDrawText(Image *dst, const char *text, int posX, int posY, int fontSize, Color color);   // Draw text (using default font) within an image (destination)\nRLAPI void ImageDrawTextEx(Image *dst, Font font, const char *text, Vector2 position, float fontSize, float spacing, Color tint); // Draw text (custom sprite font) within an image (destination)\n\n// Texture loading functions\n// NOTE: These functions require GPU access\nRLAPI Texture2D LoadTexture(const char *fileName);                                                       // Load texture from file into GPU memory (VRAM)\nRLAPI Texture2D LoadTextureFromImage(Image image);                                                       // Load texture from image data\nRLAPI TextureCubemap LoadTextureCubemap(Image image, int layout);                                        // Load cubemap from image, multiple image cubemap layouts supported\nRLAPI RenderTexture2D LoadRenderTexture(int width, int height);                                          // Load texture for rendering (framebuffer)\nRLAPI void UnloadTexture(Texture2D texture);                                                             // Unload texture from GPU memory (VRAM)\nRLAPI void UnloadRenderTexture(RenderTexture2D target);                                                  // Unload render texture from GPU memory (VRAM)\nRLAPI void UpdateTexture(Texture2D texture, const void *pixels);                                         // Update GPU texture with new data\nRLAPI void UpdateTextureRec(Texture2D texture, Rectangle rec, const void *pixels);                       // Update GPU texture rectangle with new data\n\n// Texture configuration functions\nRLAPI void GenTextureMipmaps(Texture2D *texture);                                                        // Generate GPU mipmaps for a texture\nRLAPI void SetTextureFilter(Texture2D texture, int filter);                                              // Set texture scaling filter mode\nRLAPI void SetTextureWrap(Texture2D texture, int wrap);                                                  // Set texture wrapping mode\n\n// Texture drawing functions\nRLAPI void DrawTexture(Texture2D texture, int posX, int posY, Color tint);                               // Draw a Texture2D\nRLAPI void DrawTextureV(Texture2D texture, Vector2 position, Color tint);                                // Draw a Texture2D with position defined as Vector2\nRLAPI void DrawTextureEx(Texture2D texture, Vector2 position, float rotation, float scale, Color tint);  // Draw a Texture2D with extended parameters\nRLAPI void DrawTextureRec(Texture2D texture, Rectangle source, Vector2 position, Color tint);            // Draw a part of a texture defined by a rectangle\nRLAPI void DrawTextureQuad(Texture2D texture, Vector2 tiling, Vector2 offset, Rectangle quad, Color tint);  // Draw texture quad with tiling and offset parameters\nRLAPI void DrawTextureTiled(Texture2D texture, Rectangle source, Rectangle dest, Vector2 origin, float rotation, float scale, Color tint);      // Draw part of a texture (defined by a rectangle) with rotation and scale tiled into dest.\nRLAPI void DrawTexturePro(Texture2D texture, Rectangle source, Rectangle dest, Vector2 origin, float rotation, Color tint);           // Draw a part of a texture defined by a rectangle with 'pro' parameters\nRLAPI void DrawTextureNPatch(Texture2D texture, NPatchInfo nPatchInfo, Rectangle dest, Vector2 origin, float rotation, Color tint);   // Draws a texture (or part of it) that stretches or shrinks nicely\nRLAPI void DrawTexturePoly(Texture2D texture, Vector2 center, Vector2 *points, Vector2 *texcoords, int pointCount, Color tint);      // Draw a textured polygon\n\n// Color/pixel related functions\nRLAPI Color Fade(Color color, float alpha);                                 // Get color with alpha applied, alpha goes from 0.0f to 1.0f\nRLAPI int ColorToInt(Color color);                                          // Get hexadecimal value for a Color\nRLAPI Vector4 ColorNormalize(Color color);                                  // Get Color normalized as float [0..1]\nRLAPI Color ColorFromNormalized(Vector4 normalized);                        // Get Color from normalized values [0..1]\nRLAPI Vector3 ColorToHSV(Color color);                                      // Get HSV values for a Color, hue [0..360], saturation/value [0..1]\nRLAPI Color ColorFromHSV(float hue, float saturation, float value);         // Get a Color from HSV values, hue [0..360], saturation/value [0..1]\nRLAPI Color ColorAlpha(Color color, float alpha);                           // Get color with alpha applied, alpha goes from 0.0f to 1.0f\nRLAPI Color ColorAlphaBlend(Color dst, Color src, Color tint);              // Get src alpha-blended into dst color with tint\nRLAPI Color GetColor(unsigned int hexValue);                                // Get Color structure from hexadecimal value\nRLAPI Color GetPixelColor(void *srcPtr, int format);                        // Get Color from a source pixel pointer of certain format\nRLAPI void SetPixelColor(void *dstPtr, Color color, int format);            // Set color formatted into destination pixel pointer\nRLAPI int GetPixelDataSize(int width, int height, int format);              // Get pixel data size in bytes for certain format\n\n//------------------------------------------------------------------------------------\n// Font Loading and Text Drawing Functions (Module: text)\n//------------------------------------------------------------------------------------\n\n// Font loading/unloading functions\nRLAPI Font GetFontDefault(void);                                                            // Get the default Font\nRLAPI Font LoadFont(const char *fileName);                                                  // Load font from file into GPU memory (VRAM)\nRLAPI Font LoadFontEx(const char *fileName, int fontSize, int *fontChars, int glyphCount);  // Load font from file with extended parameters\nRLAPI Font LoadFontFromImage(Image image, Color key, int firstChar);                        // Load font from Image (XNA style)\nRLAPI Font LoadFontFromMemory(const char *fileType, const unsigned char *fileData, int dataSize, int fontSize, int *fontChars, int glyphCount); // Load font from memory buffer, fileType refers to extension: i.e. '.ttf'\nRLAPI GlyphInfo *LoadFontData(const unsigned char *fileData, int dataSize, int fontSize, int *fontChars, int glyphCount, int type);      // Load font data for further use\nRLAPI Image GenImageFontAtlas(const GlyphInfo *chars, Rectangle **recs, int glyphCount, int fontSize, int padding, int packMethod);      // Generate image font atlas using chars info\nRLAPI void UnloadFontData(GlyphInfo *chars, int glyphCount);                                 // Unload font chars info data (RAM)\nRLAPI void UnloadFont(Font font);                                                           // Unload Font from GPU memory (VRAM)\n\n// Text drawing functions\nRLAPI void DrawFPS(int posX, int posY);                                                     // Draw current FPS\nRLAPI void DrawText(const char *text, int posX, int posY, int fontSize, Color color);       // Draw text (using default font)\nRLAPI void DrawTextEx(Font font, const char *text, Vector2 position, float fontSize, float spacing, Color tint);    // Draw text using font and additional parameters\nRLAPI void DrawTextPro(Font font, const char *text, Vector2 position, Vector2 origin, float rotation, float fontSize, float spacing, Color tint); // Draw text using Font and pro parameters (rotation)\nRLAPI void DrawTextCodepoint(Font font, int codepoint, Vector2 position, float fontSize, Color tint);   // Draw one character (codepoint)\n\n// Text font info functions\nRLAPI int MeasureText(const char *text, int fontSize);                                      // Measure string width for default font\nRLAPI Vector2 MeasureTextEx(Font font, const char *text, float fontSize, float spacing);    // Measure string size for Font\nRLAPI int GetGlyphIndex(Font font, int codepoint);                                          // Get glyph index position in font for a codepoint (unicode character), fallback to '?' if not found\nRLAPI GlyphInfo GetGlyphInfo(Font font, int codepoint);                                     // Get glyph font info data for a codepoint (unicode character), fallback to '?' if not found\nRLAPI Rectangle GetGlyphAtlasRec(Font font, int codepoint);                                 // Get glyph rectangle in font atlas for a codepoint (unicode character), fallback to '?' if not found\n\n// Text codepoints management functions (unicode characters)\nRLAPI int *LoadCodepoints(const char *text, int *count);              // Load all codepoints from a UTF-8 text string, codepoints count returned by parameter\nRLAPI void UnloadCodepoints(int *codepoints);                         // Unload codepoints data from memory\nRLAPI int GetCodepointCount(const char *text);                        // Get total number of codepoints in a UTF-8 encoded string\nRLAPI int GetCodepoint(const char *text, int *bytesProcessed);        // Get next codepoint in a UTF-8 encoded string, 0x3f('?') is returned on failure\nRLAPI const char *CodepointToUTF8(int codepoint, int *byteSize);      // Encode one codepoint into UTF-8 byte array (array length returned as parameter)\nRLAPI char *TextCodepointsToUTF8(int *codepoints, int length);        // Encode text as codepoints array into UTF-8 text string (WARNING: memory must be freed!)\n\n// Text strings management functions (no UTF-8 strings, only byte chars)\n// NOTE: Some strings allocate memory internally for returned strings, just be careful!\nRLAPI int TextCopy(char *dst, const char *src);                                             // Copy one string to another, returns bytes copied\nRLAPI bool TextIsEqual(const char *text1, const char *text2);                               // Check if two text string are equal\nRLAPI unsigned int TextLength(const char *text);                                            // Get text length, checks for '\\0' ending\nRLAPI const char *TextFormat(const char *text, ...);                                        // Text formatting with variables (sprintf() style)\nRLAPI const char *TextSubtext(const char *text, int position, int length);                  // Get a piece of a text string\nRLAPI char *TextReplace(char *text, const char *replace, const char *by);                   // Replace text string (WARNING: memory must be freed!)\nRLAPI char *TextInsert(const char *text, const char *insert, int position);                 // Insert text in a position (WARNING: memory must be freed!)\nRLAPI const char *TextJoin(const char **textList, int count, const char *delimiter);        // Join text strings with delimiter\nRLAPI const char **TextSplit(const char *text, char delimiter, int *count);                 // Split text into multiple strings\nRLAPI void TextAppend(char *text, const char *append, int *position);                       // Append text at specific position and move cursor!\nRLAPI int TextFindIndex(const char *text, const char *find);                                // Find first text occurrence within a string\nRLAPI const char *TextToUpper(const char *text);                      // Get upper case version of provided string\nRLAPI const char *TextToLower(const char *text);                      // Get lower case version of provided string\nRLAPI const char *TextToPascal(const char *text);                     // Get Pascal case notation version of provided string\nRLAPI int TextToInteger(const char *text);                            // Get integer value from text (negative values not supported)\n\n//------------------------------------------------------------------------------------\n// Basic 3d Shapes Drawing Functions (Module: models)\n//------------------------------------------------------------------------------------\n\n// Basic geometric 3D shapes drawing functions\nRLAPI void DrawLine3D(Vector3 startPos, Vector3 endPos, Color color);                                    // Draw a line in 3D world space\nRLAPI void DrawPoint3D(Vector3 position, Color color);                                                   // Draw a point in 3D space, actually a small line\nRLAPI void DrawCircle3D(Vector3 center, float radius, Vector3 rotationAxis, float rotationAngle, Color color); // Draw a circle in 3D world space\nRLAPI void DrawTriangle3D(Vector3 v1, Vector3 v2, Vector3 v3, Color color);                              // Draw a color-filled triangle (vertex in counter-clockwise order!)\nRLAPI void DrawTriangleStrip3D(Vector3 *points, int pointCount, Color color);                           // Draw a triangle strip defined by points\nRLAPI void DrawCube(Vector3 position, float width, float height, float length, Color color);             // Draw cube\nRLAPI void DrawCubeV(Vector3 position, Vector3 size, Color color);                                       // Draw cube (Vector version)\nRLAPI void DrawCubeWires(Vector3 position, float width, float height, float length, Color color);        // Draw cube wires\nRLAPI void DrawCubeWiresV(Vector3 position, Vector3 size, Color color);                                  // Draw cube wires (Vector version)\nRLAPI void DrawCubeTexture(Texture2D texture, Vector3 position, float width, float height, float length, Color color); // Draw cube textured\nRLAPI void DrawCubeTextureRec(Texture2D texture, Rectangle source, Vector3 position, float width, float height, float length, Color color); // Draw cube with a region of a texture\nRLAPI void DrawSphere(Vector3 centerPos, float radius, Color color);                                     // Draw sphere\nRLAPI void DrawSphereEx(Vector3 centerPos, float radius, int rings, int slices, Color color);            // Draw sphere with extended parameters\nRLAPI void DrawSphereWires(Vector3 centerPos, float radius, int rings, int slices, Color color);         // Draw sphere wires\nRLAPI void DrawCylinder(Vector3 position, float radiusTop, float radiusBottom, float height, int slices, Color color); // Draw a cylinder/cone\nRLAPI void DrawCylinderEx(Vector3 startPos, Vector3 endPos, float startRadius, float endRadius, int sides, Color color); // Draw a cylinder with base at startPos and top at endPos\nRLAPI void DrawCylinderWires(Vector3 position, float radiusTop, float radiusBottom, float height, int slices, Color color); // Draw a cylinder/cone wires\nRLAPI void DrawCylinderWiresEx(Vector3 startPos, Vector3 endPos, float startRadius, float endRadius, int sides, Color color); // Draw a cylinder wires with base at startPos and top at endPos\nRLAPI void DrawPlane(Vector3 centerPos, Vector2 size, Color color);                                      // Draw a plane XZ\nRLAPI void DrawRay(Ray ray, Color color);                                                                // Draw a ray line\nRLAPI void DrawGrid(int slices, float spacing);                                                          // Draw a grid (centered at (0, 0, 0))\n\n//------------------------------------------------------------------------------------\n// Model 3d Loading and Drawing Functions (Module: models)\n//------------------------------------------------------------------------------------\n\n// Model management functions\nRLAPI Model LoadModel(const char *fileName);                                                // Load model from files (meshes and materials)\nRLAPI Model LoadModelFromMesh(Mesh mesh);                                                   // Load model from generated mesh (default material)\nRLAPI void UnloadModel(Model model);                                                        // Unload model (including meshes) from memory (RAM and/or VRAM)\nRLAPI void UnloadModelKeepMeshes(Model model);                                              // Unload model (but not meshes) from memory (RAM and/or VRAM)\nRLAPI BoundingBox GetModelBoundingBox(Model model);                                         // Compute model bounding box limits (considers all meshes)\n\n// Model drawing functions\nRLAPI void DrawModel(Model model, Vector3 position, float scale, Color tint);                           // Draw a model (with texture if set)\nRLAPI void DrawModelEx(Model model, Vector3 position, Vector3 rotationAxis, float rotationAngle, Vector3 scale, Color tint); // Draw a model with extended parameters\nRLAPI void DrawModelWires(Model model, Vector3 position, float scale, Color tint);                      // Draw a model wires (with texture if set)\nRLAPI void DrawModelWiresEx(Model model, Vector3 position, Vector3 rotationAxis, float rotationAngle, Vector3 scale, Color tint); // Draw a model wires (with texture if set) with extended parameters\nRLAPI void DrawBoundingBox(BoundingBox box, Color color);                                               // Draw bounding box (wires)\nRLAPI void DrawBillboard(Camera camera, Texture2D texture, Vector3 position, float size, Color tint);   // Draw a billboard texture\nRLAPI void DrawBillboardRec(Camera camera, Texture2D texture, Rectangle source, Vector3 position, Vector2 size, Color tint); // Draw a billboard texture defined by source\nRLAPI void DrawBillboardPro(Camera camera, Texture2D texture, Rectangle source, Vector3 position, Vector3 up, Vector2 size, Vector2 origin, float rotation, Color tint); // Draw a billboard texture defined by source and rotation\n\n// Mesh management functions\nRLAPI void UploadMesh(Mesh *mesh, bool dynamic);                                            // Upload mesh vertex data in GPU and provide VAO/VBO ids\nRLAPI void UpdateMeshBuffer(Mesh mesh, int index, void *data, int dataSize, int offset);    // Update mesh vertex data in GPU for a specific buffer index\nRLAPI void UnloadMesh(Mesh mesh);                                                           // Unload mesh data from CPU and GPU\nRLAPI void DrawMesh(Mesh mesh, Material material, Matrix transform);                        // Draw a 3d mesh with material and transform\nRLAPI void DrawMeshInstanced(Mesh mesh, Material material, Matrix *transforms, int instances); // Draw multiple mesh instances with material and different transforms\nRLAPI bool ExportMesh(Mesh mesh, const char *fileName);                                     // Export mesh data to file, returns true on success\nRLAPI BoundingBox GetMeshBoundingBox(Mesh mesh);                                            // Compute mesh bounding box limits\nRLAPI void GenMeshTangents(Mesh *mesh);                                                     // Compute mesh tangents\nRLAPI void GenMeshBinormals(Mesh *mesh);                                                    // Compute mesh binormals\n\n// Mesh generation functions\nRLAPI Mesh GenMeshPoly(int sides, float radius);                                            // Generate polygonal mesh\nRLAPI Mesh GenMeshPlane(float width, float length, int resX, int resZ);                     // Generate plane mesh (with subdivisions)\nRLAPI Mesh GenMeshCube(float width, float height, float length);                            // Generate cuboid mesh\nRLAPI Mesh GenMeshSphere(float radius, int rings, int slices);                              // Generate sphere mesh (standard sphere)\nRLAPI Mesh GenMeshHemiSphere(float radius, int rings, int slices);                          // Generate half-sphere mesh (no bottom cap)\nRLAPI Mesh GenMeshCylinder(float radius, float height, int slices);                         // Generate cylinder mesh\nRLAPI Mesh GenMeshCone(float radius, float height, int slices);                             // Generate cone/pyramid mesh\nRLAPI Mesh GenMeshTorus(float radius, float size, int radSeg, int sides);                   // Generate torus mesh\nRLAPI Mesh GenMeshKnot(float radius, float size, int radSeg, int sides);                    // Generate trefoil knot mesh\nRLAPI Mesh GenMeshHeightmap(Image heightmap, Vector3 size);                                 // Generate heightmap mesh from image data\nRLAPI Mesh GenMeshCubicmap(Image cubicmap, Vector3 cubeSize);                               // Generate cubes-based map mesh from image data\n\n// Material loading/unloading functions\nRLAPI Material *LoadMaterials(const char *fileName, int *materialCount);                    // Load materials from model file\nRLAPI Material LoadMaterialDefault(void);                                                   // Load default material (Supports: DIFFUSE, SPECULAR, NORMAL maps)\nRLAPI void UnloadMaterial(Material material);                                               // Unload material from GPU memory (VRAM)\nRLAPI void SetMaterialTexture(Material *material, int mapType, Texture2D texture);          // Set texture for a material map type (MATERIAL_MAP_DIFFUSE, MATERIAL_MAP_SPECULAR...)\nRLAPI void SetModelMeshMaterial(Model *model, int meshId, int materialId);                  // Set material for a mesh\n\n// Model animations loading/unloading functions\nRLAPI ModelAnimation *LoadModelAnimations(const char *fileName, unsigned int *animCount);   // Load model animations from file\nRLAPI void UpdateModelAnimation(Model model, ModelAnimation anim, int frame);               // Update model animation pose\nRLAPI void UnloadModelAnimation(ModelAnimation anim);                                       // Unload animation data\nRLAPI void UnloadModelAnimations(ModelAnimation* animations, unsigned int count);           // Unload animation array data\nRLAPI bool IsModelAnimationValid(Model model, ModelAnimation anim);                         // Check model animation skeleton match\n\n// Collision detection functions\nRLAPI bool CheckCollisionSpheres(Vector3 center1, float radius1, Vector3 center2, float radius2);       // Check collision between two spheres\nRLAPI bool CheckCollisionBoxes(BoundingBox box1, BoundingBox box2);                                     // Check collision between two bounding boxes\nRLAPI bool CheckCollisionBoxSphere(BoundingBox box, Vector3 center, float radius);                      // Check collision between box and sphere\nRLAPI RayCollision GetRayCollisionSphere(Ray ray, Vector3 center, float radius);                        // Get collision info between ray and sphere\nRLAPI RayCollision GetRayCollisionBox(Ray ray, BoundingBox box);                                        // Get collision info between ray and box\nRLAPI RayCollision GetRayCollisionModel(Ray ray, Model model);                                          // Get collision info between ray and model\nRLAPI RayCollision GetRayCollisionMesh(Ray ray, Mesh mesh, Matrix transform);                           // Get collision info between ray and mesh\nRLAPI RayCollision GetRayCollisionTriangle(Ray ray, Vector3 p1, Vector3 p2, Vector3 p3);                // Get collision info between ray and triangle\nRLAPI RayCollision GetRayCollisionQuad(Ray ray, Vector3 p1, Vector3 p2, Vector3 p3, Vector3 p4);        // Get collision info between ray and quad\n\n//------------------------------------------------------------------------------------\n// Audio Loading and Playing Functions (Module: audio)\n//------------------------------------------------------------------------------------\n\n// Audio device management functions\nRLAPI void InitAudioDevice(void);                                     // Initialize audio device and context\nRLAPI void CloseAudioDevice(void);                                    // Close the audio device and context\nRLAPI bool IsAudioDeviceReady(void);                                  // Check if audio device has been initialized successfully\nRLAPI void SetMasterVolume(float volume);                             // Set master volume (listener)\n\n// Wave/Sound loading/unloading functions\nRLAPI Wave LoadWave(const char *fileName);                            // Load wave data from file\nRLAPI Wave LoadWaveFromMemory(const char *fileType, const unsigned char *fileData, int dataSize); // Load wave from memory buffer, fileType refers to extension: i.e. '.wav'\nRLAPI Sound LoadSound(const char *fileName);                          // Load sound from file\nRLAPI Sound LoadSoundFromWave(Wave wave);                             // Load sound from wave data\nRLAPI void UpdateSound(Sound sound, const void *data, int sampleCount); // Update sound buffer with new data\nRLAPI void UnloadWave(Wave wave);                                     // Unload wave data\nRLAPI void UnloadSound(Sound sound);                                  // Unload sound\nRLAPI bool ExportWave(Wave wave, const char *fileName);               // Export wave data to file, returns true on success\nRLAPI bool ExportWaveAsCode(Wave wave, const char *fileName);         // Export wave sample data to code (.h), returns true on success\n\n// Wave/Sound management functions\nRLAPI void PlaySound(Sound sound);                                    // Play a sound\nRLAPI void StopSound(Sound sound);                                    // Stop playing a sound\nRLAPI void PauseSound(Sound sound);                                   // Pause a sound\nRLAPI void ResumeSound(Sound sound);                                  // Resume a paused sound\nRLAPI void PlaySoundMulti(Sound sound);                               // Play a sound (using multichannel buffer pool)\nRLAPI void StopSoundMulti(void);                                      // Stop any sound playing (using multichannel buffer pool)\nRLAPI int GetSoundsPlaying(void);                                     // Get number of sounds playing in the multichannel\nRLAPI bool IsSoundPlaying(Sound sound);                               // Check if a sound is currently playing\nRLAPI void SetSoundVolume(Sound sound, float volume);                 // Set volume for a sound (1.0 is max level)\nRLAPI void SetSoundPitch(Sound sound, float pitch);                   // Set pitch for a sound (1.0 is base level)\nRLAPI void WaveFormat(Wave *wave, int sampleRate, int sampleSize, int channels);  // Convert wave data to desired format\nRLAPI Wave WaveCopy(Wave wave);                                       // Copy a wave to a new wave\nRLAPI void WaveCrop(Wave *wave, int initSample, int finalSample);     // Crop a wave to defined samples range\nRLAPI float *LoadWaveSamples(Wave wave);                              // Load samples data from wave as a floats array\nRLAPI void UnloadWaveSamples(float *samples);                         // Unload samples data loaded with LoadWaveSamples()\n\n// Music management functions\nRLAPI Music LoadMusicStream(const char *fileName);                    // Load music stream from file\nRLAPI Music LoadMusicStreamFromMemory(const char *fileType, unsigned char *data, int dataSize); // Load music stream from data\nRLAPI void UnloadMusicStream(Music music);                            // Unload music stream\nRLAPI void PlayMusicStream(Music music);                              // Start music playing\nRLAPI bool IsMusicStreamPlaying(Music music);                         // Check if music is playing\nRLAPI void UpdateMusicStream(Music music);                            // Updates buffers for music streaming\nRLAPI void StopMusicStream(Music music);                              // Stop music playing\nRLAPI void PauseMusicStream(Music music);                             // Pause music playing\nRLAPI void ResumeMusicStream(Music music);                            // Resume playing paused music\nRLAPI void SeekMusicStream(Music music, float position);              // Seek music to a position (in seconds)\nRLAPI void SetMusicVolume(Music music, float volume);                 // Set volume for music (1.0 is max level)\nRLAPI void SetMusicPitch(Music music, float pitch);                   // Set pitch for a music (1.0 is base level)\nRLAPI float GetMusicTimeLength(Music music);                          // Get music time length (in seconds)\nRLAPI float GetMusicTimePlayed(Music music);                          // Get current music time played (in seconds)\n\n// AudioStream management functions\nRLAPI AudioStream LoadAudioStream(unsigned int sampleRate, unsigned int sampleSize, unsigned int channels); // Load audio stream (to stream raw audio pcm data)\nRLAPI void UnloadAudioStream(AudioStream stream);                      // Unload audio stream and free memory\nRLAPI void UpdateAudioStream(AudioStream stream, const void *data, int frameCount); // Update audio stream buffers with data\nRLAPI bool IsAudioStreamProcessed(AudioStream stream);                // Check if any audio stream buffers requires refill\nRLAPI void PlayAudioStream(AudioStream stream);                       // Play audio stream\nRLAPI void PauseAudioStream(AudioStream stream);                      // Pause audio stream\nRLAPI void ResumeAudioStream(AudioStream stream);                     // Resume audio stream\nRLAPI bool IsAudioStreamPlaying(AudioStream stream);                  // Check if audio stream is playing\nRLAPI void StopAudioStream(AudioStream stream);                       // Stop audio stream\nRLAPI void SetAudioStreamVolume(AudioStream stream, float volume);    // Set volume for audio stream (1.0 is max level)\nRLAPI void SetAudioStreamPitch(AudioStream stream, float pitch);      // Set pitch for audio stream (1.0 is base level)\nRLAPI void SetAudioStreamBufferSizeDefault(int size);                 // Default size for new audio streams\n\n#if defined(__cplusplus)\n}\n#endif\n\n#endif // RAYLIB_H",
    "assembly": ".file\t\"158.c\"\n\t.text\n\t.ident\t\"GCC: (MinGW-W64 x86_64-ucrt-posix-seh, built by Brecht Sanders, r8) 13.2.0\"",
    "generation_time": 1.6009984016418457,
    "tokens_generated": 48,
    "metrics": {
      "length_ratio": 0.0008260939082236316,
      "line_ratio": 0.00390625,
      "token_overlap": 0.0,
      "token_precision": 0.0,
      "keyword_coverage": 0.0,
      "keyword_match_ratio": 0.0,
      "brace_ratio": 0.0,
      "semicolon_ratio": 0.0
    }
  },
  {
    "filename": "168",
    "optimization": "Ofast",
    "generated_c": ".clojure.javaxmutable.readdir(~#!/usr/bin/env/java/x86/compiler.jar) 18.4.1\"",
    "reference_c": "//\n// Copyright (C) 2015-2018 Seagate Technology LLC and/or its Affiliates. Apache License, Version 2.0.\n//\n#pragma once\n#ifndef __H0_M0INIT_H__\n#define __H0_M0INIT_H__\n\nstruct m0_halon_interface;\n\nextern struct m0_halon_interface *m0init_hi;\n\nint m0_init_wrapper(void);\nvoid m0_fini_wrapper(void);\n\n#endif  // __H0_M0INIT_H__",
    "assembly": ".file\t\"168.c\"\n\t.text\n\t.ident\t\"GCC: (MinGW-W64 x86_64-ucrt-posix-seh, built by Brecht Sanders, r8) 13.2.0\"",
    "generation_time": 10.519001007080078,
    "tokens_generated": 339,
    "metrics": {
      "length_ratio": 0.2331288343558282,
      "line_ratio": 0.06666666666666667,
      "token_overlap": 0.0,
      "token_precision": 0.0,
      "keyword_coverage": 0.0,
      "keyword_match_ratio": 0.0,
      "brace_ratio": 0,
      "semicolon_ratio": 0.0
    }
  },
  {
    "filename": "110",
    "optimization": "Osize",
    "generated_c": ".linebreak\\{16}/{15}/{14}/{13}}/.exe#include/C:\\WINDOWS\\System32\\Program Files\\Dwight.dll\n.uniformity.fmt.map(s1); /* Compiling and running the executable will take a lot of memory to do... */ ... } ... } // Run this assembly in assembler without any problems or errors; compile /usr/bin/x86_64-u386 ; var clang = {}; cdeclare $(clang++ ) .define((csdeclare(src)) ); return Clang + CCLANG - '@' ; }; int main () { printf(\"%d %b %t\".+ \"); double fprintf(\"%d %b %t\".+ \"); echo \"\" << 2 ; print ( \"%d %b %t\", \"$ccm\"); #endif } void run () { if ((clang++ ) .define((clo) .define(_name)) == CLOOPLEPEDE && clog($clo) .define(_name)) == CLOOPLEPEDE && clog($clo) .define(_name)) == CLOGONCE || clog($clos) .define(_name)) == CLOGONCE || clog($clos) .define(_name)) == CLOGONCE || clogs($clos) .define(_name)) != CLOGONCE || clog($clos) .define(_name)) == CLOGONCE || clog($clos) .define(_name)) == CLOGONCE || clog($clos) .define(_name)) == CLOGONCE || clog($clos) .define(_name)) == CLOGONPE || clog ($clos) .define(_Name)) <clogonpe</cloak> </block>\nIn fact there is no way to use an external compiler for compiling code that needs to be compiled using gcc like GCC 3.4 but it would work perfectly fine on your machine because you can't make things with proprietary compilation techniques such as LLVM's VARPAVIT support etc. You could even have some extra optimization capabilities which makes doing something much more difficult!",
    "reference_c": "#ifndef FOOLIB_C_H\n#define FOOLIB_C_H 1\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\n#include <stdint.h>\n\ntypedef int foolib_result_t;\n#define FOOLIB_RESULT_SUCCESS 0\n#define FOOLIB_RESULT_ERROR_ALLOC_FAILED 101\n#define FOOLIB_RESULT_ERROR_BAD_STATE 102\n#define FOOLIB_RESULT_ERROR_NOT_FOUND 103\n\ntypedef int foolib_object_t;\n#define FOOLIB_OBJECT_ALLOC_FAILED 0\n\nextern int foolib_g_verbosity;\n\nfoolib_result_t foolib_g_init();\nfoolib_result_t foolib_g_destroy();\n\nfoolib_object_t foolib_new();\nfoolib_result_t foolib_delete(foolib_object_t object);\nfoolib_result_t foolib_operation(foolib_object_t object);\n\n#ifdef __cplusplus\n}\n#endif\n\n#endif",
    "assembly": ".file\t\"110.c\"\n\t.text\n\t.ident\t\"GCC: (MinGW-W64 x86_64-ucrt-posix-seh, built by Brecht Sanders, r8) 13.2.0\"",
    "generation_time": 13.65204906463623,
    "tokens_generated": 474,
    "metrics": {
      "length_ratio": 2.2246489859594383,
      "line_ratio": 0.09375,
      "token_overlap": 0.11428571428571428,
      "token_precision": 0.027586206896551724,
      "keyword_coverage": 0.5,
      "keyword_match_ratio": 2.0,
      "brace_ratio": 8.5,
      "semicolon_ratio": 1.375
    }
  },
  {
    "filename": "112",
    "optimization": "Osize",
    "generated_c": ".unify\\(* \\((^ ((^ ^ <=[$#!&])){@}(\\*)\\\\;+)\\)(\\.(+(' \\\\ | ' + 0 || -1?3 ?/(.'))){@}(\\* \\((^ ^ * , & @ $ . c ) : !(\"/\",\"'')))){@}(\\* \\((^ ^ / #?&])){@}(\\* \\((^ ^ * , & @ $ . c ) : ! (\"/\",\"'')))){@}(\\* \\((^ ^ % `)/\\/`|| \"\\\")\"))){@}(\\* \\((^ ^ % `)/\\/`|| \"\\\")\"))){@}(\\* \\((^ % `)/\\/`|| \"\\\")\"))){@}(\\* \\((^ % `)/\\/`|| \"\\\"\")))){@}(\\* \\((^ % `)/\\/`|| \"\\\")\"))){@}\\* \\((^ % `)/\\/`|| \"\\\")\"))){@}(\\* \\((^ % `)/\\/`|| \"\\\")\"))){@}(\\* \\((^ % `)/\\/`|| \"\\\"?\"))) {@}(\\* \\((^ % `)/\\/`|| \"\\\")\"))){@}(\\* \\((^ % `)/\\/`|| \"\\\"?)))){@}(\\* \\((^ % `)/\\/`|| \"\\\")\"))){@}}(\\* \\((^ % `)/\\/`|| \"\\\")\"))){@}(\\** \\((^ % `)/\\/`|| \"\"))){@}(\\* \\((^ % `)/\\/`|| \"\\\")\"))){@}(\\* \\((^ % `)/\\/`|| \"\\\")\"))){@}(\\* \\((^ % `)/\\/`|| \"\\\")\"))){@}(\\* \\((^ % `)/\\/`|| \"\\\")\"))){@}(\\* \\((^ % `)/\\/`|| \"\\\")\"))){@}(\\* \\((^ % `)/\\/`&& \"\\\")\"))){@}(\\* \\((^ % `)/\\/`|| \"\\\")\"))){@}(\\* \\((^ % `)/\\/`|| \"\\\")\"))){@}(\\* \\((^ % `)/\\/`|| \"\\\")\"))){@}(\\*",
    "reference_c": "typedef unsigned char byte;\ntypedef struct rwl_s rwl;\n/* This is from page.h */\nstruct Page_s {\n  int id;\n  long LSN;\n  byte *memAddr;\n  byte dirty;\n  struct Page_s *next;\n  struct Page_s *prev; \n  int queue; \n  int inCache;\n  rwl * rwlatch;\n  rwl * loadlatch;\n\n};\n\ntypedef struct Page_s Page;\n\n\nPage * loadPage(int xid, long page);\n\nvoid releasePage(Page * p);",
    "assembly": ".file\t\"112.c\"\n\t.text\n\t.ident\t\"GCC: (MinGW-W64 x86_64-ucrt-posix-seh, built by Brecht Sanders, r8) 13.2.0\"",
    "generation_time": 11.346999406814575,
    "tokens_generated": 512,
    "metrics": {
      "length_ratio": 2.4487534626038783,
      "line_ratio": 0.043478260869565216,
      "token_overlap": 0.02564102564102564,
      "token_precision": 0.02564102564102564,
      "keyword_coverage": 0.08333333333333333,
      "keyword_match_ratio": 0.2,
      "brace_ratio": 27.5,
      "semicolon_ratio": 0.0625
    }
  },
  {
    "filename": "113",
    "optimization": "Osize",
    "generated_c": ".documents/pdf/dflv/.gz/lds/w64.zip\n.<|a href=https://www;i>[email protected]</a></br> <o class=\"firmware\">http:\\\\\\\\%3D\\%3D\\%3D\\%3D\\%3D\\%3d\\%3D\\%3D\\%3D\\%3R\\%3D\\%3D\\%3D \\%3D\\%3D\\%3DS\\%3D\\%3D\\%3D\\%3D\\%3D\\%3D\\%3D\\%3D\\%3D\\%3D\\%3D\\%3D\\%33\\%33\\%33\\%33\\%33\\%33\\%33\\%33\\ %33\\%33\\%33\\%33\\%33\\%33\\%33\\%33\\%33\\%33\\%33\\%33\\%33\\%33\\%33\\%33\\%33\\%33\\%33\\%33\\%33\\%33\\%33\\%33\\%33\\%33\\$83\\%3D\\%3D\\%3D\\%3D\\%3D\\%3D\\%3C\\%3D\\%3D\\%3E\\%3D\\&%3D\\%3D\\%3D\\%3D\\%3D\\%3D\\%3D\\%3D\\%3D\\%3D\\%3D\\%3D\\%3D\\%3D\\%3D\\%3D\\%3D\\%3D\\%3D\\%3D\\%.3D\\%3D\\%3D\\%3D\\%3D\\%3D\\%3D\\%3D\\%3D\\%3D\\%3D\\%3D\\%3D\\%03\\%01\\%02\\%04\\%05\\%06\\+\\%07\\%08\\%09\\%10\\%,11\\%-12\\%-13\\%-14\\%-15\\%-16\\%-17\\%-18\\%-19\\%-20\\%-21\\%-22",
    "reference_c": "#pragma once\n\n#include <stddef.h>\n#include <stdint.h>\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\n\nvoid nnp_fft8x8_with_offset_and_store__avx2(const float t[], float f[], size_t stride_t, size_t stride_f, uint32_t row_count, uint32_t column_count, uint32_t row_offset, uint32_t column_offset);\nvoid nnp_fft8x8_with_offset_and_stream__avx2(const float t[], float f[], size_t stride_t, size_t stride_f, uint32_t row_count, uint32_t column_count, uint32_t row_offset, uint32_t column_offset);\nvoid nnp_ifft8x8_with_offset__avx2(const float f[], float t[], size_t stride_f, size_t stride_t, uint32_t row_count, uint32_t column_count, uint32_t row_offset, uint32_t column_offset);\nvoid nnp_ifft8x8__avx2(const float f[], float t[], size_t stride_f, size_t stride_t, uint32_t row_count, uint32_t column_count);\nvoid nnp_ifft8x8_with_relu__avx2(const float f[], float t[], size_t stride_f, size_t stride_t, uint32_t row_count, uint32_t column_count);\nvoid nnp_ifft8x8_with_bias__avx2(const float f[], float t[], const float bias[], size_t stride_f, size_t stride_t, uint32_t row_count, uint32_t column_count);\nvoid nnp_ifft8x8_with_bias_with_relu__avx2(const float f[], float t[], const float bias[], size_t stride_f, size_t stride_t, uint32_t row_count, uint32_t column_count);\n\nvoid nnp_fft16x16_with_offset_and_store__avx2(const float t[], float f[], size_t stride_t, size_t stride_f, uint32_t row_count, uint32_t column_count, uint32_t row_offset, uint32_t column_offset);\nvoid nnp_fft16x16_with_offset_and_stream__avx2(const float t[], float f[], size_t stride_t, size_t stride_f, uint32_t row_count, uint32_t column_count, uint32_t row_offset, uint32_t column_offset);\nvoid nnp_ifft16x16_with_offset__avx2(const float f[], float t[], size_t stride_f, size_t stride_t, uint32_t row_count, uint32_t column_count, uint32_t row_offset, uint32_t column_offset);\nvoid nnp_ifft16x16__avx2(const float f[], float t[], size_t stride_f, size_t stride_t, uint32_t row_count, uint32_t column_count);\nvoid nnp_ifft16x16_with_relu__avx2(const float f[], float t[], size_t stride_f, size_t stride_t, uint32_t row_count, uint32_t column_count);\nvoid nnp_ifft16x16_with_bias__avx2(const float f[], float t[], const float bias[], size_t stride_f, size_t stride_t, uint32_t row_count, uint32_t column_count);\nvoid nnp_ifft16x16_with_bias_with_relu__avx2(const float f[], float t[], const float bias[], size_t stride_f, size_t stride_t, uint32_t row_count, uint32_t column_count);\n\nvoid nnp_iwt8x8_3x3_with_offset_and_store__avx2(const float d[], float wd[], size_t stride_d, size_t stride_wd, uint32_t row_count, uint32_t column_count, uint32_t row_offset, uint32_t column_offset);\nvoid nnp_iwt8x8_3x3_with_offset_and_stream__avx2(const float d[], float wd[], size_t stride_d, size_t stride_wd, uint32_t row_count, uint32_t column_count, uint32_t row_offset, uint32_t column_offset);\nvoid nnp_kwt8x8_3x3_and_store__avx2(const float g[], float wg[], size_t stride_g, size_t stride_wg, uint32_t, uint32_t, uint32_t, uint32_t);\nvoid nnp_kwt8x8_3x3_and_stream__avx2(const float g[], float wg[], size_t stride_g, size_t stride_wg, uint32_t, uint32_t, uint32_t, uint32_t);\nvoid nnp_kwt8x8_3Rx3R_and_store__avx2(const float g[], float wg[], size_t stride_g, size_t stride_wg, uint32_t, uint32_t, uint32_t, uint32_t);\nvoid nnp_kwt8x8_3Rx3R_and_stream__avx2(const float g[], float wg[], size_t stride_g, size_t stride_wg, uint32_t, uint32_t, uint32_t, uint32_t);\nvoid nnp_owt8x8_3x3__avx2(const float m[], float s[], size_t stride_m, size_t stride_s, uint32_t row_count, uint32_t column_count, uint32_t, uint32_t);\nvoid nnp_owt8x8_3x3_with_relu__avx2(const float m[], float s[], size_t stride_m, size_t stride_s, uint32_t row_count, uint32_t column_count, uint32_t, uint32_t);\nvoid nnp_owt8x8_3x3_with_bias__avx2(const float m[], float s[], const float bias[], size_t stride_m, size_t stride_s, uint32_t row_count, uint32_t column_count);\nvoid nnp_owt8x8_3x3_with_bias_with_relu__avx2(const float m[], float s[], const float bias[], size_t stride_m, size_t stride_s, uint32_t row_count, uint32_t column_count);\n\nvoid nnp_fft8x8_with_offset__psimd(const float t[], float f[], size_t stride_t, size_t stride_f, uint32_t row_count, uint32_t column_count, uint32_t row_offset, uint32_t column_offset);\nvoid nnp_ifft8x8_with_offset__psimd(const float f[], float t[], size_t stride_f, size_t stride_t, uint32_t row_count, uint32_t column_count, uint32_t row_offset, uint32_t column_offset);\nvoid nnp_ifft8x8_with_bias__psimd(const float f[], float t[], const float bias[], size_t stride_f, size_t stride_t, uint32_t row_count, uint32_t column_count);\nvoid nnp_ifft8x8_with_bias_with_relu__psimd(const float f[], float t[], const float bias[], size_t stride_f, size_t stride_t, uint32_t row_count, uint32_t column_count);\n\nvoid nnp_fft16x16_with_offset__psimd(const float t[], float f[], size_t stride_t, size_t stride_f, uint32_t row_count, uint32_t column_count, uint32_t row_offset, uint32_t column_offset);\nvoid nnp_ifft16x16_with_offset__psimd(const float f[], float t[], size_t stride_f, size_t stride_t, uint32_t row_count, uint32_t column_count, uint32_t row_offset, uint32_t column_offset);\nvoid nnp_ifft16x16_with_bias__psimd(const float f[], float t[], const float bias[], size_t stride_f, size_t stride_t, uint32_t row_count, uint32_t column_count);\nvoid nnp_ifft16x16_with_bias_with_relu__psimd(const float f[], float t[], const float bias[], size_t stride_f, size_t stride_t, uint32_t row_count, uint32_t column_count);\n\nvoid nnp_iwt8x8_3x3_with_offset__psimd(const float d[], float wd[], size_t stride_d, size_t stride_wd, uint32_t row_count, uint32_t column_count, uint32_t row_offset, uint32_t column_offset);\nvoid nnp_kwt8x8_3x3__psimd(const float g[], float wg[], size_t stride_g, size_t stride_wg, uint32_t, uint32_t, uint32_t, uint32_t);\nvoid nnp_kwt8x8_3Rx3R__psimd(const float g[], float wg[], size_t stride_g, size_t stride_wg, uint32_t, uint32_t, uint32_t, uint32_t);\nvoid nnp_owt8x8_3x3__psimd(const float m[], float s[], size_t stride_m, size_t stride_s, uint32_t row_count, uint32_t column_count, uint32_t, uint32_t);\nvoid nnp_owt8x8_3x3_with_bias__psimd(const float m[], float s[], const float bias[], size_t stride_m, size_t stride_s, uint32_t row_count, uint32_t column_count);\nvoid nnp_owt8x8_3x3_with_bias_with_relu__psimd(const float m[], float s[], const float bias[], size_t stride_m, size_t stride_s, uint32_t row_count, uint32_t column_count);\n\nvoid nnp_iwt8x8_3x3_with_offset__neon(const float d[], float wd[], size_t stride_d, size_t stride_wd, uint32_t row_count, uint32_t column_count, uint32_t row_offset, uint32_t column_offset);\nvoid nnp_kwt8x8_3x3__neon(const float g[], float wg[], size_t stride_g, size_t stride_wg, uint32_t, uint32_t, uint32_t, uint32_t);\nvoid nnp_kwt8x8_3Rx3R__neon(const float g[], float wg[], size_t stride_g, size_t stride_wg, uint32_t, uint32_t, uint32_t, uint32_t);\nvoid nnp_owt8x8_3x3__neon(const float m[], float s[], size_t stride_m, size_t stride_s, uint32_t row_count, uint32_t column_count, uint32_t, uint32_t);\nvoid nnp_owt8x8_3x3_with_bias__neon(const float m[], float s[], const float bias[], size_t stride_m, size_t stride_s, uint32_t row_count, uint32_t column_count);\nvoid nnp_owt8x8_3x3_with_bias_with_relu__neon(const float m[], float s[], const float bias[], size_t stride_m, size_t stride_s, uint32_t row_count, uint32_t column_count);\n\nvoid nnp_iwt8x8_3x3_fp16_with_offset__neonhp(const float d[], void* wd, size_t stride_d, size_t stride_wd, uint32_t row_count, uint32_t column_count, uint32_t row_offset, uint32_t column_offset);\nvoid nnp_kwt8x8_3x3_fp16__neonhp(const float g[], void* wg, size_t stride_g, size_t stride_wg, uint32_t, uint32_t, uint32_t, uint32_t);\nvoid nnp_owt8x8_3x3_fp16__neonhp(const void* m, float* s, size_t stride_m, size_t stride_s, uint32_t row_count, uint32_t column_count, uint32_t, uint32_t);\nvoid nnp_owt8x8_3x3_fp16_with_bias__neonhp(const void* m, float* s, const float bias[], size_t stride_m, size_t stride_s, uint32_t row_count, uint32_t column_count);\nvoid nnp_owt8x8_3x3_fp16_with_bias_with_relu__neonhp(const void* m, float* s, const float bias[], size_t stride_m, size_t stride_s, uint32_t row_count, uint32_t column_count);\n\nvoid nnp_fft8x8_with_offset__scalar(const float t[], float f[], size_t stride_t, size_t stride_f, uint32_t row_count, uint32_t column_count, uint32_t row_offset, uint32_t column_offset);\nvoid nnp_ifft8x8_with_offset__scalar(const float t[], float f[], size_t stride_t, size_t stride_f, uint32_t row_count, uint32_t column_count, uint32_t row_offset, uint32_t column_offset);\nvoid nnp_ifft8x8_with_bias__scalar(const float f[], float t[], const float bias[], size_t stride_f, size_t stride_t, uint32_t row_count, uint32_t column_count);\nvoid nnp_ifft8x8_with_bias_with_relu__scalar(const float f[], float t[], const float bias[], size_t stride_f, size_t stride_t, uint32_t row_count, uint32_t column_count);\n\nvoid nnp_fft16x16_with_offset__scalar(const float t[], float f[], size_t stride_t, size_t stride_f, uint32_t row_count, uint32_t column_count, uint32_t row_offset, uint32_t column_offset);\nvoid nnp_ifft16x16_with_offset__scalar(const float f[], float t[], size_t stride_f, size_t stride_t, uint32_t row_count, uint32_t column_count, uint32_t row_offset, uint32_t column_offset);\nvoid nnp_ifft16x16_with_bias__scalar(const float f[], float t[], const float bias[], size_t stride_f, size_t stride_t, uint32_t row_count, uint32_t column_count);\nvoid nnp_ifft16x16_with_bias_with_relu__scalar(const float f[], float t[], const float bias[], size_t stride_f, size_t stride_t, uint32_t row_count, uint32_t column_count);\n\nvoid nnp_iwt8x8_3x3_with_offset__scalar(const float d[], float wd[], size_t stride_d, size_t stride_wd, uint32_t row_count, uint32_t column_count, uint32_t row_offset, uint32_t column_offset);\nvoid nnp_kwt8x8_3x3__scalar(const float g[], float wg[], size_t stride_g, size_t stride_wg, uint32_t, uint32_t, uint32_t, uint32_t);\nvoid nnp_kwt8x8_3Rx3R__scalar(const float g[], float wg[], size_t stride_g, size_t stride_wg, uint32_t, uint32_t, uint32_t, uint32_t);\nvoid nnp_owt8x8_3x3__scalar(const float m[], float s[], size_t stride_m, size_t stride_s, uint32_t row_count, uint32_t column_count, uint32_t, uint32_t);\nvoid nnp_owt8x8_3x3_with_bias__scalar(const float m[], float s[], const float bias[], size_t stride_m, size_t stride_s, uint32_t row_count, uint32_t column_count);\nvoid nnp_owt8x8_3x3_with_bias_with_relu__scalar(const float m[], float s[], const float bias[], size_t stride_m, size_t stride_s, uint32_t row_count, uint32_t column_count);\n\n#ifdef __cplusplus\n} /* extern \"C\" */\n#endif",
    "assembly": ".file\t\"113.c\"\n\t.text\n\t.ident\t\"GCC: (MinGW-W64 x86_64-ucrt-posix-seh, built by Brecht Sanders, r8) 13.2.0\"",
    "generation_time": 11.461002588272095,
    "tokens_generated": 512,
    "metrics": {
      "length_ratio": 0.06109596766613404,
      "line_ratio": 0.022988505747126436,
      "token_overlap": 0.0,
      "token_precision": 0.0,
      "keyword_coverage": 0.0,
      "keyword_match_ratio": 0.0,
      "brace_ratio": 0.0,
      "semicolon_ratio": 0.015873015873015872
    }
  },
  {
    "filename": "114",
    "optimization": "Osize",
    "generated_c": "length || isof[12].width || isof[13].height || isof[14].width || isof[15].height || isof[16].width || isof[17].width || isof[18]; } return ; }\nThe above table describes how the stack allocates heap allocations as follows:\n--struct malloc() { var p = []{}; i = P .allocate(); l = [p]; p += []; s++n++; ++n; }; struct n = 1; N .createStack (); v = S .initialize (); o = V .listen (); f = C .each (); g = D .insert (); x = L .map ( sizeof (p)); w = M .pop (); r = F .open (); z = E .unify (); d = Z .replace (); y= W .join (); t = R .split (); c = G .find (); e = B .empty (); h = T .set (); k =",
    "reference_c": "/**\n * This file has no copyright assigned and is placed in the Public Domain.\n * This file is part of the mingw-w64 runtime package.\n * No warranty is given; refer to the file DISCLAIMER.PD within this package.\n */\n#include <stdio.h>\n#include <io.h>\n#include <errno.h>\n\n#if !defined(__arm__) && !defined(__aarch64__) /* we have F_ARM_ANY(_fseeki64) in msvcrt.def.in */\nint __cdecl _fseeki64(FILE* stream, __int64 offset, int whence)\n{\n  fpos_t pos;\n  if (whence == SEEK_CUR)\n    {\n      /* If stream is invalid, fgetpos sets errno. */\n      if (fgetpos (stream, &pos))\n        return (-1);\n      pos += (fpos_t) offset;\n    }\n  else if (whence == SEEK_END)\n    {\n      /* If writing, we need to flush before getting file length.  */\n      fflush (stream);\n      pos = (fpos_t) (_filelengthi64 (_fileno (stream)) + offset);\n    }\n  else if (whence == SEEK_SET)\n    pos = (fpos_t) offset;\n  else\n    {\n      errno = EINVAL;\n      return (-1);\n    }\n  return fsetpos (stream, &pos);\n}\n\nint __cdecl (*__MINGW_IMP_SYMBOL(_fseeki64))(FILE*, __int64, int) = _fseeki64;\n#endif /* !defined(__arm__) && !defined(__aarch64__) */\n\n__int64 __cdecl _ftelli64(FILE* stream)\n{\n  fpos_t pos;\n  if (fgetpos (stream, &pos))\n    return -1LL;\n  else\n    return (__int64) pos;\n}\n\n__int64 __cdecl (*__MINGW_IMP_SYMBOL(_ftelli64))(FILE*) = _ftelli64;",
    "assembly": ".file\t\"114.c\"\n\t.text\n\t.globl\t_ftelli64\n\t.def\t_ftelli64;\t.scl\t2;\t.type\t32;\t.endef\n\t.seh_proc\t_ftelli64\n_ftelli64:\n\tsubq\t$56, %rsp\n\t.seh_stackalloc\t56\n\t.seh_endprologue\n\tleaq\t40(%rsp), %rdx\n\tcall\tfgetpos\n\tmovl\t%eax, %edx\n\torq\t$-1, %rax\n\ttestl\t%edx, %edx\n\tjne\t.L1\n\tmovq\t40(%rsp), %rax\n.L1:\n\taddq\t$56, %rsp\n\tret\n\t.seh_endproc\n\t.globl\t_fseeki64\n\t.def\t_fseeki64;\t.scl\t2;\t.type\t32;\t.endef\n\t.seh_proc\t_fseeki64\n_fseeki64:\n\tpushq\t%rsi\n\t.seh_pushreg\t%rsi\n\tpushq\t%rbx\n\t.seh_pushreg\t%rbx\n\tsubq\t$56, %rsp\n\t.seh_stackalloc\t56\n\t.seh_endprologue\n\tmovq\t%rcx, %rsi\n\tmovq\t%rdx, %rbx\n\tcmpl\t$1, %r8d\n\tjne\t.L6\n\tleaq\t40(%rsp), %rdx\n\tcall\tfgetpos\n\ttestl\t%eax, %eax\n\tjne\t.L7\n\taddq\t40(%rsp), %rbx\n\tjmp\t.L8\n.L6:\n\tcmpl\t$2, %r8d\n\tjne\t.L9\n\tcall\tfflush\n\tmovq\t%rsi, %rcx\n\tcall\t*__imp__fileno(%rip)\n\tmovl\t%eax, %ecx\n\tcall\t*__imp__filelengthi64(%rip)\n\taddq\t%rax, %rbx\n\tjmp\t.L8\n.L9:\n\ttestl\t%r8d, %r8d\n\tje\t.L8\n\tcall\t*__imp__errno(%rip)\n\tmovl\t$22, (%rax)\n.L7:\n\torl\t$-1, %eax\n\tjmp\t.L5\n.L8:\n\tleaq\t40(%rsp), %rdx\n\tmovq\t%rsi, %rcx\n\tmovq\t%rbx, 40(%rsp)\n\tcall\tfsetpos\n.L5:\n\taddq\t$56, %rsp\n\tpopq\t%rbx\n\tpopq\t%rsi\n\tret\n\t.seh_endproc\n\t.globl\t__imp__ftelli64\n\t.data\n\t.align 8\n__imp__ftelli64:\n\t.quad\t_ftelli64\n\t.globl\t__imp__fseeki64\n\t.align 8\n__imp__fseeki64:\n\t.quad\t_fseeki64\n\t.ident\t\"GCC: (MinGW-W64 x86_64-ucrt-posix-seh, built by Brecht Sanders, r8) 13.2.0\"\n\t.def\tfgetpos;\t.scl\t2;\t.type\t32;\t.endef\n\t.def\tfflush;\t.scl\t2;\t.type\t32;\t.endef\n\t.def\tfsetpos;\t.scl\t2;\t.type\t32;\t.endef",
    "generation_time": 13.442794561386108,
    "tokens_generated": 511,
    "metrics": {
      "length_ratio": 0.4461190655614167,
      "line_ratio": 0.061224489795918366,
      "token_overlap": 0.0594059405940594,
      "token_precision": 0.0759493670886076,
      "keyword_coverage": 0.25,
      "keyword_match_ratio": 0.6,
      "brace_ratio": 0.6,
      "semicolon_ratio": 1.6666666666666667
    }
  },
  {
    "filename": "125",
    "optimization": "Osize",
    "generated_c": ".fileRGB(255), 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290]\nIn the example above, in order to work with this particular set of modules, we need to have a file descriptor for each module and add it from our binary format into C++11 that uses these files as input or output streams during compilation. We also want to store all data on how much time has elapsed between such programs being executed at compile time compared to when they were compiled before execution was started. In other words, once an executable is created there are no additional resources available which can be used to help us make sure every program runs properly if necessary without further overhead caused by runtime changes made throughout the process. However, depending upon your coding style you may choose to use code written only after compiling any system function within those parts of your library so that everyone knows what's happening here - even though most programmers already know exactly where their functions go wrong!",
    "reference_c": "/* See LICENSE for license details. */\n\n#include <stdint.h>\n#include <sys/types.h>\n\n/* Arbitrary size */\n#define HISTSIZE      2000\n\n/* macros */\n#define MIN(a, b)\t\t((a) < (b) ? (a) : (b))\n#define MAX(a, b)\t\t((a) < (b) ? (b) : (a))\n#define LEN(a)\t\t\t(sizeof(a) / sizeof(a)[0])\n#define BETWEEN(x, a, b)\t((a) <= (x) && (x) <= (b))\n#define DIVCEIL(n, d)\t\t(((n) + ((d) - 1)) / (d))\n#define DEFAULT(a, b)\t\t(a) = (a) ? (a) : (b)\n#define LIMIT(x, a, b)\t\t(x) = (x) < (a) ? (a) : (x) > (b) ? (b) : (x)\n#define ATTRCMP(a, b)\t\t((a).mode != (b).mode || (a).fg != (b).fg || \\\n\t\t\t\t(a).bg != (b).bg)\n#define TIMEDIFF(t1, t2)\t((t1.tv_sec-t2.tv_sec)*1000 + \\\n\t\t\t\t(t1.tv_nsec-t2.tv_nsec)/1E6)\n#define MODBIT(x, set, bit)\t((set) ? ((x) |= (bit)) : ((x) &= ~(bit)))\n\n#define TRUECOLOR(r,g,b)\t(1 << 24 | (r) << 16 | (g) << 8 | (b))\n#define IS_TRUECOL(x)\t\t(1 << 24 & (x))\n#define TLINE(y)       ((y) < term.scr ? term.hist[((y) + term.histi - term.scr \\\n               + HISTSIZE + 1) % HISTSIZE] : term.line[(y) - term.scr])\n\nenum glyph_attribute {\n\tATTR_NULL       = 0,\n\tATTR_BOLD       = 1 << 0,\n\tATTR_FAINT      = 1 << 1,\n\tATTR_ITALIC     = 1 << 2,\n\tATTR_UNDERLINE  = 1 << 3,\n\tATTR_BLINK      = 1 << 4,\n\tATTR_REVERSE    = 1 << 5,\n\tATTR_INVISIBLE  = 1 << 6,\n\tATTR_STRUCK     = 1 << 7,\n\tATTR_WRAP       = 1 << 8,\n\tATTR_WIDE       = 1 << 9,\n\tATTR_WDUMMY     = 1 << 10,\n\tATTR_BOLD_FAINT = ATTR_BOLD | ATTR_FAINT,\n};\n\nenum selection_mode {\n\tSEL_IDLE = 0,\n\tSEL_EMPTY = 1,\n\tSEL_READY = 2\n};\n\nenum selection_type {\n\tSEL_REGULAR = 1,\n\tSEL_RECTANGULAR = 2\n};\n\nenum selection_snap {\n\tSNAP_WORD = 1,\n\tSNAP_LINE = 2\n};\n\ntypedef unsigned char uchar;\ntypedef unsigned int uint;\ntypedef unsigned long ulong;\ntypedef unsigned short ushort;\n\ntypedef uint_least32_t Rune;\n\n#define Glyph Glyph_\ntypedef struct {\n\tRune u;           /* character code */\n\tushort mode;      /* attribute flags */\n\tuint32_t fg;      /* foreground  */\n\tuint32_t bg;      /* background  */\n} Glyph;\n\ntypedef Glyph *Line;\n\ntypedef union {\n\tint i;\n\tuint ui;\n\tfloat f;\n\tconst void *v;\n} Arg;\n\ntypedef struct {\n\tuint b;\n\tuint mask;\n\tvoid (*func)(const Arg *);\n\tconst Arg arg;\n} MouseKey;\n\nvoid die(const char *, ...);\nvoid redraw(void);\nvoid draw(void);\n\nvoid iso14755(const Arg *);\nvoid printscreen(const Arg *);\nvoid printsel(const Arg *);\nvoid sendbreak(const Arg *);\nvoid toggleprinter(const Arg *);\n\nint tattrset(int);\nvoid tnew(int, int);\nvoid tresize(int, int);\nvoid tsetdirtattr(int);\nvoid ttyhangup(void);\nint ttynew(char *, char *, char *, char **);\nsize_t ttyread(void);\nvoid ttyresize(int, int);\nvoid ttywrite(const char *, size_t, int);\n\nvoid resettitle(void);\n\nvoid selclear(void);\nvoid selinit(void);\nvoid selstart(int, int, int);\nvoid selextend(int, int, int, int);\nint selected(int, int);\nchar *getsel(void);\n\nsize_t utf8encode(Rune, char *);\n\nvoid *xmalloc(size_t);\nvoid *xrealloc(void *, size_t);\nchar *xstrdup(char *);\n\nvoid kscrolldown(const Arg *);\nvoid kscrollup(const Arg *);\n\n/* config.h globals */\nextern char *utmp;\nextern char *stty_args;\nextern char *vtiden;\nextern char *worddelimiters;\nextern int allowaltscreen;\nextern char *termname;\nextern int usealtcolors;\nextern unsigned int tabspaces;\nextern unsigned int defaultfg;\nextern unsigned int defaultbg;\nextern MouseKey mkeys[];",
    "assembly": ".file\t\"125.c\"\n\t.text\n\t.ident\t\"GCC: (MinGW-W64 x86_64-ucrt-posix-seh, built by Brecht Sanders, r8) 13.2.0\"",
    "generation_time": 6.18999981880188,
    "tokens_generated": 251,
    "metrics": {
      "length_ratio": 0.353068146777675,
      "line_ratio": 0.014285714285714285,
      "token_overlap": 0.012875536480686695,
      "token_precision": 0.01639344262295082,
      "keyword_coverage": 0.25,
      "keyword_match_ratio": 0.375,
      "brace_ratio": 0.0,
      "semicolon_ratio": 0.0
    }
  },
  {
    "filename": "140",
    "optimization": "Osize",
    "generated_c": ".FileParser <~(x86_64-ucrt-posi | '$' $filename; ++print(\"\\\\\\%d\\\"\", + \"\\\\\\%d\\\"\"), #{fmt}]\n/usr/bin/lds/lib/fileparser .parse() , '/etc/config/libraries/fileparser.xml' , /etc/_local/bin/lds/lib/fileparser.xml' , /etc/config/libraries/fileparser.xml' , /etc/config/libraries/fileparser.xml' , /etc/*/fileparser.xml' , /etc/config/libraries/fileparser.xml' ) , /etc/init.cgi/rc/fileparser.xml' , /etc/init.cgi/rc/fileparser.html' , /etc/init.cgi...\nI was able to use the fileparser as a function of my own and it is very useful if you are using Perl or Python 2 which I am working on now for your system!",
    "reference_c": "// Copyright (C) 2016-2019 Semtech (International) AG. All rights reserved.\n//\n// This file is subject to the terms and conditions defined in file 'LICENSE',\n// which is part of this source code package.\n\n\n\n\n\n\n\n\n\n\n\n\n// This page intentionally left blank.",
    "assembly": ".file\t\"140.c\"\n\t.text\n\t.ident\t\"GCC: (MinGW-W64 x86_64-ucrt-posix-seh, built by Brecht Sanders, r8) 13.2.0\"",
    "generation_time": 6.856001138687134,
    "tokens_generated": 224,
    "metrics": {
      "length_ratio": 2.37007874015748,
      "line_ratio": 0.17647058823529413,
      "token_overlap": 0.1875,
      "token_precision": 0.1111111111111111,
      "keyword_coverage": 0.25,
      "keyword_match_ratio": 3.0,
      "brace_ratio": 0,
      "semicolon_ratio": 0
    }
  },
  {
    "filename": "143",
    "optimization": "Osize",
    "generated_c": ".x = .fmt() ; gcc(gcc(gcc(gcc(gcc(gcc(gcc(gcc(gcc(gcc(gcc(gcc(gcc(gct(gct(gct(gct(gct(gct(gct(gct(gct(gct(gct(gct(gct(gct(gct(gct(gct(gct(gct(gct(g*gct(gct(gct(gct(gct(gct(gct(gct(g))))))))); +1 \"{%20} %s\\\" }\"; +3 \"{%20} %s\\\" }\"; +4 \"{%20} /\" ; +5 \"{%20} %s\\\" }\"; +6 \"{%20} /\" ; +7 \"{%20} %S\\\" }\"; +8 \"{%20} %S\\\" }, {%20} %S\\\" }\"; +9 \"{%20} %S\\\" }\"; +10 \"{%20} %S\\\" }\"; +11 \"{%19} %S\\$//#/+/.F:\\#\\\\*//^\\/}\\zac \\eotr -X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | Y | X | X | X | X | X | X , X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X | X |",
    "reference_c": "#pragma option push -b -a8 -pc -A- /*P_O_Push*/\n\n/* this ALWAYS GENERATED file contains the definitions for the interfaces */\n\n\n\n\n\n/* File created by MIDL compiler version 3.01.75 */\n\n/* at Fri Sep 18 16:27:35 1998\n\n */\n\n/* Compiler settings for ad1ex.idl:\n\n    Oicf (OptLev=i2), W1, Zp8, env=Win32, ms_ext, c_ext\n\n    error checks: none\n\n*/\n\n//@@MIDL_FILE_HEADING(  )\n\n#include \"rpc.h\"\n\n#include \"rpcndr.h\"\n\n#ifndef COM_NO_WINDOWS_H\n\n#include \"windows.h\"\n\n#include \"ole2.h\"\n\n#endif /*COM_NO_WINDOWS_H*/\n\n\n\n#ifndef __ad1ex_h__\n\n#define __ad1ex_h__\n\n\n\n#ifdef __cplusplus\n\nextern \"C\"{\n\n#endif \n\n\n\n/* Forward Declarations */ \n\n\n\n#ifndef __IDebugApplicationEx_FWD_DEFINED__\n\n#define __IDebugApplicationEx_FWD_DEFINED__\n\ntypedef interface IDebugApplicationEx IDebugApplicationEx;\n\n#endif \t/* __IDebugApplicationEx_FWD_DEFINED__ */\n\n\n\n\n\n#ifndef __IRemoteDebugApplicationEx_FWD_DEFINED__\n\n#define __IRemoteDebugApplicationEx_FWD_DEFINED__\n\ntypedef interface IRemoteDebugApplicationEx IRemoteDebugApplicationEx;\n\n#endif \t/* __IRemoteDebugApplicationEx_FWD_DEFINED__ */\n\n\n\n\n\n#ifndef __IRemoteDebugApplicationThreadEx_FWD_DEFINED__\n\n#define __IRemoteDebugApplicationThreadEx_FWD_DEFINED__\n\ntypedef interface IRemoteDebugApplicationThreadEx IRemoteDebugApplicationThreadEx;\n\n#endif \t/* __IRemoteDebugApplicationThreadEx_FWD_DEFINED__ */\n\n\n\n\n\n#ifndef __IDebugDocumentHelperEx_FWD_DEFINED__\n\n#define __IDebugDocumentHelperEx_FWD_DEFINED__\n\ntypedef interface IDebugDocumentHelperEx IDebugDocumentHelperEx;\n\n#endif \t/* __IDebugDocumentHelperEx_FWD_DEFINED__ */\n\n\n\n\n\n#ifndef __IDebugHelperEx_FWD_DEFINED__\n\n#define __IDebugHelperEx_FWD_DEFINED__\n\ntypedef interface IDebugHelperEx IDebugHelperEx;\n\n#endif \t/* __IDebugHelperEx_FWD_DEFINED__ */\n\n\n\n\n\n#ifndef __IDebugSetValueCallback_FWD_DEFINED__\n\n#define __IDebugSetValueCallback_FWD_DEFINED__\n\ntypedef interface IDebugSetValueCallback IDebugSetValueCallback;\n\n#endif \t/* __IDebugSetValueCallback_FWD_DEFINED__ */\n\n\n\n\n\n#ifndef __ISetNextStatement_FWD_DEFINED__\n\n#define __ISetNextStatement_FWD_DEFINED__\n\ntypedef interface ISetNextStatement ISetNextStatement;\n\n#endif \t/* __ISetNextStatement_FWD_DEFINED__ */\n\n\n\n\n\n#ifndef __IDebugSessionProviderEx_FWD_DEFINED__\n\n#define __IDebugSessionProviderEx_FWD_DEFINED__\n\ntypedef interface IDebugSessionProviderEx IDebugSessionProviderEx;\n\n#endif \t/* __IDebugSessionProviderEx_FWD_DEFINED__ */\n\n\n\n\n\n/* header files for imported files */\n\n#include \"activdbg.h\"\n\n\n\nvoid __RPC_FAR * __RPC_USER MIDL_user_allocate(size_t);\n\nvoid __RPC_USER MIDL_user_free( void __RPC_FAR * ); \n\n\n\n/****************************************\n\n * Generated header for interface: __MIDL_itf_ad1ex_0000\n\n * at Fri Sep 18 16:27:35 1998\n\n * using MIDL 3.01.75\n\n ****************************************/\n\n/* [local] */ \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDEFINE_GUID(IID_IDebugHelperExOld, 0xE0284F00, 0xEDA1, 0x11d0, 0xB4, 0x52, 0x00, 0xA0, 0x24, 0x4A, 0x1D, 0xD2);\n\n\n\n\n\nextern RPC_IF_HANDLE __MIDL_itf_ad1ex_0000_v0_0_c_ifspec;\n\nextern RPC_IF_HANDLE __MIDL_itf_ad1ex_0000_v0_0_s_ifspec;\n\n\n\n#ifndef __IDebugApplicationEx_INTERFACE_DEFINED__\n\n#define __IDebugApplicationEx_INTERFACE_DEFINED__\n\n\n\n/****************************************\n\n * Generated header for interface: IDebugApplicationEx\n\n * at Fri Sep 18 16:27:35 1998\n\n * using MIDL 3.01.75\n\n ****************************************/\n\n/* [unique][uuid][object] */ \n\n\n\n\n\n\n\nEXTERN_C const IID IID_IDebugApplicationEx;\n\n\n\n#if defined(__cplusplus) && !defined(CINTERFACE)\n\n    \n\n    interface DECLSPEC_UUID(\"51973C00-CB0C-11d0-B5C9-00A0244A0E7A\")\n\n    IDebugApplicationEx : public IUnknown\n\n    {\n\n    public:\n\n        virtual HRESULT STDMETHODCALLTYPE onCallEnter( \n\n            /* [in] */ DWORD dwLim) = 0;\n\n        \n\n        virtual HRESULT STDMETHODCALLTYPE onCallOut( \n\n            /* [in] */ DWORD dwLim,\n\n            /* [in] */ DWORD dwAddrDest) = 0;\n\n        \n\n        virtual HRESULT STDMETHODCALLTYPE onCallReturn( \n\n            /* [in] */ DWORD dwLim) = 0;\n\n        \n\n        virtual HRESULT STDMETHODCALLTYPE onCallExit( \n\n            /* [in] */ DWORD dwLim,\n\n            /* [in] */ DWORD dwAddrDest) = 0;\n\n        \n\n    };\n\n    \n\n#else \t/* C style interface */\n\n\n\n    typedef struct IDebugApplicationExVtbl\n\n    {\n\n        BEGIN_INTERFACE\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( \n\n            IDebugApplicationEx __RPC_FAR * This,\n\n            /* [in] */ REFIID riid,\n\n            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);\n\n        \n\n        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( \n\n            IDebugApplicationEx __RPC_FAR * This);\n\n        \n\n        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( \n\n            IDebugApplicationEx __RPC_FAR * This);\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *onCallEnter )( \n\n            IDebugApplicationEx __RPC_FAR * This,\n\n            /* [in] */ DWORD dwLim);\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *onCallOut )( \n\n            IDebugApplicationEx __RPC_FAR * This,\n\n            /* [in] */ DWORD dwLim,\n\n            /* [in] */ DWORD dwAddrDest);\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *onCallReturn )( \n\n            IDebugApplicationEx __RPC_FAR * This,\n\n            /* [in] */ DWORD dwLim);\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *onCallExit )( \n\n            IDebugApplicationEx __RPC_FAR * This,\n\n            /* [in] */ DWORD dwLim,\n\n            /* [in] */ DWORD dwAddrDest);\n\n        \n\n        END_INTERFACE\n\n    } IDebugApplicationExVtbl;\n\n\n\n    interface IDebugApplicationEx\n\n    {\n\n        CONST_VTBL struct IDebugApplicationExVtbl __RPC_FAR *lpVtbl;\n\n    };\n\n\n\n    \n\n\n\n#ifdef COBJMACROS\n\n\n\n\n\n#define IDebugApplicationEx_QueryInterface(This,riid,ppvObject)\t\\\n\n    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)\n\n\n\n#define IDebugApplicationEx_AddRef(This)\t\\\n\n    (This)->lpVtbl -> AddRef(This)\n\n\n\n#define IDebugApplicationEx_Release(This)\t\\\n\n    (This)->lpVtbl -> Release(This)\n\n\n\n\n\n#define IDebugApplicationEx_onCallEnter(This,dwLim)\t\\\n\n    (This)->lpVtbl -> onCallEnter(This,dwLim)\n\n\n\n#define IDebugApplicationEx_onCallOut(This,dwLim,dwAddrDest)\t\\\n\n    (This)->lpVtbl -> onCallOut(This,dwLim,dwAddrDest)\n\n\n\n#define IDebugApplicationEx_onCallReturn(This,dwLim)\t\\\n\n    (This)->lpVtbl -> onCallReturn(This,dwLim)\n\n\n\n#define IDebugApplicationEx_onCallExit(This,dwLim,dwAddrDest)\t\\\n\n    (This)->lpVtbl -> onCallExit(This,dwLim,dwAddrDest)\n\n\n\n#endif /* COBJMACROS */\n\n\n\n\n\n#endif \t/* C style interface */\n\n\n\n\n\n\n\nHRESULT STDMETHODCALLTYPE IDebugApplicationEx_onCallEnter_Proxy( \n\n    IDebugApplicationEx __RPC_FAR * This,\n\n    /* [in] */ DWORD dwLim);\n\n\n\n\n\nvoid __RPC_STUB IDebugApplicationEx_onCallEnter_Stub(\n\n    IRpcStubBuffer *This,\n\n    IRpcChannelBuffer *_pRpcChannelBuffer,\n\n    PRPC_MESSAGE _pRpcMessage,\n\n    DWORD *_pdwStubPhase);\n\n\n\n\n\nHRESULT STDMETHODCALLTYPE IDebugApplicationEx_onCallOut_Proxy( \n\n    IDebugApplicationEx __RPC_FAR * This,\n\n    /* [in] */ DWORD dwLim,\n\n    /* [in] */ DWORD dwAddrDest);\n\n\n\n\n\nvoid __RPC_STUB IDebugApplicationEx_onCallOut_Stub(\n\n    IRpcStubBuffer *This,\n\n    IRpcChannelBuffer *_pRpcChannelBuffer,\n\n    PRPC_MESSAGE _pRpcMessage,\n\n    DWORD *_pdwStubPhase);\n\n\n\n\n\nHRESULT STDMETHODCALLTYPE IDebugApplicationEx_onCallReturn_Proxy( \n\n    IDebugApplicationEx __RPC_FAR * This,\n\n    /* [in] */ DWORD dwLim);\n\n\n\n\n\nvoid __RPC_STUB IDebugApplicationEx_onCallReturn_Stub(\n\n    IRpcStubBuffer *This,\n\n    IRpcChannelBuffer *_pRpcChannelBuffer,\n\n    PRPC_MESSAGE _pRpcMessage,\n\n    DWORD *_pdwStubPhase);\n\n\n\n\n\nHRESULT STDMETHODCALLTYPE IDebugApplicationEx_onCallExit_Proxy( \n\n    IDebugApplicationEx __RPC_FAR * This,\n\n    /* [in] */ DWORD dwLim,\n\n    /* [in] */ DWORD dwAddrDest);\n\n\n\n\n\nvoid __RPC_STUB IDebugApplicationEx_onCallExit_Stub(\n\n    IRpcStubBuffer *This,\n\n    IRpcChannelBuffer *_pRpcChannelBuffer,\n\n    PRPC_MESSAGE _pRpcMessage,\n\n    DWORD *_pdwStubPhase);\n\n\n\n\n\n\n\n#endif \t/* __IDebugApplicationEx_INTERFACE_DEFINED__ */\n\n\n\n\n\n#ifndef __IRemoteDebugApplicationEx_INTERFACE_DEFINED__\n\n#define __IRemoteDebugApplicationEx_INTERFACE_DEFINED__\n\n\n\n/****************************************\n\n * Generated header for interface: IRemoteDebugApplicationEx\n\n * at Fri Sep 18 16:27:35 1998\n\n * using MIDL 3.01.75\n\n ****************************************/\n\n/* [unique][uuid][object] */ \n\n\n\n\n\n\n\nEXTERN_C const IID IID_IRemoteDebugApplicationEx;\n\n\n\n#if defined(__cplusplus) && !defined(CINTERFACE)\n\n    \n\n    interface DECLSPEC_UUID(\"51973C01-CB0C-11d0-B5C9-00A0244A0E7A\")\n\n    IRemoteDebugApplicationEx : public IUnknown\n\n    {\n\n    public:\n\n        virtual HRESULT STDMETHODCALLTYPE GetHostPid( \n\n            /* [out] */ DWORD __RPC_FAR *dwHostPid) = 0;\n\n        \n\n        virtual HRESULT STDMETHODCALLTYPE GetHostMachineName( \n\n            /* [out] */ BSTR __RPC_FAR *pbstrHostMachineName) = 0;\n\n        \n\n        virtual HRESULT STDMETHODCALLTYPE SetLocale( \n\n            /* [in] */ DWORD dwLangID) = 0;\n\n        \n\n        virtual HRESULT STDMETHODCALLTYPE ForceStepMode( \n\n            /* [in] */ IRemoteDebugApplicationThread __RPC_FAR *pStepThread) = 0;\n\n        \n\n        virtual HRESULT STDMETHODCALLTYPE RevokeBreak( void) = 0;\n\n        \n\n        virtual HRESULT STDMETHODCALLTYPE SetProxyBlanketAndAddRef( \n\n            /* [in] */ IUnknown __RPC_FAR *pUnk) = 0;\n\n        \n\n        virtual HRESULT STDMETHODCALLTYPE ReleaseFromSetProxyBlanket( \n\n            /* [in] */ IUnknown __RPC_FAR *pUnk) = 0;\n\n        \n\n    };\n\n    \n\n#else \t/* C style interface */\n\n\n\n    typedef struct IRemoteDebugApplicationExVtbl\n\n    {\n\n        BEGIN_INTERFACE\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( \n\n            IRemoteDebugApplicationEx __RPC_FAR * This,\n\n            /* [in] */ REFIID riid,\n\n            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);\n\n        \n\n        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( \n\n            IRemoteDebugApplicationEx __RPC_FAR * This);\n\n        \n\n        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( \n\n            IRemoteDebugApplicationEx __RPC_FAR * This);\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetHostPid )( \n\n            IRemoteDebugApplicationEx __RPC_FAR * This,\n\n            /* [out] */ DWORD __RPC_FAR *dwHostPid);\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetHostMachineName )( \n\n            IRemoteDebugApplicationEx __RPC_FAR * This,\n\n            /* [out] */ BSTR __RPC_FAR *pbstrHostMachineName);\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetLocale )( \n\n            IRemoteDebugApplicationEx __RPC_FAR * This,\n\n            /* [in] */ DWORD dwLangID);\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ForceStepMode )( \n\n            IRemoteDebugApplicationEx __RPC_FAR * This,\n\n            /* [in] */ IRemoteDebugApplicationThread __RPC_FAR *pStepThread);\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RevokeBreak )( \n\n            IRemoteDebugApplicationEx __RPC_FAR * This);\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetProxyBlanketAndAddRef )( \n\n            IRemoteDebugApplicationEx __RPC_FAR * This,\n\n            /* [in] */ IUnknown __RPC_FAR *pUnk);\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ReleaseFromSetProxyBlanket )( \n\n            IRemoteDebugApplicationEx __RPC_FAR * This,\n\n            /* [in] */ IUnknown __RPC_FAR *pUnk);\n\n        \n\n        END_INTERFACE\n\n    } IRemoteDebugApplicationExVtbl;\n\n\n\n    interface IRemoteDebugApplicationEx\n\n    {\n\n        CONST_VTBL struct IRemoteDebugApplicationExVtbl __RPC_FAR *lpVtbl;\n\n    };\n\n\n\n    \n\n\n\n#ifdef COBJMACROS\n\n\n\n\n\n#define IRemoteDebugApplicationEx_QueryInterface(This,riid,ppvObject)\t\\\n\n    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)\n\n\n\n#define IRemoteDebugApplicationEx_AddRef(This)\t\\\n\n    (This)->lpVtbl -> AddRef(This)\n\n\n\n#define IRemoteDebugApplicationEx_Release(This)\t\\\n\n    (This)->lpVtbl -> Release(This)\n\n\n\n\n\n#define IRemoteDebugApplicationEx_GetHostPid(This,dwHostPid)\t\\\n\n    (This)->lpVtbl -> GetHostPid(This,dwHostPid)\n\n\n\n#define IRemoteDebugApplicationEx_GetHostMachineName(This,pbstrHostMachineName)\t\\\n\n    (This)->lpVtbl -> GetHostMachineName(This,pbstrHostMachineName)\n\n\n\n#define IRemoteDebugApplicationEx_SetLocale(This,dwLangID)\t\\\n\n    (This)->lpVtbl -> SetLocale(This,dwLangID)\n\n\n\n#define IRemoteDebugApplicationEx_ForceStepMode(This,pStepThread)\t\\\n\n    (This)->lpVtbl -> ForceStepMode(This,pStepThread)\n\n\n\n#define IRemoteDebugApplicationEx_RevokeBreak(This)\t\\\n\n    (This)->lpVtbl -> RevokeBreak(This)\n\n\n\n#define IRemoteDebugApplicationEx_SetProxyBlanketAndAddRef(This,pUnk)\t\\\n\n    (This)->lpVtbl -> SetProxyBlanketAndAddRef(This,pUnk)\n\n\n\n#define IRemoteDebugApplicationEx_ReleaseFromSetProxyBlanket(This,pUnk)\t\\\n\n    (This)->lpVtbl -> ReleaseFromSetProxyBlanket(This,pUnk)\n\n\n\n#endif /* COBJMACROS */\n\n\n\n\n\n#endif \t/* C style interface */\n\n\n\n\n\n\n\nHRESULT STDMETHODCALLTYPE IRemoteDebugApplicationEx_GetHostPid_Proxy( \n\n    IRemoteDebugApplicationEx __RPC_FAR * This,\n\n    /* [out] */ DWORD __RPC_FAR *dwHostPid);\n\n\n\n\n\nvoid __RPC_STUB IRemoteDebugApplicationEx_GetHostPid_Stub(\n\n    IRpcStubBuffer *This,\n\n    IRpcChannelBuffer *_pRpcChannelBuffer,\n\n    PRPC_MESSAGE _pRpcMessage,\n\n    DWORD *_pdwStubPhase);\n\n\n\n\n\nHRESULT STDMETHODCALLTYPE IRemoteDebugApplicationEx_GetHostMachineName_Proxy( \n\n    IRemoteDebugApplicationEx __RPC_FAR * This,\n\n    /* [out] */ BSTR __RPC_FAR *pbstrHostMachineName);\n\n\n\n\n\nvoid __RPC_STUB IRemoteDebugApplicationEx_GetHostMachineName_Stub(\n\n    IRpcStubBuffer *This,\n\n    IRpcChannelBuffer *_pRpcChannelBuffer,\n\n    PRPC_MESSAGE _pRpcMessage,\n\n    DWORD *_pdwStubPhase);\n\n\n\n\n\nHRESULT STDMETHODCALLTYPE IRemoteDebugApplicationEx_SetLocale_Proxy( \n\n    IRemoteDebugApplicationEx __RPC_FAR * This,\n\n    /* [in] */ DWORD dwLangID);\n\n\n\n\n\nvoid __RPC_STUB IRemoteDebugApplicationEx_SetLocale_Stub(\n\n    IRpcStubBuffer *This,\n\n    IRpcChannelBuffer *_pRpcChannelBuffer,\n\n    PRPC_MESSAGE _pRpcMessage,\n\n    DWORD *_pdwStubPhase);\n\n\n\n\n\nHRESULT STDMETHODCALLTYPE IRemoteDebugApplicationEx_ForceStepMode_Proxy( \n\n    IRemoteDebugApplicationEx __RPC_FAR * This,\n\n    /* [in] */ IRemoteDebugApplicationThread __RPC_FAR *pStepThread);\n\n\n\n\n\nvoid __RPC_STUB IRemoteDebugApplicationEx_ForceStepMode_Stub(\n\n    IRpcStubBuffer *This,\n\n    IRpcChannelBuffer *_pRpcChannelBuffer,\n\n    PRPC_MESSAGE _pRpcMessage,\n\n    DWORD *_pdwStubPhase);\n\n\n\n\n\nHRESULT STDMETHODCALLTYPE IRemoteDebugApplicationEx_RevokeBreak_Proxy( \n\n    IRemoteDebugApplicationEx __RPC_FAR * This);\n\n\n\n\n\nvoid __RPC_STUB IRemoteDebugApplicationEx_RevokeBreak_Stub(\n\n    IRpcStubBuffer *This,\n\n    IRpcChannelBuffer *_pRpcChannelBuffer,\n\n    PRPC_MESSAGE _pRpcMessage,\n\n    DWORD *_pdwStubPhase);\n\n\n\n\n\nHRESULT STDMETHODCALLTYPE IRemoteDebugApplicationEx_SetProxyBlanketAndAddRef_Proxy( \n\n    IRemoteDebugApplicationEx __RPC_FAR * This,\n\n    /* [in] */ IUnknown __RPC_FAR *pUnk);\n\n\n\n\n\nvoid __RPC_STUB IRemoteDebugApplicationEx_SetProxyBlanketAndAddRef_Stub(\n\n    IRpcStubBuffer *This,\n\n    IRpcChannelBuffer *_pRpcChannelBuffer,\n\n    PRPC_MESSAGE _pRpcMessage,\n\n    DWORD *_pdwStubPhase);\n\n\n\n\n\nHRESULT STDMETHODCALLTYPE IRemoteDebugApplicationEx_ReleaseFromSetProxyBlanket_Proxy( \n\n    IRemoteDebugApplicationEx __RPC_FAR * This,\n\n    /* [in] */ IUnknown __RPC_FAR *pUnk);\n\n\n\n\n\nvoid __RPC_STUB IRemoteDebugApplicationEx_ReleaseFromSetProxyBlanket_Stub(\n\n    IRpcStubBuffer *This,\n\n    IRpcChannelBuffer *_pRpcChannelBuffer,\n\n    PRPC_MESSAGE _pRpcMessage,\n\n    DWORD *_pdwStubPhase);\n\n\n\n\n\n\n\n#endif \t/* __IRemoteDebugApplicationEx_INTERFACE_DEFINED__ */\n\n\n\n\n\n#ifndef __IRemoteDebugApplicationThreadEx_INTERFACE_DEFINED__\n\n#define __IRemoteDebugApplicationThreadEx_INTERFACE_DEFINED__\n\n\n\n/****************************************\n\n * Generated header for interface: IRemoteDebugApplicationThreadEx\n\n * at Fri Sep 18 16:27:35 1998\n\n * using MIDL 3.01.75\n\n ****************************************/\n\n/* [unique][uuid][object] */ \n\n\n\n\n\n\n\nEXTERN_C const IID IID_IRemoteDebugApplicationThreadEx;\n\n\n\n#if defined(__cplusplus) && !defined(CINTERFACE)\n\n    \n\n    interface DECLSPEC_UUID(\"B9B32B0C-9147-11d1-94EA-00C04FA302A1\")\n\n    IRemoteDebugApplicationThreadEx : public IUnknown\n\n    {\n\n    public:\n\n        virtual HRESULT STDMETHODCALLTYPE EnumGlobalExpressionContexts( \n\n            /* [out] */ IEnumDebugExpressionContexts __RPC_FAR *__RPC_FAR *ppEnum) = 0;\n\n        \n\n    };\n\n    \n\n#else \t/* C style interface */\n\n\n\n    typedef struct IRemoteDebugApplicationThreadExVtbl\n\n    {\n\n        BEGIN_INTERFACE\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( \n\n            IRemoteDebugApplicationThreadEx __RPC_FAR * This,\n\n            /* [in] */ REFIID riid,\n\n            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);\n\n        \n\n        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( \n\n            IRemoteDebugApplicationThreadEx __RPC_FAR * This);\n\n        \n\n        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( \n\n            IRemoteDebugApplicationThreadEx __RPC_FAR * This);\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *EnumGlobalExpressionContexts )( \n\n            IRemoteDebugApplicationThreadEx __RPC_FAR * This,\n\n            /* [out] */ IEnumDebugExpressionContexts __RPC_FAR *__RPC_FAR *ppEnum);\n\n        \n\n        END_INTERFACE\n\n    } IRemoteDebugApplicationThreadExVtbl;\n\n\n\n    interface IRemoteDebugApplicationThreadEx\n\n    {\n\n        CONST_VTBL struct IRemoteDebugApplicationThreadExVtbl __RPC_FAR *lpVtbl;\n\n    };\n\n\n\n    \n\n\n\n#ifdef COBJMACROS\n\n\n\n\n\n#define IRemoteDebugApplicationThreadEx_QueryInterface(This,riid,ppvObject)\t\\\n\n    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)\n\n\n\n#define IRemoteDebugApplicationThreadEx_AddRef(This)\t\\\n\n    (This)->lpVtbl -> AddRef(This)\n\n\n\n#define IRemoteDebugApplicationThreadEx_Release(This)\t\\\n\n    (This)->lpVtbl -> Release(This)\n\n\n\n\n\n#define IRemoteDebugApplicationThreadEx_EnumGlobalExpressionContexts(This,ppEnum)\t\\\n\n    (This)->lpVtbl -> EnumGlobalExpressionContexts(This,ppEnum)\n\n\n\n#endif /* COBJMACROS */\n\n\n\n\n\n#endif \t/* C style interface */\n\n\n\n\n\n\n\nHRESULT STDMETHODCALLTYPE IRemoteDebugApplicationThreadEx_EnumGlobalExpressionContexts_Proxy( \n\n    IRemoteDebugApplicationThreadEx __RPC_FAR * This,\n\n    /* [out] */ IEnumDebugExpressionContexts __RPC_FAR *__RPC_FAR *ppEnum);\n\n\n\n\n\nvoid __RPC_STUB IRemoteDebugApplicationThreadEx_EnumGlobalExpressionContexts_Stub(\n\n    IRpcStubBuffer *This,\n\n    IRpcChannelBuffer *_pRpcChannelBuffer,\n\n    PRPC_MESSAGE _pRpcMessage,\n\n    DWORD *_pdwStubPhase);\n\n\n\n\n\n\n\n#endif \t/* __IRemoteDebugApplicationThreadEx_INTERFACE_DEFINED__ */\n\n\n\n\n\n#ifndef __IDebugDocumentHelperEx_INTERFACE_DEFINED__\n\n#define __IDebugDocumentHelperEx_INTERFACE_DEFINED__\n\n\n\n/****************************************\n\n * Generated header for interface: IDebugDocumentHelperEx\n\n * at Fri Sep 18 16:27:35 1998\n\n * using MIDL 3.01.75\n\n ****************************************/\n\n/* [unique][uuid][object] */ \n\n\n\n\n\n\n\nEXTERN_C const IID IID_IDebugDocumentHelperEx;\n\n\n\n#if defined(__cplusplus) && !defined(CINTERFACE)\n\n    \n\n    interface DECLSPEC_UUID(\"51973C02-CB0C-11d0-B5C9-00A0244A0E7A\")\n\n    IDebugDocumentHelperEx : public IUnknown\n\n    {\n\n    public:\n\n        virtual HRESULT STDMETHODCALLTYPE SetDocumentClassId( \n\n            /* [in] */ CLSID clsidDocument) = 0;\n\n        \n\n    };\n\n    \n\n#else \t/* C style interface */\n\n\n\n    typedef struct IDebugDocumentHelperExVtbl\n\n    {\n\n        BEGIN_INTERFACE\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( \n\n            IDebugDocumentHelperEx __RPC_FAR * This,\n\n            /* [in] */ REFIID riid,\n\n            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);\n\n        \n\n        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( \n\n            IDebugDocumentHelperEx __RPC_FAR * This);\n\n        \n\n        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( \n\n            IDebugDocumentHelperEx __RPC_FAR * This);\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetDocumentClassId )( \n\n            IDebugDocumentHelperEx __RPC_FAR * This,\n\n            /* [in] */ CLSID clsidDocument);\n\n        \n\n        END_INTERFACE\n\n    } IDebugDocumentHelperExVtbl;\n\n\n\n    interface IDebugDocumentHelperEx\n\n    {\n\n        CONST_VTBL struct IDebugDocumentHelperExVtbl __RPC_FAR *lpVtbl;\n\n    };\n\n\n\n    \n\n\n\n#ifdef COBJMACROS\n\n\n\n\n\n#define IDebugDocumentHelperEx_QueryInterface(This,riid,ppvObject)\t\\\n\n    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)\n\n\n\n#define IDebugDocumentHelperEx_AddRef(This)\t\\\n\n    (This)->lpVtbl -> AddRef(This)\n\n\n\n#define IDebugDocumentHelperEx_Release(This)\t\\\n\n    (This)->lpVtbl -> Release(This)\n\n\n\n\n\n#define IDebugDocumentHelperEx_SetDocumentClassId(This,clsidDocument)\t\\\n\n    (This)->lpVtbl -> SetDocumentClassId(This,clsidDocument)\n\n\n\n#endif /* COBJMACROS */\n\n\n\n\n\n#endif \t/* C style interface */\n\n\n\n\n\n\n\nHRESULT STDMETHODCALLTYPE IDebugDocumentHelperEx_SetDocumentClassId_Proxy( \n\n    IDebugDocumentHelperEx __RPC_FAR * This,\n\n    /* [in] */ CLSID clsidDocument);\n\n\n\n\n\nvoid __RPC_STUB IDebugDocumentHelperEx_SetDocumentClassId_Stub(\n\n    IRpcStubBuffer *This,\n\n    IRpcChannelBuffer *_pRpcChannelBuffer,\n\n    PRPC_MESSAGE _pRpcMessage,\n\n    DWORD *_pdwStubPhase);\n\n\n\n\n\n\n\n#endif \t/* __IDebugDocumentHelperEx_INTERFACE_DEFINED__ */\n\n\n\n\n\n#ifndef __IDebugHelperEx_INTERFACE_DEFINED__\n\n#define __IDebugHelperEx_INTERFACE_DEFINED__\n\n\n\n/****************************************\n\n * Generated header for interface: IDebugHelperEx\n\n * at Fri Sep 18 16:27:35 1998\n\n * using MIDL 3.01.75\n\n ****************************************/\n\n/* [local][unique][helpstring][uuid][object] */ \n\n\n\n\n\n\n\nEXTERN_C const IID IID_IDebugHelperEx;\n\n\n\n#if defined(__cplusplus) && !defined(CINTERFACE)\n\n    \n\n    interface DECLSPEC_UUID(\"51973C08-CB0C-11d0-B5C9-00A0244A0E7A\")\n\n    IDebugHelperEx : public IUnknown\n\n    {\n\n    public:\n\n        virtual HRESULT STDMETHODCALLTYPE CreatePropertyBrowserFromError( \n\n            /* [in] */ IActiveScriptError __RPC_FAR *pase,\n\n            /* [in] */ LPCOLESTR pszName,\n\n            /* [in] */ IDebugApplicationThread __RPC_FAR *pdat,\n\n            /* [in] */ IDebugFormatter __RPC_FAR *pdf,\n\n            /* [out] */ IDebugProperty __RPC_FAR *__RPC_FAR *ppdp) = 0;\n\n        \n\n        virtual HRESULT STDMETHODCALLTYPE CreateWriteablePropertyBrowser( \n\n            /* [in] */ VARIANT __RPC_FAR *pvar,\n\n            /* [in] */ LPCOLESTR bstrName,\n\n            /* [in] */ IDebugApplicationThread __RPC_FAR *pdat,\n\n            /* [in] */ IDebugFormatter __RPC_FAR *pdf,\n\n            /* [in] */ IDebugSetValueCallback __RPC_FAR *pdsvcb,\n\n            /* [out] */ IDebugProperty __RPC_FAR *__RPC_FAR *ppdob) = 0;\n\n        \n\n        virtual HRESULT STDMETHODCALLTYPE CreatePropertyBrowserFromCodeContext( \n\n            /* [in] */ IDebugCodeContext __RPC_FAR *pdcc,\n\n            /* [in] */ LPCOLESTR pszName,\n\n            /* [in] */ IDebugApplicationThread __RPC_FAR *pdat,\n\n            /* [out] */ IDebugProperty __RPC_FAR *__RPC_FAR *ppdp) = 0;\n\n        \n\n    };\n\n    \n\n#else \t/* C style interface */\n\n\n\n    typedef struct IDebugHelperExVtbl\n\n    {\n\n        BEGIN_INTERFACE\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( \n\n            IDebugHelperEx __RPC_FAR * This,\n\n            /* [in] */ REFIID riid,\n\n            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);\n\n        \n\n        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( \n\n            IDebugHelperEx __RPC_FAR * This);\n\n        \n\n        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( \n\n            IDebugHelperEx __RPC_FAR * This);\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CreatePropertyBrowserFromError )( \n\n            IDebugHelperEx __RPC_FAR * This,\n\n            /* [in] */ IActiveScriptError __RPC_FAR *pase,\n\n            /* [in] */ LPCOLESTR pszName,\n\n            /* [in] */ IDebugApplicationThread __RPC_FAR *pdat,\n\n            /* [in] */ IDebugFormatter __RPC_FAR *pdf,\n\n            /* [out] */ IDebugProperty __RPC_FAR *__RPC_FAR *ppdp);\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CreateWriteablePropertyBrowser )( \n\n            IDebugHelperEx __RPC_FAR * This,\n\n            /* [in] */ VARIANT __RPC_FAR *pvar,\n\n            /* [in] */ LPCOLESTR bstrName,\n\n            /* [in] */ IDebugApplicationThread __RPC_FAR *pdat,\n\n            /* [in] */ IDebugFormatter __RPC_FAR *pdf,\n\n            /* [in] */ IDebugSetValueCallback __RPC_FAR *pdsvcb,\n\n            /* [out] */ IDebugProperty __RPC_FAR *__RPC_FAR *ppdob);\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CreatePropertyBrowserFromCodeContext )( \n\n            IDebugHelperEx __RPC_FAR * This,\n\n            /* [in] */ IDebugCodeContext __RPC_FAR *pdcc,\n\n            /* [in] */ LPCOLESTR pszName,\n\n            /* [in] */ IDebugApplicationThread __RPC_FAR *pdat,\n\n            /* [out] */ IDebugProperty __RPC_FAR *__RPC_FAR *ppdp);\n\n        \n\n        END_INTERFACE\n\n    } IDebugHelperExVtbl;\n\n\n\n    interface IDebugHelperEx\n\n    {\n\n        CONST_VTBL struct IDebugHelperExVtbl __RPC_FAR *lpVtbl;\n\n    };\n\n\n\n    \n\n\n\n#ifdef COBJMACROS\n\n\n\n\n\n#define IDebugHelperEx_QueryInterface(This,riid,ppvObject)\t\\\n\n    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)\n\n\n\n#define IDebugHelperEx_AddRef(This)\t\\\n\n    (This)->lpVtbl -> AddRef(This)\n\n\n\n#define IDebugHelperEx_Release(This)\t\\\n\n    (This)->lpVtbl -> Release(This)\n\n\n\n\n\n#define IDebugHelperEx_CreatePropertyBrowserFromError(This,pase,pszName,pdat,pdf,ppdp)\t\\\n\n    (This)->lpVtbl -> CreatePropertyBrowserFromError(This,pase,pszName,pdat,pdf,ppdp)\n\n\n\n#define IDebugHelperEx_CreateWriteablePropertyBrowser(This,pvar,bstrName,pdat,pdf,pdsvcb,ppdob)\t\\\n\n    (This)->lpVtbl -> CreateWriteablePropertyBrowser(This,pvar,bstrName,pdat,pdf,pdsvcb,ppdob)\n\n\n\n#define IDebugHelperEx_CreatePropertyBrowserFromCodeContext(This,pdcc,pszName,pdat,ppdp)\t\\\n\n    (This)->lpVtbl -> CreatePropertyBrowserFromCodeContext(This,pdcc,pszName,pdat,ppdp)\n\n\n\n#endif /* COBJMACROS */\n\n\n\n\n\n#endif \t/* C style interface */\n\n\n\n\n\n\n\nHRESULT STDMETHODCALLTYPE IDebugHelperEx_CreatePropertyBrowserFromError_Proxy( \n\n    IDebugHelperEx __RPC_FAR * This,\n\n    /* [in] */ IActiveScriptError __RPC_FAR *pase,\n\n    /* [in] */ LPCOLESTR pszName,\n\n    /* [in] */ IDebugApplicationThread __RPC_FAR *pdat,\n\n    /* [in] */ IDebugFormatter __RPC_FAR *pdf,\n\n    /* [out] */ IDebugProperty __RPC_FAR *__RPC_FAR *ppdp);\n\n\n\n\n\nvoid __RPC_STUB IDebugHelperEx_CreatePropertyBrowserFromError_Stub(\n\n    IRpcStubBuffer *This,\n\n    IRpcChannelBuffer *_pRpcChannelBuffer,\n\n    PRPC_MESSAGE _pRpcMessage,\n\n    DWORD *_pdwStubPhase);\n\n\n\n\n\nHRESULT STDMETHODCALLTYPE IDebugHelperEx_CreateWriteablePropertyBrowser_Proxy( \n\n    IDebugHelperEx __RPC_FAR * This,\n\n    /* [in] */ VARIANT __RPC_FAR *pvar,\n\n    /* [in] */ LPCOLESTR bstrName,\n\n    /* [in] */ IDebugApplicationThread __RPC_FAR *pdat,\n\n    /* [in] */ IDebugFormatter __RPC_FAR *pdf,\n\n    /* [in] */ IDebugSetValueCallback __RPC_FAR *pdsvcb,\n\n    /* [out] */ IDebugProperty __RPC_FAR *__RPC_FAR *ppdob);\n\n\n\n\n\nvoid __RPC_STUB IDebugHelperEx_CreateWriteablePropertyBrowser_Stub(\n\n    IRpcStubBuffer *This,\n\n    IRpcChannelBuffer *_pRpcChannelBuffer,\n\n    PRPC_MESSAGE _pRpcMessage,\n\n    DWORD *_pdwStubPhase);\n\n\n\n\n\nHRESULT STDMETHODCALLTYPE IDebugHelperEx_CreatePropertyBrowserFromCodeContext_Proxy( \n\n    IDebugHelperEx __RPC_FAR * This,\n\n    /* [in] */ IDebugCodeContext __RPC_FAR *pdcc,\n\n    /* [in] */ LPCOLESTR pszName,\n\n    /* [in] */ IDebugApplicationThread __RPC_FAR *pdat,\n\n    /* [out] */ IDebugProperty __RPC_FAR *__RPC_FAR *ppdp);\n\n\n\n\n\nvoid __RPC_STUB IDebugHelperEx_CreatePropertyBrowserFromCodeContext_Stub(\n\n    IRpcStubBuffer *This,\n\n    IRpcChannelBuffer *_pRpcChannelBuffer,\n\n    PRPC_MESSAGE _pRpcMessage,\n\n    DWORD *_pdwStubPhase);\n\n\n\n\n\n\n\n#endif \t/* __IDebugHelperEx_INTERFACE_DEFINED__ */\n\n\n\n\n\n#ifndef __IDebugSetValueCallback_INTERFACE_DEFINED__\n\n#define __IDebugSetValueCallback_INTERFACE_DEFINED__\n\n\n\n/****************************************\n\n * Generated header for interface: IDebugSetValueCallback\n\n * at Fri Sep 18 16:27:35 1998\n\n * using MIDL 3.01.75\n\n ****************************************/\n\n/* [local][unique][helpstring][uuid][object] */ \n\n\n\n\n\n\n\nEXTERN_C const IID IID_IDebugSetValueCallback;\n\n\n\n#if defined(__cplusplus) && !defined(CINTERFACE)\n\n    \n\n    interface DECLSPEC_UUID(\"51973C06-CB0C-11d0-B5C9-00A0244A0E7A\")\n\n    IDebugSetValueCallback : public IUnknown\n\n    {\n\n    public:\n\n        virtual HRESULT STDMETHODCALLTYPE SetValue( \n\n            /* [in] */ VARIANT __RPC_FAR *pvarNode,\n\n            /* [in] */ DISPID dispid,\n\n            /* [in] */ ULONG cIndices,\n\n            /* [size_is][in] */ LONG __RPC_FAR *rgIndices,\n\n            /* [in] */ LPCOLESTR pszValue,\n\n            /* [in] */ UINT nRadix,\n\n            /* [out] */ BSTR __RPC_FAR *pbstrError) = 0;\n\n        \n\n    };\n\n    \n\n#else \t/* C style interface */\n\n\n\n    typedef struct IDebugSetValueCallbackVtbl\n\n    {\n\n        BEGIN_INTERFACE\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( \n\n            IDebugSetValueCallback __RPC_FAR * This,\n\n            /* [in] */ REFIID riid,\n\n            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);\n\n        \n\n        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( \n\n            IDebugSetValueCallback __RPC_FAR * This);\n\n        \n\n        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( \n\n            IDebugSetValueCallback __RPC_FAR * This);\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetValue )( \n\n            IDebugSetValueCallback __RPC_FAR * This,\n\n            /* [in] */ VARIANT __RPC_FAR *pvarNode,\n\n            /* [in] */ DISPID dispid,\n\n            /* [in] */ ULONG cIndices,\n\n            /* [size_is][in] */ LONG __RPC_FAR *rgIndices,\n\n            /* [in] */ LPCOLESTR pszValue,\n\n            /* [in] */ UINT nRadix,\n\n            /* [out] */ BSTR __RPC_FAR *pbstrError);\n\n        \n\n        END_INTERFACE\n\n    } IDebugSetValueCallbackVtbl;\n\n\n\n    interface IDebugSetValueCallback\n\n    {\n\n        CONST_VTBL struct IDebugSetValueCallbackVtbl __RPC_FAR *lpVtbl;\n\n    };\n\n\n\n    \n\n\n\n#ifdef COBJMACROS\n\n\n\n\n\n#define IDebugSetValueCallback_QueryInterface(This,riid,ppvObject)\t\\\n\n    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)\n\n\n\n#define IDebugSetValueCallback_AddRef(This)\t\\\n\n    (This)->lpVtbl -> AddRef(This)\n\n\n\n#define IDebugSetValueCallback_Release(This)\t\\\n\n    (This)->lpVtbl -> Release(This)\n\n\n\n\n\n#define IDebugSetValueCallback_SetValue(This,pvarNode,dispid,cIndices,rgIndices,pszValue,nRadix,pbstrError)\t\\\n\n    (This)->lpVtbl -> SetValue(This,pvarNode,dispid,cIndices,rgIndices,pszValue,nRadix,pbstrError)\n\n\n\n#endif /* COBJMACROS */\n\n\n\n\n\n#endif \t/* C style interface */\n\n\n\n\n\n\n\nHRESULT STDMETHODCALLTYPE IDebugSetValueCallback_SetValue_Proxy( \n\n    IDebugSetValueCallback __RPC_FAR * This,\n\n    /* [in] */ VARIANT __RPC_FAR *pvarNode,\n\n    /* [in] */ DISPID dispid,\n\n    /* [in] */ ULONG cIndices,\n\n    /* [size_is][in] */ LONG __RPC_FAR *rgIndices,\n\n    /* [in] */ LPCOLESTR pszValue,\n\n    /* [in] */ UINT nRadix,\n\n    /* [out] */ BSTR __RPC_FAR *pbstrError);\n\n\n\n\n\nvoid __RPC_STUB IDebugSetValueCallback_SetValue_Stub(\n\n    IRpcStubBuffer *This,\n\n    IRpcChannelBuffer *_pRpcChannelBuffer,\n\n    PRPC_MESSAGE _pRpcMessage,\n\n    DWORD *_pdwStubPhase);\n\n\n\n\n\n\n\n#endif \t/* __IDebugSetValueCallback_INTERFACE_DEFINED__ */\n\n\n\n\n\n#ifndef __ISetNextStatement_INTERFACE_DEFINED__\n\n#define __ISetNextStatement_INTERFACE_DEFINED__\n\n\n\n/****************************************\n\n * Generated header for interface: ISetNextStatement\n\n * at Fri Sep 18 16:27:35 1998\n\n * using MIDL 3.01.75\n\n ****************************************/\n\n/* [unique][helpstring][uuid][object] */ \n\n\n\n\n\n\n\nEXTERN_C const IID IID_ISetNextStatement;\n\n\n\n#if defined(__cplusplus) && !defined(CINTERFACE)\n\n    \n\n    interface DECLSPEC_UUID(\"51973C03-CB0C-11d0-B5C9-00A0244A0E7A\")\n\n    ISetNextStatement : public IUnknown\n\n    {\n\n    public:\n\n        virtual HRESULT STDMETHODCALLTYPE CanSetNextStatement( \n\n            /* [in] */ IDebugStackFrame __RPC_FAR *pStackFrame,\n\n            /* [in] */ IDebugCodeContext __RPC_FAR *pCodeContext) = 0;\n\n        \n\n        virtual HRESULT STDMETHODCALLTYPE SetNextStatement( \n\n            /* [in] */ IDebugStackFrame __RPC_FAR *pStackFrame,\n\n            /* [in] */ IDebugCodeContext __RPC_FAR *pCodeContext) = 0;\n\n        \n\n    };\n\n    \n\n#else \t/* C style interface */\n\n\n\n    typedef struct ISetNextStatementVtbl\n\n    {\n\n        BEGIN_INTERFACE\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( \n\n            ISetNextStatement __RPC_FAR * This,\n\n            /* [in] */ REFIID riid,\n\n            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);\n\n        \n\n        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( \n\n            ISetNextStatement __RPC_FAR * This);\n\n        \n\n        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( \n\n            ISetNextStatement __RPC_FAR * This);\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CanSetNextStatement )( \n\n            ISetNextStatement __RPC_FAR * This,\n\n            /* [in] */ IDebugStackFrame __RPC_FAR *pStackFrame,\n\n            /* [in] */ IDebugCodeContext __RPC_FAR *pCodeContext);\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetNextStatement )( \n\n            ISetNextStatement __RPC_FAR * This,\n\n            /* [in] */ IDebugStackFrame __RPC_FAR *pStackFrame,\n\n            /* [in] */ IDebugCodeContext __RPC_FAR *pCodeContext);\n\n        \n\n        END_INTERFACE\n\n    } ISetNextStatementVtbl;\n\n\n\n    interface ISetNextStatement\n\n    {\n\n        CONST_VTBL struct ISetNextStatementVtbl __RPC_FAR *lpVtbl;\n\n    };\n\n\n\n    \n\n\n\n#ifdef COBJMACROS\n\n\n\n\n\n#define ISetNextStatement_QueryInterface(This,riid,ppvObject)\t\\\n\n    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)\n\n\n\n#define ISetNextStatement_AddRef(This)\t\\\n\n    (This)->lpVtbl -> AddRef(This)\n\n\n\n#define ISetNextStatement_Release(This)\t\\\n\n    (This)->lpVtbl -> Release(This)\n\n\n\n\n\n#define ISetNextStatement_CanSetNextStatement(This,pStackFrame,pCodeContext)\t\\\n\n    (This)->lpVtbl -> CanSetNextStatement(This,pStackFrame,pCodeContext)\n\n\n\n#define ISetNextStatement_SetNextStatement(This,pStackFrame,pCodeContext)\t\\\n\n    (This)->lpVtbl -> SetNextStatement(This,pStackFrame,pCodeContext)\n\n\n\n#endif /* COBJMACROS */\n\n\n\n\n\n#endif \t/* C style interface */\n\n\n\n\n\n\n\nHRESULT STDMETHODCALLTYPE ISetNextStatement_CanSetNextStatement_Proxy( \n\n    ISetNextStatement __RPC_FAR * This,\n\n    /* [in] */ IDebugStackFrame __RPC_FAR *pStackFrame,\n\n    /* [in] */ IDebugCodeContext __RPC_FAR *pCodeContext);\n\n\n\n\n\nvoid __RPC_STUB ISetNextStatement_CanSetNextStatement_Stub(\n\n    IRpcStubBuffer *This,\n\n    IRpcChannelBuffer *_pRpcChannelBuffer,\n\n    PRPC_MESSAGE _pRpcMessage,\n\n    DWORD *_pdwStubPhase);\n\n\n\n\n\nHRESULT STDMETHODCALLTYPE ISetNextStatement_SetNextStatement_Proxy( \n\n    ISetNextStatement __RPC_FAR * This,\n\n    /* [in] */ IDebugStackFrame __RPC_FAR *pStackFrame,\n\n    /* [in] */ IDebugCodeContext __RPC_FAR *pCodeContext);\n\n\n\n\n\nvoid __RPC_STUB ISetNextStatement_SetNextStatement_Stub(\n\n    IRpcStubBuffer *This,\n\n    IRpcChannelBuffer *_pRpcChannelBuffer,\n\n    PRPC_MESSAGE _pRpcMessage,\n\n    DWORD *_pdwStubPhase);\n\n\n\n\n\n\n\n#endif \t/* __ISetNextStatement_INTERFACE_DEFINED__ */\n\n\n\n\n\n#ifndef __IDebugSessionProviderEx_INTERFACE_DEFINED__\n\n#define __IDebugSessionProviderEx_INTERFACE_DEFINED__\n\n\n\n/****************************************\n\n * Generated header for interface: IDebugSessionProviderEx\n\n * at Fri Sep 18 16:27:35 1998\n\n * using MIDL 3.01.75\n\n ****************************************/\n\n/* [unique][helpstring][uuid][object] */ \n\n\n\n\n\n\n\nEXTERN_C const IID IID_IDebugSessionProviderEx;\n\n\n\n#if defined(__cplusplus) && !defined(CINTERFACE)\n\n    \n\n    interface DECLSPEC_UUID(\"51973C09-CB0C-11d0-B5C9-00A0244A0E7A\")\n\n    IDebugSessionProviderEx : public IUnknown\n\n    {\n\n    public:\n\n        virtual HRESULT STDMETHODCALLTYPE StartDebugSession( \n\n            /* [in] */ IRemoteDebugApplication __RPC_FAR *pda,\n\n            /* [in] */ BOOL fQuery) = 0;\n\n        \n\n        virtual HRESULT STDMETHODCALLTYPE CanJITDebug( \n\n            /* [in] */ DWORD pid) = 0;\n\n        \n\n    };\n\n    \n\n#else \t/* C style interface */\n\n\n\n    typedef struct IDebugSessionProviderExVtbl\n\n    {\n\n        BEGIN_INTERFACE\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( \n\n            IDebugSessionProviderEx __RPC_FAR * This,\n\n            /* [in] */ REFIID riid,\n\n            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);\n\n        \n\n        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( \n\n            IDebugSessionProviderEx __RPC_FAR * This);\n\n        \n\n        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( \n\n            IDebugSessionProviderEx __RPC_FAR * This);\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *StartDebugSession )( \n\n            IDebugSessionProviderEx __RPC_FAR * This,\n\n            /* [in] */ IRemoteDebugApplication __RPC_FAR *pda,\n\n            /* [in] */ BOOL fQuery);\n\n        \n\n        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CanJITDebug )( \n\n            IDebugSessionProviderEx __RPC_FAR * This,\n\n            /* [in] */ DWORD pid);\n\n        \n\n        END_INTERFACE\n\n    } IDebugSessionProviderExVtbl;\n\n\n\n    interface IDebugSessionProviderEx\n\n    {\n\n        CONST_VTBL struct IDebugSessionProviderExVtbl __RPC_FAR *lpVtbl;\n\n    };\n\n\n\n    \n\n\n\n#ifdef COBJMACROS\n\n\n\n\n\n#define IDebugSessionProviderEx_QueryInterface(This,riid,ppvObject)\t\\\n\n    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)\n\n\n\n#define IDebugSessionProviderEx_AddRef(This)\t\\\n\n    (This)->lpVtbl -> AddRef(This)\n\n\n\n#define IDebugSessionProviderEx_Release(This)\t\\\n\n    (This)->lpVtbl -> Release(This)\n\n\n\n\n\n#define IDebugSessionProviderEx_StartDebugSession(This,pda,fQuery)\t\\\n\n    (This)->lpVtbl -> StartDebugSession(This,pda,fQuery)\n\n\n\n#define IDebugSessionProviderEx_CanJITDebug(This,pid)\t\\\n\n    (This)->lpVtbl -> CanJITDebug(This,pid)\n\n\n\n#endif /* COBJMACROS */\n\n\n\n\n\n#endif \t/* C style interface */\n\n\n\n\n\n\n\nHRESULT STDMETHODCALLTYPE IDebugSessionProviderEx_StartDebugSession_Proxy( \n\n    IDebugSessionProviderEx __RPC_FAR * This,\n\n    /* [in] */ IRemoteDebugApplication __RPC_FAR *pda,\n\n    /* [in] */ BOOL fQuery);\n\n\n\n\n\nvoid __RPC_STUB IDebugSessionProviderEx_StartDebugSession_Stub(\n\n    IRpcStubBuffer *This,\n\n    IRpcChannelBuffer *_pRpcChannelBuffer,\n\n    PRPC_MESSAGE _pRpcMessage,\n\n    DWORD *_pdwStubPhase);\n\n\n\n\n\nHRESULT STDMETHODCALLTYPE IDebugSessionProviderEx_CanJITDebug_Proxy( \n\n    IDebugSessionProviderEx __RPC_FAR * This,\n\n    /* [in] */ DWORD pid);\n\n\n\n\n\nvoid __RPC_STUB IDebugSessionProviderEx_CanJITDebug_Stub(\n\n    IRpcStubBuffer *This,\n\n    IRpcChannelBuffer *_pRpcChannelBuffer,\n\n    PRPC_MESSAGE _pRpcMessage,\n\n    DWORD *_pdwStubPhase);\n\n\n\n\n\n\n\n#endif \t/* __IDebugSessionProviderEx_INTERFACE_DEFINED__ */\n\n\n\n\n\n/* Additional Prototypes for ALL interfaces */\n\n\n\nunsigned long             __RPC_USER  BSTR_UserSize(     unsigned long __RPC_FAR *, unsigned long            , BSTR __RPC_FAR * ); \n\nunsigned char __RPC_FAR * __RPC_USER  BSTR_UserMarshal(  unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, BSTR __RPC_FAR * ); \n\nunsigned char __RPC_FAR * __RPC_USER  BSTR_UserUnmarshal(unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, BSTR __RPC_FAR * ); \n\nvoid                      __RPC_USER  BSTR_UserFree(     unsigned long __RPC_FAR *, BSTR __RPC_FAR * ); \n\n\n\n/* end of Additional Prototypes */\n\n\n\n#ifdef __cplusplus\n\n}\n\n#endif\n\n\n\n#endif\n\n#pragma option pop /*P_O_Pop*/",
    "assembly": ".file\t\"143.c\"\n\t.text\n\t.ident\t\"GCC: (MinGW-W64 x86_64-ucrt-posix-seh, built by Brecht Sanders, r8) 13.2.0\"",
    "generation_time": 14.810789346694946,
    "tokens_generated": 512,
    "metrics": {
      "length_ratio": 0.022212642949514416,
      "line_ratio": 0.00040666937779585197,
      "token_overlap": 0.004424778761061947,
      "token_precision": 0.06896551724137931,
      "keyword_coverage": 0.0,
      "keyword_match_ratio": 0.0,
      "brace_ratio": 0.62,
      "semicolon_ratio": 0.06666666666666667
    }
  },
  {
    "filename": "151",
    "optimization": "Osize",
    "generated_c": ".file[\"x86_64\"]\n.file[\"x86_64\"]\n.file[\"x86_64\"]\n.file[\"x86_64\"]\n.file[\"x86_64\"]",
    "reference_c": "/**\n\n * Copyright (c) 2017 - 2020, Nordic Semiconductor ASA\n\n *\n\n * All rights reserved.\n\n *\n\n * Redistribution and use in source and binary forms, with or without modification,\n\n * are permitted provided that the following conditions are met:\n\n *\n\n * 1. Redistributions of source code must retain the above copyright notice, this\n\n *    list of conditions and the following disclaimer.\n\n *\n\n * 2. Redistributions in binary form, except as embedded into a Nordic\n\n *    Semiconductor ASA integrated circuit in a product or a software update for\n\n *    such product, must reproduce the above copyright notice, this list of\n\n *    conditions and the following disclaimer in the documentation and/or other\n\n *    materials provided with the distribution.\n\n *\n\n * 3. Neither the name of Nordic Semiconductor ASA nor the names of its\n\n *    contributors may be used to endorse or promote products derived from this\n\n *    software without specific prior written permission.\n\n *\n\n * 4. This software, with or without modification, must only be used with a\n\n *    Nordic Semiconductor ASA integrated circuit.\n\n *\n\n * 5. Any software provided in binary form under this license must not be reverse\n\n *    engineered, decompiled, modified and/or disassembled.\n\n *\n\n * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA \"AS IS\" AND ANY EXPRESS\n\n * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n\n * OF MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\n * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE\n\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE\n\n * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n\n * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n\n * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n *\n\n */\n\n\n\n\n\n\n\n#ifndef SDK_CONFIG_H\n\n#define SDK_CONFIG_H\n\n// <<< Use Configuration Wizard in Context Menu >>>\\n\n\n#ifdef USE_APP_CONFIG\n\n#include \"app_config.h\"\n\n#endif\n\n// <h> Application \n\n\n\n//==========================================================\n\n// <o> APP_SHUTDOWN_HANDLER_PRIORITY - Application shutdown observer priority. \n\n#ifndef APP_SHUTDOWN_HANDLER_PRIORITY\n\n#define APP_SHUTDOWN_HANDLER_PRIORITY 1\n\n#endif\n\n\n\n// <o> NRF_BLE_GQ_QUEUE_SIZE - Queue size for BLE GATT Queue module. \n\n#ifndef NRF_BLE_GQ_QUEUE_SIZE\n\n#define NRF_BLE_GQ_QUEUE_SIZE 4\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> Board Support \n\n\n\n//==========================================================\n\n// <q> BSP_BTN_BLE_ENABLED  - bsp_btn_ble - Button Control for BLE\n\n \n\n\n\n#ifndef BSP_BTN_BLE_ENABLED\n\n#define BSP_BTN_BLE_ENABLED 1\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> nRF_BLE \n\n\n\n//==========================================================\n\n// <q> BLE_ADVERTISING_ENABLED  - ble_advertising - Advertising module\n\n \n\n\n\n#ifndef BLE_ADVERTISING_ENABLED\n\n#define BLE_ADVERTISING_ENABLED 0\n\n#endif\n\n\n\n// <q> BLE_DB_DISCOVERY_ENABLED  - ble_db_discovery - Database discovery module\n\n \n\n\n\n#ifndef BLE_DB_DISCOVERY_ENABLED\n\n#define BLE_DB_DISCOVERY_ENABLED 1\n\n#endif\n\n\n\n// <e> BLE_DTM_ENABLED - ble_dtm - Module for testing RF/PHY using DTM commands\n\n//==========================================================\n\n#ifndef BLE_DTM_ENABLED\n\n#define BLE_DTM_ENABLED 0\n\n#endif\n\n// <o> NRF_RADIO_ANTENNA_PIN_1 - Antenna 1 GPIO pin \n\n#ifndef NRF_RADIO_ANTENNA_PIN_1\n\n#define NRF_RADIO_ANTENNA_PIN_1 21\n\n#endif\n\n\n\n// <o> NRF_RADIO_ANTENNA_PIN_2 - Antenna 2 GPIO pin \n\n#ifndef NRF_RADIO_ANTENNA_PIN_2\n\n#define NRF_RADIO_ANTENNA_PIN_2 23\n\n#endif\n\n\n\n// <o> NRF_RADIO_ANTENNA_PIN_3 - Antenna 3 GPIO pin \n\n#ifndef NRF_RADIO_ANTENNA_PIN_3\n\n#define NRF_RADIO_ANTENNA_PIN_3 26\n\n#endif\n\n\n\n// <o> NRF_RADIO_ANTENNA_PIN_4 - Antenna 4 GPIO pin \n\n#ifndef NRF_RADIO_ANTENNA_PIN_4\n\n#define NRF_RADIO_ANTENNA_PIN_4 27\n\n#endif\n\n\n\n// <o> NRF_RADIO_ANTENNA_PIN_5 - Antenna 5 GPIO pin \n\n#ifndef NRF_RADIO_ANTENNA_PIN_5\n\n#define NRF_RADIO_ANTENNA_PIN_5 28\n\n#endif\n\n\n\n// <o> NRF_RADIO_ANTENNA_PIN_6 - Antenna 6 GPIO pin \n\n#ifndef NRF_RADIO_ANTENNA_PIN_6\n\n#define NRF_RADIO_ANTENNA_PIN_6 29\n\n#endif\n\n\n\n// <o> NRF_RADIO_ANTENNA_PIN_7 - Antenna 7 GPIO pin \n\n#ifndef NRF_RADIO_ANTENNA_PIN_7\n\n#define NRF_RADIO_ANTENNA_PIN_7 30\n\n#endif\n\n\n\n// <o> NRF_RADIO_ANTENNA_PIN_8 - Antenna 8 GPIO pin \n\n#ifndef NRF_RADIO_ANTENNA_PIN_8\n\n#define NRF_RADIO_ANTENNA_PIN_8 31\n\n#endif\n\n\n\n// <o> NRF_RADIO_ANTENNA_COUNT  \n\n#ifndef NRF_RADIO_ANTENNA_COUNT\n\n#define NRF_RADIO_ANTENNA_COUNT 12\n\n#endif\n\n\n\n// </e>\n\n\n\n// <q> BLE_RACP_ENABLED  - ble_racp - Record Access Control Point library\n\n \n\n\n\n#ifndef BLE_RACP_ENABLED\n\n#define BLE_RACP_ENABLED 0\n\n#endif\n\n\n\n// <q> NRF_BLE_GATT_ENABLED  - nrf_ble_gatt - GATT module\n\n \n\n\n\n#ifndef NRF_BLE_GATT_ENABLED\n\n#define NRF_BLE_GATT_ENABLED 1\n\n#endif\n\n\n\n// <e> NRF_BLE_GQ_ENABLED - nrf_ble_gq - BLE GATT Queue Module\n\n//==========================================================\n\n#ifndef NRF_BLE_GQ_ENABLED\n\n#define NRF_BLE_GQ_ENABLED 1\n\n#endif\n\n// <o> NRF_BLE_GQ_DATAPOOL_ELEMENT_SIZE - Default size of a single element in the pool of memory objects. \n\n#ifndef NRF_BLE_GQ_DATAPOOL_ELEMENT_SIZE\n\n#define NRF_BLE_GQ_DATAPOOL_ELEMENT_SIZE 20\n\n#endif\n\n\n\n// <o> NRF_BLE_GQ_DATAPOOL_ELEMENT_COUNT - Default number of elements in the pool of memory objects. \n\n#ifndef NRF_BLE_GQ_DATAPOOL_ELEMENT_COUNT\n\n#define NRF_BLE_GQ_DATAPOOL_ELEMENT_COUNT 8\n\n#endif\n\n\n\n// <o> NRF_BLE_GQ_GATTC_WRITE_MAX_DATA_LEN - Maximal size of the data inside GATTC write request (in bytes). \n\n#ifndef NRF_BLE_GQ_GATTC_WRITE_MAX_DATA_LEN\n\n#define NRF_BLE_GQ_GATTC_WRITE_MAX_DATA_LEN 16\n\n#endif\n\n\n\n// <o> NRF_BLE_GQ_GATTS_HVX_MAX_DATA_LEN - Maximal size of the data inside GATTC notification or indication request (in bytes). \n\n#ifndef NRF_BLE_GQ_GATTS_HVX_MAX_DATA_LEN\n\n#define NRF_BLE_GQ_GATTS_HVX_MAX_DATA_LEN 16\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_BLE_QWR_ENABLED - nrf_ble_qwr - Queued writes support module (prepare/execute write)\n\n//==========================================================\n\n#ifndef NRF_BLE_QWR_ENABLED\n\n#define NRF_BLE_QWR_ENABLED 0\n\n#endif\n\n// <o> NRF_BLE_QWR_MAX_ATTR - Maximum number of attribute handles that can be registered. This number must be adjusted according to the number of attributes for which Queued Writes will be enabled. If it is zero, the module will reject all Queued Write requests. \n\n#ifndef NRF_BLE_QWR_MAX_ATTR\n\n#define NRF_BLE_QWR_MAX_ATTR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_BLE_SCAN_ENABLED - nrf_ble_scan - Scanning Module\n\n//==========================================================\n\n#ifndef NRF_BLE_SCAN_ENABLED\n\n#define NRF_BLE_SCAN_ENABLED 1\n\n#endif\n\n// <o> NRF_BLE_SCAN_BUFFER - Data length for an advertising set. \n\n#ifndef NRF_BLE_SCAN_BUFFER\n\n#define NRF_BLE_SCAN_BUFFER 31\n\n#endif\n\n\n\n// <o> NRF_BLE_SCAN_NAME_MAX_LEN - Maximum size for the name to search in the advertisement report. \n\n#ifndef NRF_BLE_SCAN_NAME_MAX_LEN\n\n#define NRF_BLE_SCAN_NAME_MAX_LEN 32\n\n#endif\n\n\n\n// <o> NRF_BLE_SCAN_SHORT_NAME_MAX_LEN - Maximum size of the short name to search for in the advertisement report. \n\n#ifndef NRF_BLE_SCAN_SHORT_NAME_MAX_LEN\n\n#define NRF_BLE_SCAN_SHORT_NAME_MAX_LEN 32\n\n#endif\n\n\n\n// <o> NRF_BLE_SCAN_SCAN_INTERVAL - Scanning interval. Determines the scan interval in units of 0.625 millisecond. \n\n#ifndef NRF_BLE_SCAN_SCAN_INTERVAL\n\n#define NRF_BLE_SCAN_SCAN_INTERVAL 160\n\n#endif\n\n\n\n// <o> NRF_BLE_SCAN_SCAN_DURATION - Duration of a scanning session in units of 10 ms. Range: 0x0001 - 0xFFFF (10 ms to 10.9225 ms). If set to 0x0000, the scanning continues until it is explicitly disabled. \n\n#ifndef NRF_BLE_SCAN_SCAN_DURATION\n\n#define NRF_BLE_SCAN_SCAN_DURATION 0\n\n#endif\n\n\n\n// <o> NRF_BLE_SCAN_SCAN_WINDOW - Scanning window. Determines the scanning window in units of 0.625 millisecond. \n\n#ifndef NRF_BLE_SCAN_SCAN_WINDOW\n\n#define NRF_BLE_SCAN_SCAN_WINDOW 80\n\n#endif\n\n\n\n// <o> NRF_BLE_SCAN_MIN_CONNECTION_INTERVAL - Determines minimum connection interval in milliseconds. \n\n#ifndef NRF_BLE_SCAN_MIN_CONNECTION_INTERVAL\n\n#define NRF_BLE_SCAN_MIN_CONNECTION_INTERVAL 7.5\n\n#endif\n\n\n\n// <o> NRF_BLE_SCAN_MAX_CONNECTION_INTERVAL - Determines maximum connection interval in milliseconds. \n\n#ifndef NRF_BLE_SCAN_MAX_CONNECTION_INTERVAL\n\n#define NRF_BLE_SCAN_MAX_CONNECTION_INTERVAL 30\n\n#endif\n\n\n\n// <o> NRF_BLE_SCAN_SLAVE_LATENCY - Determines the slave latency in counts of connection events. \n\n#ifndef NRF_BLE_SCAN_SLAVE_LATENCY\n\n#define NRF_BLE_SCAN_SLAVE_LATENCY 0\n\n#endif\n\n\n\n// <o> NRF_BLE_SCAN_SUPERVISION_TIMEOUT - Determines the supervision time-out in units of 10 millisecond. \n\n#ifndef NRF_BLE_SCAN_SUPERVISION_TIMEOUT\n\n#define NRF_BLE_SCAN_SUPERVISION_TIMEOUT 4000\n\n#endif\n\n\n\n// <o> NRF_BLE_SCAN_SCAN_PHY  - PHY to scan on.\n\n \n\n// <0=> BLE_GAP_PHY_AUTO \n\n// <1=> BLE_GAP_PHY_1MBPS \n\n// <2=> BLE_GAP_PHY_2MBPS \n\n// <4=> BLE_GAP_PHY_CODED \n\n// <255=> BLE_GAP_PHY_NOT_SET \n\n\n\n#ifndef NRF_BLE_SCAN_SCAN_PHY\n\n#define NRF_BLE_SCAN_SCAN_PHY 1\n\n#endif\n\n\n\n// <e> NRF_BLE_SCAN_FILTER_ENABLE - Enabling filters for the Scanning Module.\n\n//==========================================================\n\n#ifndef NRF_BLE_SCAN_FILTER_ENABLE\n\n#define NRF_BLE_SCAN_FILTER_ENABLE 1\n\n#endif\n\n// <o> NRF_BLE_SCAN_UUID_CNT - Number of filters for UUIDs. \n\n#ifndef NRF_BLE_SCAN_UUID_CNT\n\n#define NRF_BLE_SCAN_UUID_CNT 1\n\n#endif\n\n\n\n// <o> NRF_BLE_SCAN_NAME_CNT - Number of name filters. \n\n#ifndef NRF_BLE_SCAN_NAME_CNT\n\n#define NRF_BLE_SCAN_NAME_CNT 0\n\n#endif\n\n\n\n// <o> NRF_BLE_SCAN_SHORT_NAME_CNT - Number of short name filters. \n\n#ifndef NRF_BLE_SCAN_SHORT_NAME_CNT\n\n#define NRF_BLE_SCAN_SHORT_NAME_CNT 0\n\n#endif\n\n\n\n// <o> NRF_BLE_SCAN_ADDRESS_CNT - Number of address filters. \n\n#ifndef NRF_BLE_SCAN_ADDRESS_CNT\n\n#define NRF_BLE_SCAN_ADDRESS_CNT 0\n\n#endif\n\n\n\n// <o> NRF_BLE_SCAN_APPEARANCE_CNT - Number of appearance filters. \n\n#ifndef NRF_BLE_SCAN_APPEARANCE_CNT\n\n#define NRF_BLE_SCAN_APPEARANCE_CNT 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> PEER_MANAGER_ENABLED - peer_manager - Peer Manager\n\n//==========================================================\n\n#ifndef PEER_MANAGER_ENABLED\n\n#define PEER_MANAGER_ENABLED 0\n\n#endif\n\n// <o> PM_MAX_REGISTRANTS - Number of event handlers that can be registered. \n\n#ifndef PM_MAX_REGISTRANTS\n\n#define PM_MAX_REGISTRANTS 3\n\n#endif\n\n\n\n// <o> PM_FLASH_BUFFERS - Number of internal buffers for flash operations. \n\n// <i> Decrease this value to lower RAM usage.\n\n\n\n#ifndef PM_FLASH_BUFFERS\n\n#define PM_FLASH_BUFFERS 4\n\n#endif\n\n\n\n// <q> PM_CENTRAL_ENABLED  - Enable/disable central-specific Peer Manager functionality.\n\n \n\n\n\n// <i> Enable/disable central-specific Peer Manager functionality.\n\n\n\n#ifndef PM_CENTRAL_ENABLED\n\n#define PM_CENTRAL_ENABLED 1\n\n#endif\n\n\n\n// <q> PM_SERVICE_CHANGED_ENABLED  - Enable/disable the service changed management for GATT server in Peer Manager.\n\n \n\n\n\n// <i> If not using a GATT server, or using a server wihout a service changed characteristic,\n\n// <i> disable this to save code space.\n\n\n\n#ifndef PM_SERVICE_CHANGED_ENABLED\n\n#define PM_SERVICE_CHANGED_ENABLED 1\n\n#endif\n\n\n\n// <q> PM_PEER_RANKS_ENABLED  - Enable/disable the peer rank management in Peer Manager.\n\n \n\n\n\n// <i> Set this to false to save code space if not using the peer rank API.\n\n\n\n#ifndef PM_PEER_RANKS_ENABLED\n\n#define PM_PEER_RANKS_ENABLED 1\n\n#endif\n\n\n\n// <q> PM_LESC_ENABLED  - Enable/disable LESC support in Peer Manager.\n\n \n\n\n\n// <i> If set to true, you need to call nrf_ble_lesc_request_handler() in the main loop to respond to LESC-related BLE events. If LESC support is not required, set this to false to save code space.\n\n\n\n#ifndef PM_LESC_ENABLED\n\n#define PM_LESC_ENABLED 0\n\n#endif\n\n\n\n// <e> PM_RA_PROTECTION_ENABLED - Enable/disable protection against repeated pairing attempts in Peer Manager.\n\n//==========================================================\n\n#ifndef PM_RA_PROTECTION_ENABLED\n\n#define PM_RA_PROTECTION_ENABLED 0\n\n#endif\n\n// <o> PM_RA_PROTECTION_TRACKED_PEERS_NUM - Maximum number of peers whose authorization status can be tracked. \n\n#ifndef PM_RA_PROTECTION_TRACKED_PEERS_NUM\n\n#define PM_RA_PROTECTION_TRACKED_PEERS_NUM 8\n\n#endif\n\n\n\n// <o> PM_RA_PROTECTION_MIN_WAIT_INTERVAL - Minimum waiting interval (in ms) before a new pairing attempt can be initiated. \n\n#ifndef PM_RA_PROTECTION_MIN_WAIT_INTERVAL\n\n#define PM_RA_PROTECTION_MIN_WAIT_INTERVAL 4000\n\n#endif\n\n\n\n// <o> PM_RA_PROTECTION_MAX_WAIT_INTERVAL - Maximum waiting interval (in ms) before a new pairing attempt can be initiated. \n\n#ifndef PM_RA_PROTECTION_MAX_WAIT_INTERVAL\n\n#define PM_RA_PROTECTION_MAX_WAIT_INTERVAL 64000\n\n#endif\n\n\n\n// <o> PM_RA_PROTECTION_REWARD_PERIOD - Reward period (in ms). \n\n// <i> The waiting interval is gradually decreased when no new failed pairing attempts are made during reward period.\n\n\n\n#ifndef PM_RA_PROTECTION_REWARD_PERIOD\n\n#define PM_RA_PROTECTION_REWARD_PERIOD 10000\n\n#endif\n\n\n\n// </e>\n\n\n\n// <o> PM_HANDLER_SEC_DELAY_MS - Delay before starting security. \n\n// <i>  This might be necessary for interoperability reasons, especially as peripheral.\n\n\n\n#ifndef PM_HANDLER_SEC_DELAY_MS\n\n#define PM_HANDLER_SEC_DELAY_MS 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> nRF_BLE_Services \n\n\n\n//==========================================================\n\n// <q> BLE_ANCS_C_ENABLED  - ble_ancs_c - Apple Notification Service Client\n\n \n\n\n\n#ifndef BLE_ANCS_C_ENABLED\n\n#define BLE_ANCS_C_ENABLED 0\n\n#endif\n\n\n\n// <q> BLE_ANS_C_ENABLED  - ble_ans_c - Alert Notification Service Client\n\n \n\n\n\n#ifndef BLE_ANS_C_ENABLED\n\n#define BLE_ANS_C_ENABLED 0\n\n#endif\n\n\n\n// <q> BLE_BAS_C_ENABLED  - ble_bas_c - Battery Service Client\n\n \n\n\n\n#ifndef BLE_BAS_C_ENABLED\n\n#define BLE_BAS_C_ENABLED 0\n\n#endif\n\n\n\n// <e> BLE_BAS_ENABLED - ble_bas - Battery Service\n\n//==========================================================\n\n#ifndef BLE_BAS_ENABLED\n\n#define BLE_BAS_ENABLED 0\n\n#endif\n\n// <e> BLE_BAS_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef BLE_BAS_CONFIG_LOG_ENABLED\n\n#define BLE_BAS_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> BLE_BAS_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef BLE_BAS_CONFIG_LOG_LEVEL\n\n#define BLE_BAS_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> BLE_BAS_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef BLE_BAS_CONFIG_INFO_COLOR\n\n#define BLE_BAS_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> BLE_BAS_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef BLE_BAS_CONFIG_DEBUG_COLOR\n\n#define BLE_BAS_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <q> BLE_CSCS_ENABLED  - ble_cscs - Cycling Speed and Cadence Service\n\n \n\n\n\n#ifndef BLE_CSCS_ENABLED\n\n#define BLE_CSCS_ENABLED 0\n\n#endif\n\n\n\n// <q> BLE_CTS_C_ENABLED  - ble_cts_c - Current Time Service Client\n\n \n\n\n\n#ifndef BLE_CTS_C_ENABLED\n\n#define BLE_CTS_C_ENABLED 0\n\n#endif\n\n\n\n// <q> BLE_DIS_ENABLED  - ble_dis - Device Information Service\n\n \n\n\n\n#ifndef BLE_DIS_ENABLED\n\n#define BLE_DIS_ENABLED 0\n\n#endif\n\n\n\n// <q> BLE_GLS_ENABLED  - ble_gls - Glucose Service\n\n \n\n\n\n#ifndef BLE_GLS_ENABLED\n\n#define BLE_GLS_ENABLED 0\n\n#endif\n\n\n\n// <q> BLE_HIDS_ENABLED  - ble_hids - Human Interface Device Service\n\n \n\n\n\n#ifndef BLE_HIDS_ENABLED\n\n#define BLE_HIDS_ENABLED 0\n\n#endif\n\n\n\n// <q> BLE_HRS_C_ENABLED  - ble_hrs_c - Heart Rate Service Client\n\n \n\n\n\n#ifndef BLE_HRS_C_ENABLED\n\n#define BLE_HRS_C_ENABLED 0\n\n#endif\n\n\n\n// <q> BLE_HRS_ENABLED  - ble_hrs - Heart Rate Service\n\n \n\n\n\n#ifndef BLE_HRS_ENABLED\n\n#define BLE_HRS_ENABLED 0\n\n#endif\n\n\n\n// <q> BLE_HTS_ENABLED  - ble_hts - Health Thermometer Service\n\n \n\n\n\n#ifndef BLE_HTS_ENABLED\n\n#define BLE_HTS_ENABLED 0\n\n#endif\n\n\n\n// <q> BLE_IAS_C_ENABLED  - ble_ias_c - Immediate Alert Service Client\n\n \n\n\n\n#ifndef BLE_IAS_C_ENABLED\n\n#define BLE_IAS_C_ENABLED 0\n\n#endif\n\n\n\n// <e> BLE_IAS_ENABLED - ble_ias - Immediate Alert Service\n\n//==========================================================\n\n#ifndef BLE_IAS_ENABLED\n\n#define BLE_IAS_ENABLED 0\n\n#endif\n\n// <e> BLE_IAS_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef BLE_IAS_CONFIG_LOG_ENABLED\n\n#define BLE_IAS_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> BLE_IAS_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef BLE_IAS_CONFIG_LOG_LEVEL\n\n#define BLE_IAS_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> BLE_IAS_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef BLE_IAS_CONFIG_INFO_COLOR\n\n#define BLE_IAS_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> BLE_IAS_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef BLE_IAS_CONFIG_DEBUG_COLOR\n\n#define BLE_IAS_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <q> BLE_LBS_C_ENABLED  - ble_lbs_c - Nordic LED Button Service Client\n\n \n\n\n\n#ifndef BLE_LBS_C_ENABLED\n\n#define BLE_LBS_C_ENABLED 0\n\n#endif\n\n\n\n// <q> BLE_LBS_ENABLED  - ble_lbs - LED Button Service\n\n \n\n\n\n#ifndef BLE_LBS_ENABLED\n\n#define BLE_LBS_ENABLED 0\n\n#endif\n\n\n\n// <q> BLE_LLS_ENABLED  - ble_lls - Link Loss Service\n\n \n\n\n\n#ifndef BLE_LLS_ENABLED\n\n#define BLE_LLS_ENABLED 0\n\n#endif\n\n\n\n// <q> BLE_NUS_C_ENABLED  - ble_nus_c - Nordic UART Central Service\n\n \n\n\n\n#ifndef BLE_NUS_C_ENABLED\n\n#define BLE_NUS_C_ENABLED 1\n\n#endif\n\n\n\n// <e> BLE_NUS_ENABLED - ble_nus - Nordic UART Service\n\n//==========================================================\n\n#ifndef BLE_NUS_ENABLED\n\n#define BLE_NUS_ENABLED 0\n\n#endif\n\n// <e> BLE_NUS_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef BLE_NUS_CONFIG_LOG_ENABLED\n\n#define BLE_NUS_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> BLE_NUS_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef BLE_NUS_CONFIG_LOG_LEVEL\n\n#define BLE_NUS_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> BLE_NUS_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef BLE_NUS_CONFIG_INFO_COLOR\n\n#define BLE_NUS_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> BLE_NUS_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef BLE_NUS_CONFIG_DEBUG_COLOR\n\n#define BLE_NUS_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <q> BLE_RSCS_C_ENABLED  - ble_rscs_c - Running Speed and Cadence Client\n\n \n\n\n\n#ifndef BLE_RSCS_C_ENABLED\n\n#define BLE_RSCS_C_ENABLED 0\n\n#endif\n\n\n\n// <q> BLE_RSCS_ENABLED  - ble_rscs - Running Speed and Cadence Service\n\n \n\n\n\n#ifndef BLE_RSCS_ENABLED\n\n#define BLE_RSCS_ENABLED 0\n\n#endif\n\n\n\n// <q> BLE_TPS_ENABLED  - ble_tps - TX Power Service\n\n \n\n\n\n#ifndef BLE_TPS_ENABLED\n\n#define BLE_TPS_ENABLED 0\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> nRF_Core \n\n\n\n//==========================================================\n\n// <e> NRF_MPU_LIB_ENABLED - nrf_mpu_lib - Module for MPU\n\n//==========================================================\n\n#ifndef NRF_MPU_LIB_ENABLED\n\n#define NRF_MPU_LIB_ENABLED 0\n\n#endif\n\n// <q> NRF_MPU_LIB_CLI_CMDS  - Enable CLI commands specific to the module.\n\n \n\n\n\n#ifndef NRF_MPU_LIB_CLI_CMDS\n\n#define NRF_MPU_LIB_CLI_CMDS 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_STACK_GUARD_ENABLED - nrf_stack_guard - Stack guard\n\n//==========================================================\n\n#ifndef NRF_STACK_GUARD_ENABLED\n\n#define NRF_STACK_GUARD_ENABLED 0\n\n#endif\n\n// <o> NRF_STACK_GUARD_CONFIG_SIZE  - Size of the stack guard.\n\n \n\n// <5=> 32 bytes \n\n// <6=> 64 bytes \n\n// <7=> 128 bytes \n\n// <8=> 256 bytes \n\n// <9=> 512 bytes \n\n// <10=> 1024 bytes \n\n// <11=> 2048 bytes \n\n// <12=> 4096 bytes \n\n\n\n#ifndef NRF_STACK_GUARD_CONFIG_SIZE\n\n#define NRF_STACK_GUARD_CONFIG_SIZE 7\n\n#endif\n\n\n\n// </e>\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> nRF_Crypto \n\n\n\n//==========================================================\n\n// <e> NRF_CRYPTO_ENABLED - nrf_crypto - Cryptography library.\n\n//==========================================================\n\n#ifndef NRF_CRYPTO_ENABLED\n\n#define NRF_CRYPTO_ENABLED 1\n\n#endif\n\n// <o> NRF_CRYPTO_ALLOCATOR  - Memory allocator\n\n \n\n\n\n// <i> Choose memory allocator used by nrf_crypto. Default is alloca if possible or nrf_malloc otherwise. If 'User macros' are selected, the user has to create 'nrf_crypto_allocator.h' file that contains NRF_CRYPTO_ALLOC, NRF_CRYPTO_FREE, and NRF_CRYPTO_ALLOC_ON_STACK.\n\n// <0=> Default \n\n// <1=> User macros \n\n// <2=> On stack (alloca) \n\n// <3=> C dynamic memory (malloc) \n\n// <4=> SDK Memory Manager (nrf_malloc) \n\n\n\n#ifndef NRF_CRYPTO_ALLOCATOR\n\n#define NRF_CRYPTO_ALLOCATOR 0\n\n#endif\n\n\n\n// <e> NRF_CRYPTO_BACKEND_CC310_BL_ENABLED - Enable the ARM Cryptocell CC310 reduced backend.\n\n\n\n// <i> The CC310 hardware-accelerated cryptography backend with reduced functionality and footprint (only available on nRF52840).\n\n//==========================================================\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_BL_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_BL_ENABLED 0\n\n#endif\n\n// <q> NRF_CRYPTO_BACKEND_CC310_BL_ECC_SECP224R1_ENABLED  - Enable the secp224r1 elliptic curve support using CC310_BL.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_BL_ECC_SECP224R1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_BL_ECC_SECP224R1_ENABLED 0\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_BL_ECC_SECP256R1_ENABLED  - Enable the secp256r1 elliptic curve support using CC310_BL.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_BL_ECC_SECP256R1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_BL_ECC_SECP256R1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_BL_HASH_SHA256_ENABLED  - CC310_BL SHA-256 hash functionality.\n\n \n\n\n\n// <i> CC310_BL backend implementation for hardware-accelerated SHA-256.\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_BL_HASH_SHA256_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_BL_HASH_SHA256_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_BL_HASH_AUTOMATIC_RAM_BUFFER_ENABLED  - nrf_cc310_bl buffers to RAM before running hash operation\n\n \n\n\n\n// <i> Enabling this makes hashing of addresses in FLASH range possible. Size of buffer allocated for hashing is set by NRF_CRYPTO_BACKEND_CC310_BL_HASH_AUTOMATIC_RAM_BUFFER_SIZE\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_BL_HASH_AUTOMATIC_RAM_BUFFER_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_BL_HASH_AUTOMATIC_RAM_BUFFER_ENABLED 0\n\n#endif\n\n\n\n// <o> NRF_CRYPTO_BACKEND_CC310_BL_HASH_AUTOMATIC_RAM_BUFFER_SIZE - nrf_cc310_bl hash outputs digests in little endian \n\n// <i> Makes the nrf_cc310_bl hash functions output digests in little endian format. Only for use in nRF SDK DFU!\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_BL_HASH_AUTOMATIC_RAM_BUFFER_SIZE\n\n#define NRF_CRYPTO_BACKEND_CC310_BL_HASH_AUTOMATIC_RAM_BUFFER_SIZE 4096\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_BL_INTERRUPTS_ENABLED  - Enable Interrupts while support using CC310 bl.\n\n \n\n\n\n// <i> Select a library version compatible with the configuration. When interrupts are disable, a version named _noint must be used\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_BL_INTERRUPTS_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_BL_INTERRUPTS_ENABLED 1\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_CRYPTO_BACKEND_CC310_ENABLED - Enable the ARM Cryptocell CC310 backend.\n\n\n\n// <i> The CC310 hardware-accelerated cryptography backend (only available on nRF52840).\n\n//==========================================================\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_ENABLED 0\n\n#endif\n\n// <q> NRF_CRYPTO_BACKEND_CC310_AES_CBC_ENABLED  - Enable the AES CBC mode using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_AES_CBC_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_AES_CBC_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_AES_CTR_ENABLED  - Enable the AES CTR mode using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_AES_CTR_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_AES_CTR_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_AES_ECB_ENABLED  - Enable the AES ECB mode using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_AES_ECB_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_AES_ECB_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_AES_CBC_MAC_ENABLED  - Enable the AES CBC_MAC mode using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_AES_CBC_MAC_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_AES_CBC_MAC_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_AES_CMAC_ENABLED  - Enable the AES CMAC mode using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_AES_CMAC_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_AES_CMAC_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_AES_CCM_ENABLED  - Enable the AES CCM mode using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_AES_CCM_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_AES_CCM_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_AES_CCM_STAR_ENABLED  - Enable the AES CCM* mode using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_AES_CCM_STAR_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_AES_CCM_STAR_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_CHACHA_POLY_ENABLED  - Enable the CHACHA-POLY mode using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_CHACHA_POLY_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_CHACHA_POLY_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_ECC_SECP160R1_ENABLED  - Enable the secp160r1 elliptic curve support using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_ECC_SECP160R1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_ECC_SECP160R1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_ECC_SECP160R2_ENABLED  - Enable the secp160r2 elliptic curve support using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_ECC_SECP160R2_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_ECC_SECP160R2_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_ECC_SECP192R1_ENABLED  - Enable the secp192r1 elliptic curve support using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_ECC_SECP192R1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_ECC_SECP192R1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_ECC_SECP224R1_ENABLED  - Enable the secp224r1 elliptic curve support using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_ECC_SECP224R1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_ECC_SECP224R1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_ECC_SECP256R1_ENABLED  - Enable the secp256r1 elliptic curve support using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_ECC_SECP256R1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_ECC_SECP256R1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_ECC_SECP384R1_ENABLED  - Enable the secp384r1 elliptic curve support using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_ECC_SECP384R1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_ECC_SECP384R1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_ECC_SECP521R1_ENABLED  - Enable the secp521r1 elliptic curve support using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_ECC_SECP521R1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_ECC_SECP521R1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_ECC_SECP160K1_ENABLED  - Enable the secp160k1 elliptic curve support using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_ECC_SECP160K1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_ECC_SECP160K1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_ECC_SECP192K1_ENABLED  - Enable the secp192k1 elliptic curve support using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_ECC_SECP192K1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_ECC_SECP192K1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_ECC_SECP224K1_ENABLED  - Enable the secp224k1 elliptic curve support using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_ECC_SECP224K1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_ECC_SECP224K1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_ECC_SECP256K1_ENABLED  - Enable the secp256k1 elliptic curve support using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_ECC_SECP256K1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_ECC_SECP256K1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_ECC_CURVE25519_ENABLED  - Enable the Curve25519 curve support using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_ECC_CURVE25519_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_ECC_CURVE25519_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_ECC_ED25519_ENABLED  - Enable the Ed25519 curve support using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_ECC_ED25519_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_ECC_ED25519_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_HASH_SHA256_ENABLED  - CC310 SHA-256 hash functionality.\n\n \n\n\n\n// <i> CC310 backend implementation for hardware-accelerated SHA-256.\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_HASH_SHA256_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_HASH_SHA256_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_HASH_SHA512_ENABLED  - CC310 SHA-512 hash functionality\n\n \n\n\n\n// <i> CC310 backend implementation for SHA-512 (in software).\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_HASH_SHA512_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_HASH_SHA512_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_HMAC_SHA256_ENABLED  - CC310 HMAC using SHA-256\n\n \n\n\n\n// <i> CC310 backend implementation for HMAC using hardware-accelerated SHA-256.\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_HMAC_SHA256_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_HMAC_SHA256_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_HMAC_SHA512_ENABLED  - CC310 HMAC using SHA-512\n\n \n\n\n\n// <i> CC310 backend implementation for HMAC using SHA-512 (in software).\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_HMAC_SHA512_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_HMAC_SHA512_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_RNG_ENABLED  - Enable RNG support using CC310.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_RNG_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_RNG_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_CC310_INTERRUPTS_ENABLED  - Enable Interrupts while support using CC310.\n\n \n\n\n\n// <i> Select a library version compatible with the configuration. When interrupts are disable, a version named _noint must be used\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CC310_INTERRUPTS_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CC310_INTERRUPTS_ENABLED 1\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_CRYPTO_BACKEND_CIFRA_ENABLED - Enable the Cifra backend.\n\n//==========================================================\n\n#ifndef NRF_CRYPTO_BACKEND_CIFRA_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CIFRA_ENABLED 0\n\n#endif\n\n// <q> NRF_CRYPTO_BACKEND_CIFRA_AES_EAX_ENABLED  - Enable the AES EAX mode using Cifra.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_CIFRA_AES_EAX_ENABLED\n\n#define NRF_CRYPTO_BACKEND_CIFRA_AES_EAX_ENABLED 1\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_CRYPTO_BACKEND_MBEDTLS_ENABLED - Enable the mbed TLS backend.\n\n//==========================================================\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_ENABLED 0\n\n#endif\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_AES_CBC_ENABLED  - Enable the AES CBC mode mbed TLS.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_AES_CBC_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_AES_CBC_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_AES_CTR_ENABLED  - Enable the AES CTR mode using mbed TLS.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_AES_CTR_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_AES_CTR_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_AES_CFB_ENABLED  - Enable the AES CFB mode using mbed TLS.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_AES_CFB_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_AES_CFB_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_AES_ECB_ENABLED  - Enable the AES ECB mode using mbed TLS.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_AES_ECB_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_AES_ECB_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_AES_CBC_MAC_ENABLED  - Enable the AES CBC MAC mode using mbed TLS.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_AES_CBC_MAC_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_AES_CBC_MAC_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_AES_CMAC_ENABLED  - Enable the AES CMAC mode using mbed TLS.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_AES_CMAC_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_AES_CMAC_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_AES_CCM_ENABLED  - Enable the AES CCM mode using mbed TLS.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_AES_CCM_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_AES_CCM_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_AES_GCM_ENABLED  - Enable the AES GCM mode using mbed TLS.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_AES_GCM_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_AES_GCM_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP192R1_ENABLED  - Enable secp192r1 (NIST 192-bit) curve\n\n \n\n\n\n// <i> Enable this setting if you need secp192r1 (NIST 192-bit) support using MBEDTLS\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP192R1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP192R1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP224R1_ENABLED  - Enable secp224r1 (NIST 224-bit) curve\n\n \n\n\n\n// <i> Enable this setting if you need secp224r1 (NIST 224-bit) support using MBEDTLS\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP224R1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP224R1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP256R1_ENABLED  - Enable secp256r1 (NIST 256-bit) curve\n\n \n\n\n\n// <i> Enable this setting if you need secp256r1 (NIST 256-bit) support using MBEDTLS\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP256R1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP256R1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP384R1_ENABLED  - Enable secp384r1 (NIST 384-bit) curve\n\n \n\n\n\n// <i> Enable this setting if you need secp384r1 (NIST 384-bit) support using MBEDTLS\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP384R1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP384R1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP521R1_ENABLED  - Enable secp521r1 (NIST 521-bit) curve\n\n \n\n\n\n// <i> Enable this setting if you need secp521r1 (NIST 521-bit) support using MBEDTLS\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP521R1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP521R1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP192K1_ENABLED  - Enable secp192k1 (Koblitz 192-bit) curve\n\n \n\n\n\n// <i> Enable this setting if you need secp192k1 (Koblitz 192-bit) support using MBEDTLS\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP192K1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP192K1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP224K1_ENABLED  - Enable secp224k1 (Koblitz 224-bit) curve\n\n \n\n\n\n// <i> Enable this setting if you need secp224k1 (Koblitz 224-bit) support using MBEDTLS\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP224K1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP224K1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP256K1_ENABLED  - Enable secp256k1 (Koblitz 256-bit) curve\n\n \n\n\n\n// <i> Enable this setting if you need secp256k1 (Koblitz 256-bit) support using MBEDTLS\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP256K1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_ECC_SECP256K1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_ECC_BP256R1_ENABLED  - Enable bp256r1 (Brainpool 256-bit) curve\n\n \n\n\n\n// <i> Enable this setting if you need bp256r1 (Brainpool 256-bit) support using MBEDTLS\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_ECC_BP256R1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_ECC_BP256R1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_ECC_BP384R1_ENABLED  - Enable bp384r1 (Brainpool 384-bit) curve\n\n \n\n\n\n// <i> Enable this setting if you need bp384r1 (Brainpool 384-bit) support using MBEDTLS\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_ECC_BP384R1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_ECC_BP384R1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_ECC_BP512R1_ENABLED  - Enable bp512r1 (Brainpool 512-bit) curve\n\n \n\n\n\n// <i> Enable this setting if you need bp512r1 (Brainpool 512-bit) support using MBEDTLS\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_ECC_BP512R1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_ECC_BP512R1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_ECC_CURVE25519_ENABLED  - Enable Curve25519 curve\n\n \n\n\n\n// <i> Enable this setting if you need Curve25519 support using MBEDTLS\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_ECC_CURVE25519_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_ECC_CURVE25519_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_HASH_SHA256_ENABLED  - Enable mbed TLS SHA-256 hash functionality.\n\n \n\n\n\n// <i> mbed TLS backend implementation for SHA-256.\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_HASH_SHA256_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_HASH_SHA256_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_HASH_SHA512_ENABLED  - Enable mbed TLS SHA-512 hash functionality.\n\n \n\n\n\n// <i> mbed TLS backend implementation for SHA-512.\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_HASH_SHA512_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_HASH_SHA512_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_HMAC_SHA256_ENABLED  - Enable mbed TLS HMAC using SHA-256.\n\n \n\n\n\n// <i> mbed TLS backend implementation for HMAC using SHA-256.\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_HMAC_SHA256_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_HMAC_SHA256_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MBEDTLS_HMAC_SHA512_ENABLED  - Enable mbed TLS HMAC using SHA-512.\n\n \n\n\n\n// <i> mbed TLS backend implementation for HMAC using SHA-512.\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MBEDTLS_HMAC_SHA512_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MBEDTLS_HMAC_SHA512_ENABLED 1\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_CRYPTO_BACKEND_MICRO_ECC_ENABLED - Enable the micro-ecc backend.\n\n//==========================================================\n\n#ifndef NRF_CRYPTO_BACKEND_MICRO_ECC_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MICRO_ECC_ENABLED 0\n\n#endif\n\n// <q> NRF_CRYPTO_BACKEND_MICRO_ECC_ECC_SECP192R1_ENABLED  - Enable secp192r1 (NIST 192-bit) curve\n\n \n\n\n\n// <i> Enable this setting if you need secp192r1 (NIST 192-bit) support using micro-ecc\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MICRO_ECC_ECC_SECP192R1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MICRO_ECC_ECC_SECP192R1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MICRO_ECC_ECC_SECP224R1_ENABLED  - Enable secp224r1 (NIST 224-bit) curve\n\n \n\n\n\n// <i> Enable this setting if you need secp224r1 (NIST 224-bit) support using micro-ecc\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MICRO_ECC_ECC_SECP224R1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MICRO_ECC_ECC_SECP224R1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MICRO_ECC_ECC_SECP256R1_ENABLED  - Enable secp256r1 (NIST 256-bit) curve\n\n \n\n\n\n// <i> Enable this setting if you need secp256r1 (NIST 256-bit) support using micro-ecc\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MICRO_ECC_ECC_SECP256R1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MICRO_ECC_ECC_SECP256R1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_MICRO_ECC_ECC_SECP256K1_ENABLED  - Enable secp256k1 (Koblitz 256-bit) curve\n\n \n\n\n\n// <i> Enable this setting if you need secp256k1 (Koblitz 256-bit) support using micro-ecc\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_MICRO_ECC_ECC_SECP256K1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_MICRO_ECC_ECC_SECP256K1_ENABLED 1\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_CRYPTO_BACKEND_NRF_HW_RNG_ENABLED - Enable the nRF HW RNG backend.\n\n\n\n// <i> The nRF HW backend provide access to RNG peripheral in nRF5x devices.\n\n//==========================================================\n\n#ifndef NRF_CRYPTO_BACKEND_NRF_HW_RNG_ENABLED\n\n#define NRF_CRYPTO_BACKEND_NRF_HW_RNG_ENABLED 0\n\n#endif\n\n// <q> NRF_CRYPTO_BACKEND_NRF_HW_RNG_MBEDTLS_CTR_DRBG_ENABLED  - Enable mbed TLS CTR-DRBG algorithm.\n\n \n\n\n\n// <i> Enable mbed TLS CTR-DRBG standardized by NIST (NIST SP 800-90A Rev. 1). The nRF HW RNG is used as an entropy source for seeding.\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_NRF_HW_RNG_MBEDTLS_CTR_DRBG_ENABLED\n\n#define NRF_CRYPTO_BACKEND_NRF_HW_RNG_MBEDTLS_CTR_DRBG_ENABLED 1\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_CRYPTO_BACKEND_NRF_SW_ENABLED - Enable the legacy nRFx sw for crypto.\n\n\n\n// <i> The nRF SW cryptography backend (only used in bootloader context).\n\n//==========================================================\n\n#ifndef NRF_CRYPTO_BACKEND_NRF_SW_ENABLED\n\n#define NRF_CRYPTO_BACKEND_NRF_SW_ENABLED 0\n\n#endif\n\n// <q> NRF_CRYPTO_BACKEND_NRF_SW_HASH_SHA256_ENABLED  - nRF SW hash backend support for SHA-256\n\n \n\n\n\n// <i> The nRF SW backend provide access to nRF SDK legacy hash implementation of SHA-256.\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_NRF_SW_HASH_SHA256_ENABLED\n\n#define NRF_CRYPTO_BACKEND_NRF_SW_HASH_SHA256_ENABLED 1\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_CRYPTO_BACKEND_OBERON_ENABLED - Enable the Oberon backend\n\n\n\n// <i> The Oberon backend\n\n//==========================================================\n\n#ifndef NRF_CRYPTO_BACKEND_OBERON_ENABLED\n\n#define NRF_CRYPTO_BACKEND_OBERON_ENABLED 0\n\n#endif\n\n// <q> NRF_CRYPTO_BACKEND_OBERON_CHACHA_POLY_ENABLED  - Enable the CHACHA-POLY mode using Oberon.\n\n \n\n\n\n#ifndef NRF_CRYPTO_BACKEND_OBERON_CHACHA_POLY_ENABLED\n\n#define NRF_CRYPTO_BACKEND_OBERON_CHACHA_POLY_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_OBERON_ECC_SECP256R1_ENABLED  - Enable secp256r1 curve\n\n \n\n\n\n// <i> Enable this setting if you need secp256r1 curve support using Oberon library\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_OBERON_ECC_SECP256R1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_OBERON_ECC_SECP256R1_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_OBERON_ECC_CURVE25519_ENABLED  - Enable Curve25519 ECDH\n\n \n\n\n\n// <i> Enable this setting if you need Curve25519 ECDH support using Oberon library\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_OBERON_ECC_CURVE25519_ENABLED\n\n#define NRF_CRYPTO_BACKEND_OBERON_ECC_CURVE25519_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_OBERON_ECC_ED25519_ENABLED  - Enable Ed25519 signature scheme\n\n \n\n\n\n// <i> Enable this setting if you need Ed25519 support using Oberon library\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_OBERON_ECC_ED25519_ENABLED\n\n#define NRF_CRYPTO_BACKEND_OBERON_ECC_ED25519_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_OBERON_HASH_SHA256_ENABLED  - Oberon SHA-256 hash functionality\n\n \n\n\n\n// <i> Oberon backend implementation for SHA-256.\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_OBERON_HASH_SHA256_ENABLED\n\n#define NRF_CRYPTO_BACKEND_OBERON_HASH_SHA256_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_OBERON_HASH_SHA512_ENABLED  - Oberon SHA-512 hash functionality\n\n \n\n\n\n// <i> Oberon backend implementation for SHA-512.\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_OBERON_HASH_SHA512_ENABLED\n\n#define NRF_CRYPTO_BACKEND_OBERON_HASH_SHA512_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_OBERON_HMAC_SHA256_ENABLED  - Oberon HMAC using SHA-256\n\n \n\n\n\n// <i> Oberon backend implementation for HMAC using SHA-256.\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_OBERON_HMAC_SHA256_ENABLED\n\n#define NRF_CRYPTO_BACKEND_OBERON_HMAC_SHA256_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_OBERON_HMAC_SHA512_ENABLED  - Oberon HMAC using SHA-512\n\n \n\n\n\n// <i> Oberon backend implementation for HMAC using SHA-512.\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_OBERON_HMAC_SHA512_ENABLED\n\n#define NRF_CRYPTO_BACKEND_OBERON_HMAC_SHA512_ENABLED 1\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_CRYPTO_BACKEND_OPTIGA_ENABLED - Enable the nrf_crypto Optiga Trust X backend.\n\n\n\n// <i> Enables the nrf_crypto backend for Optiga Trust X devices.\n\n//==========================================================\n\n#ifndef NRF_CRYPTO_BACKEND_OPTIGA_ENABLED\n\n#define NRF_CRYPTO_BACKEND_OPTIGA_ENABLED 0\n\n#endif\n\n// <q> NRF_CRYPTO_BACKEND_OPTIGA_RNG_ENABLED  - Optiga backend support for RNG\n\n \n\n\n\n// <i> The Optiga backend provide external chip RNG.\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_OPTIGA_RNG_ENABLED\n\n#define NRF_CRYPTO_BACKEND_OPTIGA_RNG_ENABLED 0\n\n#endif\n\n\n\n// <q> NRF_CRYPTO_BACKEND_OPTIGA_ECC_SECP256R1_ENABLED  - Optiga backend support for ECC secp256r1\n\n \n\n\n\n// <i> The Optiga backend provide external chip ECC using secp256r1.\n\n\n\n#ifndef NRF_CRYPTO_BACKEND_OPTIGA_ECC_SECP256R1_ENABLED\n\n#define NRF_CRYPTO_BACKEND_OPTIGA_ECC_SECP256R1_ENABLED 1\n\n#endif\n\n\n\n// </e>\n\n\n\n// <q> NRF_CRYPTO_CURVE25519_BIG_ENDIAN_ENABLED  - Big-endian byte order in raw Curve25519 data\n\n \n\n\n\n// <i> Enable big-endian byte order in Curve25519 API, if set to 1. Use little-endian, if set to 0.\n\n\n\n#ifndef NRF_CRYPTO_CURVE25519_BIG_ENDIAN_ENABLED\n\n#define NRF_CRYPTO_CURVE25519_BIG_ENDIAN_ENABLED 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> nRF_DFU \n\n\n\n//==========================================================\n\n// <h> ble_dfu - Device Firmware Update\n\n\n\n//==========================================================\n\n// <q> BLE_DFU_ENABLED  - Enable DFU Service.\n\n \n\n\n\n#ifndef BLE_DFU_ENABLED\n\n#define BLE_DFU_ENABLED 0\n\n#endif\n\n\n\n// <q> NRF_DFU_BLE_BUTTONLESS_SUPPORTS_BONDS  - Buttonless DFU supports bonds.\n\n \n\n\n\n#ifndef NRF_DFU_BLE_BUTTONLESS_SUPPORTS_BONDS\n\n#define NRF_DFU_BLE_BUTTONLESS_SUPPORTS_BONDS 0\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> nRF_Drivers \n\n\n\n//==========================================================\n\n// <e> COMP_ENABLED - nrf_drv_comp - COMP peripheral driver - legacy layer\n\n//==========================================================\n\n#ifndef COMP_ENABLED\n\n#define COMP_ENABLED 0\n\n#endif\n\n// <o> COMP_CONFIG_REF  - Reference voltage\n\n \n\n// <0=> Internal 1.2V \n\n// <1=> Internal 1.8V \n\n// <2=> Internal 2.4V \n\n// <4=> VDD \n\n// <7=> ARef \n\n\n\n#ifndef COMP_CONFIG_REF\n\n#define COMP_CONFIG_REF 1\n\n#endif\n\n\n\n// <o> COMP_CONFIG_MAIN_MODE  - Main mode\n\n \n\n// <0=> Single ended \n\n// <1=> Differential \n\n\n\n#ifndef COMP_CONFIG_MAIN_MODE\n\n#define COMP_CONFIG_MAIN_MODE 0\n\n#endif\n\n\n\n// <o> COMP_CONFIG_SPEED_MODE  - Speed mode\n\n \n\n// <0=> Low power \n\n// <1=> Normal \n\n// <2=> High speed \n\n\n\n#ifndef COMP_CONFIG_SPEED_MODE\n\n#define COMP_CONFIG_SPEED_MODE 2\n\n#endif\n\n\n\n// <o> COMP_CONFIG_HYST  - Hystheresis\n\n \n\n// <0=> No \n\n// <1=> 50mV \n\n\n\n#ifndef COMP_CONFIG_HYST\n\n#define COMP_CONFIG_HYST 0\n\n#endif\n\n\n\n// <o> COMP_CONFIG_ISOURCE  - Current Source\n\n \n\n// <0=> Off \n\n// <1=> 2.5 uA \n\n// <2=> 5 uA \n\n// <3=> 10 uA \n\n\n\n#ifndef COMP_CONFIG_ISOURCE\n\n#define COMP_CONFIG_ISOURCE 0\n\n#endif\n\n\n\n// <o> COMP_CONFIG_INPUT  - Analog input\n\n \n\n// <0=> 0 \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef COMP_CONFIG_INPUT\n\n#define COMP_CONFIG_INPUT 0\n\n#endif\n\n\n\n// <o> COMP_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef COMP_CONFIG_IRQ_PRIORITY\n\n#define COMP_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// </e>\n\n\n\n// <q> EGU_ENABLED  - nrf_drv_swi - SWI(EGU) peripheral driver - legacy layer\n\n \n\n\n\n#ifndef EGU_ENABLED\n\n#define EGU_ENABLED 0\n\n#endif\n\n\n\n// <e> GPIOTE_ENABLED - nrf_drv_gpiote - GPIOTE peripheral driver - legacy layer\n\n//==========================================================\n\n#ifndef GPIOTE_ENABLED\n\n#define GPIOTE_ENABLED 1\n\n#endif\n\n// <o> GPIOTE_CONFIG_NUM_OF_LOW_POWER_EVENTS - Number of lower power input pins \n\n#ifndef GPIOTE_CONFIG_NUM_OF_LOW_POWER_EVENTS\n\n#define GPIOTE_CONFIG_NUM_OF_LOW_POWER_EVENTS 4\n\n#endif\n\n\n\n// <o> GPIOTE_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef GPIOTE_CONFIG_IRQ_PRIORITY\n\n#define GPIOTE_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> I2S_ENABLED - nrf_drv_i2s - I2S peripheral driver - legacy layer\n\n//==========================================================\n\n#ifndef I2S_ENABLED\n\n#define I2S_ENABLED 0\n\n#endif\n\n// <o> I2S_CONFIG_SCK_PIN - SCK pin  <0-31> \n\n\n\n\n\n#ifndef I2S_CONFIG_SCK_PIN\n\n#define I2S_CONFIG_SCK_PIN 31\n\n#endif\n\n\n\n// <o> I2S_CONFIG_LRCK_PIN - LRCK pin  <1-31> \n\n\n\n\n\n#ifndef I2S_CONFIG_LRCK_PIN\n\n#define I2S_CONFIG_LRCK_PIN 30\n\n#endif\n\n\n\n// <o> I2S_CONFIG_MCK_PIN - MCK pin \n\n#ifndef I2S_CONFIG_MCK_PIN\n\n#define I2S_CONFIG_MCK_PIN 255\n\n#endif\n\n\n\n// <o> I2S_CONFIG_SDOUT_PIN - SDOUT pin  <0-31> \n\n\n\n\n\n#ifndef I2S_CONFIG_SDOUT_PIN\n\n#define I2S_CONFIG_SDOUT_PIN 29\n\n#endif\n\n\n\n// <o> I2S_CONFIG_SDIN_PIN - SDIN pin  <0-31> \n\n\n\n\n\n#ifndef I2S_CONFIG_SDIN_PIN\n\n#define I2S_CONFIG_SDIN_PIN 28\n\n#endif\n\n\n\n// <o> I2S_CONFIG_MASTER  - Mode\n\n \n\n// <0=> Master \n\n// <1=> Slave \n\n\n\n#ifndef I2S_CONFIG_MASTER\n\n#define I2S_CONFIG_MASTER 0\n\n#endif\n\n\n\n// <o> I2S_CONFIG_FORMAT  - Format\n\n \n\n// <0=> I2S \n\n// <1=> Aligned \n\n\n\n#ifndef I2S_CONFIG_FORMAT\n\n#define I2S_CONFIG_FORMAT 0\n\n#endif\n\n\n\n// <o> I2S_CONFIG_ALIGN  - Alignment\n\n \n\n// <0=> Left \n\n// <1=> Right \n\n\n\n#ifndef I2S_CONFIG_ALIGN\n\n#define I2S_CONFIG_ALIGN 0\n\n#endif\n\n\n\n// <o> I2S_CONFIG_SWIDTH  - Sample width (bits)\n\n \n\n// <0=> 8 \n\n// <1=> 16 \n\n// <2=> 24 \n\n\n\n#ifndef I2S_CONFIG_SWIDTH\n\n#define I2S_CONFIG_SWIDTH 1\n\n#endif\n\n\n\n// <o> I2S_CONFIG_CHANNELS  - Channels\n\n \n\n// <0=> Stereo \n\n// <1=> Left \n\n// <2=> Right \n\n\n\n#ifndef I2S_CONFIG_CHANNELS\n\n#define I2S_CONFIG_CHANNELS 1\n\n#endif\n\n\n\n// <o> I2S_CONFIG_MCK_SETUP  - MCK behavior\n\n \n\n// <0=> Disabled \n\n// <2147483648=> 32MHz/2 \n\n// <1342177280=> 32MHz/3 \n\n// <1073741824=> 32MHz/4 \n\n// <805306368=> 32MHz/5 \n\n// <671088640=> 32MHz/6 \n\n// <536870912=> 32MHz/8 \n\n// <402653184=> 32MHz/10 \n\n// <369098752=> 32MHz/11 \n\n// <285212672=> 32MHz/15 \n\n// <268435456=> 32MHz/16 \n\n// <201326592=> 32MHz/21 \n\n// <184549376=> 32MHz/23 \n\n// <142606336=> 32MHz/30 \n\n// <138412032=> 32MHz/31 \n\n// <134217728=> 32MHz/32 \n\n// <100663296=> 32MHz/42 \n\n// <68157440=> 32MHz/63 \n\n// <34340864=> 32MHz/125 \n\n\n\n#ifndef I2S_CONFIG_MCK_SETUP\n\n#define I2S_CONFIG_MCK_SETUP 536870912\n\n#endif\n\n\n\n// <o> I2S_CONFIG_RATIO  - MCK/LRCK ratio\n\n \n\n// <0=> 32x \n\n// <1=> 48x \n\n// <2=> 64x \n\n// <3=> 96x \n\n// <4=> 128x \n\n// <5=> 192x \n\n// <6=> 256x \n\n// <7=> 384x \n\n// <8=> 512x \n\n\n\n#ifndef I2S_CONFIG_RATIO\n\n#define I2S_CONFIG_RATIO 2000\n\n#endif\n\n\n\n// <o> I2S_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef I2S_CONFIG_IRQ_PRIORITY\n\n#define I2S_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> I2S_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef I2S_CONFIG_LOG_ENABLED\n\n#define I2S_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> I2S_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef I2S_CONFIG_LOG_LEVEL\n\n#define I2S_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> I2S_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef I2S_CONFIG_INFO_COLOR\n\n#define I2S_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> I2S_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef I2S_CONFIG_DEBUG_COLOR\n\n#define I2S_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> LPCOMP_ENABLED - nrf_drv_lpcomp - LPCOMP peripheral driver - legacy layer\n\n//==========================================================\n\n#ifndef LPCOMP_ENABLED\n\n#define LPCOMP_ENABLED 0\n\n#endif\n\n// <o> LPCOMP_CONFIG_REFERENCE  - Reference voltage\n\n \n\n// <0=> Supply 1/8 \n\n// <1=> Supply 2/8 \n\n// <2=> Supply 3/8 \n\n// <3=> Supply 4/8 \n\n// <4=> Supply 5/8 \n\n// <5=> Supply 6/8 \n\n// <6=> Supply 7/8 \n\n// <8=> Supply 1/16 (nRF52) \n\n// <9=> Supply 3/16 (nRF52) \n\n// <10=> Supply 5/16 (nRF52) \n\n// <11=> Supply 7/16 (nRF52) \n\n// <12=> Supply 9/16 (nRF52) \n\n// <13=> Supply 11/16 (nRF52) \n\n// <14=> Supply 13/16 (nRF52) \n\n// <15=> Supply 15/16 (nRF52) \n\n// <7=> External Ref 0 \n\n// <65543=> External Ref 1 \n\n\n\n#ifndef LPCOMP_CONFIG_REFERENCE\n\n#define LPCOMP_CONFIG_REFERENCE 3\n\n#endif\n\n\n\n// <o> LPCOMP_CONFIG_DETECTION  - Detection\n\n \n\n// <0=> Crossing \n\n// <1=> Up \n\n// <2=> Down \n\n\n\n#ifndef LPCOMP_CONFIG_DETECTION\n\n#define LPCOMP_CONFIG_DETECTION 2\n\n#endif\n\n\n\n// <o> LPCOMP_CONFIG_INPUT  - Analog input\n\n \n\n// <0=> 0 \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef LPCOMP_CONFIG_INPUT\n\n#define LPCOMP_CONFIG_INPUT 0\n\n#endif\n\n\n\n// <q> LPCOMP_CONFIG_HYST  - Hysteresis\n\n \n\n\n\n#ifndef LPCOMP_CONFIG_HYST\n\n#define LPCOMP_CONFIG_HYST 0\n\n#endif\n\n\n\n// <o> LPCOMP_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef LPCOMP_CONFIG_IRQ_PRIORITY\n\n#define LPCOMP_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRFX_CLOCK_ENABLED - nrfx_clock - CLOCK peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_CLOCK_ENABLED\n\n#define NRFX_CLOCK_ENABLED 1\n\n#endif\n\n// <o> NRFX_CLOCK_CONFIG_LF_SRC  - LF Clock Source\n\n \n\n// <0=> RC \n\n// <1=> XTAL \n\n// <2=> Synth \n\n// <131073=> External Low Swing \n\n// <196609=> External Full Swing \n\n\n\n#ifndef NRFX_CLOCK_CONFIG_LF_SRC\n\n#define NRFX_CLOCK_CONFIG_LF_SRC 1\n\n#endif\n\n\n\n// <o> NRFX_CLOCK_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_CLOCK_CONFIG_IRQ_PRIORITY\n\n#define NRFX_CLOCK_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> NRFX_CLOCK_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_CLOCK_CONFIG_LOG_ENABLED\n\n#define NRFX_CLOCK_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_CLOCK_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_CLOCK_CONFIG_LOG_LEVEL\n\n#define NRFX_CLOCK_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_CLOCK_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_CLOCK_CONFIG_INFO_COLOR\n\n#define NRFX_CLOCK_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_CLOCK_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_CLOCK_CONFIG_DEBUG_COLOR\n\n#define NRFX_CLOCK_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRFX_COMP_ENABLED - nrfx_comp - COMP peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_COMP_ENABLED\n\n#define NRFX_COMP_ENABLED 0\n\n#endif\n\n// <o> NRFX_COMP_CONFIG_REF  - Reference voltage\n\n \n\n// <0=> Internal 1.2V \n\n// <1=> Internal 1.8V \n\n// <2=> Internal 2.4V \n\n// <4=> VDD \n\n// <7=> ARef \n\n\n\n#ifndef NRFX_COMP_CONFIG_REF\n\n#define NRFX_COMP_CONFIG_REF 1\n\n#endif\n\n\n\n// <o> NRFX_COMP_CONFIG_MAIN_MODE  - Main mode\n\n \n\n// <0=> Single ended \n\n// <1=> Differential \n\n\n\n#ifndef NRFX_COMP_CONFIG_MAIN_MODE\n\n#define NRFX_COMP_CONFIG_MAIN_MODE 0\n\n#endif\n\n\n\n// <o> NRFX_COMP_CONFIG_SPEED_MODE  - Speed mode\n\n \n\n// <0=> Low power \n\n// <1=> Normal \n\n// <2=> High speed \n\n\n\n#ifndef NRFX_COMP_CONFIG_SPEED_MODE\n\n#define NRFX_COMP_CONFIG_SPEED_MODE 2\n\n#endif\n\n\n\n// <o> NRFX_COMP_CONFIG_HYST  - Hystheresis\n\n \n\n// <0=> No \n\n// <1=> 50mV \n\n\n\n#ifndef NRFX_COMP_CONFIG_HYST\n\n#define NRFX_COMP_CONFIG_HYST 0\n\n#endif\n\n\n\n// <o> NRFX_COMP_CONFIG_ISOURCE  - Current Source\n\n \n\n// <0=> Off \n\n// <1=> 2.5 uA \n\n// <2=> 5 uA \n\n// <3=> 10 uA \n\n\n\n#ifndef NRFX_COMP_CONFIG_ISOURCE\n\n#define NRFX_COMP_CONFIG_ISOURCE 0\n\n#endif\n\n\n\n// <o> NRFX_COMP_CONFIG_INPUT  - Analog input\n\n \n\n// <0=> 0 \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_COMP_CONFIG_INPUT\n\n#define NRFX_COMP_CONFIG_INPUT 0\n\n#endif\n\n\n\n// <o> NRFX_COMP_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_COMP_CONFIG_IRQ_PRIORITY\n\n#define NRFX_COMP_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> NRFX_COMP_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_COMP_CONFIG_LOG_ENABLED\n\n#define NRFX_COMP_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_COMP_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_COMP_CONFIG_LOG_LEVEL\n\n#define NRFX_COMP_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_COMP_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_COMP_CONFIG_INFO_COLOR\n\n#define NRFX_COMP_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_COMP_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_COMP_CONFIG_DEBUG_COLOR\n\n#define NRFX_COMP_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRFX_GPIOTE_ENABLED - nrfx_gpiote - GPIOTE peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_GPIOTE_ENABLED\n\n#define NRFX_GPIOTE_ENABLED 1\n\n#endif\n\n// <o> NRFX_GPIOTE_CONFIG_NUM_OF_LOW_POWER_EVENTS - Number of lower power input pins \n\n#ifndef NRFX_GPIOTE_CONFIG_NUM_OF_LOW_POWER_EVENTS\n\n#define NRFX_GPIOTE_CONFIG_NUM_OF_LOW_POWER_EVENTS 1\n\n#endif\n\n\n\n// <o> NRFX_GPIOTE_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_GPIOTE_CONFIG_IRQ_PRIORITY\n\n#define NRFX_GPIOTE_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> NRFX_GPIOTE_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_GPIOTE_CONFIG_LOG_ENABLED\n\n#define NRFX_GPIOTE_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_GPIOTE_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_GPIOTE_CONFIG_LOG_LEVEL\n\n#define NRFX_GPIOTE_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_GPIOTE_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_GPIOTE_CONFIG_INFO_COLOR\n\n#define NRFX_GPIOTE_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_GPIOTE_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_GPIOTE_CONFIG_DEBUG_COLOR\n\n#define NRFX_GPIOTE_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRFX_I2S_ENABLED - nrfx_i2s - I2S peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_I2S_ENABLED\n\n#define NRFX_I2S_ENABLED 0\n\n#endif\n\n// <o> NRFX_I2S_CONFIG_SCK_PIN - SCK pin  <0-31> \n\n\n\n\n\n#ifndef NRFX_I2S_CONFIG_SCK_PIN\n\n#define NRFX_I2S_CONFIG_SCK_PIN 31\n\n#endif\n\n\n\n// <o> NRFX_I2S_CONFIG_LRCK_PIN - LRCK pin  <1-31> \n\n\n\n\n\n#ifndef NRFX_I2S_CONFIG_LRCK_PIN\n\n#define NRFX_I2S_CONFIG_LRCK_PIN 30\n\n#endif\n\n\n\n// <o> NRFX_I2S_CONFIG_MCK_PIN - MCK pin \n\n#ifndef NRFX_I2S_CONFIG_MCK_PIN\n\n#define NRFX_I2S_CONFIG_MCK_PIN 255\n\n#endif\n\n\n\n// <o> NRFX_I2S_CONFIG_SDOUT_PIN - SDOUT pin  <0-31> \n\n\n\n\n\n#ifndef NRFX_I2S_CONFIG_SDOUT_PIN\n\n#define NRFX_I2S_CONFIG_SDOUT_PIN 29\n\n#endif\n\n\n\n// <o> NRFX_I2S_CONFIG_SDIN_PIN - SDIN pin  <0-31> \n\n\n\n\n\n#ifndef NRFX_I2S_CONFIG_SDIN_PIN\n\n#define NRFX_I2S_CONFIG_SDIN_PIN 28\n\n#endif\n\n\n\n// <o> NRFX_I2S_CONFIG_MASTER  - Mode\n\n \n\n// <0=> Master \n\n// <1=> Slave \n\n\n\n#ifndef NRFX_I2S_CONFIG_MASTER\n\n#define NRFX_I2S_CONFIG_MASTER 0\n\n#endif\n\n\n\n// <o> NRFX_I2S_CONFIG_FORMAT  - Format\n\n \n\n// <0=> I2S \n\n// <1=> Aligned \n\n\n\n#ifndef NRFX_I2S_CONFIG_FORMAT\n\n#define NRFX_I2S_CONFIG_FORMAT 0\n\n#endif\n\n\n\n// <o> NRFX_I2S_CONFIG_ALIGN  - Alignment\n\n \n\n// <0=> Left \n\n// <1=> Right \n\n\n\n#ifndef NRFX_I2S_CONFIG_ALIGN\n\n#define NRFX_I2S_CONFIG_ALIGN 0\n\n#endif\n\n\n\n// <o> NRFX_I2S_CONFIG_SWIDTH  - Sample width (bits)\n\n \n\n// <0=> 8 \n\n// <1=> 16 \n\n// <2=> 24 \n\n\n\n#ifndef NRFX_I2S_CONFIG_SWIDTH\n\n#define NRFX_I2S_CONFIG_SWIDTH 1\n\n#endif\n\n\n\n// <o> NRFX_I2S_CONFIG_CHANNELS  - Channels\n\n \n\n// <0=> Stereo \n\n// <1=> Left \n\n// <2=> Right \n\n\n\n#ifndef NRFX_I2S_CONFIG_CHANNELS\n\n#define NRFX_I2S_CONFIG_CHANNELS 1\n\n#endif\n\n\n\n// <o> NRFX_I2S_CONFIG_MCK_SETUP  - MCK behavior\n\n \n\n// <0=> Disabled \n\n// <2147483648=> 32MHz/2 \n\n// <1342177280=> 32MHz/3 \n\n// <1073741824=> 32MHz/4 \n\n// <805306368=> 32MHz/5 \n\n// <671088640=> 32MHz/6 \n\n// <536870912=> 32MHz/8 \n\n// <402653184=> 32MHz/10 \n\n// <369098752=> 32MHz/11 \n\n// <285212672=> 32MHz/15 \n\n// <268435456=> 32MHz/16 \n\n// <201326592=> 32MHz/21 \n\n// <184549376=> 32MHz/23 \n\n// <142606336=> 32MHz/30 \n\n// <138412032=> 32MHz/31 \n\n// <134217728=> 32MHz/32 \n\n// <100663296=> 32MHz/42 \n\n// <68157440=> 32MHz/63 \n\n// <34340864=> 32MHz/125 \n\n\n\n#ifndef NRFX_I2S_CONFIG_MCK_SETUP\n\n#define NRFX_I2S_CONFIG_MCK_SETUP 536870912\n\n#endif\n\n\n\n// <o> NRFX_I2S_CONFIG_RATIO  - MCK/LRCK ratio\n\n \n\n// <0=> 32x \n\n// <1=> 48x \n\n// <2=> 64x \n\n// <3=> 96x \n\n// <4=> 128x \n\n// <5=> 192x \n\n// <6=> 256x \n\n// <7=> 384x \n\n// <8=> 512x \n\n\n\n#ifndef NRFX_I2S_CONFIG_RATIO\n\n#define NRFX_I2S_CONFIG_RATIO 2000\n\n#endif\n\n\n\n// <o> NRFX_I2S_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_I2S_CONFIG_IRQ_PRIORITY\n\n#define NRFX_I2S_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> NRFX_I2S_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_I2S_CONFIG_LOG_ENABLED\n\n#define NRFX_I2S_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_I2S_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_I2S_CONFIG_LOG_LEVEL\n\n#define NRFX_I2S_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_I2S_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_I2S_CONFIG_INFO_COLOR\n\n#define NRFX_I2S_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_I2S_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_I2S_CONFIG_DEBUG_COLOR\n\n#define NRFX_I2S_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRFX_LPCOMP_ENABLED - nrfx_lpcomp - LPCOMP peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_LPCOMP_ENABLED\n\n#define NRFX_LPCOMP_ENABLED 0\n\n#endif\n\n// <o> NRFX_LPCOMP_CONFIG_REFERENCE  - Reference voltage\n\n \n\n// <0=> Supply 1/8 \n\n// <1=> Supply 2/8 \n\n// <2=> Supply 3/8 \n\n// <3=> Supply 4/8 \n\n// <4=> Supply 5/8 \n\n// <5=> Supply 6/8 \n\n// <6=> Supply 7/8 \n\n// <8=> Supply 1/16 (nRF52) \n\n// <9=> Supply 3/16 (nRF52) \n\n// <10=> Supply 5/16 (nRF52) \n\n// <11=> Supply 7/16 (nRF52) \n\n// <12=> Supply 9/16 (nRF52) \n\n// <13=> Supply 11/16 (nRF52) \n\n// <14=> Supply 13/16 (nRF52) \n\n// <15=> Supply 15/16 (nRF52) \n\n// <7=> External Ref 0 \n\n// <65543=> External Ref 1 \n\n\n\n#ifndef NRFX_LPCOMP_CONFIG_REFERENCE\n\n#define NRFX_LPCOMP_CONFIG_REFERENCE 3\n\n#endif\n\n\n\n// <o> NRFX_LPCOMP_CONFIG_DETECTION  - Detection\n\n \n\n// <0=> Crossing \n\n// <1=> Up \n\n// <2=> Down \n\n\n\n#ifndef NRFX_LPCOMP_CONFIG_DETECTION\n\n#define NRFX_LPCOMP_CONFIG_DETECTION 2\n\n#endif\n\n\n\n// <o> NRFX_LPCOMP_CONFIG_INPUT  - Analog input\n\n \n\n// <0=> 0 \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_LPCOMP_CONFIG_INPUT\n\n#define NRFX_LPCOMP_CONFIG_INPUT 0\n\n#endif\n\n\n\n// <q> NRFX_LPCOMP_CONFIG_HYST  - Hysteresis\n\n \n\n\n\n#ifndef NRFX_LPCOMP_CONFIG_HYST\n\n#define NRFX_LPCOMP_CONFIG_HYST 0\n\n#endif\n\n\n\n// <o> NRFX_LPCOMP_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_LPCOMP_CONFIG_IRQ_PRIORITY\n\n#define NRFX_LPCOMP_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> NRFX_LPCOMP_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_LPCOMP_CONFIG_LOG_ENABLED\n\n#define NRFX_LPCOMP_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_LPCOMP_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_LPCOMP_CONFIG_LOG_LEVEL\n\n#define NRFX_LPCOMP_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_LPCOMP_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_LPCOMP_CONFIG_INFO_COLOR\n\n#define NRFX_LPCOMP_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_LPCOMP_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_LPCOMP_CONFIG_DEBUG_COLOR\n\n#define NRFX_LPCOMP_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRFX_NFCT_ENABLED - nrfx_nfct - NFCT peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_NFCT_ENABLED\n\n#define NRFX_NFCT_ENABLED 0\n\n#endif\n\n// <o> NRFX_NFCT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_NFCT_CONFIG_IRQ_PRIORITY\n\n#define NRFX_NFCT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> NRFX_NFCT_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_NFCT_CONFIG_LOG_ENABLED\n\n#define NRFX_NFCT_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_NFCT_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_NFCT_CONFIG_LOG_LEVEL\n\n#define NRFX_NFCT_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_NFCT_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_NFCT_CONFIG_INFO_COLOR\n\n#define NRFX_NFCT_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_NFCT_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_NFCT_CONFIG_DEBUG_COLOR\n\n#define NRFX_NFCT_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRFX_PDM_ENABLED - nrfx_pdm - PDM peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_PDM_ENABLED\n\n#define NRFX_PDM_ENABLED 0\n\n#endif\n\n// <o> NRFX_PDM_CONFIG_MODE  - Mode\n\n \n\n// <0=> Stereo \n\n// <1=> Mono \n\n\n\n#ifndef NRFX_PDM_CONFIG_MODE\n\n#define NRFX_PDM_CONFIG_MODE 1\n\n#endif\n\n\n\n// <o> NRFX_PDM_CONFIG_EDGE  - Edge\n\n \n\n// <0=> Left falling \n\n// <1=> Left rising \n\n\n\n#ifndef NRFX_PDM_CONFIG_EDGE\n\n#define NRFX_PDM_CONFIG_EDGE 0\n\n#endif\n\n\n\n// <o> NRFX_PDM_CONFIG_CLOCK_FREQ  - Clock frequency\n\n \n\n// <134217728=> 1000k \n\n// <138412032=> 1032k (default) \n\n// <142606336=> 1067k \n\n\n\n#ifndef NRFX_PDM_CONFIG_CLOCK_FREQ\n\n#define NRFX_PDM_CONFIG_CLOCK_FREQ 138412032\n\n#endif\n\n\n\n// <o> NRFX_PDM_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_PDM_CONFIG_IRQ_PRIORITY\n\n#define NRFX_PDM_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> NRFX_PDM_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_PDM_CONFIG_LOG_ENABLED\n\n#define NRFX_PDM_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_PDM_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_PDM_CONFIG_LOG_LEVEL\n\n#define NRFX_PDM_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_PDM_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_PDM_CONFIG_INFO_COLOR\n\n#define NRFX_PDM_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_PDM_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_PDM_CONFIG_DEBUG_COLOR\n\n#define NRFX_PDM_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRFX_POWER_ENABLED - nrfx_power - POWER peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_POWER_ENABLED\n\n#define NRFX_POWER_ENABLED 0\n\n#endif\n\n// <o> NRFX_POWER_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_POWER_CONFIG_IRQ_PRIORITY\n\n#define NRFX_POWER_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <q> NRFX_POWER_CONFIG_DEFAULT_DCDCEN  - The default configuration of main DCDC regulator\n\n \n\n\n\n// <i> This settings means only that components for DCDC regulator are installed and it can be enabled.\n\n\n\n#ifndef NRFX_POWER_CONFIG_DEFAULT_DCDCEN\n\n#define NRFX_POWER_CONFIG_DEFAULT_DCDCEN 0\n\n#endif\n\n\n\n// <q> NRFX_POWER_CONFIG_DEFAULT_DCDCENHV  - The default configuration of High Voltage DCDC regulator\n\n \n\n\n\n// <i> This settings means only that components for DCDC regulator are installed and it can be enabled.\n\n\n\n#ifndef NRFX_POWER_CONFIG_DEFAULT_DCDCENHV\n\n#define NRFX_POWER_CONFIG_DEFAULT_DCDCENHV 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRFX_PPI_ENABLED - nrfx_ppi - PPI peripheral allocator\n\n//==========================================================\n\n#ifndef NRFX_PPI_ENABLED\n\n#define NRFX_PPI_ENABLED 0\n\n#endif\n\n// <e> NRFX_PPI_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_PPI_CONFIG_LOG_ENABLED\n\n#define NRFX_PPI_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_PPI_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_PPI_CONFIG_LOG_LEVEL\n\n#define NRFX_PPI_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_PPI_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_PPI_CONFIG_INFO_COLOR\n\n#define NRFX_PPI_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_PPI_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_PPI_CONFIG_DEBUG_COLOR\n\n#define NRFX_PPI_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRFX_PRS_ENABLED - nrfx_prs - Peripheral Resource Sharing module\n\n//==========================================================\n\n#ifndef NRFX_PRS_ENABLED\n\n#define NRFX_PRS_ENABLED 1\n\n#endif\n\n// <q> NRFX_PRS_BOX_0_ENABLED  - Enables box 0 in the module.\n\n \n\n\n\n#ifndef NRFX_PRS_BOX_0_ENABLED\n\n#define NRFX_PRS_BOX_0_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_PRS_BOX_1_ENABLED  - Enables box 1 in the module.\n\n \n\n\n\n#ifndef NRFX_PRS_BOX_1_ENABLED\n\n#define NRFX_PRS_BOX_1_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_PRS_BOX_2_ENABLED  - Enables box 2 in the module.\n\n \n\n\n\n#ifndef NRFX_PRS_BOX_2_ENABLED\n\n#define NRFX_PRS_BOX_2_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_PRS_BOX_3_ENABLED  - Enables box 3 in the module.\n\n \n\n\n\n#ifndef NRFX_PRS_BOX_3_ENABLED\n\n#define NRFX_PRS_BOX_3_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_PRS_BOX_4_ENABLED  - Enables box 4 in the module.\n\n \n\n\n\n#ifndef NRFX_PRS_BOX_4_ENABLED\n\n#define NRFX_PRS_BOX_4_ENABLED 1\n\n#endif\n\n\n\n// <e> NRFX_PRS_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_PRS_CONFIG_LOG_ENABLED\n\n#define NRFX_PRS_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_PRS_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_PRS_CONFIG_LOG_LEVEL\n\n#define NRFX_PRS_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_PRS_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_PRS_CONFIG_INFO_COLOR\n\n#define NRFX_PRS_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_PRS_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_PRS_CONFIG_DEBUG_COLOR\n\n#define NRFX_PRS_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRFX_PWM_ENABLED - nrfx_pwm - PWM peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_PWM_ENABLED\n\n#define NRFX_PWM_ENABLED 0\n\n#endif\n\n// <q> NRFX_PWM0_ENABLED  - Enable PWM0 instance\n\n \n\n\n\n#ifndef NRFX_PWM0_ENABLED\n\n#define NRFX_PWM0_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_PWM1_ENABLED  - Enable PWM1 instance\n\n \n\n\n\n#ifndef NRFX_PWM1_ENABLED\n\n#define NRFX_PWM1_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_PWM2_ENABLED  - Enable PWM2 instance\n\n \n\n\n\n#ifndef NRFX_PWM2_ENABLED\n\n#define NRFX_PWM2_ENABLED 0\n\n#endif\n\n\n\n// <o> NRFX_PWM_DEFAULT_CONFIG_OUT0_PIN - Out0 pin  <0-31> \n\n\n\n\n\n#ifndef NRFX_PWM_DEFAULT_CONFIG_OUT0_PIN\n\n#define NRFX_PWM_DEFAULT_CONFIG_OUT0_PIN 31\n\n#endif\n\n\n\n// <o> NRFX_PWM_DEFAULT_CONFIG_OUT1_PIN - Out1 pin  <0-31> \n\n\n\n\n\n#ifndef NRFX_PWM_DEFAULT_CONFIG_OUT1_PIN\n\n#define NRFX_PWM_DEFAULT_CONFIG_OUT1_PIN 31\n\n#endif\n\n\n\n// <o> NRFX_PWM_DEFAULT_CONFIG_OUT2_PIN - Out2 pin  <0-31> \n\n\n\n\n\n#ifndef NRFX_PWM_DEFAULT_CONFIG_OUT2_PIN\n\n#define NRFX_PWM_DEFAULT_CONFIG_OUT2_PIN 31\n\n#endif\n\n\n\n// <o> NRFX_PWM_DEFAULT_CONFIG_OUT3_PIN - Out3 pin  <0-31> \n\n\n\n\n\n#ifndef NRFX_PWM_DEFAULT_CONFIG_OUT3_PIN\n\n#define NRFX_PWM_DEFAULT_CONFIG_OUT3_PIN 31\n\n#endif\n\n\n\n// <o> NRFX_PWM_DEFAULT_CONFIG_BASE_CLOCK  - Base clock\n\n \n\n// <0=> 16 MHz \n\n// <1=> 8 MHz \n\n// <2=> 4 MHz \n\n// <3=> 2 MHz \n\n// <4=> 1 MHz \n\n// <5=> 500 kHz \n\n// <6=> 250 kHz \n\n// <7=> 125 kHz \n\n\n\n#ifndef NRFX_PWM_DEFAULT_CONFIG_BASE_CLOCK\n\n#define NRFX_PWM_DEFAULT_CONFIG_BASE_CLOCK 4\n\n#endif\n\n\n\n// <o> NRFX_PWM_DEFAULT_CONFIG_COUNT_MODE  - Count mode\n\n \n\n// <0=> Up \n\n// <1=> Up and Down \n\n\n\n#ifndef NRFX_PWM_DEFAULT_CONFIG_COUNT_MODE\n\n#define NRFX_PWM_DEFAULT_CONFIG_COUNT_MODE 0\n\n#endif\n\n\n\n// <o> NRFX_PWM_DEFAULT_CONFIG_TOP_VALUE - Top value \n\n#ifndef NRFX_PWM_DEFAULT_CONFIG_TOP_VALUE\n\n#define NRFX_PWM_DEFAULT_CONFIG_TOP_VALUE 1000\n\n#endif\n\n\n\n// <o> NRFX_PWM_DEFAULT_CONFIG_LOAD_MODE  - Load mode\n\n \n\n// <0=> Common \n\n// <1=> Grouped \n\n// <2=> Individual \n\n// <3=> Waveform \n\n\n\n#ifndef NRFX_PWM_DEFAULT_CONFIG_LOAD_MODE\n\n#define NRFX_PWM_DEFAULT_CONFIG_LOAD_MODE 0\n\n#endif\n\n\n\n// <o> NRFX_PWM_DEFAULT_CONFIG_STEP_MODE  - Step mode\n\n \n\n// <0=> Auto \n\n// <1=> Triggered \n\n\n\n#ifndef NRFX_PWM_DEFAULT_CONFIG_STEP_MODE\n\n#define NRFX_PWM_DEFAULT_CONFIG_STEP_MODE 0\n\n#endif\n\n\n\n// <o> NRFX_PWM_DEFAULT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_PWM_DEFAULT_CONFIG_IRQ_PRIORITY\n\n#define NRFX_PWM_DEFAULT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> NRFX_PWM_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_PWM_CONFIG_LOG_ENABLED\n\n#define NRFX_PWM_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_PWM_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_PWM_CONFIG_LOG_LEVEL\n\n#define NRFX_PWM_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_PWM_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_PWM_CONFIG_INFO_COLOR\n\n#define NRFX_PWM_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_PWM_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_PWM_CONFIG_DEBUG_COLOR\n\n#define NRFX_PWM_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRFX_PWM_NRF52_ANOMALY_109_WORKAROUND_ENABLED - Enables nRF52 Anomaly 109 workaround for PWM.\n\n\n\n// <i> The workaround uses interrupts to wake up the CPU and ensure\n\n// <i> it is active when PWM is about to start a DMA transfer. For\n\n// <i> initial transfer, done when a playback is started via PPI,\n\n// <i> a specific EGU instance is used to generate the interrupt.\n\n// <i> During the playback, the PWM interrupt triggered on SEQEND\n\n// <i> event of a preceding sequence is used to protect the transfer\n\n// <i> done for the next sequence to be played.\n\n//==========================================================\n\n#ifndef NRFX_PWM_NRF52_ANOMALY_109_WORKAROUND_ENABLED\n\n#define NRFX_PWM_NRF52_ANOMALY_109_WORKAROUND_ENABLED 0\n\n#endif\n\n// <o> NRFX_PWM_NRF52_ANOMALY_109_EGU_INSTANCE  - EGU instance used by the nRF52 Anomaly 109 workaround for PWM.\n\n \n\n// <0=> EGU0 \n\n// <1=> EGU1 \n\n// <2=> EGU2 \n\n// <3=> EGU3 \n\n// <4=> EGU4 \n\n// <5=> EGU5 \n\n\n\n#ifndef NRFX_PWM_NRF52_ANOMALY_109_EGU_INSTANCE\n\n#define NRFX_PWM_NRF52_ANOMALY_109_EGU_INSTANCE 5\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRFX_QDEC_ENABLED - nrfx_qdec - QDEC peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_QDEC_ENABLED\n\n#define NRFX_QDEC_ENABLED 0\n\n#endif\n\n// <o> NRFX_QDEC_CONFIG_REPORTPER  - Report period\n\n \n\n// <0=> 10 Samples \n\n// <1=> 40 Samples \n\n// <2=> 80 Samples \n\n// <3=> 120 Samples \n\n// <4=> 160 Samples \n\n// <5=> 200 Samples \n\n// <6=> 240 Samples \n\n// <7=> 280 Samples \n\n\n\n#ifndef NRFX_QDEC_CONFIG_REPORTPER\n\n#define NRFX_QDEC_CONFIG_REPORTPER 0\n\n#endif\n\n\n\n// <o> NRFX_QDEC_CONFIG_SAMPLEPER  - Sample period\n\n \n\n// <0=> 128 us \n\n// <1=> 256 us \n\n// <2=> 512 us \n\n// <3=> 1024 us \n\n// <4=> 2048 us \n\n// <5=> 4096 us \n\n// <6=> 8192 us \n\n// <7=> 16384 us \n\n\n\n#ifndef NRFX_QDEC_CONFIG_SAMPLEPER\n\n#define NRFX_QDEC_CONFIG_SAMPLEPER 7\n\n#endif\n\n\n\n// <o> NRFX_QDEC_CONFIG_PIO_A - A pin  <0-31> \n\n\n\n\n\n#ifndef NRFX_QDEC_CONFIG_PIO_A\n\n#define NRFX_QDEC_CONFIG_PIO_A 31\n\n#endif\n\n\n\n// <o> NRFX_QDEC_CONFIG_PIO_B - B pin  <0-31> \n\n\n\n\n\n#ifndef NRFX_QDEC_CONFIG_PIO_B\n\n#define NRFX_QDEC_CONFIG_PIO_B 31\n\n#endif\n\n\n\n// <o> NRFX_QDEC_CONFIG_PIO_LED - LED pin  <0-31> \n\n\n\n\n\n#ifndef NRFX_QDEC_CONFIG_PIO_LED\n\n#define NRFX_QDEC_CONFIG_PIO_LED 31\n\n#endif\n\n\n\n// <o> NRFX_QDEC_CONFIG_LEDPRE - LED pre \n\n#ifndef NRFX_QDEC_CONFIG_LEDPRE\n\n#define NRFX_QDEC_CONFIG_LEDPRE 511\n\n#endif\n\n\n\n// <o> NRFX_QDEC_CONFIG_LEDPOL  - LED polarity\n\n \n\n// <0=> Active low \n\n// <1=> Active high \n\n\n\n#ifndef NRFX_QDEC_CONFIG_LEDPOL\n\n#define NRFX_QDEC_CONFIG_LEDPOL 1\n\n#endif\n\n\n\n// <q> NRFX_QDEC_CONFIG_DBFEN  - Debouncing enable\n\n \n\n\n\n#ifndef NRFX_QDEC_CONFIG_DBFEN\n\n#define NRFX_QDEC_CONFIG_DBFEN 0\n\n#endif\n\n\n\n// <q> NRFX_QDEC_CONFIG_SAMPLE_INTEN  - Sample ready interrupt enable\n\n \n\n\n\n#ifndef NRFX_QDEC_CONFIG_SAMPLE_INTEN\n\n#define NRFX_QDEC_CONFIG_SAMPLE_INTEN 0\n\n#endif\n\n\n\n// <o> NRFX_QDEC_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_QDEC_CONFIG_IRQ_PRIORITY\n\n#define NRFX_QDEC_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> NRFX_QDEC_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_QDEC_CONFIG_LOG_ENABLED\n\n#define NRFX_QDEC_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_QDEC_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_QDEC_CONFIG_LOG_LEVEL\n\n#define NRFX_QDEC_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_QDEC_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_QDEC_CONFIG_INFO_COLOR\n\n#define NRFX_QDEC_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_QDEC_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_QDEC_CONFIG_DEBUG_COLOR\n\n#define NRFX_QDEC_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRFX_RNG_ENABLED - nrfx_rng - RNG peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_RNG_ENABLED\n\n#define NRFX_RNG_ENABLED 0\n\n#endif\n\n// <q> NRFX_RNG_CONFIG_ERROR_CORRECTION  - Error correction\n\n \n\n\n\n#ifndef NRFX_RNG_CONFIG_ERROR_CORRECTION\n\n#define NRFX_RNG_CONFIG_ERROR_CORRECTION 1\n\n#endif\n\n\n\n// <o> NRFX_RNG_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_RNG_CONFIG_IRQ_PRIORITY\n\n#define NRFX_RNG_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> NRFX_RNG_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_RNG_CONFIG_LOG_ENABLED\n\n#define NRFX_RNG_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_RNG_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_RNG_CONFIG_LOG_LEVEL\n\n#define NRFX_RNG_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_RNG_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_RNG_CONFIG_INFO_COLOR\n\n#define NRFX_RNG_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_RNG_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_RNG_CONFIG_DEBUG_COLOR\n\n#define NRFX_RNG_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRFX_RTC_ENABLED - nrfx_rtc - RTC peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_RTC_ENABLED\n\n#define NRFX_RTC_ENABLED 0\n\n#endif\n\n// <q> NRFX_RTC0_ENABLED  - Enable RTC0 instance\n\n \n\n\n\n#ifndef NRFX_RTC0_ENABLED\n\n#define NRFX_RTC0_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_RTC1_ENABLED  - Enable RTC1 instance\n\n \n\n\n\n#ifndef NRFX_RTC1_ENABLED\n\n#define NRFX_RTC1_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_RTC2_ENABLED  - Enable RTC2 instance\n\n \n\n\n\n#ifndef NRFX_RTC2_ENABLED\n\n#define NRFX_RTC2_ENABLED 0\n\n#endif\n\n\n\n// <o> NRFX_RTC_MAXIMUM_LATENCY_US - Maximum possible time[us] in highest priority interrupt \n\n#ifndef NRFX_RTC_MAXIMUM_LATENCY_US\n\n#define NRFX_RTC_MAXIMUM_LATENCY_US 2000\n\n#endif\n\n\n\n// <o> NRFX_RTC_DEFAULT_CONFIG_FREQUENCY - Frequency  <16-32768> \n\n\n\n\n\n#ifndef NRFX_RTC_DEFAULT_CONFIG_FREQUENCY\n\n#define NRFX_RTC_DEFAULT_CONFIG_FREQUENCY 32768\n\n#endif\n\n\n\n// <q> NRFX_RTC_DEFAULT_CONFIG_RELIABLE  - Ensures safe compare event triggering\n\n \n\n\n\n#ifndef NRFX_RTC_DEFAULT_CONFIG_RELIABLE\n\n#define NRFX_RTC_DEFAULT_CONFIG_RELIABLE 0\n\n#endif\n\n\n\n// <o> NRFX_RTC_DEFAULT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_RTC_DEFAULT_CONFIG_IRQ_PRIORITY\n\n#define NRFX_RTC_DEFAULT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> NRFX_RTC_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_RTC_CONFIG_LOG_ENABLED\n\n#define NRFX_RTC_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_RTC_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_RTC_CONFIG_LOG_LEVEL\n\n#define NRFX_RTC_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_RTC_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_RTC_CONFIG_INFO_COLOR\n\n#define NRFX_RTC_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_RTC_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_RTC_CONFIG_DEBUG_COLOR\n\n#define NRFX_RTC_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRFX_SAADC_ENABLED - nrfx_saadc - SAADC peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_SAADC_ENABLED\n\n#define NRFX_SAADC_ENABLED 0\n\n#endif\n\n// <o> NRFX_SAADC_CONFIG_RESOLUTION  - Resolution\n\n \n\n// <0=> 8 bit \n\n// <1=> 10 bit \n\n// <2=> 12 bit \n\n// <3=> 14 bit \n\n\n\n#ifndef NRFX_SAADC_CONFIG_RESOLUTION\n\n#define NRFX_SAADC_CONFIG_RESOLUTION 1\n\n#endif\n\n\n\n// <o> NRFX_SAADC_CONFIG_OVERSAMPLE  - Sample period\n\n \n\n// <0=> Disabled \n\n// <1=> 2x \n\n// <2=> 4x \n\n// <3=> 8x \n\n// <4=> 16x \n\n// <5=> 32x \n\n// <6=> 64x \n\n// <7=> 128x \n\n// <8=> 256x \n\n\n\n#ifndef NRFX_SAADC_CONFIG_OVERSAMPLE\n\n#define NRFX_SAADC_CONFIG_OVERSAMPLE 0\n\n#endif\n\n\n\n// <q> NRFX_SAADC_CONFIG_LP_MODE  - Enabling low power mode\n\n \n\n\n\n#ifndef NRFX_SAADC_CONFIG_LP_MODE\n\n#define NRFX_SAADC_CONFIG_LP_MODE 0\n\n#endif\n\n\n\n// <o> NRFX_SAADC_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_SAADC_CONFIG_IRQ_PRIORITY\n\n#define NRFX_SAADC_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> NRFX_SAADC_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_SAADC_CONFIG_LOG_ENABLED\n\n#define NRFX_SAADC_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_SAADC_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_SAADC_CONFIG_LOG_LEVEL\n\n#define NRFX_SAADC_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_SAADC_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_SAADC_CONFIG_INFO_COLOR\n\n#define NRFX_SAADC_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_SAADC_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_SAADC_CONFIG_DEBUG_COLOR\n\n#define NRFX_SAADC_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRFX_SPIM_ENABLED - nrfx_spim - SPIM peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_SPIM_ENABLED\n\n#define NRFX_SPIM_ENABLED 0\n\n#endif\n\n// <q> NRFX_SPIM0_ENABLED  - Enable SPIM0 instance\n\n \n\n\n\n#ifndef NRFX_SPIM0_ENABLED\n\n#define NRFX_SPIM0_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_SPIM1_ENABLED  - Enable SPIM1 instance\n\n \n\n\n\n#ifndef NRFX_SPIM1_ENABLED\n\n#define NRFX_SPIM1_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_SPIM2_ENABLED  - Enable SPIM2 instance\n\n \n\n\n\n#ifndef NRFX_SPIM2_ENABLED\n\n#define NRFX_SPIM2_ENABLED 0\n\n#endif\n\n\n\n// <o> NRFX_SPIM_MISO_PULL_CFG  - MISO pin pull configuration.\n\n \n\n// <0=> NRF_GPIO_PIN_NOPULL \n\n// <1=> NRF_GPIO_PIN_PULLDOWN \n\n// <3=> NRF_GPIO_PIN_PULLUP \n\n\n\n#ifndef NRFX_SPIM_MISO_PULL_CFG\n\n#define NRFX_SPIM_MISO_PULL_CFG 1\n\n#endif\n\n\n\n// <o> NRFX_SPIM_DEFAULT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_SPIM_DEFAULT_CONFIG_IRQ_PRIORITY\n\n#define NRFX_SPIM_DEFAULT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> NRFX_SPIM_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_SPIM_CONFIG_LOG_ENABLED\n\n#define NRFX_SPIM_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_SPIM_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_SPIM_CONFIG_LOG_LEVEL\n\n#define NRFX_SPIM_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_SPIM_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_SPIM_CONFIG_INFO_COLOR\n\n#define NRFX_SPIM_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_SPIM_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_SPIM_CONFIG_DEBUG_COLOR\n\n#define NRFX_SPIM_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <q> NRFX_SPIM_NRF52_ANOMALY_109_WORKAROUND_ENABLED  - Enables nRF52 anomaly 109 workaround for SPIM.\n\n \n\n\n\n// <i> The workaround uses interrupts to wake up the CPU by catching\n\n// <i> a start event of zero-length transmission to start the clock. This \n\n// <i> ensures that the DMA transfer will be executed without issues and\n\n// <i> that the proper transfer will be started. See more in the Errata \n\n// <i> document or Anomaly 109 Addendum located at \n\n// <i> https://infocenter.nordicsemi.com/\n\n\n\n#ifndef NRFX_SPIM_NRF52_ANOMALY_109_WORKAROUND_ENABLED\n\n#define NRFX_SPIM_NRF52_ANOMALY_109_WORKAROUND_ENABLED 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRFX_SPIS_ENABLED - nrfx_spis - SPIS peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_SPIS_ENABLED\n\n#define NRFX_SPIS_ENABLED 0\n\n#endif\n\n// <q> NRFX_SPIS0_ENABLED  - Enable SPIS0 instance\n\n \n\n\n\n#ifndef NRFX_SPIS0_ENABLED\n\n#define NRFX_SPIS0_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_SPIS1_ENABLED  - Enable SPIS1 instance\n\n \n\n\n\n#ifndef NRFX_SPIS1_ENABLED\n\n#define NRFX_SPIS1_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_SPIS2_ENABLED  - Enable SPIS2 instance\n\n \n\n\n\n#ifndef NRFX_SPIS2_ENABLED\n\n#define NRFX_SPIS2_ENABLED 0\n\n#endif\n\n\n\n// <o> NRFX_SPIS_DEFAULT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_SPIS_DEFAULT_CONFIG_IRQ_PRIORITY\n\n#define NRFX_SPIS_DEFAULT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <o> NRFX_SPIS_DEFAULT_DEF - SPIS default DEF character  <0-255> \n\n\n\n\n\n#ifndef NRFX_SPIS_DEFAULT_DEF\n\n#define NRFX_SPIS_DEFAULT_DEF 255\n\n#endif\n\n\n\n// <o> NRFX_SPIS_DEFAULT_ORC - SPIS default ORC character  <0-255> \n\n\n\n\n\n#ifndef NRFX_SPIS_DEFAULT_ORC\n\n#define NRFX_SPIS_DEFAULT_ORC 255\n\n#endif\n\n\n\n// <e> NRFX_SPIS_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_SPIS_CONFIG_LOG_ENABLED\n\n#define NRFX_SPIS_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_SPIS_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_SPIS_CONFIG_LOG_LEVEL\n\n#define NRFX_SPIS_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_SPIS_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_SPIS_CONFIG_INFO_COLOR\n\n#define NRFX_SPIS_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_SPIS_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_SPIS_CONFIG_DEBUG_COLOR\n\n#define NRFX_SPIS_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <q> NRFX_SPIS_NRF52_ANOMALY_109_WORKAROUND_ENABLED  - Enables nRF52 Anomaly 109 workaround for SPIS.\n\n \n\n\n\n// <i> The workaround uses a GPIOTE channel to generate interrupts\n\n// <i> on falling edges detected on the CSN line. This will make\n\n// <i> the CPU active for the moment when SPIS starts DMA transfers,\n\n// <i> and this way the transfers will be protected.\n\n// <i> This workaround uses GPIOTE driver, so this driver must be\n\n// <i> enabled as well.\n\n\n\n#ifndef NRFX_SPIS_NRF52_ANOMALY_109_WORKAROUND_ENABLED\n\n#define NRFX_SPIS_NRF52_ANOMALY_109_WORKAROUND_ENABLED 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRFX_SPI_ENABLED - nrfx_spi - SPI peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_SPI_ENABLED\n\n#define NRFX_SPI_ENABLED 0\n\n#endif\n\n// <q> NRFX_SPI0_ENABLED  - Enable SPI0 instance\n\n \n\n\n\n#ifndef NRFX_SPI0_ENABLED\n\n#define NRFX_SPI0_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_SPI1_ENABLED  - Enable SPI1 instance\n\n \n\n\n\n#ifndef NRFX_SPI1_ENABLED\n\n#define NRFX_SPI1_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_SPI2_ENABLED  - Enable SPI2 instance\n\n \n\n\n\n#ifndef NRFX_SPI2_ENABLED\n\n#define NRFX_SPI2_ENABLED 0\n\n#endif\n\n\n\n// <o> NRFX_SPI_MISO_PULL_CFG  - MISO pin pull configuration.\n\n \n\n// <0=> NRF_GPIO_PIN_NOPULL \n\n// <1=> NRF_GPIO_PIN_PULLDOWN \n\n// <3=> NRF_GPIO_PIN_PULLUP \n\n\n\n#ifndef NRFX_SPI_MISO_PULL_CFG\n\n#define NRFX_SPI_MISO_PULL_CFG 1\n\n#endif\n\n\n\n// <o> NRFX_SPI_DEFAULT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_SPI_DEFAULT_CONFIG_IRQ_PRIORITY\n\n#define NRFX_SPI_DEFAULT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> NRFX_SPI_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_SPI_CONFIG_LOG_ENABLED\n\n#define NRFX_SPI_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_SPI_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_SPI_CONFIG_LOG_LEVEL\n\n#define NRFX_SPI_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_SPI_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_SPI_CONFIG_INFO_COLOR\n\n#define NRFX_SPI_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_SPI_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_SPI_CONFIG_DEBUG_COLOR\n\n#define NRFX_SPI_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRFX_SWI_ENABLED - nrfx_swi - SWI/EGU peripheral allocator\n\n//==========================================================\n\n#ifndef NRFX_SWI_ENABLED\n\n#define NRFX_SWI_ENABLED 0\n\n#endif\n\n// <q> NRFX_EGU_ENABLED  - Enable EGU support\n\n \n\n\n\n#ifndef NRFX_EGU_ENABLED\n\n#define NRFX_EGU_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_SWI0_DISABLED  - Exclude SWI0 from being utilized by the driver\n\n \n\n\n\n#ifndef NRFX_SWI0_DISABLED\n\n#define NRFX_SWI0_DISABLED 0\n\n#endif\n\n\n\n// <q> NRFX_SWI1_DISABLED  - Exclude SWI1 from being utilized by the driver\n\n \n\n\n\n#ifndef NRFX_SWI1_DISABLED\n\n#define NRFX_SWI1_DISABLED 0\n\n#endif\n\n\n\n// <q> NRFX_SWI2_DISABLED  - Exclude SWI2 from being utilized by the driver\n\n \n\n\n\n#ifndef NRFX_SWI2_DISABLED\n\n#define NRFX_SWI2_DISABLED 0\n\n#endif\n\n\n\n// <q> NRFX_SWI3_DISABLED  - Exclude SWI3 from being utilized by the driver\n\n \n\n\n\n#ifndef NRFX_SWI3_DISABLED\n\n#define NRFX_SWI3_DISABLED 0\n\n#endif\n\n\n\n// <q> NRFX_SWI4_DISABLED  - Exclude SWI4 from being utilized by the driver\n\n \n\n\n\n#ifndef NRFX_SWI4_DISABLED\n\n#define NRFX_SWI4_DISABLED 0\n\n#endif\n\n\n\n// <q> NRFX_SWI5_DISABLED  - Exclude SWI5 from being utilized by the driver\n\n \n\n\n\n#ifndef NRFX_SWI5_DISABLED\n\n#define NRFX_SWI5_DISABLED 0\n\n#endif\n\n\n\n// <e> NRFX_SWI_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_SWI_CONFIG_LOG_ENABLED\n\n#define NRFX_SWI_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_SWI_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_SWI_CONFIG_LOG_LEVEL\n\n#define NRFX_SWI_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_SWI_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_SWI_CONFIG_INFO_COLOR\n\n#define NRFX_SWI_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_SWI_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_SWI_CONFIG_DEBUG_COLOR\n\n#define NRFX_SWI_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRFX_TIMER_ENABLED - nrfx_timer - TIMER periperal driver\n\n//==========================================================\n\n#ifndef NRFX_TIMER_ENABLED\n\n#define NRFX_TIMER_ENABLED 0\n\n#endif\n\n// <q> NRFX_TIMER0_ENABLED  - Enable TIMER0 instance\n\n \n\n\n\n#ifndef NRFX_TIMER0_ENABLED\n\n#define NRFX_TIMER0_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_TIMER1_ENABLED  - Enable TIMER1 instance\n\n \n\n\n\n#ifndef NRFX_TIMER1_ENABLED\n\n#define NRFX_TIMER1_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_TIMER2_ENABLED  - Enable TIMER2 instance\n\n \n\n\n\n#ifndef NRFX_TIMER2_ENABLED\n\n#define NRFX_TIMER2_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_TIMER3_ENABLED  - Enable TIMER3 instance\n\n \n\n\n\n#ifndef NRFX_TIMER3_ENABLED\n\n#define NRFX_TIMER3_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_TIMER4_ENABLED  - Enable TIMER4 instance\n\n \n\n\n\n#ifndef NRFX_TIMER4_ENABLED\n\n#define NRFX_TIMER4_ENABLED 0\n\n#endif\n\n\n\n// <o> NRFX_TIMER_DEFAULT_CONFIG_FREQUENCY  - Timer frequency if in Timer mode\n\n \n\n// <0=> 16 MHz \n\n// <1=> 8 MHz \n\n// <2=> 4 MHz \n\n// <3=> 2 MHz \n\n// <4=> 1 MHz \n\n// <5=> 500 kHz \n\n// <6=> 250 kHz \n\n// <7=> 125 kHz \n\n// <8=> 62.5 kHz \n\n// <9=> 31.25 kHz \n\n\n\n#ifndef NRFX_TIMER_DEFAULT_CONFIG_FREQUENCY\n\n#define NRFX_TIMER_DEFAULT_CONFIG_FREQUENCY 0\n\n#endif\n\n\n\n// <o> NRFX_TIMER_DEFAULT_CONFIG_MODE  - Timer mode or operation\n\n \n\n// <0=> Timer \n\n// <1=> Counter \n\n\n\n#ifndef NRFX_TIMER_DEFAULT_CONFIG_MODE\n\n#define NRFX_TIMER_DEFAULT_CONFIG_MODE 0\n\n#endif\n\n\n\n// <o> NRFX_TIMER_DEFAULT_CONFIG_BIT_WIDTH  - Timer counter bit width\n\n \n\n// <0=> 16 bit \n\n// <1=> 8 bit \n\n// <2=> 24 bit \n\n// <3=> 32 bit \n\n\n\n#ifndef NRFX_TIMER_DEFAULT_CONFIG_BIT_WIDTH\n\n#define NRFX_TIMER_DEFAULT_CONFIG_BIT_WIDTH 0\n\n#endif\n\n\n\n// <o> NRFX_TIMER_DEFAULT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_TIMER_DEFAULT_CONFIG_IRQ_PRIORITY\n\n#define NRFX_TIMER_DEFAULT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> NRFX_TIMER_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_TIMER_CONFIG_LOG_ENABLED\n\n#define NRFX_TIMER_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_TIMER_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_TIMER_CONFIG_LOG_LEVEL\n\n#define NRFX_TIMER_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_TIMER_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_TIMER_CONFIG_INFO_COLOR\n\n#define NRFX_TIMER_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_TIMER_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_TIMER_CONFIG_DEBUG_COLOR\n\n#define NRFX_TIMER_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRFX_TWIM_ENABLED - nrfx_twim - TWIM peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_TWIM_ENABLED\n\n#define NRFX_TWIM_ENABLED 0\n\n#endif\n\n// <q> NRFX_TWIM0_ENABLED  - Enable TWIM0 instance\n\n \n\n\n\n#ifndef NRFX_TWIM0_ENABLED\n\n#define NRFX_TWIM0_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_TWIM1_ENABLED  - Enable TWIM1 instance\n\n \n\n\n\n#ifndef NRFX_TWIM1_ENABLED\n\n#define NRFX_TWIM1_ENABLED 0\n\n#endif\n\n\n\n// <o> NRFX_TWIM_DEFAULT_CONFIG_FREQUENCY  - Frequency\n\n \n\n// <26738688=> 100k \n\n// <67108864=> 250k \n\n// <104857600=> 400k \n\n\n\n#ifndef NRFX_TWIM_DEFAULT_CONFIG_FREQUENCY\n\n#define NRFX_TWIM_DEFAULT_CONFIG_FREQUENCY 26738688\n\n#endif\n\n\n\n// <q> NRFX_TWIM_DEFAULT_CONFIG_HOLD_BUS_UNINIT  - Enables bus holding after uninit\n\n \n\n\n\n#ifndef NRFX_TWIM_DEFAULT_CONFIG_HOLD_BUS_UNINIT\n\n#define NRFX_TWIM_DEFAULT_CONFIG_HOLD_BUS_UNINIT 0\n\n#endif\n\n\n\n// <o> NRFX_TWIM_DEFAULT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_TWIM_DEFAULT_CONFIG_IRQ_PRIORITY\n\n#define NRFX_TWIM_DEFAULT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> NRFX_TWIM_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_TWIM_CONFIG_LOG_ENABLED\n\n#define NRFX_TWIM_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_TWIM_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_TWIM_CONFIG_LOG_LEVEL\n\n#define NRFX_TWIM_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_TWIM_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_TWIM_CONFIG_INFO_COLOR\n\n#define NRFX_TWIM_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_TWIM_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_TWIM_CONFIG_DEBUG_COLOR\n\n#define NRFX_TWIM_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <q> NRFX_TWIM_NRF52_ANOMALY_109_WORKAROUND_ENABLED  - Enables nRF52 anomaly 109 workaround for TWIM.\n\n \n\n\n\n// <i> The workaround uses interrupts to wake up the CPU by catching\n\n// <i> the start event of zero-frequency transmission, clear the \n\n// <i> peripheral, set desired frequency, start the peripheral, and\n\n// <i> the proper transmission. See more in the Errata document or\n\n// <i> Anomaly 109 Addendum located at https://infocenter.nordicsemi.com/\n\n\n\n#ifndef NRFX_TWIM_NRF52_ANOMALY_109_WORKAROUND_ENABLED\n\n#define NRFX_TWIM_NRF52_ANOMALY_109_WORKAROUND_ENABLED 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRFX_TWIS_ENABLED - nrfx_twis - TWIS peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_TWIS_ENABLED\n\n#define NRFX_TWIS_ENABLED 0\n\n#endif\n\n// <q> NRFX_TWIS0_ENABLED  - Enable TWIS0 instance\n\n \n\n\n\n#ifndef NRFX_TWIS0_ENABLED\n\n#define NRFX_TWIS0_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_TWIS1_ENABLED  - Enable TWIS1 instance\n\n \n\n\n\n#ifndef NRFX_TWIS1_ENABLED\n\n#define NRFX_TWIS1_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_TWIS_ASSUME_INIT_AFTER_RESET_ONLY  - Assume that any instance would be initialized only once\n\n \n\n\n\n// <i> Optimization flag. Registers used by TWIS are shared by other peripherals. Normally, during initialization driver tries to clear all registers to known state before doing the initialization itself. This gives initialization safe procedure, no matter when it would be called. If you activate TWIS only once and do never uninitialize it - set this flag to 1 what gives more optimal code.\n\n\n\n#ifndef NRFX_TWIS_ASSUME_INIT_AFTER_RESET_ONLY\n\n#define NRFX_TWIS_ASSUME_INIT_AFTER_RESET_ONLY 0\n\n#endif\n\n\n\n// <q> NRFX_TWIS_NO_SYNC_MODE  - Remove support for synchronous mode\n\n \n\n\n\n// <i> Synchronous mode would be used in specific situations. And it uses some additional code and data memory to safely process state machine by polling it in status functions. If this functionality is not required it may be disabled to free some resources.\n\n\n\n#ifndef NRFX_TWIS_NO_SYNC_MODE\n\n#define NRFX_TWIS_NO_SYNC_MODE 0\n\n#endif\n\n\n\n// <o> NRFX_TWIS_DEFAULT_CONFIG_ADDR0 - Address0 \n\n#ifndef NRFX_TWIS_DEFAULT_CONFIG_ADDR0\n\n#define NRFX_TWIS_DEFAULT_CONFIG_ADDR0 0\n\n#endif\n\n\n\n// <o> NRFX_TWIS_DEFAULT_CONFIG_ADDR1 - Address1 \n\n#ifndef NRFX_TWIS_DEFAULT_CONFIG_ADDR1\n\n#define NRFX_TWIS_DEFAULT_CONFIG_ADDR1 0\n\n#endif\n\n\n\n// <o> NRFX_TWIS_DEFAULT_CONFIG_SCL_PULL  - SCL pin pull configuration\n\n \n\n// <0=> Disabled \n\n// <1=> Pull down \n\n// <3=> Pull up \n\n\n\n#ifndef NRFX_TWIS_DEFAULT_CONFIG_SCL_PULL\n\n#define NRFX_TWIS_DEFAULT_CONFIG_SCL_PULL 0\n\n#endif\n\n\n\n// <o> NRFX_TWIS_DEFAULT_CONFIG_SDA_PULL  - SDA pin pull configuration\n\n \n\n// <0=> Disabled \n\n// <1=> Pull down \n\n// <3=> Pull up \n\n\n\n#ifndef NRFX_TWIS_DEFAULT_CONFIG_SDA_PULL\n\n#define NRFX_TWIS_DEFAULT_CONFIG_SDA_PULL 0\n\n#endif\n\n\n\n// <o> NRFX_TWIS_DEFAULT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_TWIS_DEFAULT_CONFIG_IRQ_PRIORITY\n\n#define NRFX_TWIS_DEFAULT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> NRFX_TWIS_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_TWIS_CONFIG_LOG_ENABLED\n\n#define NRFX_TWIS_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_TWIS_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_TWIS_CONFIG_LOG_LEVEL\n\n#define NRFX_TWIS_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_TWIS_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_TWIS_CONFIG_INFO_COLOR\n\n#define NRFX_TWIS_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_TWIS_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_TWIS_CONFIG_DEBUG_COLOR\n\n#define NRFX_TWIS_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRFX_TWI_ENABLED - nrfx_twi - TWI peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_TWI_ENABLED\n\n#define NRFX_TWI_ENABLED 0\n\n#endif\n\n// <q> NRFX_TWI0_ENABLED  - Enable TWI0 instance\n\n \n\n\n\n#ifndef NRFX_TWI0_ENABLED\n\n#define NRFX_TWI0_ENABLED 0\n\n#endif\n\n\n\n// <q> NRFX_TWI1_ENABLED  - Enable TWI1 instance\n\n \n\n\n\n#ifndef NRFX_TWI1_ENABLED\n\n#define NRFX_TWI1_ENABLED 0\n\n#endif\n\n\n\n// <o> NRFX_TWI_DEFAULT_CONFIG_FREQUENCY  - Frequency\n\n \n\n// <26738688=> 100k \n\n// <67108864=> 250k \n\n// <104857600=> 400k \n\n\n\n#ifndef NRFX_TWI_DEFAULT_CONFIG_FREQUENCY\n\n#define NRFX_TWI_DEFAULT_CONFIG_FREQUENCY 26738688\n\n#endif\n\n\n\n// <q> NRFX_TWI_DEFAULT_CONFIG_HOLD_BUS_UNINIT  - Enables bus holding after uninit\n\n \n\n\n\n#ifndef NRFX_TWI_DEFAULT_CONFIG_HOLD_BUS_UNINIT\n\n#define NRFX_TWI_DEFAULT_CONFIG_HOLD_BUS_UNINIT 0\n\n#endif\n\n\n\n// <o> NRFX_TWI_DEFAULT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_TWI_DEFAULT_CONFIG_IRQ_PRIORITY\n\n#define NRFX_TWI_DEFAULT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> NRFX_TWI_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_TWI_CONFIG_LOG_ENABLED\n\n#define NRFX_TWI_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_TWI_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_TWI_CONFIG_LOG_LEVEL\n\n#define NRFX_TWI_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_TWI_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_TWI_CONFIG_INFO_COLOR\n\n#define NRFX_TWI_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_TWI_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_TWI_CONFIG_DEBUG_COLOR\n\n#define NRFX_TWI_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRFX_UARTE_ENABLED - nrfx_uarte - UARTE peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_UARTE_ENABLED\n\n#define NRFX_UARTE_ENABLED 1\n\n#endif\n\n// <o> NRFX_UARTE0_ENABLED - Enable UARTE0 instance \n\n#ifndef NRFX_UARTE0_ENABLED\n\n#define NRFX_UARTE0_ENABLED 0\n\n#endif\n\n\n\n// <o> NRFX_UARTE_DEFAULT_CONFIG_HWFC  - Hardware Flow Control\n\n \n\n// <0=> Disabled \n\n// <1=> Enabled \n\n\n\n#ifndef NRFX_UARTE_DEFAULT_CONFIG_HWFC\n\n#define NRFX_UARTE_DEFAULT_CONFIG_HWFC 0\n\n#endif\n\n\n\n// <o> NRFX_UARTE_DEFAULT_CONFIG_PARITY  - Parity\n\n \n\n// <0=> Excluded \n\n// <14=> Included \n\n\n\n#ifndef NRFX_UARTE_DEFAULT_CONFIG_PARITY\n\n#define NRFX_UARTE_DEFAULT_CONFIG_PARITY 0\n\n#endif\n\n\n\n// <o> NRFX_UARTE_DEFAULT_CONFIG_BAUDRATE  - Default Baudrate\n\n \n\n// <323584=> 1200 baud \n\n// <643072=> 2400 baud \n\n// <1290240=> 4800 baud \n\n// <2576384=> 9600 baud \n\n// <3862528=> 14400 baud \n\n// <5152768=> 19200 baud \n\n// <7716864=> 28800 baud \n\n// <8388608=> 31250 baud \n\n// <10289152=> 38400 baud \n\n// <15007744=> 56000 baud \n\n// <15400960=> 57600 baud \n\n// <20615168=> 76800 baud \n\n// <30801920=> 115200 baud \n\n// <61865984=> 230400 baud \n\n// <67108864=> 250000 baud \n\n// <121634816=> 460800 baud \n\n// <251658240=> 921600 baud \n\n// <268435456=> 1000000 baud \n\n\n\n#ifndef NRFX_UARTE_DEFAULT_CONFIG_BAUDRATE\n\n#define NRFX_UARTE_DEFAULT_CONFIG_BAUDRATE 30801920\n\n#endif\n\n\n\n// <o> NRFX_UARTE_DEFAULT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_UARTE_DEFAULT_CONFIG_IRQ_PRIORITY\n\n#define NRFX_UARTE_DEFAULT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> NRFX_UARTE_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_UARTE_CONFIG_LOG_ENABLED\n\n#define NRFX_UARTE_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_UARTE_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_UARTE_CONFIG_LOG_LEVEL\n\n#define NRFX_UARTE_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_UARTE_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_UARTE_CONFIG_INFO_COLOR\n\n#define NRFX_UARTE_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_UARTE_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_UARTE_CONFIG_DEBUG_COLOR\n\n#define NRFX_UARTE_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRFX_UART_ENABLED - nrfx_uart - UART peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_UART_ENABLED\n\n#define NRFX_UART_ENABLED 1\n\n#endif\n\n// <o> NRFX_UART0_ENABLED - Enable UART0 instance \n\n#ifndef NRFX_UART0_ENABLED\n\n#define NRFX_UART0_ENABLED 0\n\n#endif\n\n\n\n// <o> NRFX_UART_DEFAULT_CONFIG_HWFC  - Hardware Flow Control\n\n \n\n// <0=> Disabled \n\n// <1=> Enabled \n\n\n\n#ifndef NRFX_UART_DEFAULT_CONFIG_HWFC\n\n#define NRFX_UART_DEFAULT_CONFIG_HWFC 0\n\n#endif\n\n\n\n// <o> NRFX_UART_DEFAULT_CONFIG_PARITY  - Parity\n\n \n\n// <0=> Excluded \n\n// <14=> Included \n\n\n\n#ifndef NRFX_UART_DEFAULT_CONFIG_PARITY\n\n#define NRFX_UART_DEFAULT_CONFIG_PARITY 0\n\n#endif\n\n\n\n// <o> NRFX_UART_DEFAULT_CONFIG_BAUDRATE  - Default Baudrate\n\n \n\n// <323584=> 1200 baud \n\n// <643072=> 2400 baud \n\n// <1290240=> 4800 baud \n\n// <2576384=> 9600 baud \n\n// <3866624=> 14400 baud \n\n// <5152768=> 19200 baud \n\n// <7729152=> 28800 baud \n\n// <8388608=> 31250 baud \n\n// <10309632=> 38400 baud \n\n// <15007744=> 56000 baud \n\n// <15462400=> 57600 baud \n\n// <20615168=> 76800 baud \n\n// <30924800=> 115200 baud \n\n// <61845504=> 230400 baud \n\n// <67108864=> 250000 baud \n\n// <123695104=> 460800 baud \n\n// <247386112=> 921600 baud \n\n// <268435456=> 1000000 baud \n\n\n\n#ifndef NRFX_UART_DEFAULT_CONFIG_BAUDRATE\n\n#define NRFX_UART_DEFAULT_CONFIG_BAUDRATE 30924800\n\n#endif\n\n\n\n// <o> NRFX_UART_DEFAULT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_UART_DEFAULT_CONFIG_IRQ_PRIORITY\n\n#define NRFX_UART_DEFAULT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> NRFX_UART_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_UART_CONFIG_LOG_ENABLED\n\n#define NRFX_UART_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_UART_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_UART_CONFIG_LOG_LEVEL\n\n#define NRFX_UART_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_UART_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_UART_CONFIG_INFO_COLOR\n\n#define NRFX_UART_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_UART_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_UART_CONFIG_DEBUG_COLOR\n\n#define NRFX_UART_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRFX_WDT_ENABLED - nrfx_wdt - WDT peripheral driver\n\n//==========================================================\n\n#ifndef NRFX_WDT_ENABLED\n\n#define NRFX_WDT_ENABLED 0\n\n#endif\n\n// <o> NRFX_WDT_CONFIG_BEHAVIOUR  - WDT behavior in CPU SLEEP or HALT mode\n\n \n\n// <1=> Run in SLEEP, Pause in HALT \n\n// <8=> Pause in SLEEP, Run in HALT \n\n// <9=> Run in SLEEP and HALT \n\n// <0=> Pause in SLEEP and HALT \n\n\n\n#ifndef NRFX_WDT_CONFIG_BEHAVIOUR\n\n#define NRFX_WDT_CONFIG_BEHAVIOUR 1\n\n#endif\n\n\n\n// <o> NRFX_WDT_CONFIG_RELOAD_VALUE - Reload value in ms  <1-131072000> \n\n\n\n\n\n#ifndef NRFX_WDT_CONFIG_RELOAD_VALUE\n\n#define NRFX_WDT_CONFIG_RELOAD_VALUE 2000\n\n#endif\n\n\n\n// <o> NRFX_WDT_CONFIG_NO_IRQ  - Remove WDT IRQ handling from WDT driver\n\n \n\n// <0=> Include WDT IRQ handling \n\n// <1=> Remove WDT IRQ handling \n\n\n\n#ifndef NRFX_WDT_CONFIG_NO_IRQ\n\n#define NRFX_WDT_CONFIG_NO_IRQ 0\n\n#endif\n\n\n\n// <o> NRFX_WDT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef NRFX_WDT_CONFIG_IRQ_PRIORITY\n\n#define NRFX_WDT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> NRFX_WDT_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRFX_WDT_CONFIG_LOG_ENABLED\n\n#define NRFX_WDT_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_WDT_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_WDT_CONFIG_LOG_LEVEL\n\n#define NRFX_WDT_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_WDT_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_WDT_CONFIG_INFO_COLOR\n\n#define NRFX_WDT_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_WDT_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_WDT_CONFIG_DEBUG_COLOR\n\n#define NRFX_WDT_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRF_CLOCK_ENABLED - nrf_drv_clock - CLOCK peripheral driver - legacy layer\n\n//==========================================================\n\n#ifndef NRF_CLOCK_ENABLED\n\n#define NRF_CLOCK_ENABLED 1\n\n#endif\n\n// <o> CLOCK_CONFIG_LF_SRC  - LF Clock Source\n\n \n\n// <0=> RC \n\n// <1=> XTAL \n\n// <2=> Synth \n\n// <131073=> External Low Swing \n\n// <196609=> External Full Swing \n\n\n\n#ifndef CLOCK_CONFIG_LF_SRC\n\n#define CLOCK_CONFIG_LF_SRC 1\n\n#endif\n\n\n\n// <q> CLOCK_CONFIG_LF_CAL_ENABLED  - Calibration enable for LF Clock Source\n\n \n\n\n\n#ifndef CLOCK_CONFIG_LF_CAL_ENABLED\n\n#define CLOCK_CONFIG_LF_CAL_ENABLED 0\n\n#endif\n\n\n\n// <o> CLOCK_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef CLOCK_CONFIG_IRQ_PRIORITY\n\n#define CLOCK_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> PDM_ENABLED - nrf_drv_pdm - PDM peripheral driver - legacy layer\n\n//==========================================================\n\n#ifndef PDM_ENABLED\n\n#define PDM_ENABLED 0\n\n#endif\n\n// <o> PDM_CONFIG_MODE  - Mode\n\n \n\n// <0=> Stereo \n\n// <1=> Mono \n\n\n\n#ifndef PDM_CONFIG_MODE\n\n#define PDM_CONFIG_MODE 1\n\n#endif\n\n\n\n// <o> PDM_CONFIG_EDGE  - Edge\n\n \n\n// <0=> Left falling \n\n// <1=> Left rising \n\n\n\n#ifndef PDM_CONFIG_EDGE\n\n#define PDM_CONFIG_EDGE 0\n\n#endif\n\n\n\n// <o> PDM_CONFIG_CLOCK_FREQ  - Clock frequency\n\n \n\n// <134217728=> 1000k \n\n// <138412032=> 1032k (default) \n\n// <142606336=> 1067k \n\n\n\n#ifndef PDM_CONFIG_CLOCK_FREQ\n\n#define PDM_CONFIG_CLOCK_FREQ 138412032\n\n#endif\n\n\n\n// <o> PDM_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef PDM_CONFIG_IRQ_PRIORITY\n\n#define PDM_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> POWER_ENABLED - nrf_drv_power - POWER peripheral driver - legacy layer\n\n//==========================================================\n\n#ifndef POWER_ENABLED\n\n#define POWER_ENABLED 0\n\n#endif\n\n// <o> POWER_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef POWER_CONFIG_IRQ_PRIORITY\n\n#define POWER_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <q> POWER_CONFIG_DEFAULT_DCDCEN  - The default configuration of main DCDC regulator\n\n \n\n\n\n// <i> This settings means only that components for DCDC regulator are installed and it can be enabled.\n\n\n\n#ifndef POWER_CONFIG_DEFAULT_DCDCEN\n\n#define POWER_CONFIG_DEFAULT_DCDCEN 0\n\n#endif\n\n\n\n// <q> POWER_CONFIG_DEFAULT_DCDCENHV  - The default configuration of High Voltage DCDC regulator\n\n \n\n\n\n// <i> This settings means only that components for DCDC regulator are installed and it can be enabled.\n\n\n\n#ifndef POWER_CONFIG_DEFAULT_DCDCENHV\n\n#define POWER_CONFIG_DEFAULT_DCDCENHV 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <q> PPI_ENABLED  - nrf_drv_ppi - PPI peripheral driver - legacy layer\n\n \n\n\n\n#ifndef PPI_ENABLED\n\n#define PPI_ENABLED 0\n\n#endif\n\n\n\n// <e> PWM_ENABLED - nrf_drv_pwm - PWM peripheral driver - legacy layer\n\n//==========================================================\n\n#ifndef PWM_ENABLED\n\n#define PWM_ENABLED 0\n\n#endif\n\n// <o> PWM_DEFAULT_CONFIG_OUT0_PIN - Out0 pin  <0-31> \n\n\n\n\n\n#ifndef PWM_DEFAULT_CONFIG_OUT0_PIN\n\n#define PWM_DEFAULT_CONFIG_OUT0_PIN 31\n\n#endif\n\n\n\n// <o> PWM_DEFAULT_CONFIG_OUT1_PIN - Out1 pin  <0-31> \n\n\n\n\n\n#ifndef PWM_DEFAULT_CONFIG_OUT1_PIN\n\n#define PWM_DEFAULT_CONFIG_OUT1_PIN 31\n\n#endif\n\n\n\n// <o> PWM_DEFAULT_CONFIG_OUT2_PIN - Out2 pin  <0-31> \n\n\n\n\n\n#ifndef PWM_DEFAULT_CONFIG_OUT2_PIN\n\n#define PWM_DEFAULT_CONFIG_OUT2_PIN 31\n\n#endif\n\n\n\n// <o> PWM_DEFAULT_CONFIG_OUT3_PIN - Out3 pin  <0-31> \n\n\n\n\n\n#ifndef PWM_DEFAULT_CONFIG_OUT3_PIN\n\n#define PWM_DEFAULT_CONFIG_OUT3_PIN 31\n\n#endif\n\n\n\n// <o> PWM_DEFAULT_CONFIG_BASE_CLOCK  - Base clock\n\n \n\n// <0=> 16 MHz \n\n// <1=> 8 MHz \n\n// <2=> 4 MHz \n\n// <3=> 2 MHz \n\n// <4=> 1 MHz \n\n// <5=> 500 kHz \n\n// <6=> 250 kHz \n\n// <7=> 125 kHz \n\n\n\n#ifndef PWM_DEFAULT_CONFIG_BASE_CLOCK\n\n#define PWM_DEFAULT_CONFIG_BASE_CLOCK 4\n\n#endif\n\n\n\n// <o> PWM_DEFAULT_CONFIG_COUNT_MODE  - Count mode\n\n \n\n// <0=> Up \n\n// <1=> Up and Down \n\n\n\n#ifndef PWM_DEFAULT_CONFIG_COUNT_MODE\n\n#define PWM_DEFAULT_CONFIG_COUNT_MODE 0\n\n#endif\n\n\n\n// <o> PWM_DEFAULT_CONFIG_TOP_VALUE - Top value \n\n#ifndef PWM_DEFAULT_CONFIG_TOP_VALUE\n\n#define PWM_DEFAULT_CONFIG_TOP_VALUE 1000\n\n#endif\n\n\n\n// <o> PWM_DEFAULT_CONFIG_LOAD_MODE  - Load mode\n\n \n\n// <0=> Common \n\n// <1=> Grouped \n\n// <2=> Individual \n\n// <3=> Waveform \n\n\n\n#ifndef PWM_DEFAULT_CONFIG_LOAD_MODE\n\n#define PWM_DEFAULT_CONFIG_LOAD_MODE 0\n\n#endif\n\n\n\n// <o> PWM_DEFAULT_CONFIG_STEP_MODE  - Step mode\n\n \n\n// <0=> Auto \n\n// <1=> Triggered \n\n\n\n#ifndef PWM_DEFAULT_CONFIG_STEP_MODE\n\n#define PWM_DEFAULT_CONFIG_STEP_MODE 0\n\n#endif\n\n\n\n// <o> PWM_DEFAULT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef PWM_DEFAULT_CONFIG_IRQ_PRIORITY\n\n#define PWM_DEFAULT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <q> PWM0_ENABLED  - Enable PWM0 instance\n\n \n\n\n\n#ifndef PWM0_ENABLED\n\n#define PWM0_ENABLED 0\n\n#endif\n\n\n\n// <q> PWM1_ENABLED  - Enable PWM1 instance\n\n \n\n\n\n#ifndef PWM1_ENABLED\n\n#define PWM1_ENABLED 0\n\n#endif\n\n\n\n// <q> PWM2_ENABLED  - Enable PWM2 instance\n\n \n\n\n\n#ifndef PWM2_ENABLED\n\n#define PWM2_ENABLED 0\n\n#endif\n\n\n\n// <e> PWM_NRF52_ANOMALY_109_WORKAROUND_ENABLED - Enables nRF52 Anomaly 109 workaround for PWM.\n\n\n\n// <i> The workaround uses interrupts to wake up the CPU and ensure\n\n// <i> it is active when PWM is about to start a DMA transfer. For\n\n// <i> initial transfer, done when a playback is started via PPI,\n\n// <i> a specific EGU instance is used to generate the interrupt.\n\n// <i> During the playback, the PWM interrupt triggered on SEQEND\n\n// <i> event of a preceding sequence is used to protect the transfer\n\n// <i> done for the next sequence to be played.\n\n//==========================================================\n\n#ifndef PWM_NRF52_ANOMALY_109_WORKAROUND_ENABLED\n\n#define PWM_NRF52_ANOMALY_109_WORKAROUND_ENABLED 0\n\n#endif\n\n// <o> PWM_NRF52_ANOMALY_109_EGU_INSTANCE  - EGU instance used by the nRF52 Anomaly 109 workaround for PWM.\n\n \n\n// <0=> EGU0 \n\n// <1=> EGU1 \n\n// <2=> EGU2 \n\n// <3=> EGU3 \n\n// <4=> EGU4 \n\n// <5=> EGU5 \n\n\n\n#ifndef PWM_NRF52_ANOMALY_109_EGU_INSTANCE\n\n#define PWM_NRF52_ANOMALY_109_EGU_INSTANCE 5\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> QDEC_ENABLED - nrf_drv_qdec - QDEC peripheral driver - legacy layer\n\n//==========================================================\n\n#ifndef QDEC_ENABLED\n\n#define QDEC_ENABLED 0\n\n#endif\n\n// <o> QDEC_CONFIG_REPORTPER  - Report period\n\n \n\n// <0=> 10 Samples \n\n// <1=> 40 Samples \n\n// <2=> 80 Samples \n\n// <3=> 120 Samples \n\n// <4=> 160 Samples \n\n// <5=> 200 Samples \n\n// <6=> 240 Samples \n\n// <7=> 280 Samples \n\n\n\n#ifndef QDEC_CONFIG_REPORTPER\n\n#define QDEC_CONFIG_REPORTPER 0\n\n#endif\n\n\n\n// <o> QDEC_CONFIG_SAMPLEPER  - Sample period\n\n \n\n// <0=> 128 us \n\n// <1=> 256 us \n\n// <2=> 512 us \n\n// <3=> 1024 us \n\n// <4=> 2048 us \n\n// <5=> 4096 us \n\n// <6=> 8192 us \n\n// <7=> 16384 us \n\n\n\n#ifndef QDEC_CONFIG_SAMPLEPER\n\n#define QDEC_CONFIG_SAMPLEPER 7\n\n#endif\n\n\n\n// <o> QDEC_CONFIG_PIO_A - A pin  <0-31> \n\n\n\n\n\n#ifndef QDEC_CONFIG_PIO_A\n\n#define QDEC_CONFIG_PIO_A 31\n\n#endif\n\n\n\n// <o> QDEC_CONFIG_PIO_B - B pin  <0-31> \n\n\n\n\n\n#ifndef QDEC_CONFIG_PIO_B\n\n#define QDEC_CONFIG_PIO_B 31\n\n#endif\n\n\n\n// <o> QDEC_CONFIG_PIO_LED - LED pin  <0-31> \n\n\n\n\n\n#ifndef QDEC_CONFIG_PIO_LED\n\n#define QDEC_CONFIG_PIO_LED 31\n\n#endif\n\n\n\n// <o> QDEC_CONFIG_LEDPRE - LED pre \n\n#ifndef QDEC_CONFIG_LEDPRE\n\n#define QDEC_CONFIG_LEDPRE 511\n\n#endif\n\n\n\n// <o> QDEC_CONFIG_LEDPOL  - LED polarity\n\n \n\n// <0=> Active low \n\n// <1=> Active high \n\n\n\n#ifndef QDEC_CONFIG_LEDPOL\n\n#define QDEC_CONFIG_LEDPOL 1\n\n#endif\n\n\n\n// <q> QDEC_CONFIG_DBFEN  - Debouncing enable\n\n \n\n\n\n#ifndef QDEC_CONFIG_DBFEN\n\n#define QDEC_CONFIG_DBFEN 0\n\n#endif\n\n\n\n// <q> QDEC_CONFIG_SAMPLE_INTEN  - Sample ready interrupt enable\n\n \n\n\n\n#ifndef QDEC_CONFIG_SAMPLE_INTEN\n\n#define QDEC_CONFIG_SAMPLE_INTEN 0\n\n#endif\n\n\n\n// <o> QDEC_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef QDEC_CONFIG_IRQ_PRIORITY\n\n#define QDEC_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> QSPI_ENABLED - nrf_drv_qspi - QSPI peripheral driver - legacy layer\n\n//==========================================================\n\n#ifndef QSPI_ENABLED\n\n#define QSPI_ENABLED 0\n\n#endif\n\n// <o> QSPI_CONFIG_SCK_DELAY - tSHSL, tWHSL and tSHWL in number of 16 MHz periods (62.5 ns).  <0-255> \n\n\n\n\n\n#ifndef QSPI_CONFIG_SCK_DELAY\n\n#define QSPI_CONFIG_SCK_DELAY 1\n\n#endif\n\n\n\n// <o> QSPI_CONFIG_XIP_OFFSET - Address offset in the external memory for Execute in Place operation. \n\n#ifndef QSPI_CONFIG_XIP_OFFSET\n\n#define QSPI_CONFIG_XIP_OFFSET 0\n\n#endif\n\n\n\n// <o> QSPI_CONFIG_READOC  - Number of data lines and opcode used for reading.\n\n \n\n// <0=> FastRead \n\n// <1=> Read2O \n\n// <2=> Read2IO \n\n// <3=> Read4O \n\n// <4=> Read4IO \n\n\n\n#ifndef QSPI_CONFIG_READOC\n\n#define QSPI_CONFIG_READOC 0\n\n#endif\n\n\n\n// <o> QSPI_CONFIG_WRITEOC  - Number of data lines and opcode used for writing.\n\n \n\n// <0=> PP \n\n// <1=> PP2O \n\n// <2=> PP4O \n\n// <3=> PP4IO \n\n\n\n#ifndef QSPI_CONFIG_WRITEOC\n\n#define QSPI_CONFIG_WRITEOC 0\n\n#endif\n\n\n\n// <o> QSPI_CONFIG_ADDRMODE  - Addressing mode.\n\n \n\n// <0=> 24bit \n\n// <1=> 32bit \n\n\n\n#ifndef QSPI_CONFIG_ADDRMODE\n\n#define QSPI_CONFIG_ADDRMODE 0\n\n#endif\n\n\n\n// <o> QSPI_CONFIG_MODE  - SPI mode.\n\n \n\n// <0=> Mode 0 \n\n// <1=> Mode 1 \n\n\n\n#ifndef QSPI_CONFIG_MODE\n\n#define QSPI_CONFIG_MODE 0\n\n#endif\n\n\n\n// <o> QSPI_CONFIG_FREQUENCY  - Frequency divider.\n\n \n\n// <0=> 32MHz/1 \n\n// <1=> 32MHz/2 \n\n// <2=> 32MHz/3 \n\n// <3=> 32MHz/4 \n\n// <4=> 32MHz/5 \n\n// <5=> 32MHz/6 \n\n// <6=> 32MHz/7 \n\n// <7=> 32MHz/8 \n\n// <8=> 32MHz/9 \n\n// <9=> 32MHz/10 \n\n// <10=> 32MHz/11 \n\n// <11=> 32MHz/12 \n\n// <12=> 32MHz/13 \n\n// <13=> 32MHz/14 \n\n// <14=> 32MHz/15 \n\n// <15=> 32MHz/16 \n\n\n\n#ifndef QSPI_CONFIG_FREQUENCY\n\n#define QSPI_CONFIG_FREQUENCY 15\n\n#endif\n\n\n\n// <s> QSPI_PIN_SCK - SCK pin value.\n\n#ifndef QSPI_PIN_SCK\n\n#define QSPI_PIN_SCK NRF_QSPI_PIN_NOT_CONNECTED\n\n#endif\n\n\n\n// <s> QSPI_PIN_CSN - CSN pin value.\n\n#ifndef QSPI_PIN_CSN\n\n#define QSPI_PIN_CSN NRF_QSPI_PIN_NOT_CONNECTED\n\n#endif\n\n\n\n// <s> QSPI_PIN_IO0 - IO0 pin value.\n\n#ifndef QSPI_PIN_IO0\n\n#define QSPI_PIN_IO0 NRF_QSPI_PIN_NOT_CONNECTED\n\n#endif\n\n\n\n// <s> QSPI_PIN_IO1 - IO1 pin value.\n\n#ifndef QSPI_PIN_IO1\n\n#define QSPI_PIN_IO1 NRF_QSPI_PIN_NOT_CONNECTED\n\n#endif\n\n\n\n// <s> QSPI_PIN_IO2 - IO2 pin value.\n\n#ifndef QSPI_PIN_IO2\n\n#define QSPI_PIN_IO2 NRF_QSPI_PIN_NOT_CONNECTED\n\n#endif\n\n\n\n// <s> QSPI_PIN_IO3 - IO3 pin value.\n\n#ifndef QSPI_PIN_IO3\n\n#define QSPI_PIN_IO3 NRF_QSPI_PIN_NOT_CONNECTED\n\n#endif\n\n\n\n// <o> QSPI_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef QSPI_CONFIG_IRQ_PRIORITY\n\n#define QSPI_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> RNG_ENABLED - nrf_drv_rng - RNG peripheral driver - legacy layer\n\n//==========================================================\n\n#ifndef RNG_ENABLED\n\n#define RNG_ENABLED 0\n\n#endif\n\n// <q> RNG_CONFIG_ERROR_CORRECTION  - Error correction\n\n \n\n\n\n#ifndef RNG_CONFIG_ERROR_CORRECTION\n\n#define RNG_CONFIG_ERROR_CORRECTION 1\n\n#endif\n\n\n\n// <o> RNG_CONFIG_POOL_SIZE - Pool size \n\n#ifndef RNG_CONFIG_POOL_SIZE\n\n#define RNG_CONFIG_POOL_SIZE 64\n\n#endif\n\n\n\n// <o> RNG_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef RNG_CONFIG_IRQ_PRIORITY\n\n#define RNG_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> RTC_ENABLED - nrf_drv_rtc - RTC peripheral driver - legacy layer\n\n//==========================================================\n\n#ifndef RTC_ENABLED\n\n#define RTC_ENABLED 0\n\n#endif\n\n// <o> RTC_DEFAULT_CONFIG_FREQUENCY - Frequency  <16-32768> \n\n\n\n\n\n#ifndef RTC_DEFAULT_CONFIG_FREQUENCY\n\n#define RTC_DEFAULT_CONFIG_FREQUENCY 32768\n\n#endif\n\n\n\n// <q> RTC_DEFAULT_CONFIG_RELIABLE  - Ensures safe compare event triggering\n\n \n\n\n\n#ifndef RTC_DEFAULT_CONFIG_RELIABLE\n\n#define RTC_DEFAULT_CONFIG_RELIABLE 0\n\n#endif\n\n\n\n// <o> RTC_DEFAULT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef RTC_DEFAULT_CONFIG_IRQ_PRIORITY\n\n#define RTC_DEFAULT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <q> RTC0_ENABLED  - Enable RTC0 instance\n\n \n\n\n\n#ifndef RTC0_ENABLED\n\n#define RTC0_ENABLED 0\n\n#endif\n\n\n\n// <q> RTC1_ENABLED  - Enable RTC1 instance\n\n \n\n\n\n#ifndef RTC1_ENABLED\n\n#define RTC1_ENABLED 0\n\n#endif\n\n\n\n// <q> RTC2_ENABLED  - Enable RTC2 instance\n\n \n\n\n\n#ifndef RTC2_ENABLED\n\n#define RTC2_ENABLED 0\n\n#endif\n\n\n\n// <o> NRF_MAXIMUM_LATENCY_US - Maximum possible time[us] in highest priority interrupt \n\n#ifndef NRF_MAXIMUM_LATENCY_US\n\n#define NRF_MAXIMUM_LATENCY_US 2000\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> SAADC_ENABLED - nrf_drv_saadc - SAADC peripheral driver - legacy layer\n\n//==========================================================\n\n#ifndef SAADC_ENABLED\n\n#define SAADC_ENABLED 0\n\n#endif\n\n// <o> SAADC_CONFIG_RESOLUTION  - Resolution\n\n \n\n// <0=> 8 bit \n\n// <1=> 10 bit \n\n// <2=> 12 bit \n\n// <3=> 14 bit \n\n\n\n#ifndef SAADC_CONFIG_RESOLUTION\n\n#define SAADC_CONFIG_RESOLUTION 1\n\n#endif\n\n\n\n// <o> SAADC_CONFIG_OVERSAMPLE  - Sample period\n\n \n\n// <0=> Disabled \n\n// <1=> 2x \n\n// <2=> 4x \n\n// <3=> 8x \n\n// <4=> 16x \n\n// <5=> 32x \n\n// <6=> 64x \n\n// <7=> 128x \n\n// <8=> 256x \n\n\n\n#ifndef SAADC_CONFIG_OVERSAMPLE\n\n#define SAADC_CONFIG_OVERSAMPLE 0\n\n#endif\n\n\n\n// <q> SAADC_CONFIG_LP_MODE  - Enabling low power mode\n\n \n\n\n\n#ifndef SAADC_CONFIG_LP_MODE\n\n#define SAADC_CONFIG_LP_MODE 0\n\n#endif\n\n\n\n// <o> SAADC_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef SAADC_CONFIG_IRQ_PRIORITY\n\n#define SAADC_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> SPIS_ENABLED - nrf_drv_spis - SPIS peripheral driver - legacy layer\n\n//==========================================================\n\n#ifndef SPIS_ENABLED\n\n#define SPIS_ENABLED 0\n\n#endif\n\n// <o> SPIS_DEFAULT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef SPIS_DEFAULT_CONFIG_IRQ_PRIORITY\n\n#define SPIS_DEFAULT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <o> SPIS_DEFAULT_MODE  - Mode\n\n \n\n// <0=> MODE_0 \n\n// <1=> MODE_1 \n\n// <2=> MODE_2 \n\n// <3=> MODE_3 \n\n\n\n#ifndef SPIS_DEFAULT_MODE\n\n#define SPIS_DEFAULT_MODE 0\n\n#endif\n\n\n\n// <o> SPIS_DEFAULT_BIT_ORDER  - SPIS default bit order\n\n \n\n// <0=> MSB first \n\n// <1=> LSB first \n\n\n\n#ifndef SPIS_DEFAULT_BIT_ORDER\n\n#define SPIS_DEFAULT_BIT_ORDER 0\n\n#endif\n\n\n\n// <o> SPIS_DEFAULT_DEF - SPIS default DEF character  <0-255> \n\n\n\n\n\n#ifndef SPIS_DEFAULT_DEF\n\n#define SPIS_DEFAULT_DEF 255\n\n#endif\n\n\n\n// <o> SPIS_DEFAULT_ORC - SPIS default ORC character  <0-255> \n\n\n\n\n\n#ifndef SPIS_DEFAULT_ORC\n\n#define SPIS_DEFAULT_ORC 255\n\n#endif\n\n\n\n// <q> SPIS0_ENABLED  - Enable SPIS0 instance\n\n \n\n\n\n#ifndef SPIS0_ENABLED\n\n#define SPIS0_ENABLED 0\n\n#endif\n\n\n\n// <q> SPIS1_ENABLED  - Enable SPIS1 instance\n\n \n\n\n\n#ifndef SPIS1_ENABLED\n\n#define SPIS1_ENABLED 0\n\n#endif\n\n\n\n// <q> SPIS2_ENABLED  - Enable SPIS2 instance\n\n \n\n\n\n#ifndef SPIS2_ENABLED\n\n#define SPIS2_ENABLED 0\n\n#endif\n\n\n\n// <q> SPIS_NRF52_ANOMALY_109_WORKAROUND_ENABLED  - Enables nRF52 Anomaly 109 workaround for SPIS.\n\n \n\n\n\n// <i> The workaround uses a GPIOTE channel to generate interrupts\n\n// <i> on falling edges detected on the CSN line. This will make\n\n// <i> the CPU active for the moment when SPIS starts DMA transfers,\n\n// <i> and this way the transfers will be protected.\n\n// <i> This workaround uses GPIOTE driver, so this driver must be\n\n// <i> enabled as well.\n\n\n\n#ifndef SPIS_NRF52_ANOMALY_109_WORKAROUND_ENABLED\n\n#define SPIS_NRF52_ANOMALY_109_WORKAROUND_ENABLED 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> SPI_ENABLED - nrf_drv_spi - SPI/SPIM peripheral driver - legacy layer\n\n//==========================================================\n\n#ifndef SPI_ENABLED\n\n#define SPI_ENABLED 0\n\n#endif\n\n// <o> SPI_DEFAULT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef SPI_DEFAULT_CONFIG_IRQ_PRIORITY\n\n#define SPI_DEFAULT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <o> NRF_SPI_DRV_MISO_PULLUP_CFG  - MISO PIN pull-up configuration.\n\n \n\n// <0=> NRF_GPIO_PIN_NOPULL \n\n// <1=> NRF_GPIO_PIN_PULLDOWN \n\n// <3=> NRF_GPIO_PIN_PULLUP \n\n\n\n#ifndef NRF_SPI_DRV_MISO_PULLUP_CFG\n\n#define NRF_SPI_DRV_MISO_PULLUP_CFG 1\n\n#endif\n\n\n\n// <e> SPI0_ENABLED - Enable SPI0 instance\n\n//==========================================================\n\n#ifndef SPI0_ENABLED\n\n#define SPI0_ENABLED 0\n\n#endif\n\n// <q> SPI0_USE_EASY_DMA  - Use EasyDMA\n\n \n\n\n\n#ifndef SPI0_USE_EASY_DMA\n\n#define SPI0_USE_EASY_DMA 1\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> SPI1_ENABLED - Enable SPI1 instance\n\n//==========================================================\n\n#ifndef SPI1_ENABLED\n\n#define SPI1_ENABLED 0\n\n#endif\n\n// <q> SPI1_USE_EASY_DMA  - Use EasyDMA\n\n \n\n\n\n#ifndef SPI1_USE_EASY_DMA\n\n#define SPI1_USE_EASY_DMA 1\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> SPI2_ENABLED - Enable SPI2 instance\n\n//==========================================================\n\n#ifndef SPI2_ENABLED\n\n#define SPI2_ENABLED 0\n\n#endif\n\n// <q> SPI2_USE_EASY_DMA  - Use EasyDMA\n\n \n\n\n\n#ifndef SPI2_USE_EASY_DMA\n\n#define SPI2_USE_EASY_DMA 1\n\n#endif\n\n\n\n// </e>\n\n\n\n// <q> SPIM_NRF52_ANOMALY_109_WORKAROUND_ENABLED  - Enables nRF52 anomaly 109 workaround for SPIM.\n\n \n\n\n\n// <i> The workaround uses interrupts to wake up the CPU by catching\n\n// <i> a start event of zero-length transmission to start the clock. This \n\n// <i> ensures that the DMA transfer will be executed without issues and\n\n// <i> that the proper transfer will be started. See more in the Errata \n\n// <i> document or Anomaly 109 Addendum located at \n\n// <i> https://infocenter.nordicsemi.com/\n\n\n\n#ifndef SPIM_NRF52_ANOMALY_109_WORKAROUND_ENABLED\n\n#define SPIM_NRF52_ANOMALY_109_WORKAROUND_ENABLED 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> TIMER_ENABLED - nrf_drv_timer - TIMER periperal driver - legacy layer\n\n//==========================================================\n\n#ifndef TIMER_ENABLED\n\n#define TIMER_ENABLED 0\n\n#endif\n\n// <o> TIMER_DEFAULT_CONFIG_FREQUENCY  - Timer frequency if in Timer mode\n\n \n\n// <0=> 16 MHz \n\n// <1=> 8 MHz \n\n// <2=> 4 MHz \n\n// <3=> 2 MHz \n\n// <4=> 1 MHz \n\n// <5=> 500 kHz \n\n// <6=> 250 kHz \n\n// <7=> 125 kHz \n\n// <8=> 62.5 kHz \n\n// <9=> 31.25 kHz \n\n\n\n#ifndef TIMER_DEFAULT_CONFIG_FREQUENCY\n\n#define TIMER_DEFAULT_CONFIG_FREQUENCY 0\n\n#endif\n\n\n\n// <o> TIMER_DEFAULT_CONFIG_MODE  - Timer mode or operation\n\n \n\n// <0=> Timer \n\n// <1=> Counter \n\n\n\n#ifndef TIMER_DEFAULT_CONFIG_MODE\n\n#define TIMER_DEFAULT_CONFIG_MODE 0\n\n#endif\n\n\n\n// <o> TIMER_DEFAULT_CONFIG_BIT_WIDTH  - Timer counter bit width\n\n \n\n// <0=> 16 bit \n\n// <1=> 8 bit \n\n// <2=> 24 bit \n\n// <3=> 32 bit \n\n\n\n#ifndef TIMER_DEFAULT_CONFIG_BIT_WIDTH\n\n#define TIMER_DEFAULT_CONFIG_BIT_WIDTH 0\n\n#endif\n\n\n\n// <o> TIMER_DEFAULT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef TIMER_DEFAULT_CONFIG_IRQ_PRIORITY\n\n#define TIMER_DEFAULT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <q> TIMER0_ENABLED  - Enable TIMER0 instance\n\n \n\n\n\n#ifndef TIMER0_ENABLED\n\n#define TIMER0_ENABLED 0\n\n#endif\n\n\n\n// <q> TIMER1_ENABLED  - Enable TIMER1 instance\n\n \n\n\n\n#ifndef TIMER1_ENABLED\n\n#define TIMER1_ENABLED 0\n\n#endif\n\n\n\n// <q> TIMER2_ENABLED  - Enable TIMER2 instance\n\n \n\n\n\n#ifndef TIMER2_ENABLED\n\n#define TIMER2_ENABLED 0\n\n#endif\n\n\n\n// <q> TIMER3_ENABLED  - Enable TIMER3 instance\n\n \n\n\n\n#ifndef TIMER3_ENABLED\n\n#define TIMER3_ENABLED 0\n\n#endif\n\n\n\n// <q> TIMER4_ENABLED  - Enable TIMER4 instance\n\n \n\n\n\n#ifndef TIMER4_ENABLED\n\n#define TIMER4_ENABLED 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> TWIS_ENABLED - nrf_drv_twis - TWIS peripheral driver - legacy layer\n\n//==========================================================\n\n#ifndef TWIS_ENABLED\n\n#define TWIS_ENABLED 0\n\n#endif\n\n// <q> TWIS0_ENABLED  - Enable TWIS0 instance\n\n \n\n\n\n#ifndef TWIS0_ENABLED\n\n#define TWIS0_ENABLED 0\n\n#endif\n\n\n\n// <q> TWIS1_ENABLED  - Enable TWIS1 instance\n\n \n\n\n\n#ifndef TWIS1_ENABLED\n\n#define TWIS1_ENABLED 0\n\n#endif\n\n\n\n// <q> TWIS_ASSUME_INIT_AFTER_RESET_ONLY  - Assume that any instance would be initialized only once\n\n \n\n\n\n// <i> Optimization flag. Registers used by TWIS are shared by other peripherals. Normally, during initialization driver tries to clear all registers to known state before doing the initialization itself. This gives initialization safe procedure, no matter when it would be called. If you activate TWIS only once and do never uninitialize it - set this flag to 1 what gives more optimal code.\n\n\n\n#ifndef TWIS_ASSUME_INIT_AFTER_RESET_ONLY\n\n#define TWIS_ASSUME_INIT_AFTER_RESET_ONLY 0\n\n#endif\n\n\n\n// <q> TWIS_NO_SYNC_MODE  - Remove support for synchronous mode\n\n \n\n\n\n// <i> Synchronous mode would be used in specific situations. And it uses some additional code and data memory to safely process state machine by polling it in status functions. If this functionality is not required it may be disabled to free some resources.\n\n\n\n#ifndef TWIS_NO_SYNC_MODE\n\n#define TWIS_NO_SYNC_MODE 0\n\n#endif\n\n\n\n// <o> TWIS_DEFAULT_CONFIG_ADDR0 - Address0 \n\n#ifndef TWIS_DEFAULT_CONFIG_ADDR0\n\n#define TWIS_DEFAULT_CONFIG_ADDR0 0\n\n#endif\n\n\n\n// <o> TWIS_DEFAULT_CONFIG_ADDR1 - Address1 \n\n#ifndef TWIS_DEFAULT_CONFIG_ADDR1\n\n#define TWIS_DEFAULT_CONFIG_ADDR1 0\n\n#endif\n\n\n\n// <o> TWIS_DEFAULT_CONFIG_SCL_PULL  - SCL pin pull configuration\n\n \n\n// <0=> Disabled \n\n// <1=> Pull down \n\n// <3=> Pull up \n\n\n\n#ifndef TWIS_DEFAULT_CONFIG_SCL_PULL\n\n#define TWIS_DEFAULT_CONFIG_SCL_PULL 0\n\n#endif\n\n\n\n// <o> TWIS_DEFAULT_CONFIG_SDA_PULL  - SDA pin pull configuration\n\n \n\n// <0=> Disabled \n\n// <1=> Pull down \n\n// <3=> Pull up \n\n\n\n#ifndef TWIS_DEFAULT_CONFIG_SDA_PULL\n\n#define TWIS_DEFAULT_CONFIG_SDA_PULL 0\n\n#endif\n\n\n\n// <o> TWIS_DEFAULT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef TWIS_DEFAULT_CONFIG_IRQ_PRIORITY\n\n#define TWIS_DEFAULT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> TWI_ENABLED - nrf_drv_twi - TWI/TWIM peripheral driver - legacy layer\n\n//==========================================================\n\n#ifndef TWI_ENABLED\n\n#define TWI_ENABLED 0\n\n#endif\n\n// <o> TWI_DEFAULT_CONFIG_FREQUENCY  - Frequency\n\n \n\n// <26738688=> 100k \n\n// <67108864=> 250k \n\n// <104857600=> 400k \n\n\n\n#ifndef TWI_DEFAULT_CONFIG_FREQUENCY\n\n#define TWI_DEFAULT_CONFIG_FREQUENCY 26738688\n\n#endif\n\n\n\n// <q> TWI_DEFAULT_CONFIG_CLR_BUS_INIT  - Enables bus clearing procedure during init\n\n \n\n\n\n#ifndef TWI_DEFAULT_CONFIG_CLR_BUS_INIT\n\n#define TWI_DEFAULT_CONFIG_CLR_BUS_INIT 0\n\n#endif\n\n\n\n// <q> TWI_DEFAULT_CONFIG_HOLD_BUS_UNINIT  - Enables bus holding after uninit\n\n \n\n\n\n#ifndef TWI_DEFAULT_CONFIG_HOLD_BUS_UNINIT\n\n#define TWI_DEFAULT_CONFIG_HOLD_BUS_UNINIT 0\n\n#endif\n\n\n\n// <o> TWI_DEFAULT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef TWI_DEFAULT_CONFIG_IRQ_PRIORITY\n\n#define TWI_DEFAULT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <e> TWI0_ENABLED - Enable TWI0 instance\n\n//==========================================================\n\n#ifndef TWI0_ENABLED\n\n#define TWI0_ENABLED 0\n\n#endif\n\n// <q> TWI0_USE_EASY_DMA  - Use EasyDMA (if present)\n\n \n\n\n\n#ifndef TWI0_USE_EASY_DMA\n\n#define TWI0_USE_EASY_DMA 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> TWI1_ENABLED - Enable TWI1 instance\n\n//==========================================================\n\n#ifndef TWI1_ENABLED\n\n#define TWI1_ENABLED 0\n\n#endif\n\n// <q> TWI1_USE_EASY_DMA  - Use EasyDMA (if present)\n\n \n\n\n\n#ifndef TWI1_USE_EASY_DMA\n\n#define TWI1_USE_EASY_DMA 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <q> TWIM_NRF52_ANOMALY_109_WORKAROUND_ENABLED  - Enables nRF52 anomaly 109 workaround for TWIM.\n\n \n\n\n\n// <i> The workaround uses interrupts to wake up the CPU by catching\n\n// <i> the start event of zero-frequency transmission, clear the \n\n// <i> peripheral, set desired frequency, start the peripheral, and\n\n// <i> the proper transmission. See more in the Errata document or\n\n// <i> Anomaly 109 Addendum located at https://infocenter.nordicsemi.com/\n\n\n\n#ifndef TWIM_NRF52_ANOMALY_109_WORKAROUND_ENABLED\n\n#define TWIM_NRF52_ANOMALY_109_WORKAROUND_ENABLED 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> UART_ENABLED - nrf_drv_uart - UART/UARTE peripheral driver - legacy layer\n\n//==========================================================\n\n#ifndef UART_ENABLED\n\n#define UART_ENABLED 1\n\n#endif\n\n// <o> UART_DEFAULT_CONFIG_HWFC  - Hardware Flow Control\n\n \n\n// <0=> Disabled \n\n// <1=> Enabled \n\n\n\n#ifndef UART_DEFAULT_CONFIG_HWFC\n\n#define UART_DEFAULT_CONFIG_HWFC 0\n\n#endif\n\n\n\n// <o> UART_DEFAULT_CONFIG_PARITY  - Parity\n\n \n\n// <0=> Excluded \n\n// <14=> Included \n\n\n\n#ifndef UART_DEFAULT_CONFIG_PARITY\n\n#define UART_DEFAULT_CONFIG_PARITY 0\n\n#endif\n\n\n\n// <o> UART_DEFAULT_CONFIG_BAUDRATE  - Default Baudrate\n\n \n\n// <323584=> 1200 baud \n\n// <643072=> 2400 baud \n\n// <1290240=> 4800 baud \n\n// <2576384=> 9600 baud \n\n// <3862528=> 14400 baud \n\n// <5152768=> 19200 baud \n\n// <7716864=> 28800 baud \n\n// <10289152=> 38400 baud \n\n// <15400960=> 57600 baud \n\n// <20615168=> 76800 baud \n\n// <30801920=> 115200 baud \n\n// <61865984=> 230400 baud \n\n// <67108864=> 250000 baud \n\n// <121634816=> 460800 baud \n\n// <251658240=> 921600 baud \n\n// <268435456=> 1000000 baud \n\n\n\n#ifndef UART_DEFAULT_CONFIG_BAUDRATE\n\n#define UART_DEFAULT_CONFIG_BAUDRATE 30801920\n\n#endif\n\n\n\n// <o> UART_DEFAULT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef UART_DEFAULT_CONFIG_IRQ_PRIORITY\n\n#define UART_DEFAULT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <q> UART_EASY_DMA_SUPPORT  - Driver supporting EasyDMA\n\n \n\n\n\n#ifndef UART_EASY_DMA_SUPPORT\n\n#define UART_EASY_DMA_SUPPORT 1\n\n#endif\n\n\n\n// <q> UART_LEGACY_SUPPORT  - Driver supporting Legacy mode\n\n \n\n\n\n#ifndef UART_LEGACY_SUPPORT\n\n#define UART_LEGACY_SUPPORT 1\n\n#endif\n\n\n\n// <e> UART0_ENABLED - Enable UART0 instance\n\n//==========================================================\n\n#ifndef UART0_ENABLED\n\n#define UART0_ENABLED 1\n\n#endif\n\n// <q> UART0_CONFIG_USE_EASY_DMA  - Default setting for using EasyDMA\n\n \n\n\n\n#ifndef UART0_CONFIG_USE_EASY_DMA\n\n#define UART0_CONFIG_USE_EASY_DMA 1\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> USBD_ENABLED - nrf_drv_usbd - Software Component\n\n//==========================================================\n\n#ifndef USBD_ENABLED\n\n#define USBD_ENABLED 0\n\n#endif\n\n// <o> USBD_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef USBD_CONFIG_IRQ_PRIORITY\n\n#define USBD_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <o> USBD_CONFIG_DMASCHEDULER_MODE  - USBD SMA scheduler working scheme\n\n \n\n// <0=> Prioritized access \n\n// <1=> Round Robin \n\n\n\n#ifndef USBD_CONFIG_DMASCHEDULER_MODE\n\n#define USBD_CONFIG_DMASCHEDULER_MODE 0\n\n#endif\n\n\n\n// <q> USBD_CONFIG_DMASCHEDULER_ISO_BOOST  - Give priority to isochronous transfers\n\n \n\n\n\n// <i> This option gives priority to isochronous transfers.\n\n// <i> Enabling it assures that isochronous transfers are always processed,\n\n// <i> even if multiple other transfers are pending.\n\n// <i> Isochronous endpoints are prioritized before the usbd_dma_scheduler_algorithm\n\n// <i> function is called, so the option is independent of the algorithm chosen.\n\n\n\n#ifndef USBD_CONFIG_DMASCHEDULER_ISO_BOOST\n\n#define USBD_CONFIG_DMASCHEDULER_ISO_BOOST 1\n\n#endif\n\n\n\n// <q> USBD_CONFIG_ISO_IN_ZLP  - Respond to an IN token on ISO IN endpoint with ZLP when no data is ready\n\n \n\n\n\n// <i> If set, ISO IN endpoint will respond to an IN token with ZLP when no data is ready to be sent.\n\n// <i> Else, there will be no response.\n\n// <i> NOTE: This option does not work on Engineering A chip.\n\n\n\n#ifndef USBD_CONFIG_ISO_IN_ZLP\n\n#define USBD_CONFIG_ISO_IN_ZLP 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> WDT_ENABLED - nrf_drv_wdt - WDT peripheral driver - legacy layer\n\n//==========================================================\n\n#ifndef WDT_ENABLED\n\n#define WDT_ENABLED 0\n\n#endif\n\n// <o> WDT_CONFIG_BEHAVIOUR  - WDT behavior in CPU SLEEP or HALT mode\n\n \n\n// <1=> Run in SLEEP, Pause in HALT \n\n// <8=> Pause in SLEEP, Run in HALT \n\n// <9=> Run in SLEEP and HALT \n\n// <0=> Pause in SLEEP and HALT \n\n\n\n#ifndef WDT_CONFIG_BEHAVIOUR\n\n#define WDT_CONFIG_BEHAVIOUR 1\n\n#endif\n\n\n\n// <o> WDT_CONFIG_RELOAD_VALUE - Reload value  <15-4294967295> \n\n\n\n\n\n#ifndef WDT_CONFIG_RELOAD_VALUE\n\n#define WDT_CONFIG_RELOAD_VALUE 2000\n\n#endif\n\n\n\n// <o> WDT_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef WDT_CONFIG_IRQ_PRIORITY\n\n#define WDT_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// </e>\n\n\n\n// <h> nrfx_qspi - QSPI peripheral driver\n\n\n\n//==========================================================\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> nrfx_usbd - USBD peripheral driver\n\n\n\n//==========================================================\n\n// </h> \n\n//==========================================================\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> nRF_Drivers_External \n\n\n\n//==========================================================\n\n// <q> NRF_TWI_SENSOR_ENABLED  - nrf_twi_sensor - nRF TWI Sensor module\n\n \n\n\n\n#ifndef NRF_TWI_SENSOR_ENABLED\n\n#define NRF_TWI_SENSOR_ENABLED 0\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> nRF_Libraries \n\n\n\n//==========================================================\n\n// <q> APP_FIFO_ENABLED  - app_fifo - Software FIFO implementation\n\n \n\n\n\n#ifndef APP_FIFO_ENABLED\n\n#define APP_FIFO_ENABLED 1\n\n#endif\n\n\n\n// <q> APP_GPIOTE_ENABLED  - app_gpiote - GPIOTE events dispatcher\n\n \n\n\n\n#ifndef APP_GPIOTE_ENABLED\n\n#define APP_GPIOTE_ENABLED 0\n\n#endif\n\n\n\n// <q> APP_PWM_ENABLED  - app_pwm - PWM functionality\n\n \n\n\n\n#ifndef APP_PWM_ENABLED\n\n#define APP_PWM_ENABLED 0\n\n#endif\n\n\n\n// <e> APP_SCHEDULER_ENABLED - app_scheduler - Events scheduler\n\n//==========================================================\n\n#ifndef APP_SCHEDULER_ENABLED\n\n#define APP_SCHEDULER_ENABLED 1\n\n#endif\n\n// <q> APP_SCHEDULER_WITH_PAUSE  - Enabling pause feature\n\n \n\n\n\n#ifndef APP_SCHEDULER_WITH_PAUSE\n\n#define APP_SCHEDULER_WITH_PAUSE 0\n\n#endif\n\n\n\n// <q> APP_SCHEDULER_WITH_PROFILER  - Enabling scheduler profiling\n\n \n\n\n\n#ifndef APP_SCHEDULER_WITH_PROFILER\n\n#define APP_SCHEDULER_WITH_PROFILER 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> APP_SDCARD_ENABLED - app_sdcard - SD/MMC card support using SPI\n\n//==========================================================\n\n#ifndef APP_SDCARD_ENABLED\n\n#define APP_SDCARD_ENABLED 0\n\n#endif\n\n// <o> APP_SDCARD_SPI_INSTANCE  - SPI instance used\n\n \n\n// <0=> 0 \n\n// <1=> 1 \n\n// <2=> 2 \n\n\n\n#ifndef APP_SDCARD_SPI_INSTANCE\n\n#define APP_SDCARD_SPI_INSTANCE 0\n\n#endif\n\n\n\n// <o> APP_SDCARD_FREQ_INIT  - SPI frequency\n\n \n\n// <33554432=> 125 kHz \n\n// <67108864=> 250 kHz \n\n// <134217728=> 500 kHz \n\n// <268435456=> 1 MHz \n\n// <536870912=> 2 MHz \n\n// <1073741824=> 4 MHz \n\n// <2147483648=> 8 MHz \n\n\n\n#ifndef APP_SDCARD_FREQ_INIT\n\n#define APP_SDCARD_FREQ_INIT 67108864\n\n#endif\n\n\n\n// <o> APP_SDCARD_FREQ_DATA  - SPI frequency\n\n \n\n// <33554432=> 125 kHz \n\n// <67108864=> 250 kHz \n\n// <134217728=> 500 kHz \n\n// <268435456=> 1 MHz \n\n// <536870912=> 2 MHz \n\n// <1073741824=> 4 MHz \n\n// <2147483648=> 8 MHz \n\n\n\n#ifndef APP_SDCARD_FREQ_DATA\n\n#define APP_SDCARD_FREQ_DATA 1073741824\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> APP_TIMER_ENABLED - app_timer - Application timer functionality\n\n//==========================================================\n\n#ifndef APP_TIMER_ENABLED\n\n#define APP_TIMER_ENABLED 1\n\n#endif\n\n// <o> APP_TIMER_CONFIG_RTC_FREQUENCY  - Configure RTC prescaler.\n\n \n\n// <0=> 32768 Hz \n\n// <1=> 16384 Hz \n\n// <3=> 8192 Hz \n\n// <7=> 4096 Hz \n\n// <15=> 2048 Hz \n\n// <31=> 1024 Hz \n\n\n\n#ifndef APP_TIMER_CONFIG_RTC_FREQUENCY\n\n#define APP_TIMER_CONFIG_RTC_FREQUENCY 1\n\n#endif\n\n\n\n// <o> APP_TIMER_CONFIG_IRQ_PRIORITY  - Interrupt priority\n\n \n\n\n\n// <i> Priorities 0,2 (nRF51) and 0,1,4,5 (nRF52) are reserved for SoftDevice\n\n// <0=> 0 (highest) \n\n// <1=> 1 \n\n// <2=> 2 \n\n// <3=> 3 \n\n// <4=> 4 \n\n// <5=> 5 \n\n// <6=> 6 \n\n// <7=> 7 \n\n\n\n#ifndef APP_TIMER_CONFIG_IRQ_PRIORITY\n\n#define APP_TIMER_CONFIG_IRQ_PRIORITY 6\n\n#endif\n\n\n\n// <o> APP_TIMER_CONFIG_OP_QUEUE_SIZE - Capacity of timer requests queue. \n\n// <i> Size of the queue depends on how many timers are used\n\n// <i> in the system, how often timers are started and overall\n\n// <i> system latency. If queue size is too small app_timer calls\n\n// <i> will fail.\n\n\n\n#ifndef APP_TIMER_CONFIG_OP_QUEUE_SIZE\n\n#define APP_TIMER_CONFIG_OP_QUEUE_SIZE 10\n\n#endif\n\n\n\n// <q> APP_TIMER_CONFIG_USE_SCHEDULER  - Enable scheduling app_timer events to app_scheduler\n\n \n\n\n\n#ifndef APP_TIMER_CONFIG_USE_SCHEDULER\n\n#define APP_TIMER_CONFIG_USE_SCHEDULER 0\n\n#endif\n\n\n\n// <q> APP_TIMER_KEEPS_RTC_ACTIVE  - Enable RTC always on\n\n \n\n\n\n// <i> If option is enabled RTC is kept running even if there is no active timers.\n\n// <i> This option can be used when app_timer is used for timestamping.\n\n\n\n#ifndef APP_TIMER_KEEPS_RTC_ACTIVE\n\n#define APP_TIMER_KEEPS_RTC_ACTIVE 0\n\n#endif\n\n\n\n// <o> APP_TIMER_SAFE_WINDOW_MS - Maximum possible latency (in milliseconds) of handling app_timer event. \n\n// <i> Maximum possible timeout that can be set is reduced by safe window.\n\n// <i> Example: RTC frequency 16384 Hz, maximum possible timeout 1024 seconds - APP_TIMER_SAFE_WINDOW_MS.\n\n// <i> Since RTC is not stopped when processor is halted in debugging session, this value\n\n// <i> must cover it if debugging is needed. It is possible to halt processor for APP_TIMER_SAFE_WINDOW_MS\n\n// <i> without corrupting app_timer behavior.\n\n\n\n#ifndef APP_TIMER_SAFE_WINDOW_MS\n\n#define APP_TIMER_SAFE_WINDOW_MS 300000\n\n#endif\n\n\n\n// <h> App Timer Legacy configuration - Legacy configuration.\n\n\n\n//==========================================================\n\n// <q> APP_TIMER_WITH_PROFILER  - Enable app_timer profiling\n\n \n\n\n\n#ifndef APP_TIMER_WITH_PROFILER\n\n#define APP_TIMER_WITH_PROFILER 0\n\n#endif\n\n\n\n// <q> APP_TIMER_CONFIG_SWI_NUMBER  - Configure SWI instance used.\n\n \n\n\n\n#ifndef APP_TIMER_CONFIG_SWI_NUMBER\n\n#define APP_TIMER_CONFIG_SWI_NUMBER 0\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// </e>\n\n\n\n// <e> APP_UART_ENABLED - app_uart - UART driver\n\n//==========================================================\n\n#ifndef APP_UART_ENABLED\n\n#define APP_UART_ENABLED 1\n\n#endif\n\n// <o> APP_UART_DRIVER_INSTANCE  - UART instance used\n\n \n\n// <0=> 0 \n\n\n\n#ifndef APP_UART_DRIVER_INSTANCE\n\n#define APP_UART_DRIVER_INSTANCE 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <q> APP_USBD_AUDIO_ENABLED  - app_usbd_audio - USB AUDIO class\n\n \n\n\n\n#ifndef APP_USBD_AUDIO_ENABLED\n\n#define APP_USBD_AUDIO_ENABLED 0\n\n#endif\n\n\n\n// <e> APP_USBD_ENABLED - app_usbd - USB Device library\n\n//==========================================================\n\n#ifndef APP_USBD_ENABLED\n\n#define APP_USBD_ENABLED 0\n\n#endif\n\n// <o> APP_USBD_VID - Vendor ID.  <0x0000-0xFFFF> \n\n\n\n\n\n// <i> Note: This value is not editable in Configuration Wizard.\n\n// <i> Vendor ID ordered from USB IF: http://www.usb.org/developers/vendor/\n\n\n\n#ifndef APP_USBD_VID\n\n#define APP_USBD_VID 0\n\n#endif\n\n\n\n// <o> APP_USBD_PID - Product ID.  <0x0000-0xFFFF> \n\n\n\n\n\n// <i> Note: This value is not editable in Configuration Wizard.\n\n// <i> Selected Product ID\n\n\n\n#ifndef APP_USBD_PID\n\n#define APP_USBD_PID 0\n\n#endif\n\n\n\n// <o> APP_USBD_DEVICE_VER_MAJOR - Major device version  <0-99> \n\n\n\n\n\n// <i> Major device version, will be converted automatically to BCD notation. Use just decimal values.\n\n\n\n#ifndef APP_USBD_DEVICE_VER_MAJOR\n\n#define APP_USBD_DEVICE_VER_MAJOR 1\n\n#endif\n\n\n\n// <o> APP_USBD_DEVICE_VER_MINOR - Minor device version  <0-9> \n\n\n\n\n\n// <i> Minor device version, will be converted automatically to BCD notation. Use just decimal values.\n\n\n\n#ifndef APP_USBD_DEVICE_VER_MINOR\n\n#define APP_USBD_DEVICE_VER_MINOR 0\n\n#endif\n\n\n\n// <o> APP_USBD_DEVICE_VER_SUB - Sub-minor device version  <0-9> \n\n\n\n\n\n// <i> Sub-minor device version, will be converted automatically to BCD notation. Use just decimal values.\n\n\n\n#ifndef APP_USBD_DEVICE_VER_SUB\n\n#define APP_USBD_DEVICE_VER_SUB 0\n\n#endif\n\n\n\n// <q> APP_USBD_CONFIG_SELF_POWERED  - Self-powered device, as opposed to bus-powered.\n\n \n\n\n\n#ifndef APP_USBD_CONFIG_SELF_POWERED\n\n#define APP_USBD_CONFIG_SELF_POWERED 1\n\n#endif\n\n\n\n// <o> APP_USBD_CONFIG_MAX_POWER - MaxPower field in configuration descriptor in milliamps.  <0-500> \n\n\n\n\n\n#ifndef APP_USBD_CONFIG_MAX_POWER\n\n#define APP_USBD_CONFIG_MAX_POWER 100\n\n#endif\n\n\n\n// <q> APP_USBD_CONFIG_POWER_EVENTS_PROCESS  - Process power events.\n\n \n\n\n\n// <i> Enable processing power events in USB event handler.\n\n\n\n#ifndef APP_USBD_CONFIG_POWER_EVENTS_PROCESS\n\n#define APP_USBD_CONFIG_POWER_EVENTS_PROCESS 1\n\n#endif\n\n\n\n// <e> APP_USBD_CONFIG_EVENT_QUEUE_ENABLE - Enable event queue.\n\n\n\n// <i> This is the default configuration when all the events are placed into internal queue.\n\n// <i> Disable it when an external queue is used like app_scheduler or if you wish to process all events inside interrupts.\n\n// <i> Processing all events from the interrupt level adds requirement not to call any functions that modifies the USBD library state from the context higher than USB interrupt context.\n\n// <i> Functions that modify USBD state are functions for sleep, wakeup, start, stop, enable, and disable.\n\n//==========================================================\n\n#ifndef APP_USBD_CONFIG_EVENT_QUEUE_ENABLE\n\n#define APP_USBD_CONFIG_EVENT_QUEUE_ENABLE 1\n\n#endif\n\n// <o> APP_USBD_CONFIG_EVENT_QUEUE_SIZE - The size of the event queue.  <16-64> \n\n\n\n\n\n// <i> The size of the queue for the events that would be processed in the main loop.\n\n\n\n#ifndef APP_USBD_CONFIG_EVENT_QUEUE_SIZE\n\n#define APP_USBD_CONFIG_EVENT_QUEUE_SIZE 32\n\n#endif\n\n\n\n// <o> APP_USBD_CONFIG_SOF_HANDLING_MODE  - Change SOF events handling mode.\n\n \n\n\n\n// <i> Normal queue   - SOF events are pushed normally into the event queue.\n\n// <i> Compress queue - SOF events are counted and binded with other events or executed when the queue is empty.\n\n// <i>                  This prevents the queue from filling up with SOF events.\n\n// <i> Interrupt      - SOF events are processed in interrupt.\n\n// <0=> Normal queue \n\n// <1=> Compress queue \n\n// <2=> Interrupt \n\n\n\n#ifndef APP_USBD_CONFIG_SOF_HANDLING_MODE\n\n#define APP_USBD_CONFIG_SOF_HANDLING_MODE 1\n\n#endif\n\n\n\n// </e>\n\n\n\n// <q> APP_USBD_CONFIG_SOF_TIMESTAMP_PROVIDE  - Provide a function that generates timestamps for logs based on the current SOF.\n\n \n\n\n\n// <i> The function app_usbd_sof_timestamp_get is implemented if the logger is enabled. \n\n// <i> Use it when initializing the logger. \n\n// <i> SOF processing is always enabled when this configuration parameter is active. \n\n// <i> Note: This option is configured outside of APP_USBD_CONFIG_LOG_ENABLED. \n\n// <i> This means that it works even if the logging in this very module is disabled. \n\n\n\n#ifndef APP_USBD_CONFIG_SOF_TIMESTAMP_PROVIDE\n\n#define APP_USBD_CONFIG_SOF_TIMESTAMP_PROVIDE 0\n\n#endif\n\n\n\n// <o> APP_USBD_CONFIG_DESC_STRING_SIZE - Maximum size of the NULL-terminated string of the string descriptor.  <31-254> \n\n\n\n\n\n// <i> 31 characters can be stored in the internal USB buffer used for transfers.\n\n// <i> Any value higher than 31 creates an additional buffer just for descriptor strings.\n\n\n\n#ifndef APP_USBD_CONFIG_DESC_STRING_SIZE\n\n#define APP_USBD_CONFIG_DESC_STRING_SIZE 31\n\n#endif\n\n\n\n// <q> APP_USBD_CONFIG_DESC_STRING_UTF_ENABLED  - Enable UTF8 conversion.\n\n \n\n\n\n// <i> Enable UTF8-encoded characters. In normal processing, only ASCII characters are available.\n\n\n\n#ifndef APP_USBD_CONFIG_DESC_STRING_UTF_ENABLED\n\n#define APP_USBD_CONFIG_DESC_STRING_UTF_ENABLED 0\n\n#endif\n\n\n\n// <s> APP_USBD_STRINGS_LANGIDS - Supported languages identifiers.\n\n\n\n// <i> Note: This value is not editable in Configuration Wizard.\n\n// <i> Comma-separated list of supported languages.\n\n#ifndef APP_USBD_STRINGS_LANGIDS\n\n#define APP_USBD_STRINGS_LANGIDS APP_USBD_LANG_AND_SUBLANG(APP_USBD_LANG_ENGLISH, APP_USBD_SUBLANG_ENGLISH_US)\n\n#endif\n\n\n\n// <e> APP_USBD_STRING_ID_MANUFACTURER - Define manufacturer string ID.\n\n\n\n// <i> Setting ID to 0 disables the string.\n\n//==========================================================\n\n#ifndef APP_USBD_STRING_ID_MANUFACTURER\n\n#define APP_USBD_STRING_ID_MANUFACTURER 1\n\n#endif\n\n// <q> APP_USBD_STRINGS_MANUFACTURER_EXTERN  - Define whether @ref APP_USBD_STRINGS_MANUFACTURER is created by macro or declared as a global variable.\n\n \n\n\n\n#ifndef APP_USBD_STRINGS_MANUFACTURER_EXTERN\n\n#define APP_USBD_STRINGS_MANUFACTURER_EXTERN 0\n\n#endif\n\n\n\n// <s> APP_USBD_STRINGS_MANUFACTURER - String descriptor for the manufacturer name.\n\n\n\n// <i> Note: This value is not editable in Configuration Wizard.\n\n// <i> Comma-separated list of manufacturer names for each defined language.\n\n// <i> Use @ref APP_USBD_STRING_DESC macro to create string descriptor from a NULL-terminated string.\n\n// <i> Use @ref APP_USBD_STRING_RAW8_DESC macro to create string descriptor from comma-separated uint8_t values.\n\n// <i> Use @ref APP_USBD_STRING_RAW16_DESC macro to create string descriptor from comma-separated uint16_t values.\n\n// <i> Alternatively, configure the macro to point to any internal variable pointer that already contains the descriptor.\n\n// <i> Setting string to NULL disables that string.\n\n// <i> The order of manufacturer names must be the same like in @ref APP_USBD_STRINGS_LANGIDS.\n\n#ifndef APP_USBD_STRINGS_MANUFACTURER\n\n#define APP_USBD_STRINGS_MANUFACTURER APP_USBD_STRING_DESC(\"Nordic Semiconductor\")\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> APP_USBD_STRING_ID_PRODUCT - Define product string ID.\n\n\n\n// <i> Setting ID to 0 disables the string.\n\n//==========================================================\n\n#ifndef APP_USBD_STRING_ID_PRODUCT\n\n#define APP_USBD_STRING_ID_PRODUCT 2\n\n#endif\n\n// <q> APP_USBD_STRINGS_PRODUCT_EXTERN  - Define whether @ref APP_USBD_STRINGS_PRODUCT is created by macro or declared as a global variable.\n\n \n\n\n\n#ifndef APP_USBD_STRINGS_PRODUCT_EXTERN\n\n#define APP_USBD_STRINGS_PRODUCT_EXTERN 0\n\n#endif\n\n\n\n// <s> APP_USBD_STRINGS_PRODUCT - String descriptor for the product name.\n\n\n\n// <i> Note: This value is not editable in Configuration Wizard.\n\n// <i> List of product names that is defined the same way like in @ref APP_USBD_STRINGS_MANUFACTURER.\n\n#ifndef APP_USBD_STRINGS_PRODUCT\n\n#define APP_USBD_STRINGS_PRODUCT APP_USBD_STRING_DESC(\"nRF52 USB Product\")\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> APP_USBD_STRING_ID_SERIAL - Define serial number string ID.\n\n\n\n// <i> Setting ID to 0 disables the string.\n\n//==========================================================\n\n#ifndef APP_USBD_STRING_ID_SERIAL\n\n#define APP_USBD_STRING_ID_SERIAL 3\n\n#endif\n\n// <q> APP_USBD_STRING_SERIAL_EXTERN  - Define whether @ref APP_USBD_STRING_SERIAL is created by macro or declared as a global variable.\n\n \n\n\n\n#ifndef APP_USBD_STRING_SERIAL_EXTERN\n\n#define APP_USBD_STRING_SERIAL_EXTERN 0\n\n#endif\n\n\n\n// <s> APP_USBD_STRING_SERIAL - String descriptor for the serial number.\n\n\n\n// <i> Note: This value is not editable in Configuration Wizard.\n\n// <i> Serial number that is defined the same way like in @ref APP_USBD_STRINGS_MANUFACTURER.\n\n#ifndef APP_USBD_STRING_SERIAL\n\n#define APP_USBD_STRING_SERIAL APP_USBD_STRING_DESC(\"000000000000\")\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> APP_USBD_STRING_ID_CONFIGURATION - Define configuration string ID.\n\n\n\n// <i> Setting ID to 0 disables the string.\n\n//==========================================================\n\n#ifndef APP_USBD_STRING_ID_CONFIGURATION\n\n#define APP_USBD_STRING_ID_CONFIGURATION 4\n\n#endif\n\n// <q> APP_USBD_STRING_CONFIGURATION_EXTERN  - Define whether @ref APP_USBD_STRINGS_CONFIGURATION is created by macro or declared as global variable.\n\n \n\n\n\n#ifndef APP_USBD_STRING_CONFIGURATION_EXTERN\n\n#define APP_USBD_STRING_CONFIGURATION_EXTERN 0\n\n#endif\n\n\n\n// <s> APP_USBD_STRINGS_CONFIGURATION - String descriptor for the device configuration.\n\n\n\n// <i> Note: This value is not editable in Configuration Wizard.\n\n// <i> Configuration string that is defined the same way like in @ref APP_USBD_STRINGS_MANUFACTURER.\n\n#ifndef APP_USBD_STRINGS_CONFIGURATION\n\n#define APP_USBD_STRINGS_CONFIGURATION APP_USBD_STRING_DESC(\"Default configuration\")\n\n#endif\n\n\n\n// </e>\n\n\n\n// <s> APP_USBD_STRINGS_USER - Default values for user strings.\n\n\n\n// <i> Note: This value is not editable in Configuration Wizard.\n\n// <i> This value stores all application specific user strings with the default initialization.\n\n// <i> The setup is done by X-macros.\n\n// <i> Expected macro parameters:\n\n// <i> @code\n\n// <i> X(mnemonic, [=str_idx], ...)\n\n// <i> @endcode\n\n// <i> - @c mnemonic: Mnemonic of the string descriptor that would be added to\n\n// <i>                @ref app_usbd_string_desc_idx_t enumerator.\n\n// <i> - @c str_idx : String index value, can be set or left empty.\n\n// <i>                For example, WinUSB driver requires descriptor to be present on 0xEE index.\n\n// <i>                Then use X(USBD_STRING_WINUSB, =0xEE, (APP_USBD_STRING_DESC(...)))\n\n// <i> - @c ...     : List of string descriptors for each defined language.\n\n#ifndef APP_USBD_STRINGS_USER\n\n#define APP_USBD_STRINGS_USER X(APP_USER_1, , APP_USBD_STRING_DESC(\"User 1\"))\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> APP_USBD_HID_ENABLED - app_usbd_hid - USB HID class\n\n//==========================================================\n\n#ifndef APP_USBD_HID_ENABLED\n\n#define APP_USBD_HID_ENABLED 0\n\n#endif\n\n// <o> APP_USBD_HID_DEFAULT_IDLE_RATE - Default idle rate for HID class.   <0-255> \n\n\n\n\n\n// <i> 0 means indefinite duration, any other value is multiplied by 4 milliseconds. Refer to Chapter 7.2.4 of HID 1.11 Specification.\n\n\n\n#ifndef APP_USBD_HID_DEFAULT_IDLE_RATE\n\n#define APP_USBD_HID_DEFAULT_IDLE_RATE 0\n\n#endif\n\n\n\n// <o> APP_USBD_HID_REPORT_IDLE_TABLE_SIZE - Size of idle rate table.   <1-255> \n\n\n\n\n\n// <i> Must be higher than the highest report ID used.\n\n\n\n#ifndef APP_USBD_HID_REPORT_IDLE_TABLE_SIZE\n\n#define APP_USBD_HID_REPORT_IDLE_TABLE_SIZE 4\n\n#endif\n\n\n\n// </e>\n\n\n\n// <q> APP_USBD_HID_GENERIC_ENABLED  - app_usbd_hid_generic - USB HID generic\n\n \n\n\n\n#ifndef APP_USBD_HID_GENERIC_ENABLED\n\n#define APP_USBD_HID_GENERIC_ENABLED 0\n\n#endif\n\n\n\n// <q> APP_USBD_HID_KBD_ENABLED  - app_usbd_hid_kbd - USB HID keyboard\n\n \n\n\n\n#ifndef APP_USBD_HID_KBD_ENABLED\n\n#define APP_USBD_HID_KBD_ENABLED 0\n\n#endif\n\n\n\n// <q> APP_USBD_HID_MOUSE_ENABLED  - app_usbd_hid_mouse - USB HID mouse\n\n \n\n\n\n#ifndef APP_USBD_HID_MOUSE_ENABLED\n\n#define APP_USBD_HID_MOUSE_ENABLED 0\n\n#endif\n\n\n\n// <q> APP_USBD_MSC_ENABLED  - app_usbd_msc - USB MSC class\n\n \n\n\n\n#ifndef APP_USBD_MSC_ENABLED\n\n#define APP_USBD_MSC_ENABLED 0\n\n#endif\n\n\n\n// <q> CRC16_ENABLED  - crc16 - CRC16 calculation routines\n\n \n\n\n\n#ifndef CRC16_ENABLED\n\n#define CRC16_ENABLED 0\n\n#endif\n\n\n\n// <q> CRC32_ENABLED  - crc32 - CRC32 calculation routines\n\n \n\n\n\n#ifndef CRC32_ENABLED\n\n#define CRC32_ENABLED 0\n\n#endif\n\n\n\n// <q> ECC_ENABLED  - ecc - Elliptic Curve Cryptography Library\n\n \n\n\n\n#ifndef ECC_ENABLED\n\n#define ECC_ENABLED 0\n\n#endif\n\n\n\n// <e> FDS_ENABLED - fds - Flash data storage module\n\n//==========================================================\n\n#ifndef FDS_ENABLED\n\n#define FDS_ENABLED 0\n\n#endif\n\n// <h> Pages - Virtual page settings\n\n\n\n// <i> Configure the number of virtual pages to use and their size.\n\n//==========================================================\n\n// <o> FDS_VIRTUAL_PAGES - Number of virtual flash pages to use. \n\n// <i> One of the virtual pages is reserved by the system for garbage collection.\n\n// <i> Therefore, the minimum is two virtual pages: one page to store data and one page to be used by the system for garbage collection.\n\n// <i> The total amount of flash memory that is used by FDS amounts to @ref FDS_VIRTUAL_PAGES * @ref FDS_VIRTUAL_PAGE_SIZE * 4 bytes.\n\n\n\n#ifndef FDS_VIRTUAL_PAGES\n\n#define FDS_VIRTUAL_PAGES 3\n\n#endif\n\n\n\n// <o> FDS_VIRTUAL_PAGE_SIZE  - The size of a virtual flash page.\n\n \n\n\n\n// <i> Expressed in number of 4-byte words.\n\n// <i> By default, a virtual page is the same size as a physical page.\n\n// <i> The size of a virtual page must be a multiple of the size of a physical page.\n\n// <1024=> 1024 \n\n// <2048=> 2048 \n\n\n\n#ifndef FDS_VIRTUAL_PAGE_SIZE\n\n#define FDS_VIRTUAL_PAGE_SIZE 1024\n\n#endif\n\n\n\n// <o> FDS_VIRTUAL_PAGES_RESERVED - The number of virtual flash pages that are used by other modules. \n\n// <i> FDS module stores its data in the last pages of the flash memory.\n\n// <i> By setting this value, you can move flash end address used by the FDS.\n\n// <i> As a result the reserved space can be used by other modules.\n\n\n\n#ifndef FDS_VIRTUAL_PAGES_RESERVED\n\n#define FDS_VIRTUAL_PAGES_RESERVED 0\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> Backend - Backend configuration\n\n\n\n// <i> Configure which nrf_fstorage backend is used by FDS to write to flash.\n\n//==========================================================\n\n// <o> FDS_BACKEND  - FDS flash backend.\n\n \n\n\n\n// <i> NRF_FSTORAGE_SD uses the nrf_fstorage_sd backend implementation using the SoftDevice API. Use this if you have a SoftDevice present.\n\n// <i> NRF_FSTORAGE_NVMC uses the nrf_fstorage_nvmc implementation. Use this setting if you don't use the SoftDevice.\n\n// <1=> NRF_FSTORAGE_NVMC \n\n// <2=> NRF_FSTORAGE_SD \n\n\n\n#ifndef FDS_BACKEND\n\n#define FDS_BACKEND 2\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> Queue - Queue settings\n\n\n\n//==========================================================\n\n// <o> FDS_OP_QUEUE_SIZE - Size of the internal queue. \n\n// <i> Increase this value if you frequently get synchronous FDS_ERR_NO_SPACE_IN_QUEUES errors.\n\n\n\n#ifndef FDS_OP_QUEUE_SIZE\n\n#define FDS_OP_QUEUE_SIZE 4\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> CRC - CRC functionality\n\n\n\n//==========================================================\n\n// <e> FDS_CRC_CHECK_ON_READ - Enable CRC checks.\n\n\n\n// <i> Save a record's CRC when it is written to flash and check it when the record is opened.\n\n// <i> Records with an incorrect CRC can still be 'seen' by the user using FDS functions, but they cannot be opened.\n\n// <i> Additionally, they will not be garbage collected until they are deleted.\n\n//==========================================================\n\n#ifndef FDS_CRC_CHECK_ON_READ\n\n#define FDS_CRC_CHECK_ON_READ 0\n\n#endif\n\n// <o> FDS_CRC_CHECK_ON_WRITE  - Perform a CRC check on newly written records.\n\n \n\n\n\n// <i> Perform a CRC check on newly written records.\n\n// <i> This setting can be used to make sure that the record data was not altered while being written to flash.\n\n// <1=> Enabled \n\n// <0=> Disabled \n\n\n\n#ifndef FDS_CRC_CHECK_ON_WRITE\n\n#define FDS_CRC_CHECK_ON_WRITE 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> Users - Number of users\n\n\n\n//==========================================================\n\n// <o> FDS_MAX_USERS - Maximum number of callbacks that can be registered. \n\n#ifndef FDS_MAX_USERS\n\n#define FDS_MAX_USERS 4\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// </e>\n\n\n\n// <q> HARDFAULT_HANDLER_ENABLED  - hardfault_default - HardFault default handler for debugging and release\n\n \n\n\n\n#ifndef HARDFAULT_HANDLER_ENABLED\n\n#define HARDFAULT_HANDLER_ENABLED 0\n\n#endif\n\n\n\n// <e> HCI_MEM_POOL_ENABLED - hci_mem_pool - memory pool implementation used by HCI\n\n//==========================================================\n\n#ifndef HCI_MEM_POOL_ENABLED\n\n#define HCI_MEM_POOL_ENABLED 0\n\n#endif\n\n// <o> HCI_TX_BUF_SIZE - TX buffer size in bytes. \n\n#ifndef HCI_TX_BUF_SIZE\n\n#define HCI_TX_BUF_SIZE 600\n\n#endif\n\n\n\n// <o> HCI_RX_BUF_SIZE - RX buffer size in bytes. \n\n#ifndef HCI_RX_BUF_SIZE\n\n#define HCI_RX_BUF_SIZE 600\n\n#endif\n\n\n\n// <o> HCI_RX_BUF_QUEUE_SIZE - RX buffer queue size. \n\n#ifndef HCI_RX_BUF_QUEUE_SIZE\n\n#define HCI_RX_BUF_QUEUE_SIZE 4\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> HCI_SLIP_ENABLED - hci_slip - SLIP protocol implementation used by HCI\n\n//==========================================================\n\n#ifndef HCI_SLIP_ENABLED\n\n#define HCI_SLIP_ENABLED 0\n\n#endif\n\n// <o> HCI_UART_BAUDRATE  - Default Baudrate\n\n \n\n// <323584=> 1200 baud \n\n// <643072=> 2400 baud \n\n// <1290240=> 4800 baud \n\n// <2576384=> 9600 baud \n\n// <3862528=> 14400 baud \n\n// <5152768=> 19200 baud \n\n// <7716864=> 28800 baud \n\n// <10289152=> 38400 baud \n\n// <15400960=> 57600 baud \n\n// <20615168=> 76800 baud \n\n// <30801920=> 115200 baud \n\n// <61865984=> 230400 baud \n\n// <67108864=> 250000 baud \n\n// <121634816=> 460800 baud \n\n// <251658240=> 921600 baud \n\n// <268435456=> 1000000 baud \n\n\n\n#ifndef HCI_UART_BAUDRATE\n\n#define HCI_UART_BAUDRATE 30801920\n\n#endif\n\n\n\n// <o> HCI_UART_FLOW_CONTROL  - Hardware Flow Control\n\n \n\n// <0=> Disabled \n\n// <1=> Enabled \n\n\n\n#ifndef HCI_UART_FLOW_CONTROL\n\n#define HCI_UART_FLOW_CONTROL 0\n\n#endif\n\n\n\n// <o> HCI_UART_RX_PIN - UART RX pin \n\n#ifndef HCI_UART_RX_PIN\n\n#define HCI_UART_RX_PIN 8\n\n#endif\n\n\n\n// <o> HCI_UART_TX_PIN - UART TX pin \n\n#ifndef HCI_UART_TX_PIN\n\n#define HCI_UART_TX_PIN 6\n\n#endif\n\n\n\n// <o> HCI_UART_RTS_PIN - UART RTS pin \n\n#ifndef HCI_UART_RTS_PIN\n\n#define HCI_UART_RTS_PIN 5\n\n#endif\n\n\n\n// <o> HCI_UART_CTS_PIN - UART CTS pin \n\n#ifndef HCI_UART_CTS_PIN\n\n#define HCI_UART_CTS_PIN 7\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> HCI_TRANSPORT_ENABLED - hci_transport - HCI transport\n\n//==========================================================\n\n#ifndef HCI_TRANSPORT_ENABLED\n\n#define HCI_TRANSPORT_ENABLED 0\n\n#endif\n\n// <o> HCI_MAX_PACKET_SIZE_IN_BITS - Maximum size of a single application packet in bits. \n\n#ifndef HCI_MAX_PACKET_SIZE_IN_BITS\n\n#define HCI_MAX_PACKET_SIZE_IN_BITS 8000\n\n#endif\n\n\n\n// </e>\n\n\n\n// <q> LED_SOFTBLINK_ENABLED  - led_softblink - led_softblink module\n\n \n\n\n\n#ifndef LED_SOFTBLINK_ENABLED\n\n#define LED_SOFTBLINK_ENABLED 0\n\n#endif\n\n\n\n// <q> LOW_POWER_PWM_ENABLED  - low_power_pwm - low_power_pwm module\n\n \n\n\n\n#ifndef LOW_POWER_PWM_ENABLED\n\n#define LOW_POWER_PWM_ENABLED 0\n\n#endif\n\n\n\n// <e> MEM_MANAGER_ENABLED - mem_manager - Dynamic memory allocator\n\n//==========================================================\n\n#ifndef MEM_MANAGER_ENABLED\n\n#define MEM_MANAGER_ENABLED 0\n\n#endif\n\n// <o> MEMORY_MANAGER_SMALL_BLOCK_COUNT - Size of each memory blocks identified as 'small' block.  <0-255> \n\n\n\n\n\n#ifndef MEMORY_MANAGER_SMALL_BLOCK_COUNT\n\n#define MEMORY_MANAGER_SMALL_BLOCK_COUNT 1\n\n#endif\n\n\n\n// <o> MEMORY_MANAGER_SMALL_BLOCK_SIZE -  Size of each memory blocks identified as 'small' block. \n\n// <i>  Size of each memory blocks identified as 'small' block. Memory block are recommended to be word-sized.\n\n\n\n#ifndef MEMORY_MANAGER_SMALL_BLOCK_SIZE\n\n#define MEMORY_MANAGER_SMALL_BLOCK_SIZE 32\n\n#endif\n\n\n\n// <o> MEMORY_MANAGER_MEDIUM_BLOCK_COUNT - Size of each memory blocks identified as 'medium' block.  <0-255> \n\n\n\n\n\n#ifndef MEMORY_MANAGER_MEDIUM_BLOCK_COUNT\n\n#define MEMORY_MANAGER_MEDIUM_BLOCK_COUNT 0\n\n#endif\n\n\n\n// <o> MEMORY_MANAGER_MEDIUM_BLOCK_SIZE -  Size of each memory blocks identified as 'medium' block. \n\n// <i>  Size of each memory blocks identified as 'medium' block. Memory block are recommended to be word-sized.\n\n\n\n#ifndef MEMORY_MANAGER_MEDIUM_BLOCK_SIZE\n\n#define MEMORY_MANAGER_MEDIUM_BLOCK_SIZE 256\n\n#endif\n\n\n\n// <o> MEMORY_MANAGER_LARGE_BLOCK_COUNT - Size of each memory blocks identified as 'large' block.  <0-255> \n\n\n\n\n\n#ifndef MEMORY_MANAGER_LARGE_BLOCK_COUNT\n\n#define MEMORY_MANAGER_LARGE_BLOCK_COUNT 0\n\n#endif\n\n\n\n// <o> MEMORY_MANAGER_LARGE_BLOCK_SIZE -  Size of each memory blocks identified as 'large' block. \n\n// <i>  Size of each memory blocks identified as 'large' block. Memory block are recommended to be word-sized.\n\n\n\n#ifndef MEMORY_MANAGER_LARGE_BLOCK_SIZE\n\n#define MEMORY_MANAGER_LARGE_BLOCK_SIZE 256\n\n#endif\n\n\n\n// <o> MEMORY_MANAGER_XLARGE_BLOCK_COUNT - Size of each memory blocks identified as 'extra large' block.  <0-255> \n\n\n\n\n\n#ifndef MEMORY_MANAGER_XLARGE_BLOCK_COUNT\n\n#define MEMORY_MANAGER_XLARGE_BLOCK_COUNT 0\n\n#endif\n\n\n\n// <o> MEMORY_MANAGER_XLARGE_BLOCK_SIZE -  Size of each memory blocks identified as 'extra large' block. \n\n// <i>  Size of each memory blocks identified as 'extra large' block. Memory block are recommended to be word-sized.\n\n\n\n#ifndef MEMORY_MANAGER_XLARGE_BLOCK_SIZE\n\n#define MEMORY_MANAGER_XLARGE_BLOCK_SIZE 1320\n\n#endif\n\n\n\n// <o> MEMORY_MANAGER_XXLARGE_BLOCK_COUNT - Size of each memory blocks identified as 'extra extra large' block.  <0-255> \n\n\n\n\n\n#ifndef MEMORY_MANAGER_XXLARGE_BLOCK_COUNT\n\n#define MEMORY_MANAGER_XXLARGE_BLOCK_COUNT 0\n\n#endif\n\n\n\n// <o> MEMORY_MANAGER_XXLARGE_BLOCK_SIZE -  Size of each memory blocks identified as 'extra extra large' block. \n\n// <i>  Size of each memory blocks identified as 'extra extra large' block. Memory block are recommended to be word-sized.\n\n\n\n#ifndef MEMORY_MANAGER_XXLARGE_BLOCK_SIZE\n\n#define MEMORY_MANAGER_XXLARGE_BLOCK_SIZE 3444\n\n#endif\n\n\n\n// <o> MEMORY_MANAGER_XSMALL_BLOCK_COUNT - Size of each memory blocks identified as 'extra small' block.  <0-255> \n\n\n\n\n\n#ifndef MEMORY_MANAGER_XSMALL_BLOCK_COUNT\n\n#define MEMORY_MANAGER_XSMALL_BLOCK_COUNT 0\n\n#endif\n\n\n\n// <o> MEMORY_MANAGER_XSMALL_BLOCK_SIZE -  Size of each memory blocks identified as 'extra small' block. \n\n// <i>  Size of each memory blocks identified as 'extra large' block. Memory block are recommended to be word-sized.\n\n\n\n#ifndef MEMORY_MANAGER_XSMALL_BLOCK_SIZE\n\n#define MEMORY_MANAGER_XSMALL_BLOCK_SIZE 64\n\n#endif\n\n\n\n// <o> MEMORY_MANAGER_XXSMALL_BLOCK_COUNT - Size of each memory blocks identified as 'extra extra small' block.  <0-255> \n\n\n\n\n\n#ifndef MEMORY_MANAGER_XXSMALL_BLOCK_COUNT\n\n#define MEMORY_MANAGER_XXSMALL_BLOCK_COUNT 0\n\n#endif\n\n\n\n// <o> MEMORY_MANAGER_XXSMALL_BLOCK_SIZE -  Size of each memory blocks identified as 'extra extra small' block. \n\n// <i>  Size of each memory blocks identified as 'extra extra small' block. Memory block are recommended to be word-sized.\n\n\n\n#ifndef MEMORY_MANAGER_XXSMALL_BLOCK_SIZE\n\n#define MEMORY_MANAGER_XXSMALL_BLOCK_SIZE 32\n\n#endif\n\n\n\n// <e> MEM_MANAGER_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef MEM_MANAGER_CONFIG_LOG_ENABLED\n\n#define MEM_MANAGER_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> MEM_MANAGER_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef MEM_MANAGER_CONFIG_LOG_LEVEL\n\n#define MEM_MANAGER_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> MEM_MANAGER_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef MEM_MANAGER_CONFIG_INFO_COLOR\n\n#define MEM_MANAGER_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> MEM_MANAGER_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef MEM_MANAGER_CONFIG_DEBUG_COLOR\n\n#define MEM_MANAGER_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <q> MEM_MANAGER_DISABLE_API_PARAM_CHECK  - Disable API parameter checks in the module.\n\n \n\n\n\n#ifndef MEM_MANAGER_DISABLE_API_PARAM_CHECK\n\n#define MEM_MANAGER_DISABLE_API_PARAM_CHECK 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_BALLOC_ENABLED - nrf_balloc - Block allocator module\n\n//==========================================================\n\n#ifndef NRF_BALLOC_ENABLED\n\n#define NRF_BALLOC_ENABLED 1\n\n#endif\n\n// <e> NRF_BALLOC_CONFIG_DEBUG_ENABLED - Enables debug mode in the module.\n\n//==========================================================\n\n#ifndef NRF_BALLOC_CONFIG_DEBUG_ENABLED\n\n#define NRF_BALLOC_CONFIG_DEBUG_ENABLED 0\n\n#endif\n\n// <o> NRF_BALLOC_CONFIG_HEAD_GUARD_WORDS - Number of words used as head guard.  <0-255> \n\n\n\n\n\n#ifndef NRF_BALLOC_CONFIG_HEAD_GUARD_WORDS\n\n#define NRF_BALLOC_CONFIG_HEAD_GUARD_WORDS 1\n\n#endif\n\n\n\n// <o> NRF_BALLOC_CONFIG_TAIL_GUARD_WORDS - Number of words used as tail guard.  <0-255> \n\n\n\n\n\n#ifndef NRF_BALLOC_CONFIG_TAIL_GUARD_WORDS\n\n#define NRF_BALLOC_CONFIG_TAIL_GUARD_WORDS 1\n\n#endif\n\n\n\n// <q> NRF_BALLOC_CONFIG_BASIC_CHECKS_ENABLED  - Enables basic checks in this module.\n\n \n\n\n\n#ifndef NRF_BALLOC_CONFIG_BASIC_CHECKS_ENABLED\n\n#define NRF_BALLOC_CONFIG_BASIC_CHECKS_ENABLED 0\n\n#endif\n\n\n\n// <q> NRF_BALLOC_CONFIG_DOUBLE_FREE_CHECK_ENABLED  - Enables double memory free check in this module.\n\n \n\n\n\n#ifndef NRF_BALLOC_CONFIG_DOUBLE_FREE_CHECK_ENABLED\n\n#define NRF_BALLOC_CONFIG_DOUBLE_FREE_CHECK_ENABLED 0\n\n#endif\n\n\n\n// <q> NRF_BALLOC_CONFIG_DATA_TRASHING_CHECK_ENABLED  - Enables free memory corruption check in this module.\n\n \n\n\n\n#ifndef NRF_BALLOC_CONFIG_DATA_TRASHING_CHECK_ENABLED\n\n#define NRF_BALLOC_CONFIG_DATA_TRASHING_CHECK_ENABLED 0\n\n#endif\n\n\n\n// <q> NRF_BALLOC_CLI_CMDS  - Enable CLI commands specific to the module\n\n \n\n\n\n#ifndef NRF_BALLOC_CLI_CMDS\n\n#define NRF_BALLOC_CLI_CMDS 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRF_CSENSE_ENABLED - nrf_csense - Capacitive sensor module\n\n//==========================================================\n\n#ifndef NRF_CSENSE_ENABLED\n\n#define NRF_CSENSE_ENABLED 0\n\n#endif\n\n// <o> NRF_CSENSE_PAD_HYSTERESIS - Minimum value of change required to determine that a pad was touched. \n\n#ifndef NRF_CSENSE_PAD_HYSTERESIS\n\n#define NRF_CSENSE_PAD_HYSTERESIS 15\n\n#endif\n\n\n\n// <o> NRF_CSENSE_PAD_DEVIATION - Minimum value measured on a pad required to take it into account while calculating the step. \n\n#ifndef NRF_CSENSE_PAD_DEVIATION\n\n#define NRF_CSENSE_PAD_DEVIATION 70\n\n#endif\n\n\n\n// <o> NRF_CSENSE_MIN_PAD_VALUE - Minimum normalized value on a pad required to take its value into account. \n\n#ifndef NRF_CSENSE_MIN_PAD_VALUE\n\n#define NRF_CSENSE_MIN_PAD_VALUE 20\n\n#endif\n\n\n\n// <o> NRF_CSENSE_MAX_PADS_NUMBER - Maximum number of pads used for one instance. \n\n#ifndef NRF_CSENSE_MAX_PADS_NUMBER\n\n#define NRF_CSENSE_MAX_PADS_NUMBER 20\n\n#endif\n\n\n\n// <o> NRF_CSENSE_MAX_VALUE - Maximum normalized value obtained from measurement. \n\n#ifndef NRF_CSENSE_MAX_VALUE\n\n#define NRF_CSENSE_MAX_VALUE 1000\n\n#endif\n\n\n\n// <o> NRF_CSENSE_OUTPUT_PIN - Output pin used by the low-level module. \n\n// <i> This is used when capacitive sensor does not use COMP.\n\n\n\n#ifndef NRF_CSENSE_OUTPUT_PIN\n\n#define NRF_CSENSE_OUTPUT_PIN 26\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_DRV_CSENSE_ENABLED - nrf_drv_csense - Capacitive sensor low-level module\n\n//==========================================================\n\n#ifndef NRF_DRV_CSENSE_ENABLED\n\n#define NRF_DRV_CSENSE_ENABLED 0\n\n#endif\n\n// <e> USE_COMP - Use the comparator to implement the capacitive sensor driver.\n\n\n\n// <i> Due to Anomaly 84, COMP I_SOURCE is not functional. It has too high a varation.\n\n//==========================================================\n\n#ifndef USE_COMP\n\n#define USE_COMP 0\n\n#endif\n\n// <o> TIMER0_FOR_CSENSE - First TIMER instance used by the driver (not used on nRF51). \n\n#ifndef TIMER0_FOR_CSENSE\n\n#define TIMER0_FOR_CSENSE 1\n\n#endif\n\n\n\n// <o> TIMER1_FOR_CSENSE - Second TIMER instance used by the driver (not used on nRF51). \n\n#ifndef TIMER1_FOR_CSENSE\n\n#define TIMER1_FOR_CSENSE 2\n\n#endif\n\n\n\n// <o> MEASUREMENT_PERIOD - Single measurement period. \n\n// <i> Time of a single measurement can be calculated as\n\n// <i> T = (1/2)*MEASUREMENT_PERIOD*(1/f_OSC) where f_OSC = I_SOURCE / (2C*(VUP-VDOWN) ).\n\n// <i> I_SOURCE, VUP, and VDOWN are values used to initialize COMP and C is the capacitance of the used pad.\n\n\n\n#ifndef MEASUREMENT_PERIOD\n\n#define MEASUREMENT_PERIOD 20\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NRF_FSTORAGE_ENABLED - nrf_fstorage - Flash abstraction library\n\n//==========================================================\n\n#ifndef NRF_FSTORAGE_ENABLED\n\n#define NRF_FSTORAGE_ENABLED 0\n\n#endif\n\n// <h> nrf_fstorage - Common settings\n\n\n\n// <i> Common settings to all fstorage implementations\n\n//==========================================================\n\n// <q> NRF_FSTORAGE_PARAM_CHECK_DISABLED  - Disable user input validation\n\n \n\n\n\n// <i> If selected, use ASSERT to validate user input.\n\n// <i> This effectively removes user input validation in production code.\n\n// <i> Recommended setting: OFF, only enable this setting if size is a major concern.\n\n\n\n#ifndef NRF_FSTORAGE_PARAM_CHECK_DISABLED\n\n#define NRF_FSTORAGE_PARAM_CHECK_DISABLED 0\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> nrf_fstorage_sd - Implementation using the SoftDevice\n\n\n\n// <i> Configuration options for the fstorage implementation using the SoftDevice\n\n//==========================================================\n\n// <o> NRF_FSTORAGE_SD_QUEUE_SIZE - Size of the internal queue of operations \n\n// <i> Increase this value if API calls frequently return the error @ref NRF_ERROR_NO_MEM.\n\n\n\n#ifndef NRF_FSTORAGE_SD_QUEUE_SIZE\n\n#define NRF_FSTORAGE_SD_QUEUE_SIZE 4\n\n#endif\n\n\n\n// <o> NRF_FSTORAGE_SD_MAX_RETRIES - Maximum number of attempts at executing an operation when the SoftDevice is busy \n\n// <i> Increase this value if events frequently return the @ref NRF_ERROR_TIMEOUT error.\n\n// <i> The SoftDevice might fail to schedule flash access due to high BLE activity.\n\n\n\n#ifndef NRF_FSTORAGE_SD_MAX_RETRIES\n\n#define NRF_FSTORAGE_SD_MAX_RETRIES 8\n\n#endif\n\n\n\n// <o> NRF_FSTORAGE_SD_MAX_WRITE_SIZE - Maximum number of bytes to be written to flash in a single operation \n\n// <i> This value must be a multiple of four.\n\n// <i> Lowering this value can increase the chances of the SoftDevice being able to execute flash operations in between radio activity.\n\n// <i> This value is bound by the maximum number of bytes that can be written to flash in a single call to @ref sd_flash_write.\n\n// <i> That is 1024 bytes for nRF51 ICs and 4096 bytes for nRF52 ICs.\n\n\n\n#ifndef NRF_FSTORAGE_SD_MAX_WRITE_SIZE\n\n#define NRF_FSTORAGE_SD_MAX_WRITE_SIZE 4096\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// </e>\n\n\n\n// <q> NRF_GFX_ENABLED  - nrf_gfx - GFX module\n\n \n\n\n\n#ifndef NRF_GFX_ENABLED\n\n#define NRF_GFX_ENABLED 0\n\n#endif\n\n\n\n// <q> NRF_MEMOBJ_ENABLED  - nrf_memobj - Linked memory allocator module\n\n \n\n\n\n#ifndef NRF_MEMOBJ_ENABLED\n\n#define NRF_MEMOBJ_ENABLED 1\n\n#endif\n\n\n\n// <e> NRF_PWR_MGMT_ENABLED - nrf_pwr_mgmt - Power management module\n\n//==========================================================\n\n#ifndef NRF_PWR_MGMT_ENABLED\n\n#define NRF_PWR_MGMT_ENABLED 1\n\n#endif\n\n// <e> NRF_PWR_MGMT_CONFIG_DEBUG_PIN_ENABLED - Enables pin debug in the module.\n\n\n\n// <i> Selected pin will be set when CPU is in sleep mode.\n\n//==========================================================\n\n#ifndef NRF_PWR_MGMT_CONFIG_DEBUG_PIN_ENABLED\n\n#define NRF_PWR_MGMT_CONFIG_DEBUG_PIN_ENABLED 0\n\n#endif\n\n// <o> NRF_PWR_MGMT_SLEEP_DEBUG_PIN  - Pin number\n\n \n\n// <0=> 0 (P0.0) \n\n// <1=> 1 (P0.1) \n\n// <2=> 2 (P0.2) \n\n// <3=> 3 (P0.3) \n\n// <4=> 4 (P0.4) \n\n// <5=> 5 (P0.5) \n\n// <6=> 6 (P0.6) \n\n// <7=> 7 (P0.7) \n\n// <8=> 8 (P0.8) \n\n// <9=> 9 (P0.9) \n\n// <10=> 10 (P0.10) \n\n// <11=> 11 (P0.11) \n\n// <12=> 12 (P0.12) \n\n// <13=> 13 (P0.13) \n\n// <14=> 14 (P0.14) \n\n// <15=> 15 (P0.15) \n\n// <16=> 16 (P0.16) \n\n// <17=> 17 (P0.17) \n\n// <18=> 18 (P0.18) \n\n// <19=> 19 (P0.19) \n\n// <20=> 20 (P0.20) \n\n// <21=> 21 (P0.21) \n\n// <22=> 22 (P0.22) \n\n// <23=> 23 (P0.23) \n\n// <24=> 24 (P0.24) \n\n// <25=> 25 (P0.25) \n\n// <26=> 26 (P0.26) \n\n// <27=> 27 (P0.27) \n\n// <28=> 28 (P0.28) \n\n// <29=> 29 (P0.29) \n\n// <30=> 30 (P0.30) \n\n// <31=> 31 (P0.31) \n\n// <4294967295=> Not connected \n\n\n\n#ifndef NRF_PWR_MGMT_SLEEP_DEBUG_PIN\n\n#define NRF_PWR_MGMT_SLEEP_DEBUG_PIN 31\n\n#endif\n\n\n\n// </e>\n\n\n\n// <q> NRF_PWR_MGMT_CONFIG_CPU_USAGE_MONITOR_ENABLED  - Enables CPU usage monitor.\n\n \n\n\n\n// <i> Module will trace percentage of CPU usage in one second intervals.\n\n\n\n#ifndef NRF_PWR_MGMT_CONFIG_CPU_USAGE_MONITOR_ENABLED\n\n#define NRF_PWR_MGMT_CONFIG_CPU_USAGE_MONITOR_ENABLED 0\n\n#endif\n\n\n\n// <e> NRF_PWR_MGMT_CONFIG_STANDBY_TIMEOUT_ENABLED - Enable standby timeout.\n\n//==========================================================\n\n#ifndef NRF_PWR_MGMT_CONFIG_STANDBY_TIMEOUT_ENABLED\n\n#define NRF_PWR_MGMT_CONFIG_STANDBY_TIMEOUT_ENABLED 0\n\n#endif\n\n// <o> NRF_PWR_MGMT_CONFIG_STANDBY_TIMEOUT_S - Standby timeout (in seconds). \n\n// <i> Shutdown procedure will begin no earlier than after this number of seconds.\n\n\n\n#ifndef NRF_PWR_MGMT_CONFIG_STANDBY_TIMEOUT_S\n\n#define NRF_PWR_MGMT_CONFIG_STANDBY_TIMEOUT_S 3\n\n#endif\n\n\n\n// </e>\n\n\n\n// <q> NRF_PWR_MGMT_CONFIG_FPU_SUPPORT_ENABLED  - Enables FPU event cleaning.\n\n \n\n\n\n#ifndef NRF_PWR_MGMT_CONFIG_FPU_SUPPORT_ENABLED\n\n#define NRF_PWR_MGMT_CONFIG_FPU_SUPPORT_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_PWR_MGMT_CONFIG_AUTO_SHUTDOWN_RETRY  - Blocked shutdown procedure will be retried every second.\n\n \n\n\n\n#ifndef NRF_PWR_MGMT_CONFIG_AUTO_SHUTDOWN_RETRY\n\n#define NRF_PWR_MGMT_CONFIG_AUTO_SHUTDOWN_RETRY 0\n\n#endif\n\n\n\n// <q> NRF_PWR_MGMT_CONFIG_USE_SCHEDULER  - Module will use @ref app_scheduler.\n\n \n\n\n\n#ifndef NRF_PWR_MGMT_CONFIG_USE_SCHEDULER\n\n#define NRF_PWR_MGMT_CONFIG_USE_SCHEDULER 0\n\n#endif\n\n\n\n// <o> NRF_PWR_MGMT_CONFIG_HANDLER_PRIORITY_COUNT - The number of priorities for module handlers. \n\n// <i> The number of stages of the shutdown process.\n\n\n\n#ifndef NRF_PWR_MGMT_CONFIG_HANDLER_PRIORITY_COUNT\n\n#define NRF_PWR_MGMT_CONFIG_HANDLER_PRIORITY_COUNT 3\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_QUEUE_ENABLED - nrf_queue - Queue module\n\n//==========================================================\n\n#ifndef NRF_QUEUE_ENABLED\n\n#define NRF_QUEUE_ENABLED 1\n\n#endif\n\n// <q> NRF_QUEUE_CLI_CMDS  - Enable CLI commands specific to the module\n\n \n\n\n\n#ifndef NRF_QUEUE_CLI_CMDS\n\n#define NRF_QUEUE_CLI_CMDS 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <q> NRF_SECTION_ITER_ENABLED  - nrf_section_iter - Section iterator\n\n \n\n\n\n#ifndef NRF_SECTION_ITER_ENABLED\n\n#define NRF_SECTION_ITER_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_SORTLIST_ENABLED  - nrf_sortlist - Sorted list\n\n \n\n\n\n#ifndef NRF_SORTLIST_ENABLED\n\n#define NRF_SORTLIST_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_SPI_MNGR_ENABLED  - nrf_spi_mngr - SPI transaction manager\n\n \n\n\n\n#ifndef NRF_SPI_MNGR_ENABLED\n\n#define NRF_SPI_MNGR_ENABLED 0\n\n#endif\n\n\n\n// <q> NRF_STRERROR_ENABLED  - nrf_strerror - Library for converting error code to string.\n\n \n\n\n\n#ifndef NRF_STRERROR_ENABLED\n\n#define NRF_STRERROR_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_TWI_MNGR_ENABLED  - nrf_twi_mngr - TWI transaction manager\n\n \n\n\n\n#ifndef NRF_TWI_MNGR_ENABLED\n\n#define NRF_TWI_MNGR_ENABLED 0\n\n#endif\n\n\n\n// <q> RETARGET_ENABLED  - retarget - Retargeting stdio functions\n\n \n\n\n\n#ifndef RETARGET_ENABLED\n\n#define RETARGET_ENABLED 1\n\n#endif\n\n\n\n// <q> SLIP_ENABLED  - slip - SLIP encoding and decoding\n\n \n\n\n\n#ifndef SLIP_ENABLED\n\n#define SLIP_ENABLED 0\n\n#endif\n\n\n\n// <e> TASK_MANAGER_ENABLED - task_manager - Task manager.\n\n//==========================================================\n\n#ifndef TASK_MANAGER_ENABLED\n\n#define TASK_MANAGER_ENABLED 0\n\n#endif\n\n// <q> TASK_MANAGER_CLI_CMDS  - Enable CLI commands specific to the module\n\n \n\n\n\n#ifndef TASK_MANAGER_CLI_CMDS\n\n#define TASK_MANAGER_CLI_CMDS 0\n\n#endif\n\n\n\n// <o> TASK_MANAGER_CONFIG_MAX_TASKS - Maximum number of tasks which can be created \n\n#ifndef TASK_MANAGER_CONFIG_MAX_TASKS\n\n#define TASK_MANAGER_CONFIG_MAX_TASKS 2\n\n#endif\n\n\n\n// <o> TASK_MANAGER_CONFIG_STACK_SIZE - Stack size for every task (power of 2) \n\n#ifndef TASK_MANAGER_CONFIG_STACK_SIZE\n\n#define TASK_MANAGER_CONFIG_STACK_SIZE 1024\n\n#endif\n\n\n\n// <q> TASK_MANAGER_CONFIG_STACK_PROFILER_ENABLED  - Enable stack profiling.\n\n \n\n\n\n#ifndef TASK_MANAGER_CONFIG_STACK_PROFILER_ENABLED\n\n#define TASK_MANAGER_CONFIG_STACK_PROFILER_ENABLED 1\n\n#endif\n\n\n\n// <o> TASK_MANAGER_CONFIG_STACK_GUARD  - Configures stack guard.\n\n \n\n// <0=> Disabled \n\n// <4=> 32 bytes \n\n// <5=> 64 bytes \n\n// <6=> 128 bytes \n\n// <7=> 256 bytes \n\n// <8=> 512 bytes \n\n\n\n#ifndef TASK_MANAGER_CONFIG_STACK_GUARD\n\n#define TASK_MANAGER_CONFIG_STACK_GUARD 7\n\n#endif\n\n\n\n// </e>\n\n\n\n// <h> app_button - buttons handling module\n\n\n\n//==========================================================\n\n// <q> BUTTON_ENABLED  - Enables Button module\n\n \n\n\n\n#ifndef BUTTON_ENABLED\n\n#define BUTTON_ENABLED 1\n\n#endif\n\n\n\n// <q> BUTTON_HIGH_ACCURACY_ENABLED  - Enables GPIOTE high accuracy for buttons\n\n \n\n\n\n#ifndef BUTTON_HIGH_ACCURACY_ENABLED\n\n#define BUTTON_HIGH_ACCURACY_ENABLED 0\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> app_usbd_cdc_acm - USB CDC ACM class\n\n\n\n//==========================================================\n\n// <q> APP_USBD_CDC_ACM_ENABLED  - Enabling USBD CDC ACM Class library\n\n \n\n\n\n#ifndef APP_USBD_CDC_ACM_ENABLED\n\n#define APP_USBD_CDC_ACM_ENABLED 0\n\n#endif\n\n\n\n// <q> APP_USBD_CDC_ACM_ZLP_ON_EPSIZE_WRITE  - Send ZLP on write with same size as endpoint\n\n \n\n\n\n// <i> If enabled, CDC ACM class will automatically send a zero length packet after transfer which has the same size as endpoint.\n\n// <i> This may limit throughput if a lot of binary data is sent, but in terminal mode operation it makes sure that the data is always displayed right after it is sent.\n\n\n\n#ifndef APP_USBD_CDC_ACM_ZLP_ON_EPSIZE_WRITE\n\n#define APP_USBD_CDC_ACM_ZLP_ON_EPSIZE_WRITE 1\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> nrf_cli - Command line interface\n\n\n\n//==========================================================\n\n// <q> NRF_CLI_ENABLED  - Enable/disable the CLI module.\n\n \n\n\n\n#ifndef NRF_CLI_ENABLED\n\n#define NRF_CLI_ENABLED 0\n\n#endif\n\n\n\n// <o> NRF_CLI_ARGC_MAX - Maximum number of parameters passed to the command handler. \n\n#ifndef NRF_CLI_ARGC_MAX\n\n#define NRF_CLI_ARGC_MAX 12\n\n#endif\n\n\n\n// <q> NRF_CLI_BUILD_IN_CMDS_ENABLED  - CLI built-in commands.\n\n \n\n\n\n#ifndef NRF_CLI_BUILD_IN_CMDS_ENABLED\n\n#define NRF_CLI_BUILD_IN_CMDS_ENABLED 1\n\n#endif\n\n\n\n// <o> NRF_CLI_CMD_BUFF_SIZE - Maximum buffer size for a single command. \n\n#ifndef NRF_CLI_CMD_BUFF_SIZE\n\n#define NRF_CLI_CMD_BUFF_SIZE 128\n\n#endif\n\n\n\n// <q> NRF_CLI_ECHO_STATUS  - CLI echo status. If set, echo is ON.\n\n \n\n\n\n#ifndef NRF_CLI_ECHO_STATUS\n\n#define NRF_CLI_ECHO_STATUS 1\n\n#endif\n\n\n\n// <q> NRF_CLI_WILDCARD_ENABLED  - Enable wildcard functionality for CLI commands.\n\n \n\n\n\n#ifndef NRF_CLI_WILDCARD_ENABLED\n\n#define NRF_CLI_WILDCARD_ENABLED 0\n\n#endif\n\n\n\n// <q> NRF_CLI_METAKEYS_ENABLED  - Enable additional control keys for CLI commands like ctrl+a, ctrl+e, ctrl+w, ctrl+u\n\n \n\n\n\n#ifndef NRF_CLI_METAKEYS_ENABLED\n\n#define NRF_CLI_METAKEYS_ENABLED 0\n\n#endif\n\n\n\n// <o> NRF_CLI_PRINTF_BUFF_SIZE - Maximum print buffer size. \n\n#ifndef NRF_CLI_PRINTF_BUFF_SIZE\n\n#define NRF_CLI_PRINTF_BUFF_SIZE 23\n\n#endif\n\n\n\n// <e> NRF_CLI_HISTORY_ENABLED - Enable CLI history mode.\n\n//==========================================================\n\n#ifndef NRF_CLI_HISTORY_ENABLED\n\n#define NRF_CLI_HISTORY_ENABLED 1\n\n#endif\n\n// <o> NRF_CLI_HISTORY_ELEMENT_SIZE - Size of one memory object reserved for CLI history. \n\n#ifndef NRF_CLI_HISTORY_ELEMENT_SIZE\n\n#define NRF_CLI_HISTORY_ELEMENT_SIZE 32\n\n#endif\n\n\n\n// <o> NRF_CLI_HISTORY_ELEMENT_COUNT - Number of history memory objects. \n\n#ifndef NRF_CLI_HISTORY_ELEMENT_COUNT\n\n#define NRF_CLI_HISTORY_ELEMENT_COUNT 8\n\n#endif\n\n\n\n// </e>\n\n\n\n// <q> NRF_CLI_VT100_COLORS_ENABLED  - CLI VT100 colors.\n\n \n\n\n\n#ifndef NRF_CLI_VT100_COLORS_ENABLED\n\n#define NRF_CLI_VT100_COLORS_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CLI_STATISTICS_ENABLED  - Enable CLI statistics.\n\n \n\n\n\n#ifndef NRF_CLI_STATISTICS_ENABLED\n\n#define NRF_CLI_STATISTICS_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_CLI_LOG_BACKEND  - Enable logger backend interface.\n\n \n\n\n\n#ifndef NRF_CLI_LOG_BACKEND\n\n#define NRF_CLI_LOG_BACKEND 1\n\n#endif\n\n\n\n// <q> NRF_CLI_USES_TASK_MANAGER_ENABLED  - Enable CLI to use task_manager\n\n \n\n\n\n#ifndef NRF_CLI_USES_TASK_MANAGER_ENABLED\n\n#define NRF_CLI_USES_TASK_MANAGER_ENABLED 0\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> nrf_fprintf - fprintf function.\n\n\n\n//==========================================================\n\n// <q> NRF_FPRINTF_ENABLED  - Enable/disable fprintf module.\n\n \n\n\n\n#ifndef NRF_FPRINTF_ENABLED\n\n#define NRF_FPRINTF_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_FPRINTF_FLAG_AUTOMATIC_CR_ON_LF_ENABLED  - For each printed LF, function will add CR.\n\n \n\n\n\n#ifndef NRF_FPRINTF_FLAG_AUTOMATIC_CR_ON_LF_ENABLED\n\n#define NRF_FPRINTF_FLAG_AUTOMATIC_CR_ON_LF_ENABLED 1\n\n#endif\n\n\n\n// <q> NRF_FPRINTF_DOUBLE_ENABLED  - Enable IEEE-754 double precision formatting.\n\n \n\n\n\n#ifndef NRF_FPRINTF_DOUBLE_ENABLED\n\n#define NRF_FPRINTF_DOUBLE_ENABLED 0\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> nRF_Log \n\n\n\n//==========================================================\n\n// <e> NRF_LOG_BACKEND_RTT_ENABLED - nrf_log_backend_rtt - Log RTT backend\n\n//==========================================================\n\n#ifndef NRF_LOG_BACKEND_RTT_ENABLED\n\n#define NRF_LOG_BACKEND_RTT_ENABLED 1\n\n#endif\n\n// <o> NRF_LOG_BACKEND_RTT_TEMP_BUFFER_SIZE - Size of buffer for partially processed strings. \n\n// <i> Size of the buffer is a trade-off between RAM usage and processing.\n\n// <i> if buffer is smaller then strings will often be fragmented.\n\n// <i> It is recommended to use size which will fit typical log and only the\n\n// <i> longer one will be fragmented.\n\n\n\n#ifndef NRF_LOG_BACKEND_RTT_TEMP_BUFFER_SIZE\n\n#define NRF_LOG_BACKEND_RTT_TEMP_BUFFER_SIZE 64\n\n#endif\n\n\n\n// <o> NRF_LOG_BACKEND_RTT_TX_RETRY_DELAY_MS - Period before retrying writing to RTT \n\n#ifndef NRF_LOG_BACKEND_RTT_TX_RETRY_DELAY_MS\n\n#define NRF_LOG_BACKEND_RTT_TX_RETRY_DELAY_MS 1\n\n#endif\n\n\n\n// <o> NRF_LOG_BACKEND_RTT_TX_RETRY_CNT - Writing to RTT retries. \n\n// <i> If RTT fails to accept any new data after retries\n\n// <i> module assumes that host is not active and on next\n\n// <i> request it will perform only one write attempt.\n\n// <i> On successful writing, module assumes that host is active\n\n// <i> and scheme with retry is applied again.\n\n\n\n#ifndef NRF_LOG_BACKEND_RTT_TX_RETRY_CNT\n\n#define NRF_LOG_BACKEND_RTT_TX_RETRY_CNT 3\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_LOG_ENABLED - nrf_log - Logger\n\n//==========================================================\n\n#ifndef NRF_LOG_ENABLED\n\n#define NRF_LOG_ENABLED 1\n\n#endif\n\n// <h> Log message pool - Configuration of log message pool\n\n\n\n//==========================================================\n\n// <o> NRF_LOG_MSGPOOL_ELEMENT_SIZE - Size of a single element in the pool of memory objects. \n\n// <i> If a small value is set, then performance of logs processing\n\n// <i> is degraded because data is fragmented. Bigger value impacts\n\n// <i> RAM memory utilization. The size is set to fit a message with\n\n// <i> a timestamp and up to 2 arguments in a single memory object.\n\n\n\n#ifndef NRF_LOG_MSGPOOL_ELEMENT_SIZE\n\n#define NRF_LOG_MSGPOOL_ELEMENT_SIZE 20\n\n#endif\n\n\n\n// <o> NRF_LOG_MSGPOOL_ELEMENT_COUNT - Number of elements in the pool of memory objects \n\n// <i> If a small value is set, then it may lead to a deadlock\n\n// <i> in certain cases if backend has high latency and holds\n\n// <i> multiple messages for long time. Bigger value impacts\n\n// <i> RAM memory usage.\n\n\n\n#ifndef NRF_LOG_MSGPOOL_ELEMENT_COUNT\n\n#define NRF_LOG_MSGPOOL_ELEMENT_COUNT 8\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <q> NRF_LOG_ALLOW_OVERFLOW  - Configures behavior when circular buffer is full.\n\n \n\n\n\n// <i> If set then oldest logs are overwritten. Otherwise a \n\n// <i> marker is injected informing about overflow.\n\n\n\n#ifndef NRF_LOG_ALLOW_OVERFLOW\n\n#define NRF_LOG_ALLOW_OVERFLOW 1\n\n#endif\n\n\n\n// <o> NRF_LOG_BUFSIZE  - Size of the buffer for storing logs (in bytes).\n\n \n\n\n\n// <i> Must be power of 2 and multiple of 4.\n\n// <i> If NRF_LOG_DEFERRED = 0 then buffer size can be reduced to minimum.\n\n// <128=> 128 \n\n// <256=> 256 \n\n// <512=> 512 \n\n// <1024=> 1024 \n\n// <2048=> 2048 \n\n// <4096=> 4096 \n\n// <8192=> 8192 \n\n// <16384=> 16384 \n\n\n\n#ifndef NRF_LOG_BUFSIZE\n\n#define NRF_LOG_BUFSIZE 1024\n\n#endif\n\n\n\n// <q> NRF_LOG_CLI_CMDS  - Enable CLI commands for the module.\n\n \n\n\n\n#ifndef NRF_LOG_CLI_CMDS\n\n#define NRF_LOG_CLI_CMDS 0\n\n#endif\n\n\n\n// <o> NRF_LOG_DEFAULT_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_LOG_DEFAULT_LEVEL\n\n#define NRF_LOG_DEFAULT_LEVEL 3\n\n#endif\n\n\n\n// <q> NRF_LOG_DEFERRED  - Enable deffered logger.\n\n \n\n\n\n// <i> Log data is buffered and can be processed in idle.\n\n\n\n#ifndef NRF_LOG_DEFERRED\n\n#define NRF_LOG_DEFERRED 1\n\n#endif\n\n\n\n// <q> NRF_LOG_FILTERS_ENABLED  - Enable dynamic filtering of logs.\n\n \n\n\n\n#ifndef NRF_LOG_FILTERS_ENABLED\n\n#define NRF_LOG_FILTERS_ENABLED 0\n\n#endif\n\n\n\n// <q> NRF_LOG_NON_DEFFERED_CRITICAL_REGION_ENABLED  - Enable use of critical region for non deffered mode when flushing logs.\n\n \n\n\n\n// <i> When enabled NRF_LOG_FLUSH is called from critical section when non deffered mode is used.\n\n// <i> Log output will never be corrupted as access to the log backend is exclusive\n\n// <i> but system will spend significant amount of time in critical section\n\n\n\n#ifndef NRF_LOG_NON_DEFFERED_CRITICAL_REGION_ENABLED\n\n#define NRF_LOG_NON_DEFFERED_CRITICAL_REGION_ENABLED 0\n\n#endif\n\n\n\n// <o> NRF_LOG_STR_PUSH_BUFFER_SIZE  - Size of the buffer dedicated for strings stored using @ref NRF_LOG_PUSH.\n\n \n\n// <16=> 16 \n\n// <32=> 32 \n\n// <64=> 64 \n\n// <128=> 128 \n\n// <256=> 256 \n\n// <512=> 512 \n\n// <1024=> 1024 \n\n\n\n#ifndef NRF_LOG_STR_PUSH_BUFFER_SIZE\n\n#define NRF_LOG_STR_PUSH_BUFFER_SIZE 128\n\n#endif\n\n\n\n// <o> NRF_LOG_STR_PUSH_BUFFER_SIZE  - Size of the buffer dedicated for strings stored using @ref NRF_LOG_PUSH.\n\n \n\n// <16=> 16 \n\n// <32=> 32 \n\n// <64=> 64 \n\n// <128=> 128 \n\n// <256=> 256 \n\n// <512=> 512 \n\n// <1024=> 1024 \n\n\n\n#ifndef NRF_LOG_STR_PUSH_BUFFER_SIZE\n\n#define NRF_LOG_STR_PUSH_BUFFER_SIZE 128\n\n#endif\n\n\n\n// <e> NRF_LOG_USES_COLORS - If enabled then ANSI escape code for colors is prefixed to every string\n\n//==========================================================\n\n#ifndef NRF_LOG_USES_COLORS\n\n#define NRF_LOG_USES_COLORS 0\n\n#endif\n\n// <o> NRF_LOG_COLOR_DEFAULT  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_LOG_COLOR_DEFAULT\n\n#define NRF_LOG_COLOR_DEFAULT 0\n\n#endif\n\n\n\n// <o> NRF_LOG_ERROR_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_LOG_ERROR_COLOR\n\n#define NRF_LOG_ERROR_COLOR 2\n\n#endif\n\n\n\n// <o> NRF_LOG_WARNING_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_LOG_WARNING_COLOR\n\n#define NRF_LOG_WARNING_COLOR 4\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_LOG_USES_TIMESTAMP - Enable timestamping\n\n\n\n// <i> Function for getting the timestamp is provided by the user\n\n//==========================================================\n\n#ifndef NRF_LOG_USES_TIMESTAMP\n\n#define NRF_LOG_USES_TIMESTAMP 0\n\n#endif\n\n// <o> NRF_LOG_TIMESTAMP_DEFAULT_FREQUENCY - Default frequency of the timestamp (in Hz) or 0 to use app_timer frequency. \n\n#ifndef NRF_LOG_TIMESTAMP_DEFAULT_FREQUENCY\n\n#define NRF_LOG_TIMESTAMP_DEFAULT_FREQUENCY 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <h> nrf_log module configuration \n\n\n\n//==========================================================\n\n// <h> nrf_log in nRF_Core \n\n\n\n//==========================================================\n\n// <e> NRF_MPU_LIB_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRF_MPU_LIB_CONFIG_LOG_ENABLED\n\n#define NRF_MPU_LIB_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRF_MPU_LIB_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_MPU_LIB_CONFIG_LOG_LEVEL\n\n#define NRF_MPU_LIB_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_MPU_LIB_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_MPU_LIB_CONFIG_INFO_COLOR\n\n#define NRF_MPU_LIB_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRF_MPU_LIB_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_MPU_LIB_CONFIG_DEBUG_COLOR\n\n#define NRF_MPU_LIB_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_STACK_GUARD_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRF_STACK_GUARD_CONFIG_LOG_ENABLED\n\n#define NRF_STACK_GUARD_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRF_STACK_GUARD_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_STACK_GUARD_CONFIG_LOG_LEVEL\n\n#define NRF_STACK_GUARD_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_STACK_GUARD_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_STACK_GUARD_CONFIG_INFO_COLOR\n\n#define NRF_STACK_GUARD_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRF_STACK_GUARD_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_STACK_GUARD_CONFIG_DEBUG_COLOR\n\n#define NRF_STACK_GUARD_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> TASK_MANAGER_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef TASK_MANAGER_CONFIG_LOG_ENABLED\n\n#define TASK_MANAGER_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> TASK_MANAGER_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef TASK_MANAGER_CONFIG_LOG_LEVEL\n\n#define TASK_MANAGER_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> TASK_MANAGER_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef TASK_MANAGER_CONFIG_INFO_COLOR\n\n#define TASK_MANAGER_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> TASK_MANAGER_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef TASK_MANAGER_CONFIG_DEBUG_COLOR\n\n#define TASK_MANAGER_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> nrf_log in nRF_Drivers \n\n\n\n//==========================================================\n\n// <e> CLOCK_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef CLOCK_CONFIG_LOG_ENABLED\n\n#define CLOCK_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> CLOCK_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef CLOCK_CONFIG_LOG_LEVEL\n\n#define CLOCK_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> CLOCK_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef CLOCK_CONFIG_INFO_COLOR\n\n#define CLOCK_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> CLOCK_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef CLOCK_CONFIG_DEBUG_COLOR\n\n#define CLOCK_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> COMP_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef COMP_CONFIG_LOG_ENABLED\n\n#define COMP_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> COMP_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef COMP_CONFIG_LOG_LEVEL\n\n#define COMP_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> COMP_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef COMP_CONFIG_INFO_COLOR\n\n#define COMP_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> COMP_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef COMP_CONFIG_DEBUG_COLOR\n\n#define COMP_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> GPIOTE_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef GPIOTE_CONFIG_LOG_ENABLED\n\n#define GPIOTE_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> GPIOTE_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef GPIOTE_CONFIG_LOG_LEVEL\n\n#define GPIOTE_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> GPIOTE_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef GPIOTE_CONFIG_INFO_COLOR\n\n#define GPIOTE_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> GPIOTE_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef GPIOTE_CONFIG_DEBUG_COLOR\n\n#define GPIOTE_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> LPCOMP_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef LPCOMP_CONFIG_LOG_ENABLED\n\n#define LPCOMP_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> LPCOMP_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef LPCOMP_CONFIG_LOG_LEVEL\n\n#define LPCOMP_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> LPCOMP_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef LPCOMP_CONFIG_INFO_COLOR\n\n#define LPCOMP_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> LPCOMP_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef LPCOMP_CONFIG_DEBUG_COLOR\n\n#define LPCOMP_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> MAX3421E_HOST_CONFIG_LOG_ENABLED - Enable logging in the module\n\n//==========================================================\n\n#ifndef MAX3421E_HOST_CONFIG_LOG_ENABLED\n\n#define MAX3421E_HOST_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> MAX3421E_HOST_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef MAX3421E_HOST_CONFIG_LOG_LEVEL\n\n#define MAX3421E_HOST_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> MAX3421E_HOST_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef MAX3421E_HOST_CONFIG_INFO_COLOR\n\n#define MAX3421E_HOST_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> MAX3421E_HOST_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef MAX3421E_HOST_CONFIG_DEBUG_COLOR\n\n#define MAX3421E_HOST_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRFX_USBD_CONFIG_LOG_ENABLED - Enable logging in the module\n\n//==========================================================\n\n#ifndef NRFX_USBD_CONFIG_LOG_ENABLED\n\n#define NRFX_USBD_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRFX_USBD_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRFX_USBD_CONFIG_LOG_LEVEL\n\n#define NRFX_USBD_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRFX_USBD_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_USBD_CONFIG_INFO_COLOR\n\n#define NRFX_USBD_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRFX_USBD_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRFX_USBD_CONFIG_DEBUG_COLOR\n\n#define NRFX_USBD_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> PDM_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef PDM_CONFIG_LOG_ENABLED\n\n#define PDM_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> PDM_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef PDM_CONFIG_LOG_LEVEL\n\n#define PDM_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> PDM_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef PDM_CONFIG_INFO_COLOR\n\n#define PDM_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> PDM_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef PDM_CONFIG_DEBUG_COLOR\n\n#define PDM_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> PPI_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef PPI_CONFIG_LOG_ENABLED\n\n#define PPI_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> PPI_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef PPI_CONFIG_LOG_LEVEL\n\n#define PPI_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> PPI_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef PPI_CONFIG_INFO_COLOR\n\n#define PPI_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> PPI_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef PPI_CONFIG_DEBUG_COLOR\n\n#define PPI_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> PWM_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef PWM_CONFIG_LOG_ENABLED\n\n#define PWM_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> PWM_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef PWM_CONFIG_LOG_LEVEL\n\n#define PWM_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> PWM_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef PWM_CONFIG_INFO_COLOR\n\n#define PWM_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> PWM_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef PWM_CONFIG_DEBUG_COLOR\n\n#define PWM_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> QDEC_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef QDEC_CONFIG_LOG_ENABLED\n\n#define QDEC_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> QDEC_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef QDEC_CONFIG_LOG_LEVEL\n\n#define QDEC_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> QDEC_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef QDEC_CONFIG_INFO_COLOR\n\n#define QDEC_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> QDEC_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef QDEC_CONFIG_DEBUG_COLOR\n\n#define QDEC_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> RNG_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef RNG_CONFIG_LOG_ENABLED\n\n#define RNG_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> RNG_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef RNG_CONFIG_LOG_LEVEL\n\n#define RNG_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> RNG_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef RNG_CONFIG_INFO_COLOR\n\n#define RNG_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> RNG_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef RNG_CONFIG_DEBUG_COLOR\n\n#define RNG_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// <q> RNG_CONFIG_RANDOM_NUMBER_LOG_ENABLED  - Enables logging of random numbers.\n\n \n\n\n\n#ifndef RNG_CONFIG_RANDOM_NUMBER_LOG_ENABLED\n\n#define RNG_CONFIG_RANDOM_NUMBER_LOG_ENABLED 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> RTC_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef RTC_CONFIG_LOG_ENABLED\n\n#define RTC_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> RTC_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef RTC_CONFIG_LOG_LEVEL\n\n#define RTC_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> RTC_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef RTC_CONFIG_INFO_COLOR\n\n#define RTC_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> RTC_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef RTC_CONFIG_DEBUG_COLOR\n\n#define RTC_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> SAADC_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef SAADC_CONFIG_LOG_ENABLED\n\n#define SAADC_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> SAADC_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef SAADC_CONFIG_LOG_LEVEL\n\n#define SAADC_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> SAADC_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef SAADC_CONFIG_INFO_COLOR\n\n#define SAADC_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> SAADC_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef SAADC_CONFIG_DEBUG_COLOR\n\n#define SAADC_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> SPIS_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef SPIS_CONFIG_LOG_ENABLED\n\n#define SPIS_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> SPIS_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef SPIS_CONFIG_LOG_LEVEL\n\n#define SPIS_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> SPIS_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef SPIS_CONFIG_INFO_COLOR\n\n#define SPIS_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> SPIS_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef SPIS_CONFIG_DEBUG_COLOR\n\n#define SPIS_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> SPI_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef SPI_CONFIG_LOG_ENABLED\n\n#define SPI_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> SPI_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef SPI_CONFIG_LOG_LEVEL\n\n#define SPI_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> SPI_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef SPI_CONFIG_INFO_COLOR\n\n#define SPI_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> SPI_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef SPI_CONFIG_DEBUG_COLOR\n\n#define SPI_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> TIMER_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef TIMER_CONFIG_LOG_ENABLED\n\n#define TIMER_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> TIMER_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef TIMER_CONFIG_LOG_LEVEL\n\n#define TIMER_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> TIMER_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef TIMER_CONFIG_INFO_COLOR\n\n#define TIMER_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> TIMER_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef TIMER_CONFIG_DEBUG_COLOR\n\n#define TIMER_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> TWIS_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef TWIS_CONFIG_LOG_ENABLED\n\n#define TWIS_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> TWIS_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef TWIS_CONFIG_LOG_LEVEL\n\n#define TWIS_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> TWIS_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef TWIS_CONFIG_INFO_COLOR\n\n#define TWIS_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> TWIS_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef TWIS_CONFIG_DEBUG_COLOR\n\n#define TWIS_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> TWI_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef TWI_CONFIG_LOG_ENABLED\n\n#define TWI_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> TWI_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef TWI_CONFIG_LOG_LEVEL\n\n#define TWI_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> TWI_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef TWI_CONFIG_INFO_COLOR\n\n#define TWI_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> TWI_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef TWI_CONFIG_DEBUG_COLOR\n\n#define TWI_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> UART_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef UART_CONFIG_LOG_ENABLED\n\n#define UART_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> UART_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef UART_CONFIG_LOG_LEVEL\n\n#define UART_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> UART_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef UART_CONFIG_INFO_COLOR\n\n#define UART_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> UART_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef UART_CONFIG_DEBUG_COLOR\n\n#define UART_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> USBD_CONFIG_LOG_ENABLED - Enable logging in the module\n\n//==========================================================\n\n#ifndef USBD_CONFIG_LOG_ENABLED\n\n#define USBD_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> USBD_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef USBD_CONFIG_LOG_LEVEL\n\n#define USBD_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> USBD_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef USBD_CONFIG_INFO_COLOR\n\n#define USBD_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> USBD_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef USBD_CONFIG_DEBUG_COLOR\n\n#define USBD_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> WDT_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef WDT_CONFIG_LOG_ENABLED\n\n#define WDT_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> WDT_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef WDT_CONFIG_LOG_LEVEL\n\n#define WDT_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> WDT_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef WDT_CONFIG_INFO_COLOR\n\n#define WDT_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> WDT_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef WDT_CONFIG_DEBUG_COLOR\n\n#define WDT_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> nrf_log in nRF_Libraries \n\n\n\n//==========================================================\n\n// <e> APP_BUTTON_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef APP_BUTTON_CONFIG_LOG_ENABLED\n\n#define APP_BUTTON_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> APP_BUTTON_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef APP_BUTTON_CONFIG_LOG_LEVEL\n\n#define APP_BUTTON_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> APP_BUTTON_CONFIG_INITIAL_LOG_LEVEL  - Initial severity level if dynamic filtering is enabled.\n\n \n\n\n\n// <i> If module generates a lot of logs, initial log level can\n\n// <i> be decreased to prevent flooding. Severity level can be\n\n// <i> increased on instance basis.\n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef APP_BUTTON_CONFIG_INITIAL_LOG_LEVEL\n\n#define APP_BUTTON_CONFIG_INITIAL_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> APP_BUTTON_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef APP_BUTTON_CONFIG_INFO_COLOR\n\n#define APP_BUTTON_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> APP_BUTTON_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef APP_BUTTON_CONFIG_DEBUG_COLOR\n\n#define APP_BUTTON_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> APP_TIMER_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef APP_TIMER_CONFIG_LOG_ENABLED\n\n#define APP_TIMER_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> APP_TIMER_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef APP_TIMER_CONFIG_LOG_LEVEL\n\n#define APP_TIMER_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> APP_TIMER_CONFIG_INITIAL_LOG_LEVEL  - Initial severity level if dynamic filtering is enabled.\n\n \n\n\n\n// <i> If module generates a lot of logs, initial log level can\n\n// <i> be decreased to prevent flooding. Severity level can be\n\n// <i> increased on instance basis.\n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef APP_TIMER_CONFIG_INITIAL_LOG_LEVEL\n\n#define APP_TIMER_CONFIG_INITIAL_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> APP_TIMER_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef APP_TIMER_CONFIG_INFO_COLOR\n\n#define APP_TIMER_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> APP_TIMER_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef APP_TIMER_CONFIG_DEBUG_COLOR\n\n#define APP_TIMER_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> APP_USBD_CDC_ACM_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef APP_USBD_CDC_ACM_CONFIG_LOG_ENABLED\n\n#define APP_USBD_CDC_ACM_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> APP_USBD_CDC_ACM_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef APP_USBD_CDC_ACM_CONFIG_LOG_LEVEL\n\n#define APP_USBD_CDC_ACM_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> APP_USBD_CDC_ACM_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef APP_USBD_CDC_ACM_CONFIG_INFO_COLOR\n\n#define APP_USBD_CDC_ACM_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> APP_USBD_CDC_ACM_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef APP_USBD_CDC_ACM_CONFIG_DEBUG_COLOR\n\n#define APP_USBD_CDC_ACM_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> APP_USBD_CONFIG_LOG_ENABLED - Enable logging in the module.\n\n//==========================================================\n\n#ifndef APP_USBD_CONFIG_LOG_ENABLED\n\n#define APP_USBD_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> APP_USBD_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef APP_USBD_CONFIG_LOG_LEVEL\n\n#define APP_USBD_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> APP_USBD_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef APP_USBD_CONFIG_INFO_COLOR\n\n#define APP_USBD_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> APP_USBD_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef APP_USBD_CONFIG_DEBUG_COLOR\n\n#define APP_USBD_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> APP_USBD_DUMMY_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef APP_USBD_DUMMY_CONFIG_LOG_ENABLED\n\n#define APP_USBD_DUMMY_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> APP_USBD_DUMMY_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef APP_USBD_DUMMY_CONFIG_LOG_LEVEL\n\n#define APP_USBD_DUMMY_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> APP_USBD_DUMMY_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef APP_USBD_DUMMY_CONFIG_INFO_COLOR\n\n#define APP_USBD_DUMMY_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> APP_USBD_DUMMY_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef APP_USBD_DUMMY_CONFIG_DEBUG_COLOR\n\n#define APP_USBD_DUMMY_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> APP_USBD_MSC_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef APP_USBD_MSC_CONFIG_LOG_ENABLED\n\n#define APP_USBD_MSC_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> APP_USBD_MSC_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef APP_USBD_MSC_CONFIG_LOG_LEVEL\n\n#define APP_USBD_MSC_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> APP_USBD_MSC_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef APP_USBD_MSC_CONFIG_INFO_COLOR\n\n#define APP_USBD_MSC_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> APP_USBD_MSC_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef APP_USBD_MSC_CONFIG_DEBUG_COLOR\n\n#define APP_USBD_MSC_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> APP_USBD_NRF_DFU_TRIGGER_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef APP_USBD_NRF_DFU_TRIGGER_CONFIG_LOG_ENABLED\n\n#define APP_USBD_NRF_DFU_TRIGGER_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> APP_USBD_NRF_DFU_TRIGGER_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef APP_USBD_NRF_DFU_TRIGGER_CONFIG_LOG_LEVEL\n\n#define APP_USBD_NRF_DFU_TRIGGER_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> APP_USBD_NRF_DFU_TRIGGER_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef APP_USBD_NRF_DFU_TRIGGER_CONFIG_INFO_COLOR\n\n#define APP_USBD_NRF_DFU_TRIGGER_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> APP_USBD_NRF_DFU_TRIGGER_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef APP_USBD_NRF_DFU_TRIGGER_CONFIG_DEBUG_COLOR\n\n#define APP_USBD_NRF_DFU_TRIGGER_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_ATFIFO_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRF_ATFIFO_CONFIG_LOG_ENABLED\n\n#define NRF_ATFIFO_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRF_ATFIFO_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_ATFIFO_CONFIG_LOG_LEVEL\n\n#define NRF_ATFIFO_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_ATFIFO_CONFIG_LOG_INIT_FILTER_LEVEL  - Initial severity level if dynamic filtering is enabled\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_ATFIFO_CONFIG_LOG_INIT_FILTER_LEVEL\n\n#define NRF_ATFIFO_CONFIG_LOG_INIT_FILTER_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_ATFIFO_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_ATFIFO_CONFIG_INFO_COLOR\n\n#define NRF_ATFIFO_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRF_ATFIFO_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_ATFIFO_CONFIG_DEBUG_COLOR\n\n#define NRF_ATFIFO_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_BALLOC_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRF_BALLOC_CONFIG_LOG_ENABLED\n\n#define NRF_BALLOC_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRF_BALLOC_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_BALLOC_CONFIG_LOG_LEVEL\n\n#define NRF_BALLOC_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_BALLOC_CONFIG_INITIAL_LOG_LEVEL  - Initial severity level if dynamic filtering is enabled.\n\n \n\n\n\n// <i> If module generates a lot of logs, initial log level can\n\n// <i> be decreased to prevent flooding. Severity level can be\n\n// <i> increased on instance basis.\n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_BALLOC_CONFIG_INITIAL_LOG_LEVEL\n\n#define NRF_BALLOC_CONFIG_INITIAL_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_BALLOC_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_BALLOC_CONFIG_INFO_COLOR\n\n#define NRF_BALLOC_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRF_BALLOC_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_BALLOC_CONFIG_DEBUG_COLOR\n\n#define NRF_BALLOC_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_BLOCK_DEV_EMPTY_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRF_BLOCK_DEV_EMPTY_CONFIG_LOG_ENABLED\n\n#define NRF_BLOCK_DEV_EMPTY_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRF_BLOCK_DEV_EMPTY_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_BLOCK_DEV_EMPTY_CONFIG_LOG_LEVEL\n\n#define NRF_BLOCK_DEV_EMPTY_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_BLOCK_DEV_EMPTY_CONFIG_LOG_INIT_FILTER_LEVEL  - Initial severity level if dynamic filtering is enabled\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_BLOCK_DEV_EMPTY_CONFIG_LOG_INIT_FILTER_LEVEL\n\n#define NRF_BLOCK_DEV_EMPTY_CONFIG_LOG_INIT_FILTER_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_BLOCK_DEV_EMPTY_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_BLOCK_DEV_EMPTY_CONFIG_INFO_COLOR\n\n#define NRF_BLOCK_DEV_EMPTY_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRF_BLOCK_DEV_EMPTY_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_BLOCK_DEV_EMPTY_CONFIG_DEBUG_COLOR\n\n#define NRF_BLOCK_DEV_EMPTY_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_BLOCK_DEV_QSPI_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRF_BLOCK_DEV_QSPI_CONFIG_LOG_ENABLED\n\n#define NRF_BLOCK_DEV_QSPI_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRF_BLOCK_DEV_QSPI_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_BLOCK_DEV_QSPI_CONFIG_LOG_LEVEL\n\n#define NRF_BLOCK_DEV_QSPI_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_BLOCK_DEV_QSPI_CONFIG_LOG_INIT_FILTER_LEVEL  - Initial severity level if dynamic filtering is enabled\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_BLOCK_DEV_QSPI_CONFIG_LOG_INIT_FILTER_LEVEL\n\n#define NRF_BLOCK_DEV_QSPI_CONFIG_LOG_INIT_FILTER_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_BLOCK_DEV_QSPI_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_BLOCK_DEV_QSPI_CONFIG_INFO_COLOR\n\n#define NRF_BLOCK_DEV_QSPI_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRF_BLOCK_DEV_QSPI_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_BLOCK_DEV_QSPI_CONFIG_DEBUG_COLOR\n\n#define NRF_BLOCK_DEV_QSPI_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_BLOCK_DEV_RAM_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRF_BLOCK_DEV_RAM_CONFIG_LOG_ENABLED\n\n#define NRF_BLOCK_DEV_RAM_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRF_BLOCK_DEV_RAM_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_BLOCK_DEV_RAM_CONFIG_LOG_LEVEL\n\n#define NRF_BLOCK_DEV_RAM_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_BLOCK_DEV_RAM_CONFIG_LOG_INIT_FILTER_LEVEL  - Initial severity level if dynamic filtering is enabled\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_BLOCK_DEV_RAM_CONFIG_LOG_INIT_FILTER_LEVEL\n\n#define NRF_BLOCK_DEV_RAM_CONFIG_LOG_INIT_FILTER_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_BLOCK_DEV_RAM_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_BLOCK_DEV_RAM_CONFIG_INFO_COLOR\n\n#define NRF_BLOCK_DEV_RAM_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRF_BLOCK_DEV_RAM_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_BLOCK_DEV_RAM_CONFIG_DEBUG_COLOR\n\n#define NRF_BLOCK_DEV_RAM_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_CLI_BLE_UART_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRF_CLI_BLE_UART_CONFIG_LOG_ENABLED\n\n#define NRF_CLI_BLE_UART_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRF_CLI_BLE_UART_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_CLI_BLE_UART_CONFIG_LOG_LEVEL\n\n#define NRF_CLI_BLE_UART_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_CLI_BLE_UART_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_CLI_BLE_UART_CONFIG_INFO_COLOR\n\n#define NRF_CLI_BLE_UART_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRF_CLI_BLE_UART_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_CLI_BLE_UART_CONFIG_DEBUG_COLOR\n\n#define NRF_CLI_BLE_UART_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_CLI_LIBUARTE_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRF_CLI_LIBUARTE_CONFIG_LOG_ENABLED\n\n#define NRF_CLI_LIBUARTE_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRF_CLI_LIBUARTE_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_CLI_LIBUARTE_CONFIG_LOG_LEVEL\n\n#define NRF_CLI_LIBUARTE_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_CLI_LIBUARTE_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_CLI_LIBUARTE_CONFIG_INFO_COLOR\n\n#define NRF_CLI_LIBUARTE_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRF_CLI_LIBUARTE_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_CLI_LIBUARTE_CONFIG_DEBUG_COLOR\n\n#define NRF_CLI_LIBUARTE_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_CLI_UART_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRF_CLI_UART_CONFIG_LOG_ENABLED\n\n#define NRF_CLI_UART_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRF_CLI_UART_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_CLI_UART_CONFIG_LOG_LEVEL\n\n#define NRF_CLI_UART_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_CLI_UART_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_CLI_UART_CONFIG_INFO_COLOR\n\n#define NRF_CLI_UART_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRF_CLI_UART_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_CLI_UART_CONFIG_DEBUG_COLOR\n\n#define NRF_CLI_UART_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_LIBUARTE_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRF_LIBUARTE_CONFIG_LOG_ENABLED\n\n#define NRF_LIBUARTE_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRF_LIBUARTE_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_LIBUARTE_CONFIG_LOG_LEVEL\n\n#define NRF_LIBUARTE_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_LIBUARTE_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_LIBUARTE_CONFIG_INFO_COLOR\n\n#define NRF_LIBUARTE_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRF_LIBUARTE_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_LIBUARTE_CONFIG_DEBUG_COLOR\n\n#define NRF_LIBUARTE_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_MEMOBJ_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRF_MEMOBJ_CONFIG_LOG_ENABLED\n\n#define NRF_MEMOBJ_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRF_MEMOBJ_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_MEMOBJ_CONFIG_LOG_LEVEL\n\n#define NRF_MEMOBJ_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_MEMOBJ_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_MEMOBJ_CONFIG_INFO_COLOR\n\n#define NRF_MEMOBJ_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRF_MEMOBJ_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_MEMOBJ_CONFIG_DEBUG_COLOR\n\n#define NRF_MEMOBJ_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_PWR_MGMT_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRF_PWR_MGMT_CONFIG_LOG_ENABLED\n\n#define NRF_PWR_MGMT_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRF_PWR_MGMT_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_PWR_MGMT_CONFIG_LOG_LEVEL\n\n#define NRF_PWR_MGMT_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_PWR_MGMT_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_PWR_MGMT_CONFIG_INFO_COLOR\n\n#define NRF_PWR_MGMT_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRF_PWR_MGMT_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_PWR_MGMT_CONFIG_DEBUG_COLOR\n\n#define NRF_PWR_MGMT_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_QUEUE_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRF_QUEUE_CONFIG_LOG_ENABLED\n\n#define NRF_QUEUE_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRF_QUEUE_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_QUEUE_CONFIG_LOG_LEVEL\n\n#define NRF_QUEUE_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_QUEUE_CONFIG_LOG_INIT_FILTER_LEVEL  - Initial severity level if dynamic filtering is enabled\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_QUEUE_CONFIG_LOG_INIT_FILTER_LEVEL\n\n#define NRF_QUEUE_CONFIG_LOG_INIT_FILTER_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_QUEUE_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_QUEUE_CONFIG_INFO_COLOR\n\n#define NRF_QUEUE_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRF_QUEUE_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_QUEUE_CONFIG_DEBUG_COLOR\n\n#define NRF_QUEUE_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_SDH_ANT_LOG_ENABLED - Enable logging in SoftDevice handler (ANT) module.\n\n//==========================================================\n\n#ifndef NRF_SDH_ANT_LOG_ENABLED\n\n#define NRF_SDH_ANT_LOG_ENABLED 0\n\n#endif\n\n// <o> NRF_SDH_ANT_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_SDH_ANT_LOG_LEVEL\n\n#define NRF_SDH_ANT_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_SDH_ANT_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_SDH_ANT_INFO_COLOR\n\n#define NRF_SDH_ANT_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRF_SDH_ANT_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_SDH_ANT_DEBUG_COLOR\n\n#define NRF_SDH_ANT_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_SDH_BLE_LOG_ENABLED - Enable logging in SoftDevice handler (BLE) module.\n\n//==========================================================\n\n#ifndef NRF_SDH_BLE_LOG_ENABLED\n\n#define NRF_SDH_BLE_LOG_ENABLED 1\n\n#endif\n\n// <o> NRF_SDH_BLE_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_SDH_BLE_LOG_LEVEL\n\n#define NRF_SDH_BLE_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_SDH_BLE_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_SDH_BLE_INFO_COLOR\n\n#define NRF_SDH_BLE_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRF_SDH_BLE_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_SDH_BLE_DEBUG_COLOR\n\n#define NRF_SDH_BLE_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_SDH_LOG_ENABLED - Enable logging in SoftDevice handler module.\n\n//==========================================================\n\n#ifndef NRF_SDH_LOG_ENABLED\n\n#define NRF_SDH_LOG_ENABLED 1\n\n#endif\n\n// <o> NRF_SDH_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_SDH_LOG_LEVEL\n\n#define NRF_SDH_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_SDH_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_SDH_INFO_COLOR\n\n#define NRF_SDH_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRF_SDH_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_SDH_DEBUG_COLOR\n\n#define NRF_SDH_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_SDH_SOC_LOG_ENABLED - Enable logging in SoftDevice handler (SoC) module.\n\n//==========================================================\n\n#ifndef NRF_SDH_SOC_LOG_ENABLED\n\n#define NRF_SDH_SOC_LOG_ENABLED 1\n\n#endif\n\n// <o> NRF_SDH_SOC_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_SDH_SOC_LOG_LEVEL\n\n#define NRF_SDH_SOC_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_SDH_SOC_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_SDH_SOC_INFO_COLOR\n\n#define NRF_SDH_SOC_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRF_SDH_SOC_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_SDH_SOC_DEBUG_COLOR\n\n#define NRF_SDH_SOC_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_SORTLIST_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRF_SORTLIST_CONFIG_LOG_ENABLED\n\n#define NRF_SORTLIST_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRF_SORTLIST_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_SORTLIST_CONFIG_LOG_LEVEL\n\n#define NRF_SORTLIST_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_SORTLIST_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_SORTLIST_CONFIG_INFO_COLOR\n\n#define NRF_SORTLIST_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRF_SORTLIST_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_SORTLIST_CONFIG_DEBUG_COLOR\n\n#define NRF_SORTLIST_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NRF_TWI_SENSOR_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NRF_TWI_SENSOR_CONFIG_LOG_ENABLED\n\n#define NRF_TWI_SENSOR_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> NRF_TWI_SENSOR_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NRF_TWI_SENSOR_CONFIG_LOG_LEVEL\n\n#define NRF_TWI_SENSOR_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NRF_TWI_SENSOR_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_TWI_SENSOR_CONFIG_INFO_COLOR\n\n#define NRF_TWI_SENSOR_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NRF_TWI_SENSOR_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NRF_TWI_SENSOR_CONFIG_DEBUG_COLOR\n\n#define NRF_TWI_SENSOR_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> PM_LOG_ENABLED - Enable logging in Peer Manager and its submodules.\n\n//==========================================================\n\n#ifndef PM_LOG_ENABLED\n\n#define PM_LOG_ENABLED 1\n\n#endif\n\n// <o> PM_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef PM_LOG_LEVEL\n\n#define PM_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> PM_LOG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef PM_LOG_INFO_COLOR\n\n#define PM_LOG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> PM_LOG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef PM_LOG_DEBUG_COLOR\n\n#define PM_LOG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> nrf_log in nRF_Serialization \n\n\n\n//==========================================================\n\n// <e> SER_HAL_TRANSPORT_CONFIG_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef SER_HAL_TRANSPORT_CONFIG_LOG_ENABLED\n\n#define SER_HAL_TRANSPORT_CONFIG_LOG_ENABLED 0\n\n#endif\n\n// <o> SER_HAL_TRANSPORT_CONFIG_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef SER_HAL_TRANSPORT_CONFIG_LOG_LEVEL\n\n#define SER_HAL_TRANSPORT_CONFIG_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> SER_HAL_TRANSPORT_CONFIG_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef SER_HAL_TRANSPORT_CONFIG_INFO_COLOR\n\n#define SER_HAL_TRANSPORT_CONFIG_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> SER_HAL_TRANSPORT_CONFIG_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef SER_HAL_TRANSPORT_CONFIG_DEBUG_COLOR\n\n#define SER_HAL_TRANSPORT_CONFIG_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// </e>\n\n\n\n// <q> NRF_LOG_STR_FORMATTER_TIMESTAMP_FORMAT_ENABLED  - nrf_log_str_formatter - Log string formatter\n\n \n\n\n\n#ifndef NRF_LOG_STR_FORMATTER_TIMESTAMP_FORMAT_ENABLED\n\n#define NRF_LOG_STR_FORMATTER_TIMESTAMP_FORMAT_ENABLED 1\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> nRF_NFC \n\n\n\n//==========================================================\n\n// <q> NFC_AC_REC_ENABLED  - nfc_ac_rec - NFC NDEF Alternative Carrier record encoder\n\n \n\n\n\n#ifndef NFC_AC_REC_ENABLED\n\n#define NFC_AC_REC_ENABLED 0\n\n#endif\n\n\n\n// <q> NFC_AC_REC_PARSER_ENABLED  - nfc_ac_rec_parser - Alternative Carrier record parser\n\n \n\n\n\n#ifndef NFC_AC_REC_PARSER_ENABLED\n\n#define NFC_AC_REC_PARSER_ENABLED 0\n\n#endif\n\n\n\n// <e> NFC_BLE_OOB_ADVDATA_ENABLED - nfc_ble_oob_advdata - AD data for OOB pairing encoder\n\n//==========================================================\n\n#ifndef NFC_BLE_OOB_ADVDATA_ENABLED\n\n#define NFC_BLE_OOB_ADVDATA_ENABLED 0\n\n#endif\n\n// <o> ADVANCED_ADVDATA_SUPPORT  - Non-mandatory AD types for BLE OOB pairing are encoded inside the NDEF message (e.g. service UUIDs)\n\n \n\n// <1=> Enabled \n\n// <0=> Disabled \n\n\n\n#ifndef ADVANCED_ADVDATA_SUPPORT\n\n#define ADVANCED_ADVDATA_SUPPORT 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <q> NFC_BLE_OOB_ADVDATA_PARSER_ENABLED  - nfc_ble_oob_advdata_parser - BLE OOB pairing AD data parser\n\n \n\n\n\n#ifndef NFC_BLE_OOB_ADVDATA_PARSER_ENABLED\n\n#define NFC_BLE_OOB_ADVDATA_PARSER_ENABLED 0\n\n#endif\n\n\n\n// <e> NFC_BLE_PAIR_LIB_ENABLED - nfc_ble_pair_lib - Library parameters\n\n//==========================================================\n\n#ifndef NFC_BLE_PAIR_LIB_ENABLED\n\n#define NFC_BLE_PAIR_LIB_ENABLED 0\n\n#endif\n\n// <e> NFC_BLE_PAIR_LIB_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NFC_BLE_PAIR_LIB_LOG_ENABLED\n\n#define NFC_BLE_PAIR_LIB_LOG_ENABLED 0\n\n#endif\n\n// <o> NFC_BLE_PAIR_LIB_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NFC_BLE_PAIR_LIB_LOG_LEVEL\n\n#define NFC_BLE_PAIR_LIB_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NFC_BLE_PAIR_LIB_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NFC_BLE_PAIR_LIB_INFO_COLOR\n\n#define NFC_BLE_PAIR_LIB_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NFC_BLE_PAIR_LIB_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NFC_BLE_PAIR_LIB_DEBUG_COLOR\n\n#define NFC_BLE_PAIR_LIB_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <h> NFC_BLE_PAIR_LIB_SECURITY_PARAMETERS - Common Peer Manager security parameters.\n\n\n\n//==========================================================\n\n// <e> BLE_NFC_SEC_PARAM_BOND - Enables device bonding.\n\n\n\n// <i> If bonding is enabled at least one of the BLE_NFC_SEC_PARAM_KDIST options must be enabled.\n\n//==========================================================\n\n#ifndef BLE_NFC_SEC_PARAM_BOND\n\n#define BLE_NFC_SEC_PARAM_BOND 1\n\n#endif\n\n// <q> BLE_NFC_SEC_PARAM_KDIST_OWN_ENC  - Enables Long Term Key and Master Identification distribution by device.\n\n \n\n\n\n#ifndef BLE_NFC_SEC_PARAM_KDIST_OWN_ENC\n\n#define BLE_NFC_SEC_PARAM_KDIST_OWN_ENC 1\n\n#endif\n\n\n\n// <q> BLE_NFC_SEC_PARAM_KDIST_OWN_ID  - Enables Identity Resolving Key and Identity Address Information distribution by device.\n\n \n\n\n\n#ifndef BLE_NFC_SEC_PARAM_KDIST_OWN_ID\n\n#define BLE_NFC_SEC_PARAM_KDIST_OWN_ID 1\n\n#endif\n\n\n\n// <q> BLE_NFC_SEC_PARAM_KDIST_PEER_ENC  - Enables Long Term Key and Master Identification distribution by peer.\n\n \n\n\n\n#ifndef BLE_NFC_SEC_PARAM_KDIST_PEER_ENC\n\n#define BLE_NFC_SEC_PARAM_KDIST_PEER_ENC 1\n\n#endif\n\n\n\n// <q> BLE_NFC_SEC_PARAM_KDIST_PEER_ID  - Enables Identity Resolving Key and Identity Address Information distribution by peer.\n\n \n\n\n\n#ifndef BLE_NFC_SEC_PARAM_KDIST_PEER_ID\n\n#define BLE_NFC_SEC_PARAM_KDIST_PEER_ID 1\n\n#endif\n\n\n\n// </e>\n\n\n\n// <o> BLE_NFC_SEC_PARAM_MIN_KEY_SIZE  - Minimal size of a security key.\n\n \n\n// <7=> 7 \n\n// <8=> 8 \n\n// <9=> 9 \n\n// <10=> 10 \n\n// <11=> 11 \n\n// <12=> 12 \n\n// <13=> 13 \n\n// <14=> 14 \n\n// <15=> 15 \n\n// <16=> 16 \n\n\n\n#ifndef BLE_NFC_SEC_PARAM_MIN_KEY_SIZE\n\n#define BLE_NFC_SEC_PARAM_MIN_KEY_SIZE 7\n\n#endif\n\n\n\n// <o> BLE_NFC_SEC_PARAM_MAX_KEY_SIZE  - Maximal size of a security key.\n\n \n\n// <7=> 7 \n\n// <8=> 8 \n\n// <9=> 9 \n\n// <10=> 10 \n\n// <11=> 11 \n\n// <12=> 12 \n\n// <13=> 13 \n\n// <14=> 14 \n\n// <15=> 15 \n\n// <16=> 16 \n\n\n\n#ifndef BLE_NFC_SEC_PARAM_MAX_KEY_SIZE\n\n#define BLE_NFC_SEC_PARAM_MAX_KEY_SIZE 16\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// </e>\n\n\n\n// <q> NFC_BLE_PAIR_MSG_ENABLED  - nfc_ble_pair_msg - NDEF message for OOB pairing encoder\n\n \n\n\n\n#ifndef NFC_BLE_PAIR_MSG_ENABLED\n\n#define NFC_BLE_PAIR_MSG_ENABLED 0\n\n#endif\n\n\n\n// <q> NFC_CH_COMMON_ENABLED  - nfc_ble_pair_common - OOB pairing common data\n\n \n\n\n\n#ifndef NFC_CH_COMMON_ENABLED\n\n#define NFC_CH_COMMON_ENABLED 0\n\n#endif\n\n\n\n// <q> NFC_EP_OOB_REC_ENABLED  - nfc_ep_oob_rec - EP record for BLE pairing encoder\n\n \n\n\n\n#ifndef NFC_EP_OOB_REC_ENABLED\n\n#define NFC_EP_OOB_REC_ENABLED 0\n\n#endif\n\n\n\n// <q> NFC_HS_REC_ENABLED  - nfc_hs_rec - Handover Select NDEF record encoder\n\n \n\n\n\n#ifndef NFC_HS_REC_ENABLED\n\n#define NFC_HS_REC_ENABLED 0\n\n#endif\n\n\n\n// <q> NFC_LE_OOB_REC_ENABLED  - nfc_le_oob_rec - LE record for BLE pairing encoder\n\n \n\n\n\n#ifndef NFC_LE_OOB_REC_ENABLED\n\n#define NFC_LE_OOB_REC_ENABLED 0\n\n#endif\n\n\n\n// <q> NFC_LE_OOB_REC_PARSER_ENABLED  - nfc_le_oob_rec_parser - LE record parser\n\n \n\n\n\n#ifndef NFC_LE_OOB_REC_PARSER_ENABLED\n\n#define NFC_LE_OOB_REC_PARSER_ENABLED 0\n\n#endif\n\n\n\n// <q> NFC_NDEF_LAUNCHAPP_MSG_ENABLED  - nfc_launchapp_msg - Encoding data for NDEF Application Launching message for NFC Tag\n\n \n\n\n\n#ifndef NFC_NDEF_LAUNCHAPP_MSG_ENABLED\n\n#define NFC_NDEF_LAUNCHAPP_MSG_ENABLED 0\n\n#endif\n\n\n\n// <q> NFC_NDEF_LAUNCHAPP_REC_ENABLED  - nfc_launchapp_rec - Encoding data for NDEF Application Launching record for NFC Tag\n\n \n\n\n\n#ifndef NFC_NDEF_LAUNCHAPP_REC_ENABLED\n\n#define NFC_NDEF_LAUNCHAPP_REC_ENABLED 0\n\n#endif\n\n\n\n// <e> NFC_NDEF_MSG_ENABLED - nfc_ndef_msg - NFC NDEF Message generator module\n\n//==========================================================\n\n#ifndef NFC_NDEF_MSG_ENABLED\n\n#define NFC_NDEF_MSG_ENABLED 0\n\n#endif\n\n// <o> NFC_NDEF_MSG_TAG_TYPE  - NFC Tag Type\n\n \n\n// <2=> Type 2 Tag \n\n// <4=> Type 4 Tag \n\n\n\n#ifndef NFC_NDEF_MSG_TAG_TYPE\n\n#define NFC_NDEF_MSG_TAG_TYPE 2\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NFC_NDEF_MSG_PARSER_ENABLED - nfc_ndef_msg_parser - NFC NDEF message parser module\n\n//==========================================================\n\n#ifndef NFC_NDEF_MSG_PARSER_ENABLED\n\n#define NFC_NDEF_MSG_PARSER_ENABLED 0\n\n#endif\n\n// <e> NFC_NDEF_MSG_PARSER_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NFC_NDEF_MSG_PARSER_LOG_ENABLED\n\n#define NFC_NDEF_MSG_PARSER_LOG_ENABLED 0\n\n#endif\n\n// <o> NFC_NDEF_MSG_PARSER_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NFC_NDEF_MSG_PARSER_LOG_LEVEL\n\n#define NFC_NDEF_MSG_PARSER_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NFC_NDEF_MSG_PARSER_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NFC_NDEF_MSG_PARSER_INFO_COLOR\n\n#define NFC_NDEF_MSG_PARSER_INFO_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <q> NFC_NDEF_RECORD_ENABLED  - nfc_ndef_record - NFC NDEF Record generator module\n\n \n\n\n\n#ifndef NFC_NDEF_RECORD_ENABLED\n\n#define NFC_NDEF_RECORD_ENABLED 0\n\n#endif\n\n\n\n// <e> NFC_NDEF_RECORD_PARSER_ENABLED - nfc_ndef_record_parser - NFC NDEF Record parser module\n\n//==========================================================\n\n#ifndef NFC_NDEF_RECORD_PARSER_ENABLED\n\n#define NFC_NDEF_RECORD_PARSER_ENABLED 0\n\n#endif\n\n// <e> NFC_NDEF_RECORD_PARSER_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NFC_NDEF_RECORD_PARSER_LOG_ENABLED\n\n#define NFC_NDEF_RECORD_PARSER_LOG_ENABLED 0\n\n#endif\n\n// <o> NFC_NDEF_RECORD_PARSER_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NFC_NDEF_RECORD_PARSER_LOG_LEVEL\n\n#define NFC_NDEF_RECORD_PARSER_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NFC_NDEF_RECORD_PARSER_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NFC_NDEF_RECORD_PARSER_INFO_COLOR\n\n#define NFC_NDEF_RECORD_PARSER_INFO_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <q> NFC_NDEF_TEXT_RECORD_ENABLED  - nfc_text_rec - Encoding data for a text record for NFC Tag\n\n \n\n\n\n#ifndef NFC_NDEF_TEXT_RECORD_ENABLED\n\n#define NFC_NDEF_TEXT_RECORD_ENABLED 0\n\n#endif\n\n\n\n// <q> NFC_NDEF_URI_MSG_ENABLED  - nfc_uri_msg - Encoding data for NDEF message with URI record for NFC Tag\n\n \n\n\n\n#ifndef NFC_NDEF_URI_MSG_ENABLED\n\n#define NFC_NDEF_URI_MSG_ENABLED 0\n\n#endif\n\n\n\n// <q> NFC_NDEF_URI_REC_ENABLED  - nfc_uri_rec - Encoding data for a URI record for NFC Tag\n\n \n\n\n\n#ifndef NFC_NDEF_URI_REC_ENABLED\n\n#define NFC_NDEF_URI_REC_ENABLED 0\n\n#endif\n\n\n\n// <e> NFC_PLATFORM_ENABLED - nfc_platform - NFC platform module for Clock control.\n\n//==========================================================\n\n#ifndef NFC_PLATFORM_ENABLED\n\n#define NFC_PLATFORM_ENABLED 0\n\n#endif\n\n// <e> NFC_PLATFORM_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NFC_PLATFORM_LOG_ENABLED\n\n#define NFC_PLATFORM_LOG_ENABLED 0\n\n#endif\n\n// <o> NFC_PLATFORM_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NFC_PLATFORM_LOG_LEVEL\n\n#define NFC_PLATFORM_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NFC_PLATFORM_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NFC_PLATFORM_INFO_COLOR\n\n#define NFC_PLATFORM_INFO_COLOR 0\n\n#endif\n\n\n\n// <o> NFC_PLATFORM_DEBUG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NFC_PLATFORM_DEBUG_COLOR\n\n#define NFC_PLATFORM_DEBUG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NFC_T2T_PARSER_ENABLED - nfc_type_2_tag_parser - Parser for decoding Type 2 Tag data\n\n//==========================================================\n\n#ifndef NFC_T2T_PARSER_ENABLED\n\n#define NFC_T2T_PARSER_ENABLED 0\n\n#endif\n\n// <e> NFC_T2T_PARSER_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NFC_T2T_PARSER_LOG_ENABLED\n\n#define NFC_T2T_PARSER_LOG_ENABLED 0\n\n#endif\n\n// <o> NFC_T2T_PARSER_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NFC_T2T_PARSER_LOG_LEVEL\n\n#define NFC_T2T_PARSER_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NFC_T2T_PARSER_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NFC_T2T_PARSER_INFO_COLOR\n\n#define NFC_T2T_PARSER_INFO_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NFC_T4T_APDU_ENABLED - nfc_t4t_apdu - APDU encoder/decoder for Type 4 Tag\n\n//==========================================================\n\n#ifndef NFC_T4T_APDU_ENABLED\n\n#define NFC_T4T_APDU_ENABLED 0\n\n#endif\n\n// <e> NFC_T4T_APDU_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NFC_T4T_APDU_LOG_ENABLED\n\n#define NFC_T4T_APDU_LOG_ENABLED 0\n\n#endif\n\n// <o> NFC_T4T_APDU_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NFC_T4T_APDU_LOG_LEVEL\n\n#define NFC_T4T_APDU_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NFC_T4T_APDU_LOG_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NFC_T4T_APDU_LOG_COLOR\n\n#define NFC_T4T_APDU_LOG_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NFC_T4T_CC_FILE_PARSER_ENABLED - nfc_t4t_cc_file - Capability Container file for Type 4 Tag\n\n//==========================================================\n\n#ifndef NFC_T4T_CC_FILE_PARSER_ENABLED\n\n#define NFC_T4T_CC_FILE_PARSER_ENABLED 0\n\n#endif\n\n// <e> NFC_T4T_CC_FILE_PARSER_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NFC_T4T_CC_FILE_PARSER_LOG_ENABLED\n\n#define NFC_T4T_CC_FILE_PARSER_LOG_ENABLED 0\n\n#endif\n\n// <o> NFC_T4T_CC_FILE_PARSER_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NFC_T4T_CC_FILE_PARSER_LOG_LEVEL\n\n#define NFC_T4T_CC_FILE_PARSER_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NFC_T4T_CC_FILE_PARSER_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NFC_T4T_CC_FILE_PARSER_INFO_COLOR\n\n#define NFC_T4T_CC_FILE_PARSER_INFO_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// <e> NFC_T4T_HL_DETECTION_PROCEDURES_ENABLED - nfc_t4t_hl_detection_procedures - NDEF Detection Procedure for Type 4 Tag\n\n//==========================================================\n\n#ifndef NFC_T4T_HL_DETECTION_PROCEDURES_ENABLED\n\n#define NFC_T4T_HL_DETECTION_PROCEDURES_ENABLED 0\n\n#endif\n\n// <e> NFC_T4T_HL_DETECTION_PROCEDURES_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NFC_T4T_HL_DETECTION_PROCEDURES_LOG_ENABLED\n\n#define NFC_T4T_HL_DETECTION_PROCEDURES_LOG_ENABLED 0\n\n#endif\n\n// <o> NFC_T4T_HL_DETECTION_PROCEDURES_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NFC_T4T_HL_DETECTION_PROCEDURES_LOG_LEVEL\n\n#define NFC_T4T_HL_DETECTION_PROCEDURES_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NFC_T4T_HL_DETECTION_PROCEDURES_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NFC_T4T_HL_DETECTION_PROCEDURES_INFO_COLOR\n\n#define NFC_T4T_HL_DETECTION_PROCEDURES_INFO_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// <o> APDU_BUFF_SIZE - Size (in bytes) of the buffer for APDU storage \n\n#ifndef APDU_BUFF_SIZE\n\n#define APDU_BUFF_SIZE 250\n\n#endif\n\n\n\n// <o> CC_STORAGE_BUFF_SIZE - Size (in bytes) of the buffer for CC file storage \n\n#ifndef CC_STORAGE_BUFF_SIZE\n\n#define CC_STORAGE_BUFF_SIZE 64\n\n#endif\n\n\n\n// </e>\n\n\n\n// <e> NFC_T4T_TLV_BLOCK_PARSER_ENABLED - nfc_t4t_tlv_block - TLV block for Type 4 Tag\n\n//==========================================================\n\n#ifndef NFC_T4T_TLV_BLOCK_PARSER_ENABLED\n\n#define NFC_T4T_TLV_BLOCK_PARSER_ENABLED 0\n\n#endif\n\n// <e> NFC_T4T_TLV_BLOCK_PARSER_LOG_ENABLED - Enables logging in the module.\n\n//==========================================================\n\n#ifndef NFC_T4T_TLV_BLOCK_PARSER_LOG_ENABLED\n\n#define NFC_T4T_TLV_BLOCK_PARSER_LOG_ENABLED 0\n\n#endif\n\n// <o> NFC_T4T_TLV_BLOCK_PARSER_LOG_LEVEL  - Default Severity level\n\n \n\n// <0=> Off \n\n// <1=> Error \n\n// <2=> Warning \n\n// <3=> Info \n\n// <4=> Debug \n\n\n\n#ifndef NFC_T4T_TLV_BLOCK_PARSER_LOG_LEVEL\n\n#define NFC_T4T_TLV_BLOCK_PARSER_LOG_LEVEL 3\n\n#endif\n\n\n\n// <o> NFC_T4T_TLV_BLOCK_PARSER_INFO_COLOR  - ANSI escape code prefix.\n\n \n\n// <0=> Default \n\n// <1=> Black \n\n// <2=> Red \n\n// <3=> Green \n\n// <4=> Yellow \n\n// <5=> Blue \n\n// <6=> Magenta \n\n// <7=> Cyan \n\n// <8=> White \n\n\n\n#ifndef NFC_T4T_TLV_BLOCK_PARSER_INFO_COLOR\n\n#define NFC_T4T_TLV_BLOCK_PARSER_INFO_COLOR 0\n\n#endif\n\n\n\n// </e>\n\n\n\n// </e>\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> nRF_Segger_RTT \n\n\n\n//==========================================================\n\n// <h> segger_rtt - SEGGER RTT\n\n\n\n//==========================================================\n\n// <o> SEGGER_RTT_CONFIG_BUFFER_SIZE_UP - Size of upstream buffer. \n\n// <i> Note that either @ref NRF_LOG_BACKEND_RTT_OUTPUT_BUFFER_SIZE\n\n// <i> or this value is actually used. It depends on which one is bigger.\n\n\n\n#ifndef SEGGER_RTT_CONFIG_BUFFER_SIZE_UP\n\n#define SEGGER_RTT_CONFIG_BUFFER_SIZE_UP 512\n\n#endif\n\n\n\n// <o> SEGGER_RTT_CONFIG_MAX_NUM_UP_BUFFERS - Maximum number of upstream buffers. \n\n#ifndef SEGGER_RTT_CONFIG_MAX_NUM_UP_BUFFERS\n\n#define SEGGER_RTT_CONFIG_MAX_NUM_UP_BUFFERS 2\n\n#endif\n\n\n\n// <o> SEGGER_RTT_CONFIG_BUFFER_SIZE_DOWN - Size of downstream buffer. \n\n#ifndef SEGGER_RTT_CONFIG_BUFFER_SIZE_DOWN\n\n#define SEGGER_RTT_CONFIG_BUFFER_SIZE_DOWN 16\n\n#endif\n\n\n\n// <o> SEGGER_RTT_CONFIG_MAX_NUM_DOWN_BUFFERS - Maximum number of downstream buffers. \n\n#ifndef SEGGER_RTT_CONFIG_MAX_NUM_DOWN_BUFFERS\n\n#define SEGGER_RTT_CONFIG_MAX_NUM_DOWN_BUFFERS 2\n\n#endif\n\n\n\n// <o> SEGGER_RTT_CONFIG_DEFAULT_MODE  - RTT behavior if the buffer is full.\n\n \n\n\n\n// <i> The following modes are supported:\n\n// <i> - SKIP  - Do not block, output nothing.\n\n// <i> - TRIM  - Do not block, output as much as fits.\n\n// <i> - BLOCK - Wait until there is space in the buffer.\n\n// <0=> SKIP \n\n// <1=> TRIM \n\n// <2=> BLOCK_IF_FIFO_FULL \n\n\n\n#ifndef SEGGER_RTT_CONFIG_DEFAULT_MODE\n\n#define SEGGER_RTT_CONFIG_DEFAULT_MODE 0\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> nRF_SoftDevice \n\n\n\n//==========================================================\n\n// <e> NRF_SDH_BLE_ENABLED - nrf_sdh_ble - SoftDevice BLE event handler\n\n//==========================================================\n\n#ifndef NRF_SDH_BLE_ENABLED\n\n#define NRF_SDH_BLE_ENABLED 1\n\n#endif\n\n// <h> BLE Stack configuration - Stack configuration parameters\n\n\n\n// <i> The SoftDevice handler will configure the stack with these parameters when calling @ref nrf_sdh_ble_default_cfg_set.\n\n// <i> Other libraries might depend on these values; keep them up-to-date even if you are not explicitely calling @ref nrf_sdh_ble_default_cfg_set.\n\n//==========================================================\n\n// <o> NRF_SDH_BLE_GAP_DATA_LENGTH   <27-251> \n\n\n\n\n\n// <i> Requested BLE GAP data length to be negotiated.\n\n\n\n#ifndef NRF_SDH_BLE_GAP_DATA_LENGTH\n\n#define NRF_SDH_BLE_GAP_DATA_LENGTH 251\n\n#endif\n\n\n\n// <o> NRF_SDH_BLE_PERIPHERAL_LINK_COUNT - Maximum number of peripheral links. \n\n#ifndef NRF_SDH_BLE_PERIPHERAL_LINK_COUNT\n\n#define NRF_SDH_BLE_PERIPHERAL_LINK_COUNT 0\n\n#endif\n\n\n\n// <o> NRF_SDH_BLE_CENTRAL_LINK_COUNT - Maximum number of central links. \n\n#ifndef NRF_SDH_BLE_CENTRAL_LINK_COUNT\n\n#define NRF_SDH_BLE_CENTRAL_LINK_COUNT 1\n\n#endif\n\n\n\n// <o> NRF_SDH_BLE_TOTAL_LINK_COUNT - Total link count. \n\n// <i> Maximum number of total concurrent connections using the default configuration.\n\n\n\n#ifndef NRF_SDH_BLE_TOTAL_LINK_COUNT\n\n#define NRF_SDH_BLE_TOTAL_LINK_COUNT 1\n\n#endif\n\n\n\n// <o> NRF_SDH_BLE_GAP_EVENT_LENGTH - GAP event length. \n\n// <i> The time set aside for this connection on every connection interval in 1.25 ms units.\n\n\n\n#ifndef NRF_SDH_BLE_GAP_EVENT_LENGTH\n\n#define NRF_SDH_BLE_GAP_EVENT_LENGTH 6\n\n#endif\n\n\n\n// <o> NRF_SDH_BLE_GATT_MAX_MTU_SIZE - Static maximum MTU size. \n\n#ifndef NRF_SDH_BLE_GATT_MAX_MTU_SIZE\n\n#define NRF_SDH_BLE_GATT_MAX_MTU_SIZE 247\n\n#endif\n\n\n\n// <o> NRF_SDH_BLE_GATTS_ATTR_TAB_SIZE - Attribute Table size in bytes. The size must be a multiple of 4. \n\n#ifndef NRF_SDH_BLE_GATTS_ATTR_TAB_SIZE\n\n#define NRF_SDH_BLE_GATTS_ATTR_TAB_SIZE 1408\n\n#endif\n\n\n\n// <o> NRF_SDH_BLE_VS_UUID_COUNT - The number of vendor-specific UUIDs. \n\n#ifndef NRF_SDH_BLE_VS_UUID_COUNT\n\n#define NRF_SDH_BLE_VS_UUID_COUNT 1\n\n#endif\n\n\n\n// <q> NRF_SDH_BLE_SERVICE_CHANGED  - Include the Service Changed characteristic in the Attribute Table.\n\n \n\n\n\n#ifndef NRF_SDH_BLE_SERVICE_CHANGED\n\n#define NRF_SDH_BLE_SERVICE_CHANGED 0\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> BLE Observers - Observers and priority levels\n\n\n\n//==========================================================\n\n// <o> NRF_SDH_BLE_OBSERVER_PRIO_LEVELS - Total number of priority levels for BLE observers. \n\n// <i> This setting configures the number of priority levels available for BLE event handlers.\n\n// <i> The priority level of a handler determines the order in which it receives events, with respect to other handlers.\n\n\n\n#ifndef NRF_SDH_BLE_OBSERVER_PRIO_LEVELS\n\n#define NRF_SDH_BLE_OBSERVER_PRIO_LEVELS 4\n\n#endif\n\n\n\n// <h> BLE Observers priorities - Invididual priorities\n\n\n\n//==========================================================\n\n// <o> BLE_ADV_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Advertising module.\n\n\n\n#ifndef BLE_ADV_BLE_OBSERVER_PRIO\n\n#define BLE_ADV_BLE_OBSERVER_PRIO 1\n\n#endif\n\n\n\n// <o> BLE_ANCS_C_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Apple Notification Service Client.\n\n\n\n#ifndef BLE_ANCS_C_BLE_OBSERVER_PRIO\n\n#define BLE_ANCS_C_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_ANS_C_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Alert Notification Service Client.\n\n\n\n#ifndef BLE_ANS_C_BLE_OBSERVER_PRIO\n\n#define BLE_ANS_C_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_BAS_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Battery Service.\n\n\n\n#ifndef BLE_BAS_BLE_OBSERVER_PRIO\n\n#define BLE_BAS_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_BAS_C_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Battery Service Client.\n\n\n\n#ifndef BLE_BAS_C_BLE_OBSERVER_PRIO\n\n#define BLE_BAS_C_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_BPS_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Blood Pressure Service.\n\n\n\n#ifndef BLE_BPS_BLE_OBSERVER_PRIO\n\n#define BLE_BPS_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_CONN_PARAMS_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Connection parameters module.\n\n\n\n#ifndef BLE_CONN_PARAMS_BLE_OBSERVER_PRIO\n\n#define BLE_CONN_PARAMS_BLE_OBSERVER_PRIO 1\n\n#endif\n\n\n\n// <o> BLE_CONN_STATE_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Connection State module.\n\n\n\n#ifndef BLE_CONN_STATE_BLE_OBSERVER_PRIO\n\n#define BLE_CONN_STATE_BLE_OBSERVER_PRIO 0\n\n#endif\n\n\n\n// <o> BLE_CSCS_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Cycling Speed and Cadence Service.\n\n\n\n#ifndef BLE_CSCS_BLE_OBSERVER_PRIO\n\n#define BLE_CSCS_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_CTS_C_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Current Time Service Client.\n\n\n\n#ifndef BLE_CTS_C_BLE_OBSERVER_PRIO\n\n#define BLE_CTS_C_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_DB_DISC_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Database Discovery module.\n\n\n\n#ifndef BLE_DB_DISC_BLE_OBSERVER_PRIO\n\n#define BLE_DB_DISC_BLE_OBSERVER_PRIO 1\n\n#endif\n\n\n\n// <o> BLE_DFU_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the DFU Service.\n\n\n\n#ifndef BLE_DFU_BLE_OBSERVER_PRIO\n\n#define BLE_DFU_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_DIS_C_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Device Information Client.\n\n\n\n#ifndef BLE_DIS_C_BLE_OBSERVER_PRIO\n\n#define BLE_DIS_C_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_GLS_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Glucose Service.\n\n\n\n#ifndef BLE_GLS_BLE_OBSERVER_PRIO\n\n#define BLE_GLS_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_HIDS_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Human Interface Device Service.\n\n\n\n#ifndef BLE_HIDS_BLE_OBSERVER_PRIO\n\n#define BLE_HIDS_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_HRS_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Heart Rate Service.\n\n\n\n#ifndef BLE_HRS_BLE_OBSERVER_PRIO\n\n#define BLE_HRS_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_HRS_C_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Heart Rate Service Client.\n\n\n\n#ifndef BLE_HRS_C_BLE_OBSERVER_PRIO\n\n#define BLE_HRS_C_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_HTS_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Health Thermometer Service.\n\n\n\n#ifndef BLE_HTS_BLE_OBSERVER_PRIO\n\n#define BLE_HTS_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_IAS_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Immediate Alert Service.\n\n\n\n#ifndef BLE_IAS_BLE_OBSERVER_PRIO\n\n#define BLE_IAS_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_IAS_C_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Immediate Alert Service Client.\n\n\n\n#ifndef BLE_IAS_C_BLE_OBSERVER_PRIO\n\n#define BLE_IAS_C_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_LBS_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the LED Button Service.\n\n\n\n#ifndef BLE_LBS_BLE_OBSERVER_PRIO\n\n#define BLE_LBS_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_LBS_C_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the LED Button Service Client.\n\n\n\n#ifndef BLE_LBS_C_BLE_OBSERVER_PRIO\n\n#define BLE_LBS_C_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_LLS_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Link Loss Service.\n\n\n\n#ifndef BLE_LLS_BLE_OBSERVER_PRIO\n\n#define BLE_LLS_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_LNS_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Location Navigation Service.\n\n\n\n#ifndef BLE_LNS_BLE_OBSERVER_PRIO\n\n#define BLE_LNS_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_NUS_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the UART Service.\n\n\n\n#ifndef BLE_NUS_BLE_OBSERVER_PRIO\n\n#define BLE_NUS_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_NUS_C_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the UART Central Service.\n\n\n\n#ifndef BLE_NUS_C_BLE_OBSERVER_PRIO\n\n#define BLE_NUS_C_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_OTS_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Object transfer service.\n\n\n\n#ifndef BLE_OTS_BLE_OBSERVER_PRIO\n\n#define BLE_OTS_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_OTS_C_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Object transfer service client.\n\n\n\n#ifndef BLE_OTS_C_BLE_OBSERVER_PRIO\n\n#define BLE_OTS_C_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_RSCS_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Running Speed and Cadence Service.\n\n\n\n#ifndef BLE_RSCS_BLE_OBSERVER_PRIO\n\n#define BLE_RSCS_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_RSCS_C_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Running Speed and Cadence Client.\n\n\n\n#ifndef BLE_RSCS_C_BLE_OBSERVER_PRIO\n\n#define BLE_RSCS_C_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BLE_TPS_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the TX Power Service.\n\n\n\n#ifndef BLE_TPS_BLE_OBSERVER_PRIO\n\n#define BLE_TPS_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> BSP_BTN_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Button Control module.\n\n\n\n#ifndef BSP_BTN_BLE_OBSERVER_PRIO\n\n#define BSP_BTN_BLE_OBSERVER_PRIO 1\n\n#endif\n\n\n\n// <o> NFC_BLE_PAIR_LIB_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the NFC pairing library.\n\n\n\n#ifndef NFC_BLE_PAIR_LIB_BLE_OBSERVER_PRIO\n\n#define NFC_BLE_PAIR_LIB_BLE_OBSERVER_PRIO 1\n\n#endif\n\n\n\n// <o> NFC_BLE_PAIR_LIB_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the NFC pairing library.\n\n\n\n#ifndef NFC_BLE_PAIR_LIB_BLE_OBSERVER_PRIO\n\n#define NFC_BLE_PAIR_LIB_BLE_OBSERVER_PRIO 1\n\n#endif\n\n\n\n// <o> NFC_BLE_PAIR_LIB_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the NFC pairing library.\n\n\n\n#ifndef NFC_BLE_PAIR_LIB_BLE_OBSERVER_PRIO\n\n#define NFC_BLE_PAIR_LIB_BLE_OBSERVER_PRIO 1\n\n#endif\n\n\n\n// <o> NRF_BLE_BMS_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Bond Management Service.\n\n\n\n#ifndef NRF_BLE_BMS_BLE_OBSERVER_PRIO\n\n#define NRF_BLE_BMS_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> NRF_BLE_CGMS_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Contiuon Glucose Monitoring Service.\n\n\n\n#ifndef NRF_BLE_CGMS_BLE_OBSERVER_PRIO\n\n#define NRF_BLE_CGMS_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> NRF_BLE_ES_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Eddystone module.\n\n\n\n#ifndef NRF_BLE_ES_BLE_OBSERVER_PRIO\n\n#define NRF_BLE_ES_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> NRF_BLE_GATTS_C_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the GATT Service Client.\n\n\n\n#ifndef NRF_BLE_GATTS_C_BLE_OBSERVER_PRIO\n\n#define NRF_BLE_GATTS_C_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> NRF_BLE_GATT_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the GATT module.\n\n\n\n#ifndef NRF_BLE_GATT_BLE_OBSERVER_PRIO\n\n#define NRF_BLE_GATT_BLE_OBSERVER_PRIO 1\n\n#endif\n\n\n\n// <o> NRF_BLE_GQ_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the GATT Queue module.\n\n\n\n#ifndef NRF_BLE_GQ_BLE_OBSERVER_PRIO\n\n#define NRF_BLE_GQ_BLE_OBSERVER_PRIO 1\n\n#endif\n\n\n\n// <o> NRF_BLE_QWR_BLE_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the Queued writes module.\n\n\n\n#ifndef NRF_BLE_QWR_BLE_OBSERVER_PRIO\n\n#define NRF_BLE_QWR_BLE_OBSERVER_PRIO 2\n\n#endif\n\n\n\n// <o> NRF_BLE_SCAN_OBSERVER_PRIO  \n\n// <i> Priority for dispatching the BLE events to the Scanning Module.\n\n\n\n#ifndef NRF_BLE_SCAN_OBSERVER_PRIO\n\n#define NRF_BLE_SCAN_OBSERVER_PRIO 1\n\n#endif\n\n\n\n// <o> PM_BLE_OBSERVER_PRIO - Priority with which BLE events are dispatched to the Peer Manager module. \n\n#ifndef PM_BLE_OBSERVER_PRIO\n\n#define PM_BLE_OBSERVER_PRIO 1\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n\n\n// </e>\n\n\n\n// <e> NRF_SDH_ENABLED - nrf_sdh - SoftDevice handler\n\n//==========================================================\n\n#ifndef NRF_SDH_ENABLED\n\n#define NRF_SDH_ENABLED 1\n\n#endif\n\n// <h> Dispatch model \n\n\n\n// <i> This setting configures how Stack events are dispatched to the application.\n\n//==========================================================\n\n// <o> NRF_SDH_DISPATCH_MODEL\n\n \n\n\n\n// <i> NRF_SDH_DISPATCH_MODEL_INTERRUPT: SoftDevice events are passed to the application from the interrupt context.\n\n// <i> NRF_SDH_DISPATCH_MODEL_APPSH: SoftDevice events are scheduled using @ref app_scheduler.\n\n// <i> NRF_SDH_DISPATCH_MODEL_POLLING: SoftDevice events are to be fetched manually.\n\n// <0=> NRF_SDH_DISPATCH_MODEL_INTERRUPT \n\n// <1=> NRF_SDH_DISPATCH_MODEL_APPSH \n\n// <2=> NRF_SDH_DISPATCH_MODEL_POLLING \n\n\n\n#ifndef NRF_SDH_DISPATCH_MODEL\n\n#define NRF_SDH_DISPATCH_MODEL 0\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> Clock - SoftDevice clock configuration\n\n\n\n//==========================================================\n\n// <o> NRF_SDH_CLOCK_LF_SRC  - SoftDevice clock source.\n\n \n\n// <0=> NRF_CLOCK_LF_SRC_RC \n\n// <1=> NRF_CLOCK_LF_SRC_XTAL \n\n// <2=> NRF_CLOCK_LF_SRC_SYNTH \n\n\n\n#ifndef NRF_SDH_CLOCK_LF_SRC\n\n#define NRF_SDH_CLOCK_LF_SRC 1\n\n#endif\n\n\n\n// <o> NRF_SDH_CLOCK_LF_RC_CTIV - SoftDevice calibration timer interval. \n\n#ifndef NRF_SDH_CLOCK_LF_RC_CTIV\n\n#define NRF_SDH_CLOCK_LF_RC_CTIV 0\n\n#endif\n\n\n\n// <o> NRF_SDH_CLOCK_LF_RC_TEMP_CTIV - SoftDevice calibration timer interval under constant temperature. \n\n// <i> How often (in number of calibration intervals) the RC oscillator shall be calibrated\n\n// <i>  if the temperature has not changed.\n\n\n\n#ifndef NRF_SDH_CLOCK_LF_RC_TEMP_CTIV\n\n#define NRF_SDH_CLOCK_LF_RC_TEMP_CTIV 0\n\n#endif\n\n\n\n// <o> NRF_SDH_CLOCK_LF_ACCURACY  - External clock accuracy used in the LL to compute timing.\n\n \n\n// <0=> NRF_CLOCK_LF_ACCURACY_250_PPM \n\n// <1=> NRF_CLOCK_LF_ACCURACY_500_PPM \n\n// <2=> NRF_CLOCK_LF_ACCURACY_150_PPM \n\n// <3=> NRF_CLOCK_LF_ACCURACY_100_PPM \n\n// <4=> NRF_CLOCK_LF_ACCURACY_75_PPM \n\n// <5=> NRF_CLOCK_LF_ACCURACY_50_PPM \n\n// <6=> NRF_CLOCK_LF_ACCURACY_30_PPM \n\n// <7=> NRF_CLOCK_LF_ACCURACY_20_PPM \n\n// <8=> NRF_CLOCK_LF_ACCURACY_10_PPM \n\n// <9=> NRF_CLOCK_LF_ACCURACY_5_PPM \n\n// <10=> NRF_CLOCK_LF_ACCURACY_2_PPM \n\n// <11=> NRF_CLOCK_LF_ACCURACY_1_PPM \n\n\n\n#ifndef NRF_SDH_CLOCK_LF_ACCURACY\n\n#define NRF_SDH_CLOCK_LF_ACCURACY 7\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> SDH Observers - Observers and priority levels\n\n\n\n//==========================================================\n\n// <o> NRF_SDH_REQ_OBSERVER_PRIO_LEVELS - Total number of priority levels for request observers. \n\n// <i> This setting configures the number of priority levels available for the SoftDevice request event handlers.\n\n// <i> The priority level of a handler determines the order in which it receives events, with respect to other handlers.\n\n\n\n#ifndef NRF_SDH_REQ_OBSERVER_PRIO_LEVELS\n\n#define NRF_SDH_REQ_OBSERVER_PRIO_LEVELS 2\n\n#endif\n\n\n\n// <o> NRF_SDH_STATE_OBSERVER_PRIO_LEVELS - Total number of priority levels for state observers. \n\n// <i> This setting configures the number of priority levels available for the SoftDevice state event handlers.\n\n// <i> The priority level of a handler determines the order in which it receives events, with respect to other handlers.\n\n\n\n#ifndef NRF_SDH_STATE_OBSERVER_PRIO_LEVELS\n\n#define NRF_SDH_STATE_OBSERVER_PRIO_LEVELS 2\n\n#endif\n\n\n\n// <o> NRF_SDH_STACK_OBSERVER_PRIO_LEVELS - Total number of priority levels for stack event observers. \n\n// <i> This setting configures the number of priority levels available for the SoftDevice stack event handlers (ANT, BLE, SoC).\n\n// <i> The priority level of a handler determines the order in which it receives events, with respect to other handlers.\n\n\n\n#ifndef NRF_SDH_STACK_OBSERVER_PRIO_LEVELS\n\n#define NRF_SDH_STACK_OBSERVER_PRIO_LEVELS 2\n\n#endif\n\n\n\n\n\n// <h> State Observers priorities - Invididual priorities\n\n\n\n//==========================================================\n\n// <o> CLOCK_CONFIG_STATE_OBSERVER_PRIO  \n\n// <i> Priority with which state events are dispatched to the Clock driver.\n\n\n\n#ifndef CLOCK_CONFIG_STATE_OBSERVER_PRIO\n\n#define CLOCK_CONFIG_STATE_OBSERVER_PRIO 0\n\n#endif\n\n\n\n// <o> POWER_CONFIG_STATE_OBSERVER_PRIO  \n\n// <i> Priority with which state events are dispatched to the Power driver.\n\n\n\n#ifndef POWER_CONFIG_STATE_OBSERVER_PRIO\n\n#define POWER_CONFIG_STATE_OBSERVER_PRIO 0\n\n#endif\n\n\n\n// <o> RNG_CONFIG_STATE_OBSERVER_PRIO  \n\n// <i> Priority with which state events are dispatched to this module.\n\n\n\n#ifndef RNG_CONFIG_STATE_OBSERVER_PRIO\n\n#define RNG_CONFIG_STATE_OBSERVER_PRIO 0\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <h> Stack Event Observers priorities - Invididual priorities\n\n\n\n//==========================================================\n\n// <o> NRF_SDH_ANT_STACK_OBSERVER_PRIO  \n\n// <i> This setting configures the priority with which ANT events are processed with respect to other events coming from the stack.\n\n// <i> Modify this setting if you need to have ANT events dispatched before or after other stack events, such as BLE or SoC.\n\n// <i> Zero is the highest priority.\n\n\n\n#ifndef NRF_SDH_ANT_STACK_OBSERVER_PRIO\n\n#define NRF_SDH_ANT_STACK_OBSERVER_PRIO 0\n\n#endif\n\n\n\n// <o> NRF_SDH_BLE_STACK_OBSERVER_PRIO  \n\n// <i> This setting configures the priority with which BLE events are processed with respect to other events coming from the stack.\n\n// <i> Modify this setting if you need to have BLE events dispatched before or after other stack events, such as ANT or SoC.\n\n// <i> Zero is the highest priority.\n\n\n\n#ifndef NRF_SDH_BLE_STACK_OBSERVER_PRIO\n\n#define NRF_SDH_BLE_STACK_OBSERVER_PRIO 0\n\n#endif\n\n\n\n// <o> NRF_SDH_SOC_STACK_OBSERVER_PRIO  \n\n// <i> This setting configures the priority with which SoC events are processed with respect to other events coming from the stack.\n\n// <i> Modify this setting if you need to have SoC events dispatched before or after other stack events, such as ANT or BLE.\n\n// <i> Zero is the highest priority.\n\n\n\n#ifndef NRF_SDH_SOC_STACK_OBSERVER_PRIO\n\n#define NRF_SDH_SOC_STACK_OBSERVER_PRIO 0\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n\n\n// </e>\n\n\n\n// <e> NRF_SDH_SOC_ENABLED - nrf_sdh_soc - SoftDevice SoC event handler\n\n//==========================================================\n\n#ifndef NRF_SDH_SOC_ENABLED\n\n#define NRF_SDH_SOC_ENABLED 1\n\n#endif\n\n// <h> SoC Observers - Observers and priority levels\n\n\n\n//==========================================================\n\n// <o> NRF_SDH_SOC_OBSERVER_PRIO_LEVELS - Total number of priority levels for SoC observers. \n\n// <i> This setting configures the number of priority levels available for the SoC event handlers.\n\n// <i> The priority level of a handler determines the order in which it receives events, with respect to other handlers.\n\n\n\n#ifndef NRF_SDH_SOC_OBSERVER_PRIO_LEVELS\n\n#define NRF_SDH_SOC_OBSERVER_PRIO_LEVELS 2\n\n#endif\n\n\n\n// <h> SoC Observers priorities - Invididual priorities\n\n\n\n//==========================================================\n\n// <o> BLE_DFU_SOC_OBSERVER_PRIO  \n\n// <i> Priority with which BLE events are dispatched to the DFU Service.\n\n\n\n#ifndef BLE_DFU_SOC_OBSERVER_PRIO\n\n#define BLE_DFU_SOC_OBSERVER_PRIO 1\n\n#endif\n\n\n\n// <o> CLOCK_CONFIG_SOC_OBSERVER_PRIO  \n\n// <i> Priority with which SoC events are dispatched to the Clock driver.\n\n\n\n#ifndef CLOCK_CONFIG_SOC_OBSERVER_PRIO\n\n#define CLOCK_CONFIG_SOC_OBSERVER_PRIO 0\n\n#endif\n\n\n\n// <o> POWER_CONFIG_SOC_OBSERVER_PRIO  \n\n// <i> Priority with which SoC events are dispatched to the Power driver.\n\n\n\n#ifndef POWER_CONFIG_SOC_OBSERVER_PRIO\n\n#define POWER_CONFIG_SOC_OBSERVER_PRIO 0\n\n#endif\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n\n\n// </e>\n\n\n\n// </h> \n\n//==========================================================\n\n\n\n// <<< end of configuration section >>>\n\n#endif //SDK_CONFIG_H",
    "assembly": ".file\t\"151.c\"\n\t.text\n\t.ident\t\"GCC: (MinGW-W64 x86_64-ucrt-posix-seh, built by Brecht Sanders, r8) 13.2.0\"",
    "generation_time": 1.0930759906768799,
    "tokens_generated": 45,
    "metrics": {
      "length_ratio": 0.0002637667900917174,
      "line_ratio": 0.00020782243651024565,
      "token_overlap": 0.0,
      "token_precision": 0.0,
      "keyword_coverage": 0.0,
      "keyword_match_ratio": 0.0,
      "brace_ratio": 0,
      "semicolon_ratio": 0.0
    }
  },
  {
    "filename": "158",
    "optimization": "Osize",
    "generated_c": "[ |] .name = 'C:\\Program Files\\Microsoft Office' ; [ ]",
    "reference_c": "/**********************************************************************************************\n*\n*   raylib v4.0 - A simple and easy-to-use library to enjoy videogames programming (www.raylib.com)\n*\n*   FEATURES:\n*       - NO external dependencies, all required libraries included with raylib\n*       - Multiplatform: Windows, Linux, FreeBSD, OpenBSD, NetBSD, DragonFly,\n*                        MacOS, Haiku, Android, Raspberry Pi, DRM native, HTML5.\n*       - Written in plain C code (C99) in PascalCase/camelCase notation\n*       - Hardware accelerated with OpenGL (1.1, 2.1, 3.3, 4.3 or ES2 - choose at compile)\n*       - Unique OpenGL abstraction layer (usable as standalone module): [rlgl]\n*       - Multiple Fonts formats supported (TTF, XNA fonts, AngelCode fonts)\n*       - Outstanding texture formats support, including compressed formats (DXT, ETC, ASTC)\n*       - Full 3d support for 3d Shapes, Models, Billboards, Heightmaps and more!\n*       - Flexible Materials system, supporting classic maps and PBR maps\n*       - Animated 3D models supported (skeletal bones animation) (IQM)\n*       - Shaders support, including Model shaders and Postprocessing shaders\n*       - Powerful math module for Vector, Matrix and Quaternion operations: [raymath]\n*       - Audio loading and playing with streaming support (WAV, OGG, MP3, FLAC, XM, MOD)\n*       - VR stereo rendering with configurable HMD device parameters\n*       - Bindings to multiple programming languages available!\n*\n*   NOTES:\n*       - One default Font is loaded on InitWindow()->LoadFontDefault() [core, text]\n*       - One default Texture2D is loaded on rlglInit(), 1x1 white pixel R8G8B8A8 [rlgl] (OpenGL 3.3 or ES2)\n*       - One default Shader is loaded on rlglInit()->rlLoadShaderDefault() [rlgl] (OpenGL 3.3 or ES2)\n*       - One default RenderBatch is loaded on rlglInit()->rlLoadRenderBatch() [rlgl] (OpenGL 3.3 or ES2)\n*\n*   DEPENDENCIES (included):\n*       [rcore] rglfw (Camilla L\u00f6wy - github.com/glfw/glfw) for window/context management and input (PLATFORM_DESKTOP)\n*       [rlgl] glad (David Herberth - github.com/Dav1dde/glad) for OpenGL 3.3 extensions loading (PLATFORM_DESKTOP)\n*       [raudio] miniaudio (David Reid - github.com/mackron/miniaudio) for audio device/context management\n*\n*   OPTIONAL DEPENDENCIES (included):\n*       [rcore] msf_gif (Miles Fogle) for GIF recording\n*       [rcore] sinfl (Micha Mettke) for DEFLATE decompression algorythm\n*       [rcore] sdefl (Micha Mettke) for DEFLATE compression algorythm\n*       [rtextures] stb_image (Sean Barret) for images loading (BMP, TGA, PNG, JPEG, HDR...)\n*       [rtextures] stb_image_write (Sean Barret) for image writing (BMP, TGA, PNG, JPG)\n*       [rtextures] stb_image_resize (Sean Barret) for image resizing algorithms\n*       [rtext] stb_truetype (Sean Barret) for ttf fonts loading\n*       [rtext] stb_rect_pack (Sean Barret) for rectangles packing\n*       [rmodels] par_shapes (Philip Rideout) for parametric 3d shapes generation\n*       [rmodels] tinyobj_loader_c (Syoyo Fujita) for models loading (OBJ, MTL)\n*       [rmodels] cgltf (Johannes Kuhlmann) for models loading (glTF)\n*       [raudio] dr_wav (David Reid) for WAV audio file loading\n*       [raudio] dr_flac (David Reid) for FLAC audio file loading\n*       [raudio] dr_mp3 (David Reid) for MP3 audio file loading\n*       [raudio] stb_vorbis (Sean Barret) for OGG audio loading\n*       [raudio] jar_xm (Joshua Reisenauer) for XM audio module loading\n*       [raudio] jar_mod (Joshua Reisenauer) for MOD audio module loading\n*\n*\n*   LICENSE: zlib/libpng\n*\n*   raylib is licensed under an unmodified zlib/libpng license, which is an OSI-certified,\n*   BSD-like license that allows static linking with closed source software:\n*\n*   Copyright (c) 2013-2021 Ramon Santamaria (@raysan5)\n*\n*   This software is provided \"as-is\", without any express or implied warranty. In no event\n*   will the authors be held liable for any damages arising from the use of this software.\n*\n*   Permission is granted to anyone to use this software for any purpose, including commercial\n*   applications, and to alter it and redistribute it freely, subject to the following restrictions:\n*\n*     1. The origin of this software must not be misrepresented; you must not claim that you\n*     wrote the original software. If you use this software in a product, an acknowledgment\n*     in the product documentation would be appreciated but is not required.\n*\n*     2. Altered source versions must be plainly marked as such, and must not be misrepresented\n*     as being the original software.\n*\n*     3. This notice may not be removed or altered from any source distribution.\n*\n**********************************************************************************************/\n\n#ifndef RAYLIB_H\n#define RAYLIB_H\n\n#include <stdarg.h>     // Required for: va_list - Only used by TraceLogCallback\n\n#define RAYLIB_VERSION  \"4.0\"\n\n// Function specifiers in case library is build/used as a shared library (Windows)\n// NOTE: Microsoft specifiers to tell compiler that symbols are imported/exported from a .dll\n#if defined(_WIN32)\n    #if defined(BUILD_LIBTYPE_SHARED)\n        #define RLAPI __declspec(dllexport)     // We are building the library as a Win32 shared library (.dll)\n    #elif defined(USE_LIBTYPE_SHARED)\n        #define RLAPI __declspec(dllimport)     // We are using the library as a Win32 shared library (.dll)\n    #endif\n#endif\n\n#ifndef RLAPI\n    #define RLAPI       // Functions defined as 'extern' by default (implicit specifiers)\n#endif\n\n//----------------------------------------------------------------------------------\n// Some basic Defines\n//----------------------------------------------------------------------------------\n#ifndef PI\n    #define PI 3.14159265358979323846f\n#endif\n#ifndef DEG2RAD\n    #define DEG2RAD (PI/180.0f)\n#endif\n#ifndef RAD2DEG\n    #define RAD2DEG (180.0f/PI)\n#endif\n\n// Allow custom memory allocators\n#ifndef RL_MALLOC\n    #define RL_MALLOC(sz)       malloc(sz)\n#endif\n#ifndef RL_CALLOC\n    #define RL_CALLOC(n,sz)     calloc(n,sz)\n#endif\n#ifndef RL_REALLOC\n    #define RL_REALLOC(ptr,sz)  realloc(ptr,sz)\n#endif\n#ifndef RL_FREE\n    #define RL_FREE(ptr)        free(ptr)\n#endif\n\n// NOTE: MSVC C++ compiler does not support compound literals (C99 feature)\n// Plain structures in C++ (without constructors) can be initialized with { }\n#if defined(__cplusplus)\n    #define CLITERAL(type)      type\n#else\n    #define CLITERAL(type)      (type)\n#endif\n\n// NOTE: We set some defines with some data types declared by raylib\n// Other modules (raymath, rlgl) also require some of those types, so,\n// to be able to use those other modules as standalone (not depending on raylib)\n// this defines are very useful for internal check and avoid type (re)definitions\n#define RL_COLOR_TYPE\n#define RL_RECTANGLE_TYPE\n#define RL_VECTOR2_TYPE\n#define RL_VECTOR3_TYPE\n#define RL_VECTOR4_TYPE\n#define RL_QUATERNION_TYPE\n#define RL_MATRIX_TYPE\n\n// Some Basic Colors\n// NOTE: Custom raylib color palette for amazing visuals on WHITE background\n#define LIGHTGRAY  CLITERAL(Color){ 200, 200, 200, 255 }   // Light Gray\n#define GRAY       CLITERAL(Color){ 130, 130, 130, 255 }   // Gray\n#define DARKGRAY   CLITERAL(Color){ 80, 80, 80, 255 }      // Dark Gray\n#define YELLOW     CLITERAL(Color){ 253, 249, 0, 255 }     // Yellow\n#define GOLD       CLITERAL(Color){ 255, 203, 0, 255 }     // Gold\n#define ORANGE     CLITERAL(Color){ 255, 161, 0, 255 }     // Orange\n#define PINK       CLITERAL(Color){ 255, 109, 194, 255 }   // Pink\n#define RED        CLITERAL(Color){ 230, 41, 55, 255 }     // Red\n#define MAROON     CLITERAL(Color){ 190, 33, 55, 255 }     // Maroon\n#define GREEN      CLITERAL(Color){ 0, 228, 48, 255 }      // Green\n#define LIME       CLITERAL(Color){ 0, 158, 47, 255 }      // Lime\n#define DARKGREEN  CLITERAL(Color){ 0, 117, 44, 255 }      // Dark Green\n#define SKYBLUE    CLITERAL(Color){ 102, 191, 255, 255 }   // Sky Blue\n#define BLUE       CLITERAL(Color){ 0, 121, 241, 255 }     // Blue\n#define DARKBLUE   CLITERAL(Color){ 0, 82, 172, 255 }      // Dark Blue\n#define PURPLE     CLITERAL(Color){ 200, 122, 255, 255 }   // Purple\n#define VIOLET     CLITERAL(Color){ 135, 60, 190, 255 }    // Violet\n#define DARKPURPLE CLITERAL(Color){ 112, 31, 126, 255 }    // Dark Purple\n#define BEIGE      CLITERAL(Color){ 211, 176, 131, 255 }   // Beige\n#define BROWN      CLITERAL(Color){ 127, 106, 79, 255 }    // Brown\n#define DARKBROWN  CLITERAL(Color){ 76, 63, 47, 255 }      // Dark Brown\n\n#define WHITE      CLITERAL(Color){ 255, 255, 255, 255 }   // White\n#define BLACK      CLITERAL(Color){ 0, 0, 0, 255 }         // Black\n#define BLANK      CLITERAL(Color){ 0, 0, 0, 0 }           // Blank (Transparent)\n#define MAGENTA    CLITERAL(Color){ 255, 0, 255, 255 }     // Magenta\n#define RAYWHITE   CLITERAL(Color){ 245, 245, 245, 255 }   // My own White (raylib logo)\n\n//----------------------------------------------------------------------------------\n// Structures Definition\n//----------------------------------------------------------------------------------\n// Boolean type\n#if defined(__STDC__) && __STDC_VERSION__ >= 199901L\n    #include <stdbool.h>\n#elif !defined(__cplusplus) && !defined(bool)\n    typedef enum bool { false, true } bool;\n    #define RL_BOOL_TYPE\n#endif\n\n// Vector2, 2 components\ntypedef struct Vector2 {\n    float x;                // Vector x component\n    float y;                // Vector y component\n} Vector2;\n\n// Vector3, 3 components\ntypedef struct Vector3 {\n    float x;                // Vector x component\n    float y;                // Vector y component\n    float z;                // Vector z component\n} Vector3;\n\n// Vector4, 4 components\ntypedef struct Vector4 {\n    float x;                // Vector x component\n    float y;                // Vector y component\n    float z;                // Vector z component\n    float w;                // Vector w component\n} Vector4;\n\n// Quaternion, 4 components (Vector4 alias)\ntypedef Vector4 Quaternion;\n\n// Matrix, 4x4 components, column major, OpenGL style, right handed\ntypedef struct Matrix {\n    float m0, m4, m8, m12;  // Matrix first row (4 components)\n    float m1, m5, m9, m13;  // Matrix second row (4 components)\n    float m2, m6, m10, m14; // Matrix third row (4 components)\n    float m3, m7, m11, m15; // Matrix fourth row (4 components)\n} Matrix;\n\n// Color, 4 components, R8G8B8A8 (32bit)\ntypedef struct Color {\n    unsigned char r;        // Color red value\n    unsigned char g;        // Color green value\n    unsigned char b;        // Color blue value\n    unsigned char a;        // Color alpha value\n} Color;\n\n// Rectangle, 4 components\ntypedef struct Rectangle {\n    float x;                // Rectangle top-left corner position x\n    float y;                // Rectangle top-left corner position y\n    float width;            // Rectangle width\n    float height;           // Rectangle height\n} Rectangle;\n\n// Image, pixel data stored in CPU memory (RAM)\ntypedef struct Image {\n    void *data;             // Image raw data\n    int width;              // Image base width\n    int height;             // Image base height\n    int mipmaps;            // Mipmap levels, 1 by default\n    int format;             // Data format (PixelFormat type)\n} Image;\n\n// Texture, tex data stored in GPU memory (VRAM)\ntypedef struct Texture {\n    unsigned int id;        // OpenGL texture id\n    int width;              // Texture base width\n    int height;             // Texture base height\n    int mipmaps;            // Mipmap levels, 1 by default\n    int format;             // Data format (PixelFormat type)\n} Texture;\n\n// Texture2D, same as Texture\ntypedef Texture Texture2D;\n\n// TextureCubemap, same as Texture\ntypedef Texture TextureCubemap;\n\n// RenderTexture, fbo for texture rendering\ntypedef struct RenderTexture {\n    unsigned int id;        // OpenGL framebuffer object id\n    Texture texture;        // Color buffer attachment texture\n    Texture depth;          // Depth buffer attachment texture\n} RenderTexture;\n\n// RenderTexture2D, same as RenderTexture\ntypedef RenderTexture RenderTexture2D;\n\n// NPatchInfo, n-patch layout info\ntypedef struct NPatchInfo {\n    Rectangle source;       // Texture source rectangle\n    int left;               // Left border offset\n    int top;                // Top border offset\n    int right;              // Right border offset\n    int bottom;             // Bottom border offset\n    int layout;             // Layout of the n-patch: 3x3, 1x3 or 3x1\n} NPatchInfo;\n\n// GlyphInfo, font characters glyphs info\ntypedef struct GlyphInfo {\n    int value;              // Character value (Unicode)\n    int offsetX;            // Character offset X when drawing\n    int offsetY;            // Character offset Y when drawing\n    int advanceX;           // Character advance position X\n    Image image;            // Character image data\n} GlyphInfo;\n\n// Font, font texture and GlyphInfo array data\ntypedef struct Font {\n    int baseSize;           // Base size (default chars height)\n    int glyphCount;         // Number of glyph characters\n    int glyphPadding;       // Padding around the glyph characters\n    Texture2D texture;      // Texture atlas containing the glyphs\n    Rectangle *recs;        // Rectangles in texture for the glyphs\n    GlyphInfo *glyphs;      // Glyphs info data\n} Font;\n\n// Camera, defines position/orientation in 3d space\ntypedef struct Camera3D {\n    Vector3 position;       // Camera position\n    Vector3 target;         // Camera target it looks-at\n    Vector3 up;             // Camera up vector (rotation over its axis)\n    float fovy;             // Camera field-of-view apperture in Y (degrees) in perspective, used as near plane width in orthographic\n    int projection;         // Camera projection: CAMERA_PERSPECTIVE or CAMERA_ORTHOGRAPHIC\n} Camera3D;\n\ntypedef Camera3D Camera;    // Camera type fallback, defaults to Camera3D\n\n// Camera2D, defines position/orientation in 2d space\ntypedef struct Camera2D {\n    Vector2 offset;         // Camera offset (displacement from target)\n    Vector2 target;         // Camera target (rotation and zoom origin)\n    float rotation;         // Camera rotation in degrees\n    float zoom;             // Camera zoom (scaling), should be 1.0f by default\n} Camera2D;\n\n// Mesh, vertex data and vao/vbo\ntypedef struct Mesh {\n    int vertexCount;        // Number of vertices stored in arrays\n    int triangleCount;      // Number of triangles stored (indexed or not)\n\n    // Vertex attributes data\n    float *vertices;        // Vertex position (XYZ - 3 components per vertex) (shader-location = 0)\n    float *texcoords;       // Vertex texture coordinates (UV - 2 components per vertex) (shader-location = 1)\n    float *texcoords2;      // Vertex second texture coordinates (useful for lightmaps) (shader-location = 5)\n    float *normals;         // Vertex normals (XYZ - 3 components per vertex) (shader-location = 2)\n    float *tangents;        // Vertex tangents (XYZW - 4 components per vertex) (shader-location = 4)\n    unsigned char *colors;      // Vertex colors (RGBA - 4 components per vertex) (shader-location = 3)\n    unsigned short *indices;    // Vertex indices (in case vertex data comes indexed)\n\n    // Animation vertex data\n    float *animVertices;    // Animated vertex positions (after bones transformations)\n    float *animNormals;     // Animated normals (after bones transformations)\n    unsigned char *boneIds; // Vertex bone ids, max 255 bone ids, up to 4 bones influence by vertex (skinning)\n    float *boneWeights;     // Vertex bone weight, up to 4 bones influence by vertex (skinning)\n\n    // OpenGL identifiers\n    unsigned int vaoId;     // OpenGL Vertex Array Object id\n    unsigned int *vboId;    // OpenGL Vertex Buffer Objects id (default vertex data)\n} Mesh;\n\n// Shader\ntypedef struct Shader {\n    unsigned int id;        // Shader program id\n    int *locs;              // Shader locations array (RL_MAX_SHADER_LOCATIONS)\n} Shader;\n\n// MaterialMap\ntypedef struct MaterialMap {\n    Texture2D texture;      // Material map texture\n    Color color;            // Material map color\n    float value;            // Material map value\n} MaterialMap;\n\n// Material, includes shader and maps\ntypedef struct Material {\n    Shader shader;          // Material shader\n    MaterialMap *maps;      // Material maps array (MAX_MATERIAL_MAPS)\n    float params[4];        // Material generic parameters (if required)\n} Material;\n\n// Transform, vectex transformation data\ntypedef struct Transform {\n    Vector3 translation;    // Translation\n    Quaternion rotation;    // Rotation\n    Vector3 scale;          // Scale\n} Transform;\n\n// Bone, skeletal animation bone\ntypedef struct BoneInfo {\n    char name[32];          // Bone name\n    int parent;             // Bone parent\n} BoneInfo;\n\n// Model, meshes, materials and animation data\ntypedef struct Model {\n    Matrix transform;       // Local transform matrix\n\n    int meshCount;          // Number of meshes\n    int materialCount;      // Number of materials\n    Mesh *meshes;           // Meshes array\n    Material *materials;    // Materials array\n    int *meshMaterial;      // Mesh material number\n\n    // Animation data\n    int boneCount;          // Number of bones\n    BoneInfo *bones;        // Bones information (skeleton)\n    Transform *bindPose;    // Bones base transformation (pose)\n} Model;\n\n// ModelAnimation\ntypedef struct ModelAnimation {\n    int boneCount;          // Number of bones\n    int frameCount;         // Number of animation frames\n    BoneInfo *bones;        // Bones information (skeleton)\n    Transform **framePoses; // Poses array by frame\n} ModelAnimation;\n\n// Ray, ray for raycasting\ntypedef struct Ray {\n    Vector3 position;       // Ray position (origin)\n    Vector3 direction;      // Ray direction\n} Ray;\n\n// RayCollision, ray hit information\ntypedef struct RayCollision {\n    bool hit;               // Did the ray hit something?\n    float distance;         // Distance to nearest hit\n    Vector3 point;          // Point of nearest hit\n    Vector3 normal;         // Surface normal of hit\n} RayCollision;\n\n// BoundingBox\ntypedef struct BoundingBox {\n    Vector3 min;            // Minimum vertex box-corner\n    Vector3 max;            // Maximum vertex box-corner\n} BoundingBox;\n\n// Wave, audio wave data\ntypedef struct Wave {\n    unsigned int frameCount;    // Total number of frames (considering channels)\n    unsigned int sampleRate;    // Frequency (samples per second)\n    unsigned int sampleSize;    // Bit depth (bits per sample): 8, 16, 32 (24 not supported)\n    unsigned int channels;      // Number of channels (1-mono, 2-stereo, ...)\n    void *data;                 // Buffer data pointer\n} Wave;\n\ntypedef struct rAudioBuffer rAudioBuffer;\n\n// AudioStream, custom audio stream\ntypedef struct AudioStream {\n    rAudioBuffer *buffer;       // Pointer to internal data used by the audio system\n\n    unsigned int sampleRate;    // Frequency (samples per second)\n    unsigned int sampleSize;    // Bit depth (bits per sample): 8, 16, 32 (24 not supported)\n    unsigned int channels;      // Number of channels (1-mono, 2-stereo, ...)\n} AudioStream;\n\n// Sound\ntypedef struct Sound {\n    AudioStream stream;         // Audio stream\n    unsigned int frameCount;    // Total number of frames (considering channels)\n} Sound;\n\n// Music, audio stream, anything longer than ~10 seconds should be streamed\ntypedef struct Music {\n    AudioStream stream;         // Audio stream\n    unsigned int frameCount;    // Total number of frames (considering channels)\n    bool looping;               // Music looping enable\n\n    int ctxType;                // Type of music context (audio filetype)\n    void *ctxData;              // Audio context data, depends on type\n} Music;\n\n// VrDeviceInfo, Head-Mounted-Display device parameters\ntypedef struct VrDeviceInfo {\n    int hResolution;                // Horizontal resolution in pixels\n    int vResolution;                // Vertical resolution in pixels\n    float hScreenSize;              // Horizontal size in meters\n    float vScreenSize;              // Vertical size in meters\n    float vScreenCenter;            // Screen center in meters\n    float eyeToScreenDistance;      // Distance between eye and display in meters\n    float lensSeparationDistance;   // Lens separation distance in meters\n    float interpupillaryDistance;   // IPD (distance between pupils) in meters\n    float lensDistortionValues[4];  // Lens distortion constant parameters\n    float chromaAbCorrection[4];    // Chromatic aberration correction parameters\n} VrDeviceInfo;\n\n// VrStereoConfig, VR stereo rendering configuration for simulator\ntypedef struct VrStereoConfig {\n    Matrix projection[2];           // VR projection matrices (per eye)\n    Matrix viewOffset[2];           // VR view offset matrices (per eye)\n    float leftLensCenter[2];        // VR left lens center\n    float rightLensCenter[2];       // VR right lens center\n    float leftScreenCenter[2];      // VR left screen center\n    float rightScreenCenter[2];     // VR right screen center\n    float scale[2];                 // VR distortion scale\n    float scaleIn[2];               // VR distortion scale in\n} VrStereoConfig;\n\n//----------------------------------------------------------------------------------\n// Enumerators Definition\n//----------------------------------------------------------------------------------\n// System/Window config flags\n// NOTE: Every bit registers one state (use it with bit masks)\n// By default all flags are set to 0\ntypedef enum {\n    FLAG_VSYNC_HINT         = 0x00000040,   // Set to try enabling V-Sync on GPU\n    FLAG_FULLSCREEN_MODE    = 0x00000002,   // Set to run program in fullscreen\n    FLAG_WINDOW_RESIZABLE   = 0x00000004,   // Set to allow resizable window\n    FLAG_WINDOW_UNDECORATED = 0x00000008,   // Set to disable window decoration (frame and buttons)\n    FLAG_WINDOW_HIDDEN      = 0x00000080,   // Set to hide window\n    FLAG_WINDOW_MINIMIZED   = 0x00000200,   // Set to minimize window (iconify)\n    FLAG_WINDOW_MAXIMIZED   = 0x00000400,   // Set to maximize window (expanded to monitor)\n    FLAG_WINDOW_UNFOCUSED   = 0x00000800,   // Set to window non focused\n    FLAG_WINDOW_TOPMOST     = 0x00001000,   // Set to window always on top\n    FLAG_WINDOW_ALWAYS_RUN  = 0x00000100,   // Set to allow windows running while minimized\n    FLAG_WINDOW_TRANSPARENT = 0x00000010,   // Set to allow transparent framebuffer\n    FLAG_WINDOW_HIGHDPI     = 0x00002000,   // Set to support HighDPI\n    FLAG_MSAA_4X_HINT       = 0x00000020,   // Set to try enabling MSAA 4X\n    FLAG_INTERLACED_HINT    = 0x00010000    // Set to try enabling interlaced video format (for V3D)\n} ConfigFlags;\n\n// Trace log level\n// NOTE: Organized by priority level\ntypedef enum {\n    LOG_ALL = 0,        // Display all logs\n    LOG_TRACE,          // Trace logging, intended for internal use only\n    LOG_DEBUG,          // Debug logging, used for internal debugging, it should be disabled on release builds\n    LOG_INFO,           // Info logging, used for program execution info\n    LOG_WARNING,        // Warning logging, used on recoverable failures\n    LOG_ERROR,          // Error logging, used on unrecoverable failures\n    LOG_FATAL,          // Fatal logging, used to abort program: exit(EXIT_FAILURE)\n    LOG_NONE            // Disable logging\n} TraceLogLevel;\n\n// Keyboard keys (US keyboard layout)\n// NOTE: Use GetKeyPressed() to allow redefining\n// required keys for alternative layouts\ntypedef enum {\n    KEY_NULL            = 0,        // Key: NULL, used for no key pressed\n    // Alphanumeric keys\n    KEY_APOSTROPHE      = 39,       // Key: '\n    KEY_COMMA           = 44,       // Key: ,\n    KEY_MINUS           = 45,       // Key: -\n    KEY_PERIOD          = 46,       // Key: .\n    KEY_SLASH           = 47,       // Key: /\n    KEY_ZERO            = 48,       // Key: 0\n    KEY_ONE             = 49,       // Key: 1\n    KEY_TWO             = 50,       // Key: 2\n    KEY_THREE           = 51,       // Key: 3\n    KEY_FOUR            = 52,       // Key: 4\n    KEY_FIVE            = 53,       // Key: 5\n    KEY_SIX             = 54,       // Key: 6\n    KEY_SEVEN           = 55,       // Key: 7\n    KEY_EIGHT           = 56,       // Key: 8\n    KEY_NINE            = 57,       // Key: 9\n    KEY_SEMICOLON       = 59,       // Key: ;\n    KEY_EQUAL           = 61,       // Key: =\n    KEY_A               = 65,       // Key: A | a\n    KEY_B               = 66,       // Key: B | b\n    KEY_C               = 67,       // Key: C | c\n    KEY_D               = 68,       // Key: D | d\n    KEY_E               = 69,       // Key: E | e\n    KEY_F               = 70,       // Key: F | f\n    KEY_G               = 71,       // Key: G | g\n    KEY_H               = 72,       // Key: H | h\n    KEY_I               = 73,       // Key: I | i\n    KEY_J               = 74,       // Key: J | j\n    KEY_K               = 75,       // Key: K | k\n    KEY_L               = 76,       // Key: L | l\n    KEY_M               = 77,       // Key: M | m\n    KEY_N               = 78,       // Key: N | n\n    KEY_O               = 79,       // Key: O | o\n    KEY_P               = 80,       // Key: P | p\n    KEY_Q               = 81,       // Key: Q | q\n    KEY_R               = 82,       // Key: R | r\n    KEY_S               = 83,       // Key: S | s\n    KEY_T               = 84,       // Key: T | t\n    KEY_U               = 85,       // Key: U | u\n    KEY_V               = 86,       // Key: V | v\n    KEY_W               = 87,       // Key: W | w\n    KEY_X               = 88,       // Key: X | x\n    KEY_Y               = 89,       // Key: Y | y\n    KEY_Z               = 90,       // Key: Z | z\n    KEY_LEFT_BRACKET    = 91,       // Key: [\n    KEY_BACKSLASH       = 92,       // Key: '\\'\n    KEY_RIGHT_BRACKET   = 93,       // Key: ]\n    KEY_GRAVE           = 96,       // Key: `\n    // Function keys\n    KEY_SPACE           = 32,       // Key: Space\n    KEY_ESCAPE          = 256,      // Key: Esc\n    KEY_ENTER           = 257,      // Key: Enter\n    KEY_TAB             = 258,      // Key: Tab\n    KEY_BACKSPACE       = 259,      // Key: Backspace\n    KEY_INSERT          = 260,      // Key: Ins\n    KEY_DELETE          = 261,      // Key: Del\n    KEY_RIGHT           = 262,      // Key: Cursor right\n    KEY_LEFT            = 263,      // Key: Cursor left\n    KEY_DOWN            = 264,      // Key: Cursor down\n    KEY_UP              = 265,      // Key: Cursor up\n    KEY_PAGE_UP         = 266,      // Key: Page up\n    KEY_PAGE_DOWN       = 267,      // Key: Page down\n    KEY_HOME            = 268,      // Key: Home\n    KEY_END             = 269,      // Key: End\n    KEY_CAPS_LOCK       = 280,      // Key: Caps lock\n    KEY_SCROLL_LOCK     = 281,      // Key: Scroll down\n    KEY_NUM_LOCK        = 282,      // Key: Num lock\n    KEY_PRINT_SCREEN    = 283,      // Key: Print screen\n    KEY_PAUSE           = 284,      // Key: Pause\n    KEY_F1              = 290,      // Key: F1\n    KEY_F2              = 291,      // Key: F2\n    KEY_F3              = 292,      // Key: F3\n    KEY_F4              = 293,      // Key: F4\n    KEY_F5              = 294,      // Key: F5\n    KEY_F6              = 295,      // Key: F6\n    KEY_F7              = 296,      // Key: F7\n    KEY_F8              = 297,      // Key: F8\n    KEY_F9              = 298,      // Key: F9\n    KEY_F10             = 299,      // Key: F10\n    KEY_F11             = 300,      // Key: F11\n    KEY_F12             = 301,      // Key: F12\n    KEY_LEFT_SHIFT      = 340,      // Key: Shift left\n    KEY_LEFT_CONTROL    = 341,      // Key: Control left\n    KEY_LEFT_ALT        = 342,      // Key: Alt left\n    KEY_LEFT_SUPER      = 343,      // Key: Super left\n    KEY_RIGHT_SHIFT     = 344,      // Key: Shift right\n    KEY_RIGHT_CONTROL   = 345,      // Key: Control right\n    KEY_RIGHT_ALT       = 346,      // Key: Alt right\n    KEY_RIGHT_SUPER     = 347,      // Key: Super right\n    KEY_KB_MENU         = 348,      // Key: KB menu\n    // Keypad keys\n    KEY_KP_0            = 320,      // Key: Keypad 0\n    KEY_KP_1            = 321,      // Key: Keypad 1\n    KEY_KP_2            = 322,      // Key: Keypad 2\n    KEY_KP_3            = 323,      // Key: Keypad 3\n    KEY_KP_4            = 324,      // Key: Keypad 4\n    KEY_KP_5            = 325,      // Key: Keypad 5\n    KEY_KP_6            = 326,      // Key: Keypad 6\n    KEY_KP_7            = 327,      // Key: Keypad 7\n    KEY_KP_8            = 328,      // Key: Keypad 8\n    KEY_KP_9            = 329,      // Key: Keypad 9\n    KEY_KP_DECIMAL      = 330,      // Key: Keypad .\n    KEY_KP_DIVIDE       = 331,      // Key: Keypad /\n    KEY_KP_MULTIPLY     = 332,      // Key: Keypad *\n    KEY_KP_SUBTRACT     = 333,      // Key: Keypad -\n    KEY_KP_ADD          = 334,      // Key: Keypad +\n    KEY_KP_ENTER        = 335,      // Key: Keypad Enter\n    KEY_KP_EQUAL        = 336,      // Key: Keypad =\n    // Android key buttons\n    KEY_BACK            = 4,        // Key: Android back button\n    KEY_MENU            = 82,       // Key: Android menu button\n    KEY_VOLUME_UP       = 24,       // Key: Android volume up button\n    KEY_VOLUME_DOWN     = 25        // Key: Android volume down button\n} KeyboardKey;\n\n// Add backwards compatibility support for deprecated names\n#define MOUSE_LEFT_BUTTON   MOUSE_BUTTON_LEFT\n#define MOUSE_RIGHT_BUTTON  MOUSE_BUTTON_RIGHT\n#define MOUSE_MIDDLE_BUTTON MOUSE_BUTTON_MIDDLE\n\n// Mouse buttons\ntypedef enum {\n    MOUSE_BUTTON_LEFT    = 0,       // Mouse button left\n    MOUSE_BUTTON_RIGHT   = 1,       // Mouse button right\n    MOUSE_BUTTON_MIDDLE  = 2,       // Mouse button middle (pressed wheel)\n    MOUSE_BUTTON_SIDE    = 3,       // Mouse button side (advanced mouse device)\n    MOUSE_BUTTON_EXTRA   = 4,       // Mouse button extra (advanced mouse device)\n    MOUSE_BUTTON_FORWARD = 5,       // Mouse button fordward (advanced mouse device)\n    MOUSE_BUTTON_BACK    = 6,       // Mouse button back (advanced mouse device)\n} MouseButton;\n\n// Mouse cursor\ntypedef enum {\n    MOUSE_CURSOR_DEFAULT       = 0,     // Default pointer shape\n    MOUSE_CURSOR_ARROW         = 1,     // Arrow shape\n    MOUSE_CURSOR_IBEAM         = 2,     // Text writing cursor shape\n    MOUSE_CURSOR_CROSSHAIR     = 3,     // Cross shape\n    MOUSE_CURSOR_POINTING_HAND = 4,     // Pointing hand cursor\n    MOUSE_CURSOR_RESIZE_EW     = 5,     // Horizontal resize/move arrow shape\n    MOUSE_CURSOR_RESIZE_NS     = 6,     // Vertical resize/move arrow shape\n    MOUSE_CURSOR_RESIZE_NWSE   = 7,     // Top-left to bottom-right diagonal resize/move arrow shape\n    MOUSE_CURSOR_RESIZE_NESW   = 8,     // The top-right to bottom-left diagonal resize/move arrow shape\n    MOUSE_CURSOR_RESIZE_ALL    = 9,     // The omni-directional resize/move cursor shape\n    MOUSE_CURSOR_NOT_ALLOWED   = 10     // The operation-not-allowed shape\n} MouseCursor;\n\n// Gamepad buttons\ntypedef enum {\n    GAMEPAD_BUTTON_UNKNOWN = 0,         // Unknown button, just for error checking\n    GAMEPAD_BUTTON_LEFT_FACE_UP,        // Gamepad left DPAD up button\n    GAMEPAD_BUTTON_LEFT_FACE_RIGHT,     // Gamepad left DPAD right button\n    GAMEPAD_BUTTON_LEFT_FACE_DOWN,      // Gamepad left DPAD down button\n    GAMEPAD_BUTTON_LEFT_FACE_LEFT,      // Gamepad left DPAD left button\n    GAMEPAD_BUTTON_RIGHT_FACE_UP,       // Gamepad right button up (i.e. PS3: Triangle, Xbox: Y)\n    GAMEPAD_BUTTON_RIGHT_FACE_RIGHT,    // Gamepad right button right (i.e. PS3: Square, Xbox: X)\n    GAMEPAD_BUTTON_RIGHT_FACE_DOWN,     // Gamepad right button down (i.e. PS3: Cross, Xbox: A)\n    GAMEPAD_BUTTON_RIGHT_FACE_LEFT,     // Gamepad right button left (i.e. PS3: Circle, Xbox: B)\n    GAMEPAD_BUTTON_LEFT_TRIGGER_1,      // Gamepad top/back trigger left (first), it could be a trailing button\n    GAMEPAD_BUTTON_LEFT_TRIGGER_2,      // Gamepad top/back trigger left (second), it could be a trailing button\n    GAMEPAD_BUTTON_RIGHT_TRIGGER_1,     // Gamepad top/back trigger right (one), it could be a trailing button\n    GAMEPAD_BUTTON_RIGHT_TRIGGER_2,     // Gamepad top/back trigger right (second), it could be a trailing button\n    GAMEPAD_BUTTON_MIDDLE_LEFT,         // Gamepad center buttons, left one (i.e. PS3: Select)\n    GAMEPAD_BUTTON_MIDDLE,              // Gamepad center buttons, middle one (i.e. PS3: PS, Xbox: XBOX)\n    GAMEPAD_BUTTON_MIDDLE_RIGHT,        // Gamepad center buttons, right one (i.e. PS3: Start)\n    GAMEPAD_BUTTON_LEFT_THUMB,          // Gamepad joystick pressed button left\n    GAMEPAD_BUTTON_RIGHT_THUMB          // Gamepad joystick pressed button right\n} GamepadButton;\n\n// Gamepad axis\ntypedef enum {\n    GAMEPAD_AXIS_LEFT_X        = 0,     // Gamepad left stick X axis\n    GAMEPAD_AXIS_LEFT_Y        = 1,     // Gamepad left stick Y axis\n    GAMEPAD_AXIS_RIGHT_X       = 2,     // Gamepad right stick X axis\n    GAMEPAD_AXIS_RIGHT_Y       = 3,     // Gamepad right stick Y axis\n    GAMEPAD_AXIS_LEFT_TRIGGER  = 4,     // Gamepad back trigger left, pressure level: [1..-1]\n    GAMEPAD_AXIS_RIGHT_TRIGGER = 5      // Gamepad back trigger right, pressure level: [1..-1]\n} GamepadAxis;\n\n// Material map index\ntypedef enum {\n    MATERIAL_MAP_ALBEDO    = 0,     // Albedo material (same as: MATERIAL_MAP_DIFFUSE)\n    MATERIAL_MAP_METALNESS,         // Metalness material (same as: MATERIAL_MAP_SPECULAR)\n    MATERIAL_MAP_NORMAL,            // Normal material\n    MATERIAL_MAP_ROUGHNESS,         // Roughness material\n    MATERIAL_MAP_OCCLUSION,         // Ambient occlusion material\n    MATERIAL_MAP_EMISSION,          // Emission material\n    MATERIAL_MAP_HEIGHT,            // Heightmap material\n    MATERIAL_MAP_CUBEMAP,           // Cubemap material (NOTE: Uses GL_TEXTURE_CUBE_MAP)\n    MATERIAL_MAP_IRRADIANCE,        // Irradiance material (NOTE: Uses GL_TEXTURE_CUBE_MAP)\n    MATERIAL_MAP_PREFILTER,         // Prefilter material (NOTE: Uses GL_TEXTURE_CUBE_MAP)\n    MATERIAL_MAP_BRDF               // Brdf material\n} MaterialMapIndex;\n\n#define MATERIAL_MAP_DIFFUSE      MATERIAL_MAP_ALBEDO\n#define MATERIAL_MAP_SPECULAR     MATERIAL_MAP_METALNESS\n\n// Shader location index\ntypedef enum {\n    SHADER_LOC_VERTEX_POSITION = 0, // Shader location: vertex attribute: position\n    SHADER_LOC_VERTEX_TEXCOORD01,   // Shader location: vertex attribute: texcoord01\n    SHADER_LOC_VERTEX_TEXCOORD02,   // Shader location: vertex attribute: texcoord02\n    SHADER_LOC_VERTEX_NORMAL,       // Shader location: vertex attribute: normal\n    SHADER_LOC_VERTEX_TANGENT,      // Shader location: vertex attribute: tangent\n    SHADER_LOC_VERTEX_COLOR,        // Shader location: vertex attribute: color\n    SHADER_LOC_MATRIX_MVP,          // Shader location: matrix uniform: model-view-projection\n    SHADER_LOC_MATRIX_VIEW,         // Shader location: matrix uniform: view (camera transform)\n    SHADER_LOC_MATRIX_PROJECTION,   // Shader location: matrix uniform: projection\n    SHADER_LOC_MATRIX_MODEL,        // Shader location: matrix uniform: model (transform)\n    SHADER_LOC_MATRIX_NORMAL,       // Shader location: matrix uniform: normal\n    SHADER_LOC_VECTOR_VIEW,         // Shader location: vector uniform: view\n    SHADER_LOC_COLOR_DIFFUSE,       // Shader location: vector uniform: diffuse color\n    SHADER_LOC_COLOR_SPECULAR,      // Shader location: vector uniform: specular color\n    SHADER_LOC_COLOR_AMBIENT,       // Shader location: vector uniform: ambient color\n    SHADER_LOC_MAP_ALBEDO,          // Shader location: sampler2d texture: albedo (same as: SHADER_LOC_MAP_DIFFUSE)\n    SHADER_LOC_MAP_METALNESS,       // Shader location: sampler2d texture: metalness (same as: SHADER_LOC_MAP_SPECULAR)\n    SHADER_LOC_MAP_NORMAL,          // Shader location: sampler2d texture: normal\n    SHADER_LOC_MAP_ROUGHNESS,       // Shader location: sampler2d texture: roughness\n    SHADER_LOC_MAP_OCCLUSION,       // Shader location: sampler2d texture: occlusion\n    SHADER_LOC_MAP_EMISSION,        // Shader location: sampler2d texture: emission\n    SHADER_LOC_MAP_HEIGHT,          // Shader location: sampler2d texture: height\n    SHADER_LOC_MAP_CUBEMAP,         // Shader location: samplerCube texture: cubemap\n    SHADER_LOC_MAP_IRRADIANCE,      // Shader location: samplerCube texture: irradiance\n    SHADER_LOC_MAP_PREFILTER,       // Shader location: samplerCube texture: prefilter\n    SHADER_LOC_MAP_BRDF             // Shader location: sampler2d texture: brdf\n} ShaderLocationIndex;\n\n#define SHADER_LOC_MAP_DIFFUSE      SHADER_LOC_MAP_ALBEDO\n#define SHADER_LOC_MAP_SPECULAR     SHADER_LOC_MAP_METALNESS\n\n// Shader uniform data type\ntypedef enum {\n    SHADER_UNIFORM_FLOAT = 0,       // Shader uniform type: float\n    SHADER_UNIFORM_VEC2,            // Shader uniform type: vec2 (2 float)\n    SHADER_UNIFORM_VEC3,            // Shader uniform type: vec3 (3 float)\n    SHADER_UNIFORM_VEC4,            // Shader uniform type: vec4 (4 float)\n    SHADER_UNIFORM_INT,             // Shader uniform type: int\n    SHADER_UNIFORM_IVEC2,           // Shader uniform type: ivec2 (2 int)\n    SHADER_UNIFORM_IVEC3,           // Shader uniform type: ivec3 (3 int)\n    SHADER_UNIFORM_IVEC4,           // Shader uniform type: ivec4 (4 int)\n    SHADER_UNIFORM_SAMPLER2D        // Shader uniform type: sampler2d\n} ShaderUniformDataType;\n\n// Shader attribute data types\ntypedef enum {\n    SHADER_ATTRIB_FLOAT = 0,        // Shader attribute type: float\n    SHADER_ATTRIB_VEC2,             // Shader attribute type: vec2 (2 float)\n    SHADER_ATTRIB_VEC3,             // Shader attribute type: vec3 (3 float)\n    SHADER_ATTRIB_VEC4              // Shader attribute type: vec4 (4 float)\n} ShaderAttributeDataType;\n\n// Pixel formats\n// NOTE: Support depends on OpenGL version and platform\ntypedef enum {\n    PIXELFORMAT_UNCOMPRESSED_GRAYSCALE = 1, // 8 bit per pixel (no alpha)\n    PIXELFORMAT_UNCOMPRESSED_GRAY_ALPHA,    // 8*2 bpp (2 channels)\n    PIXELFORMAT_UNCOMPRESSED_R5G6B5,        // 16 bpp\n    PIXELFORMAT_UNCOMPRESSED_R8G8B8,        // 24 bpp\n    PIXELFORMAT_UNCOMPRESSED_R5G5B5A1,      // 16 bpp (1 bit alpha)\n    PIXELFORMAT_UNCOMPRESSED_R4G4B4A4,      // 16 bpp (4 bit alpha)\n    PIXELFORMAT_UNCOMPRESSED_R8G8B8A8,      // 32 bpp\n    PIXELFORMAT_UNCOMPRESSED_R32,           // 32 bpp (1 channel - float)\n    PIXELFORMAT_UNCOMPRESSED_R32G32B32,     // 32*3 bpp (3 channels - float)\n    PIXELFORMAT_UNCOMPRESSED_R32G32B32A32,  // 32*4 bpp (4 channels - float)\n    PIXELFORMAT_COMPRESSED_DXT1_RGB,        // 4 bpp (no alpha)\n    PIXELFORMAT_COMPRESSED_DXT1_RGBA,       // 4 bpp (1 bit alpha)\n    PIXELFORMAT_COMPRESSED_DXT3_RGBA,       // 8 bpp\n    PIXELFORMAT_COMPRESSED_DXT5_RGBA,       // 8 bpp\n    PIXELFORMAT_COMPRESSED_ETC1_RGB,        // 4 bpp\n    PIXELFORMAT_COMPRESSED_ETC2_RGB,        // 4 bpp\n    PIXELFORMAT_COMPRESSED_ETC2_EAC_RGBA,   // 8 bpp\n    PIXELFORMAT_COMPRESSED_PVRT_RGB,        // 4 bpp\n    PIXELFORMAT_COMPRESSED_PVRT_RGBA,       // 4 bpp\n    PIXELFORMAT_COMPRESSED_ASTC_4x4_RGBA,   // 8 bpp\n    PIXELFORMAT_COMPRESSED_ASTC_8x8_RGBA    // 2 bpp\n} PixelFormat;\n\n// Texture parameters: filter mode\n// NOTE 1: Filtering considers mipmaps if available in the texture\n// NOTE 2: Filter is accordingly set for minification and magnification\ntypedef enum {\n    TEXTURE_FILTER_POINT = 0,               // No filter, just pixel aproximation\n    TEXTURE_FILTER_BILINEAR,                // Linear filtering\n    TEXTURE_FILTER_TRILINEAR,               // Trilinear filtering (linear with mipmaps)\n    TEXTURE_FILTER_ANISOTROPIC_4X,          // Anisotropic filtering 4x\n    TEXTURE_FILTER_ANISOTROPIC_8X,          // Anisotropic filtering 8x\n    TEXTURE_FILTER_ANISOTROPIC_16X,         // Anisotropic filtering 16x\n} TextureFilter;\n\n// Texture parameters: wrap mode\ntypedef enum {\n    TEXTURE_WRAP_REPEAT = 0,                // Repeats texture in tiled mode\n    TEXTURE_WRAP_CLAMP,                     // Clamps texture to edge pixel in tiled mode\n    TEXTURE_WRAP_MIRROR_REPEAT,             // Mirrors and repeats the texture in tiled mode\n    TEXTURE_WRAP_MIRROR_CLAMP               // Mirrors and clamps to border the texture in tiled mode\n} TextureWrap;\n\n// Cubemap layouts\ntypedef enum {\n    CUBEMAP_LAYOUT_AUTO_DETECT = 0,         // Automatically detect layout type\n    CUBEMAP_LAYOUT_LINE_VERTICAL,           // Layout is defined by a vertical line with faces\n    CUBEMAP_LAYOUT_LINE_HORIZONTAL,         // Layout is defined by an horizontal line with faces\n    CUBEMAP_LAYOUT_CROSS_THREE_BY_FOUR,     // Layout is defined by a 3x4 cross with cubemap faces\n    CUBEMAP_LAYOUT_CROSS_FOUR_BY_THREE,     // Layout is defined by a 4x3 cross with cubemap faces\n    CUBEMAP_LAYOUT_PANORAMA                 // Layout is defined by a panorama image (equirectangular map)\n} CubemapLayout;\n\n// Font type, defines generation method\ntypedef enum {\n    FONT_DEFAULT = 0,               // Default font generation, anti-aliased\n    FONT_BITMAP,                    // Bitmap font generation, no anti-aliasing\n    FONT_SDF                        // SDF font generation, requires external shader\n} FontType;\n\n// Color blending modes (pre-defined)\ntypedef enum {\n    BLEND_ALPHA = 0,                // Blend textures considering alpha (default)\n    BLEND_ADDITIVE,                 // Blend textures adding colors\n    BLEND_MULTIPLIED,               // Blend textures multiplying colors\n    BLEND_ADD_COLORS,               // Blend textures adding colors (alternative)\n    BLEND_SUBTRACT_COLORS,          // Blend textures subtracting colors (alternative)\n    BLEND_CUSTOM                    // Belnd textures using custom src/dst factors (use rlSetBlendMode())\n} BlendMode;\n\n// Gesture\n// NOTE: It could be used as flags to enable only some gestures\ntypedef enum {\n    GESTURE_NONE        = 0,        // No gesture\n    GESTURE_TAP         = 1,        // Tap gesture\n    GESTURE_DOUBLETAP   = 2,        // Double tap gesture\n    GESTURE_HOLD        = 4,        // Hold gesture\n    GESTURE_DRAG        = 8,        // Drag gesture\n    GESTURE_SWIPE_RIGHT = 16,       // Swipe right gesture\n    GESTURE_SWIPE_LEFT  = 32,       // Swipe left gesture\n    GESTURE_SWIPE_UP    = 64,       // Swipe up gesture\n    GESTURE_SWIPE_DOWN  = 128,      // Swipe down gesture\n    GESTURE_PINCH_IN    = 256,      // Pinch in gesture\n    GESTURE_PINCH_OUT   = 512       // Pinch out gesture\n} Gesture;\n\n// Camera system modes\ntypedef enum {\n    CAMERA_CUSTOM = 0,              // Custom camera\n    CAMERA_FREE,                    // Free camera\n    CAMERA_ORBITAL,                 // Orbital camera\n    CAMERA_FIRST_PERSON,            // First person camera\n    CAMERA_THIRD_PERSON             // Third person camera\n} CameraMode;\n\n// Camera projection\ntypedef enum {\n    CAMERA_PERSPECTIVE = 0,         // Perspective projection\n    CAMERA_ORTHOGRAPHIC             // Orthographic projection\n} CameraProjection;\n\n// N-patch layout\ntypedef enum {\n    NPATCH_NINE_PATCH = 0,          // Npatch layout: 3x3 tiles\n    NPATCH_THREE_PATCH_VERTICAL,    // Npatch layout: 1x3 tiles\n    NPATCH_THREE_PATCH_HORIZONTAL   // Npatch layout: 3x1 tiles\n} NPatchLayout;\n\n// Callbacks to hook some internal functions\n// WARNING: This callbacks are intended for advance users\ntypedef void (*TraceLogCallback)(int logLevel, const char *text, va_list args);  // Logging: Redirect trace log messages\ntypedef unsigned char *(*LoadFileDataCallback)(const char *fileName, unsigned int *bytesRead);      // FileIO: Load binary data\ntypedef bool (*SaveFileDataCallback)(const char *fileName, void *data, unsigned int bytesToWrite);  // FileIO: Save binary data\ntypedef char *(*LoadFileTextCallback)(const char *fileName);       // FileIO: Load text data\ntypedef bool (*SaveFileTextCallback)(const char *fileName, char *text);     // FileIO: Save text data\n\n//------------------------------------------------------------------------------------\n// Global Variables Definition\n//------------------------------------------------------------------------------------\n// It's lonely here...\n\n//------------------------------------------------------------------------------------\n// Window and Graphics Device Functions (Module: core)\n//------------------------------------------------------------------------------------\n\n#if defined(__cplusplus)\nextern \"C\" {            // Prevents name mangling of functions\n#endif\n\n// Window-related functions\nRLAPI void InitWindow(int width, int height, const char *title);  // Initialize window and OpenGL context\nRLAPI bool WindowShouldClose(void);                               // Check if KEY_ESCAPE pressed or Close icon pressed\nRLAPI void CloseRaylib(void);                                     // Close window and unload OpenGL context\nRLAPI bool IsWindowReady(void);                                   // Check if window has been initialized successfully\nRLAPI bool IsWindowFullscreen(void);                              // Check if window is currently fullscreen\nRLAPI bool IsWindowHidden(void);                                  // Check if window is currently hidden (only PLATFORM_DESKTOP)\nRLAPI bool IsWindowMinimized(void);                               // Check if window is currently minimized (only PLATFORM_DESKTOP)\nRLAPI bool IsWindowMaximized(void);                               // Check if window is currently maximized (only PLATFORM_DESKTOP)\nRLAPI bool IsWindowFocused(void);                                 // Check if window is currently focused (only PLATFORM_DESKTOP)\nRLAPI bool IsWindowResized(void);                                 // Check if window has been resized last frame\nRLAPI bool IsWindowState(unsigned int flag);                      // Check if one specific window flag is enabled\nRLAPI void SetWindowState(unsigned int flags);                    // Set window configuration state using flags\nRLAPI void ClearWindowState(unsigned int flags);                  // Clear window configuration state flags\nRLAPI void ToggleFullscreen(void);                                // Toggle window state: fullscreen/windowed (only PLATFORM_DESKTOP)\nRLAPI void MaximizeWindow(void);                                  // Set window state: maximized, if resizable (only PLATFORM_DESKTOP)\nRLAPI void MinimizeWindow(void);                                  // Set window state: minimized, if resizable (only PLATFORM_DESKTOP)\nRLAPI void RestoreWindow(void);                                   // Set window state: not minimized/maximized (only PLATFORM_DESKTOP)\nRLAPI void SetWindowIcon(Image image);                            // Set icon for window (only PLATFORM_DESKTOP)\nRLAPI void SetWindowTitle(const char *title);                     // Set title for window (only PLATFORM_DESKTOP)\nRLAPI void SetWindowPosition(int x, int y);                       // Set window position on screen (only PLATFORM_DESKTOP)\nRLAPI void SetWindowMonitor(int monitor);                         // Set monitor for the current window (fullscreen mode)\nRLAPI void SetWindowMinSize(int width, int height);               // Set window minimum dimensions (for FLAG_WINDOW_RESIZABLE)\nRLAPI void SetWindowSize(int width, int height);                  // Set window dimensions\nRLAPI void *GetWindowHandle(void);                                // Get native window handle\nRLAPI int GetScreenWidth(void);                                   // Get current screen width\nRLAPI int GetScreenHeight(void);                                  // Get current screen height\nRLAPI int GetMonitorCount(void);                                  // Get number of connected monitors\nRLAPI int GetCurrentMonitor(void);                                // Get current connected monitor\nRLAPI Vector2 GetMonitorPosition(int monitor);                    // Get specified monitor position\nRLAPI int GetMonitorWidth(int monitor);                           // Get specified monitor width (max available by monitor)\nRLAPI int GetMonitorHeight(int monitor);                          // Get specified monitor height (max available by monitor)\nRLAPI int GetMonitorPhysicalWidth(int monitor);                   // Get specified monitor physical width in millimetres\nRLAPI int GetMonitorPhysicalHeight(int monitor);                  // Get specified monitor physical height in millimetres\nRLAPI int GetMonitorRefreshRate(int monitor);                     // Get specified monitor refresh rate\nRLAPI Vector2 GetWindowPosition(void);                            // Get window position XY on monitor\nRLAPI Vector2 GetWindowScaleDPI(void);                            // Get window scale DPI factor\nRLAPI const char *GetMonitorName(int monitor);                    // Get the human-readable, UTF-8 encoded name of the primary monitor\nRLAPI void SetClipboardText(const char *text);                    // Set clipboard text content\nRLAPI const char *GetClipboardText(void);                         // Get clipboard text content\n\n// Custom frame control functions\n// NOTE: Those functions are intended for advance users that want full control over the frame processing\n// By default EndDrawing() does this job: draws everything + SwapScreenBuffer() + manage frame timming + PollInputEvents()\n// To avoid that behaviour and control frame processes manually, enable in config.h: SUPPORT_CUSTOM_FRAME_CONTROL\nRLAPI void SwapScreenBuffer(void);                                // Swap back buffer with front buffer (screen drawing)\nRLAPI void PollInputEvents(void);                                 // Register all input events\nRLAPI void WaitTime(float ms);                                    // Wait for some milliseconds (halt program execution)\n\n// Cursor-related functions\nRLAPI void ShowCursor(void);                                      // Shows cursor\nRLAPI void HideCursor(void);                                      // Hides cursor\nRLAPI bool IsCursorHidden(void);                                  // Check if cursor is not visible\nRLAPI void EnableCursor(void);                                    // Enables cursor (unlock cursor)\nRLAPI void DisableCursor(void);                                   // Disables cursor (lock cursor)\nRLAPI bool IsCursorOnScreen(void);                                // Check if cursor is on the screen\n\n// Drawing-related functions\nRLAPI void ClearBackground(Color color);                          // Set background color (framebuffer clear color)\nRLAPI void BeginDrawing(void);                                    // Setup canvas (framebuffer) to start drawing\nRLAPI void EndDrawing(void);                                      // End canvas drawing and swap buffers (double buffering)\nRLAPI void BeginMode2D(Camera2D camera);                          // Begin 2D mode with custom camera (2D)\nRLAPI void EndMode2D(void);                                       // Ends 2D mode with custom camera\nRLAPI void BeginMode3D(Camera3D camera);                          // Begin 3D mode with custom camera (3D)\nRLAPI void EndMode3D(void);                                       // Ends 3D mode and returns to default 2D orthographic mode\nRLAPI void BeginTextureMode(RenderTexture2D target);              // Begin drawing to render texture\nRLAPI void EndTextureMode(void);                                  // Ends drawing to render texture\nRLAPI void BeginShaderMode(Shader shader);                        // Begin custom shader drawing\nRLAPI void EndShaderMode(void);                                   // End custom shader drawing (use default shader)\nRLAPI void BeginBlendMode(int mode);                              // Begin blending mode (alpha, additive, multiplied, subtract, custom)\nRLAPI void EndBlendMode(void);                                    // End blending mode (reset to default: alpha blending)\nRLAPI void BeginScissorMode(int x, int y, int width, int height); // Begin scissor mode (define screen area for following drawing)\nRLAPI void EndScissorMode(void);                                  // End scissor mode\nRLAPI void BeginVrStereoMode(VrStereoConfig config);              // Begin stereo rendering (requires VR simulator)\nRLAPI void EndVrStereoMode(void);                                 // End stereo rendering (requires VR simulator)\n\n// VR stereo config functions for VR simulator\nRLAPI VrStereoConfig LoadVrStereoConfig(VrDeviceInfo device);     // Load VR stereo config for VR simulator device parameters\nRLAPI void UnloadVrStereoConfig(VrStereoConfig config);           // Unload VR stereo config\n\n// Shader management functions\n// NOTE: Shader functionality is not available on OpenGL 1.1\nRLAPI Shader LoadShader(const char *vsFileName, const char *fsFileName);   // Load shader from files and bind default locations\nRLAPI Shader LoadShaderFromMemory(const char *vsCode, const char *fsCode); // Load shader from code strings and bind default locations\nRLAPI int GetShaderLocation(Shader shader, const char *uniformName);       // Get shader uniform location\nRLAPI int GetShaderLocationAttrib(Shader shader, const char *attribName);  // Get shader attribute location\nRLAPI void SetShaderValue(Shader shader, int locIndex, const void *value, int uniformType);               // Set shader uniform value\nRLAPI void SetShaderValueV(Shader shader, int locIndex, const void *value, int uniformType, int count);   // Set shader uniform value vector\nRLAPI void SetShaderValueMatrix(Shader shader, int locIndex, Matrix mat);         // Set shader uniform value (matrix 4x4)\nRLAPI void SetShaderValueTexture(Shader shader, int locIndex, Texture2D texture); // Set shader uniform value for texture (sampler2d)\nRLAPI void UnloadShader(Shader shader);                                    // Unload shader from GPU memory (VRAM)\n\n// Screen-space-related functions\nRLAPI Ray GetMouseRay(Vector2 mousePosition, Camera camera);      // Get a ray trace from mouse position\nRLAPI Matrix GetCameraMatrix(Camera camera);                      // Get camera transform matrix (view matrix)\nRLAPI Matrix GetCameraMatrix2D(Camera2D camera);                  // Get camera 2d transform matrix\nRLAPI Vector2 GetWorldToScreen(Vector3 position, Camera camera);  // Get the screen space position for a 3d world space position\nRLAPI Vector2 GetWorldToScreenEx(Vector3 position, Camera camera, int width, int height); // Get size position for a 3d world space position\nRLAPI Vector2 GetWorldToScreen2D(Vector2 position, Camera2D camera); // Get the screen space position for a 2d camera world space position\nRLAPI Vector2 GetScreenToWorld2D(Vector2 position, Camera2D camera); // Get the world space position for a 2d camera screen space position\n\n// Timing-related functions\nRLAPI void SetTargetFPS(int fps);                                 // Set target FPS (maximum)\nRLAPI int GetFPS(void);                                           // Get current FPS\nRLAPI float GetFrameTime(void);                                   // Get time in seconds for last frame drawn (delta time)\nRLAPI double GetTime(void);                                       // Get elapsed time in seconds since InitWindow()\n\n// Misc. functions\nRLAPI int GetRandomValue(int min, int max);                       // Get a random value between min and max (both included)\nRLAPI void SetRandomSeed(unsigned int seed);                      // Set the seed for the random number generator\nRLAPI void TakeScreenshot(const char *fileName);                  // Takes a screenshot of current screen (filename extension defines format)\nRLAPI void SetConfigFlags(unsigned int flags);                    // Setup init configuration flags (view FLAGS)\n\nRLAPI void TraceLog(int logLevel, const char *text, ...);         // Show trace log messages (LOG_DEBUG, LOG_INFO, LOG_WARNING, LOG_ERROR...)\nRLAPI void SetTraceLogLevel(int logLevel);                        // Set the current threshold (minimum) log level\nRLAPI void *MemAlloc(int size);                                   // Internal memory allocator\nRLAPI void *MemRealloc(void *ptr, int size);                      // Internal memory reallocator\nRLAPI void MemFree(void *ptr);                                    // Internal memory free\n\n// Set custom callbacks\n// WARNING: Callbacks setup is intended for advance users\nRLAPI void SetTraceLogCallback(TraceLogCallback callback);         // Set custom trace log\nRLAPI void SetLoadFileDataCallback(LoadFileDataCallback callback); // Set custom file binary data loader\nRLAPI void SetSaveFileDataCallback(SaveFileDataCallback callback); // Set custom file binary data saver\nRLAPI void SetLoadFileTextCallback(LoadFileTextCallback callback); // Set custom file text data loader\nRLAPI void SetSaveFileTextCallback(SaveFileTextCallback callback); // Set custom file text data saver\n\n// Files management functions\nRLAPI unsigned char *LoadFileData(const char *fileName, unsigned int *bytesRead);     // Load file data as byte array (read)\nRLAPI void UnloadFileData(unsigned char *data);                   // Unload file data allocated by LoadFileData()\nRLAPI bool SaveFileData(const char *fileName, void *data, unsigned int bytesToWrite); // Save data to file from byte array (write), returns true on success\nRLAPI char *LoadFileText(const char *fileName);                   // Load text data from file (read), returns a '\\0' terminated string\nRLAPI void UnloadFileText(char *text);                            // Unload file text data allocated by LoadFileText()\nRLAPI bool SaveFileText(const char *fileName, char *text);        // Save text data to file (write), string must be '\\0' terminated, returns true on success\nRLAPI bool FileExists(const char *fileName);                      // Check if file exists\nRLAPI bool DirectoryExists(const char *dirPath);                  // Check if a directory path exists\nRLAPI bool IsFileExtension(const char *fileName, const char *ext);// Check file extension (including point: .png, .wav)\nRLAPI const char *GetFileExtension(const char *fileName);         // Get pointer to extension for a filename string (includes dot: '.png')\nRLAPI const char *GetFileName(const char *filePath);              // Get pointer to filename for a path string\nRLAPI const char *GetFileNameWithoutExt(const char *filePath);    // Get filename string without extension (uses static string)\nRLAPI const char *GetDirectoryPath(const char *filePath);         // Get full path for a given fileName with path (uses static string)\nRLAPI const char *GetPrevDirectoryPath(const char *dirPath);      // Get previous directory path for a given path (uses static string)\nRLAPI const char *GetWorkingDirectory(void);                      // Get current working directory (uses static string)\nRLAPI char **GetDirectoryFiles(const char *dirPath, int *count);  // Get filenames in a directory path (memory should be freed)\nRLAPI void ClearDirectoryFiles(void);                             // Clear directory files paths buffers (free memory)\nRLAPI bool ChangeDirectory(const char *dir);                      // Change working directory, return true on success\nRLAPI bool IsFileDropped(void);                                   // Check if a file has been dropped into window\nRLAPI char **GetDroppedFiles(int *count);                         // Get dropped files names (memory should be freed)\nRLAPI void ClearDroppedFiles(void);                               // Clear dropped files paths buffer (free memory)\nRLAPI long GetFileModTime(const char *fileName);                  // Get file modification time (last write time)\n\n// Compression/Encoding functionality\nRLAPI unsigned char *CompressData(unsigned char *data, int dataLength, int *compDataLength);        // Compress data (DEFLATE algorithm)\nRLAPI unsigned char *DecompressData(unsigned char *compData, int compDataLength, int *dataLength);  // Decompress data (DEFLATE algorithm)\nRLAPI char *EncodeDataBase64(const unsigned char *data, int dataLength, int *outputLength);         // Encode data to Base64 string\nRLAPI unsigned char *DecodeDataBase64(unsigned char *data, int *outputLength);                      // Decode Base64 string data\n\n// Persistent storage management\nRLAPI bool SaveStorageValue(unsigned int position, int value);    // Save integer value to storage file (to defined position), returns true on success\nRLAPI int LoadStorageValue(unsigned int position);                // Load integer value from storage file (from defined position)\n\nRLAPI void OpenURL(const char *url);                              // Open URL with default system browser (if available)\n\n//------------------------------------------------------------------------------------\n// Input Handling Functions (Module: core)\n//------------------------------------------------------------------------------------\n\n// Input-related functions: keyboard\nRLAPI bool IsKeyPressed(int key);                             // Check if a key has been pressed once\nRLAPI bool IsKeyDown(int key);                                // Check if a key is being pressed\nRLAPI bool IsKeyReleased(int key);                            // Check if a key has been released once\nRLAPI bool IsKeyUp(int key);                                  // Check if a key is NOT being pressed\nRLAPI void SetExitKey(int key);                               // Set a custom key to exit program (default is ESC)\nRLAPI int GetKeyPressed(void);                                // Get key pressed (keycode), call it multiple times for keys queued, returns 0 when the queue is empty\nRLAPI int GetCharPressed(void);                               // Get char pressed (unicode), call it multiple times for chars queued, returns 0 when the queue is empty\n\n// Input-related functions: gamepads\nRLAPI bool IsGamepadAvailable(int gamepad);                   // Check if a gamepad is available\nRLAPI const char *GetGamepadName(int gamepad);                // Get gamepad internal name id\nRLAPI bool IsGamepadButtonPressed(int gamepad, int button);   // Check if a gamepad button has been pressed once\nRLAPI bool IsGamepadButtonDown(int gamepad, int button);      // Check if a gamepad button is being pressed\nRLAPI bool IsGamepadButtonReleased(int gamepad, int button);  // Check if a gamepad button has been released once\nRLAPI bool IsGamepadButtonUp(int gamepad, int button);        // Check if a gamepad button is NOT being pressed\nRLAPI int GetGamepadButtonPressed(void);                      // Get the last gamepad button pressed\nRLAPI int GetGamepadAxisCount(int gamepad);                   // Get gamepad axis count for a gamepad\nRLAPI float GetGamepadAxisMovement(int gamepad, int axis);    // Get axis movement value for a gamepad axis\nRLAPI int SetGamepadMappings(const char *mappings);           // Set internal gamepad mappings (SDL_GameControllerDB)\n\n// Input-related functions: mouse\nRLAPI bool IsMouseButtonPressed(int button);                  // Check if a mouse button has been pressed once\nRLAPI bool IsMouseButtonDown(int button);                     // Check if a mouse button is being pressed\nRLAPI bool IsMouseButtonReleased(int button);                 // Check if a mouse button has been released once\nRLAPI bool IsMouseButtonUp(int button);                       // Check if a mouse button is NOT being pressed\nRLAPI int GetMouseX(void);                                    // Get mouse position X\nRLAPI int GetMouseY(void);                                    // Get mouse position Y\nRLAPI Vector2 GetMousePosition(void);                         // Get mouse position XY\nRLAPI Vector2 GetMouseDelta(void);                            // Get mouse delta between frames\nRLAPI void SetMousePosition(int x, int y);                    // Set mouse position XY\nRLAPI void SetMouseOffset(int offsetX, int offsetY);          // Set mouse offset\nRLAPI void SetMouseScale(float scaleX, float scaleY);         // Set mouse scaling\nRLAPI float GetMouseWheelMove(void);                          // Get mouse wheel movement Y\nRLAPI void SetMouseCursor(int cursor);                        // Set mouse cursor\n\n// Input-related functions: touch\nRLAPI int GetTouchX(void);                                    // Get touch position X for touch point 0 (relative to screen size)\nRLAPI int GetTouchY(void);                                    // Get touch position Y for touch point 0 (relative to screen size)\nRLAPI Vector2 GetTouchPosition(int index);                    // Get touch position XY for a touch point index (relative to screen size)\nRLAPI int GetTouchPointId(int index);                         // Get touch point identifier for given index\nRLAPI int GetTouchPointCount(void);                           // Get number of touch points\n\n//------------------------------------------------------------------------------------\n// Gestures and Touch Handling Functions (Module: rgestures)\n//------------------------------------------------------------------------------------\nRLAPI void SetGesturesEnabled(unsigned int flags);      // Enable a set of gestures using flags\nRLAPI bool IsGestureDetected(int gesture);              // Check if a gesture have been detected\nRLAPI int GetGestureDetected(void);                     // Get latest detected gesture\nRLAPI float GetGestureHoldDuration(void);               // Get gesture hold time in milliseconds\nRLAPI Vector2 GetGestureDragVector(void);               // Get gesture drag vector\nRLAPI float GetGestureDragAngle(void);                  // Get gesture drag angle\nRLAPI Vector2 GetGesturePinchVector(void);              // Get gesture pinch delta\nRLAPI float GetGesturePinchAngle(void);                 // Get gesture pinch angle\n\n//------------------------------------------------------------------------------------\n// Camera System Functions (Module: rcamera)\n//------------------------------------------------------------------------------------\nRLAPI void SetCameraMode(Camera camera, int mode);      // Set camera mode (multiple camera modes available)\nRLAPI void UpdateCamera(Camera *camera);                // Update camera position for selected mode\n\nRLAPI void SetCameraPanControl(int keyPan);             // Set camera pan key to combine with mouse movement (free camera)\nRLAPI void SetCameraAltControl(int keyAlt);             // Set camera alt key to combine with mouse movement (free camera)\nRLAPI void SetCameraSmoothZoomControl(int keySmoothZoom); // Set camera smooth zoom key to combine with mouse (free camera)\nRLAPI void SetCameraMoveControls(int keyFront, int keyBack, int keyRight, int keyLeft, int keyUp, int keyDown); // Set camera move controls (1st person and 3rd person cameras)\n\n//------------------------------------------------------------------------------------\n// Basic Shapes Drawing Functions (Module: shapes)\n//------------------------------------------------------------------------------------\n// Set texture and rectangle to be used on shapes drawing\n// NOTE: It can be useful when using basic shapes and one single font,\n// defining a font char white rectangle would allow drawing everything in a single draw call\nRLAPI void SetShapesTexture(Texture2D texture, Rectangle source);       // Set texture and rectangle to be used on shapes drawing\n\n// Basic shapes drawing functions\nRLAPI void DrawPixel(int posX, int posY, Color color);                                                   // Draw a pixel\nRLAPI void DrawPixelV(Vector2 position, Color color);                                                    // Draw a pixel (Vector version)\nRLAPI void DrawLine(int startPosX, int startPosY, int endPosX, int endPosY, Color color);                // Draw a line\nRLAPI void DrawLineV(Vector2 startPos, Vector2 endPos, Color color);                                     // Draw a line (Vector version)\nRLAPI void DrawLineEx(Vector2 startPos, Vector2 endPos, float thick, Color color);                       // Draw a line defining thickness\nRLAPI void DrawLineBezier(Vector2 startPos, Vector2 endPos, float thick, Color color);                   // Draw a line using cubic-bezier curves in-out\nRLAPI void DrawLineBezierQuad(Vector2 startPos, Vector2 endPos, Vector2 controlPos, float thick, Color color); // Draw line using quadratic bezier curves with a control point\nRLAPI void DrawLineBezierCubic(Vector2 startPos, Vector2 endPos, Vector2 startControlPos, Vector2 endControlPos, float thick, Color color); // Draw line using cubic bezier curves with 2 control points\nRLAPI void DrawLineStrip(Vector2 *points, int pointCount, Color color);                                  // Draw lines sequence\nRLAPI void DrawCircle(int centerX, int centerY, float radius, Color color);                              // Draw a color-filled circle\nRLAPI void DrawCircleSector(Vector2 center, float radius, float startAngle, float endAngle, int segments, Color color);      // Draw a piece of a circle\nRLAPI void DrawCircleSectorLines(Vector2 center, float radius, float startAngle, float endAngle, int segments, Color color); // Draw circle sector outline\nRLAPI void DrawCircleGradient(int centerX, int centerY, float radius, Color color1, Color color2);       // Draw a gradient-filled circle\nRLAPI void DrawCircleV(Vector2 center, float radius, Color color);                                       // Draw a color-filled circle (Vector version)\nRLAPI void DrawCircleLines(int centerX, int centerY, float radius, Color color);                         // Draw circle outline\nRLAPI void DrawEllipse(int centerX, int centerY, float radiusH, float radiusV, Color color);             // Draw ellipse\nRLAPI void DrawEllipseLines(int centerX, int centerY, float radiusH, float radiusV, Color color);        // Draw ellipse outline\nRLAPI void DrawRing(Vector2 center, float innerRadius, float outerRadius, float startAngle, float endAngle, int segments, Color color); // Draw ring\nRLAPI void DrawRingLines(Vector2 center, float innerRadius, float outerRadius, float startAngle, float endAngle, int segments, Color color);    // Draw ring outline\nRLAPI void DrawRectangle(int posX, int posY, int width, int height, Color color);                        // Draw a color-filled rectangle\nRLAPI void DrawRectangleV(Vector2 position, Vector2 size, Color color);                                  // Draw a color-filled rectangle (Vector version)\nRLAPI void DrawRectangleRec(Rectangle rec, Color color);                                                 // Draw a color-filled rectangle\nRLAPI void DrawRectanglePro(Rectangle rec, Vector2 origin, float rotation, Color color);                 // Draw a color-filled rectangle with pro parameters\nRLAPI void DrawRectangleGradientV(int posX, int posY, int width, int height, Color color1, Color color2);// Draw a vertical-gradient-filled rectangle\nRLAPI void DrawRectangleGradientH(int posX, int posY, int width, int height, Color color1, Color color2);// Draw a horizontal-gradient-filled rectangle\nRLAPI void DrawRectangleGradientEx(Rectangle rec, Color col1, Color col2, Color col3, Color col4);       // Draw a gradient-filled rectangle with custom vertex colors\nRLAPI void DrawRectangleLines(int posX, int posY, int width, int height, Color color);                   // Draw rectangle outline\nRLAPI void DrawRectangleLinesEx(Rectangle rec, float lineThick, Color color);                            // Draw rectangle outline with extended parameters\nRLAPI void DrawRectangleRounded(Rectangle rec, float roundness, int segments, Color color);              // Draw rectangle with rounded edges\nRLAPI void DrawRectangleRoundedLines(Rectangle rec, float roundness, int segments, float lineThick, Color color); // Draw rectangle with rounded edges outline\nRLAPI void DrawTriangle(Vector2 v1, Vector2 v2, Vector2 v3, Color color);                                // Draw a color-filled triangle (vertex in counter-clockwise order!)\nRLAPI void DrawTriangleLines(Vector2 v1, Vector2 v2, Vector2 v3, Color color);                           // Draw triangle outline (vertex in counter-clockwise order!)\nRLAPI void DrawTriangleFan(Vector2 *points, int pointCount, Color color);                                // Draw a triangle fan defined by points (first vertex is the center)\nRLAPI void DrawTriangleStrip(Vector2 *points, int pointCount, Color color);                              // Draw a triangle strip defined by points\nRLAPI void DrawPoly(Vector2 center, int sides, float radius, float rotation, Color color);               // Draw a regular polygon (Vector version)\nRLAPI void DrawPolyLines(Vector2 center, int sides, float radius, float rotation, Color color);          // Draw a polygon outline of n sides\nRLAPI void DrawPolyLinesEx(Vector2 center, int sides, float radius, float rotation, float lineThick, Color color); // Draw a polygon outline of n sides with extended parameters\n\n// Basic shapes collision detection functions\nRLAPI bool CheckCollisionRecs(Rectangle rec1, Rectangle rec2);                                           // Check collision between two rectangles\nRLAPI bool CheckCollisionCircles(Vector2 center1, float radius1, Vector2 center2, float radius2);        // Check collision between two circles\nRLAPI bool CheckCollisionCircleRec(Vector2 center, float radius, Rectangle rec);                         // Check collision between circle and rectangle\nRLAPI bool CheckCollisionPointRec(Vector2 point, Rectangle rec);                                         // Check if point is inside rectangle\nRLAPI bool CheckCollisionPointCircle(Vector2 point, Vector2 center, float radius);                       // Check if point is inside circle\nRLAPI bool CheckCollisionPointTriangle(Vector2 point, Vector2 p1, Vector2 p2, Vector2 p3);               // Check if point is inside a triangle\nRLAPI bool CheckCollisionLines(Vector2 startPos1, Vector2 endPos1, Vector2 startPos2, Vector2 endPos2, Vector2 *collisionPoint); // Check the collision between two lines defined by two points each, returns collision point by reference\nRLAPI bool CheckCollisionPointLine(Vector2 point, Vector2 p1, Vector2 p2, int threshold);                // Check if point belongs to line created between two points [p1] and [p2] with defined margin in pixels [threshold]\nRLAPI Rectangle GetCollisionRec(Rectangle rec1, Rectangle rec2);                                         // Get collision rectangle for two rectangles collision\n\n//------------------------------------------------------------------------------------\n// Texture Loading and Drawing Functions (Module: textures)\n//------------------------------------------------------------------------------------\n\n// Image loading functions\n// NOTE: This functions do not require GPU access\nRLAPI Image LoadImage(const char *fileName);                                                             // Load image from file into CPU memory (RAM)\nRLAPI Image LoadImageRaw(const char *fileName, int width, int height, int format, int headerSize);       // Load image from RAW file data\nRLAPI Image LoadImageAnim(const char *fileName, int *frames);                                            // Load image sequence from file (frames appended to image.data)\nRLAPI Image LoadImageFromMemory(const char *fileType, const unsigned char *fileData, int dataSize);      // Load image from memory buffer, fileType refers to extension: i.e. '.png'\nRLAPI Image LoadImageFromTexture(Texture2D texture);                                                     // Load image from GPU texture data\nRLAPI Image LoadImageFromScreen(void);                                                                   // Load image from screen buffer and (screenshot)\nRLAPI void UnloadImage(Image image);                                                                     // Unload image from CPU memory (RAM)\nRLAPI bool ExportImage(Image image, const char *fileName);                                               // Export image data to file, returns true on success\nRLAPI bool ExportImageAsCode(Image image, const char *fileName);                                         // Export image as code file defining an array of bytes, returns true on success\n\n// Image generation functions\nRLAPI Image GenImageColor(int width, int height, Color color);                                           // Generate image: plain color\nRLAPI Image GenImageGradientV(int width, int height, Color top, Color bottom);                           // Generate image: vertical gradient\nRLAPI Image GenImageGradientH(int width, int height, Color left, Color right);                           // Generate image: horizontal gradient\nRLAPI Image GenImageGradientRadial(int width, int height, float density, Color inner, Color outer);      // Generate image: radial gradient\nRLAPI Image GenImageChecked(int width, int height, int checksX, int checksY, Color col1, Color col2);    // Generate image: checked\nRLAPI Image GenImageWhiteNoise(int width, int height, float factor);                                     // Generate image: white noise\nRLAPI Image GenImageCellular(int width, int height, int tileSize);                                       // Generate image: cellular algorithm, bigger tileSize means bigger cells\n\n// Image manipulation functions\nRLAPI Image ImageCopy(Image image);                                                                      // Create an image duplicate (useful for transformations)\nRLAPI Image ImageFromImage(Image image, Rectangle rec);                                                  // Create an image from another image piece\nRLAPI Image ImageText(const char *text, int fontSize, Color color);                                      // Create an image from text (default font)\nRLAPI Image ImageTextEx(Font font, const char *text, float fontSize, float spacing, Color tint);         // Create an image from text (custom sprite font)\nRLAPI void ImageFormat(Image *image, int newFormat);                                                     // Convert image data to desired format\nRLAPI void ImageToPOT(Image *image, Color fill);                                                         // Convert image to POT (power-of-two)\nRLAPI void ImageCrop(Image *image, Rectangle crop);                                                      // Crop an image to a defined rectangle\nRLAPI void ImageAlphaCrop(Image *image, float threshold);                                                // Crop image depending on alpha value\nRLAPI void ImageAlphaClear(Image *image, Color color, float threshold);                                  // Clear alpha channel to desired color\nRLAPI void ImageAlphaMask(Image *image, Image alphaMask);                                                // Apply alpha mask to image\nRLAPI void ImageAlphaPremultiply(Image *image);                                                          // Premultiply alpha channel\nRLAPI void ImageResize(Image *image, int newWidth, int newHeight);                                       // Resize image (Bicubic scaling algorithm)\nRLAPI void ImageResizeNN(Image *image, int newWidth,int newHeight);                                      // Resize image (Nearest-Neighbor scaling algorithm)\nRLAPI void ImageResizeCanvas(Image *image, int newWidth, int newHeight, int offsetX, int offsetY, Color fill);  // Resize canvas and fill with color\nRLAPI void ImageMipmaps(Image *image);                                                                   // Compute all mipmap levels for a provided image\nRLAPI void ImageDither(Image *image, int rBpp, int gBpp, int bBpp, int aBpp);                            // Dither image data to 16bpp or lower (Floyd-Steinberg dithering)\nRLAPI void ImageFlipVertical(Image *image);                                                              // Flip image vertically\nRLAPI void ImageFlipHorizontal(Image *image);                                                            // Flip image horizontally\nRLAPI void ImageRotateCW(Image *image);                                                                  // Rotate image clockwise 90deg\nRLAPI void ImageRotateCCW(Image *image);                                                                 // Rotate image counter-clockwise 90deg\nRLAPI void ImageColorTint(Image *image, Color color);                                                    // Modify image color: tint\nRLAPI void ImageColorInvert(Image *image);                                                               // Modify image color: invert\nRLAPI void ImageColorGrayscale(Image *image);                                                            // Modify image color: grayscale\nRLAPI void ImageColorContrast(Image *image, float contrast);                                             // Modify image color: contrast (-100 to 100)\nRLAPI void ImageColorBrightness(Image *image, int brightness);                                           // Modify image color: brightness (-255 to 255)\nRLAPI void ImageColorReplace(Image *image, Color color, Color replace);                                  // Modify image color: replace color\nRLAPI Color *LoadImageColors(Image image);                                                               // Load color data from image as a Color array (RGBA - 32bit)\nRLAPI Color *LoadImagePalette(Image image, int maxPaletteSize, int *colorCount);                         // Load colors palette from image as a Color array (RGBA - 32bit)\nRLAPI void UnloadImageColors(Color *colors);                                                             // Unload color data loaded with LoadImageColors()\nRLAPI void UnloadImagePalette(Color *colors);                                                            // Unload colors palette loaded with LoadImagePalette()\nRLAPI Rectangle GetImageAlphaBorder(Image image, float threshold);                                       // Get image alpha border rectangle\nRLAPI Color GetImageColor(Image image, int x, int y);                                                    // Get image pixel color at (x, y) position\n\n// Image drawing functions\n// NOTE: Image software-rendering functions (CPU)\nRLAPI void ImageClearBackground(Image *dst, Color color);                                                // Clear image background with given color\nRLAPI void ImageDrawPixel(Image *dst, int posX, int posY, Color color);                                  // Draw pixel within an image\nRLAPI void ImageDrawPixelV(Image *dst, Vector2 position, Color color);                                   // Draw pixel within an image (Vector version)\nRLAPI void ImageDrawLine(Image *dst, int startPosX, int startPosY, int endPosX, int endPosY, Color color); // Draw line within an image\nRLAPI void ImageDrawLineV(Image *dst, Vector2 start, Vector2 end, Color color);                          // Draw line within an image (Vector version)\nRLAPI void ImageDrawCircle(Image *dst, int centerX, int centerY, int radius, Color color);               // Draw circle within an image\nRLAPI void ImageDrawCircleV(Image *dst, Vector2 center, int radius, Color color);                        // Draw circle within an image (Vector version)\nRLAPI void ImageDrawRectangle(Image *dst, int posX, int posY, int width, int height, Color color);       // Draw rectangle within an image\nRLAPI void ImageDrawRectangleV(Image *dst, Vector2 position, Vector2 size, Color color);                 // Draw rectangle within an image (Vector version)\nRLAPI void ImageDrawRectangleRec(Image *dst, Rectangle rec, Color color);                                // Draw rectangle within an image\nRLAPI void ImageDrawRectangleLines(Image *dst, Rectangle rec, int thick, Color color);                   // Draw rectangle lines within an image\nRLAPI void ImageDraw(Image *dst, Image src, Rectangle srcRec, Rectangle dstRec, Color tint);             // Draw a source image within a destination image (tint applied to source)\nRLAPI void ImageDrawText(Image *dst, const char *text, int posX, int posY, int fontSize, Color color);   // Draw text (using default font) within an image (destination)\nRLAPI void ImageDrawTextEx(Image *dst, Font font, const char *text, Vector2 position, float fontSize, float spacing, Color tint); // Draw text (custom sprite font) within an image (destination)\n\n// Texture loading functions\n// NOTE: These functions require GPU access\nRLAPI Texture2D LoadTexture(const char *fileName);                                                       // Load texture from file into GPU memory (VRAM)\nRLAPI Texture2D LoadTextureFromImage(Image image);                                                       // Load texture from image data\nRLAPI TextureCubemap LoadTextureCubemap(Image image, int layout);                                        // Load cubemap from image, multiple image cubemap layouts supported\nRLAPI RenderTexture2D LoadRenderTexture(int width, int height);                                          // Load texture for rendering (framebuffer)\nRLAPI void UnloadTexture(Texture2D texture);                                                             // Unload texture from GPU memory (VRAM)\nRLAPI void UnloadRenderTexture(RenderTexture2D target);                                                  // Unload render texture from GPU memory (VRAM)\nRLAPI void UpdateTexture(Texture2D texture, const void *pixels);                                         // Update GPU texture with new data\nRLAPI void UpdateTextureRec(Texture2D texture, Rectangle rec, const void *pixels);                       // Update GPU texture rectangle with new data\n\n// Texture configuration functions\nRLAPI void GenTextureMipmaps(Texture2D *texture);                                                        // Generate GPU mipmaps for a texture\nRLAPI void SetTextureFilter(Texture2D texture, int filter);                                              // Set texture scaling filter mode\nRLAPI void SetTextureWrap(Texture2D texture, int wrap);                                                  // Set texture wrapping mode\n\n// Texture drawing functions\nRLAPI void DrawTexture(Texture2D texture, int posX, int posY, Color tint);                               // Draw a Texture2D\nRLAPI void DrawTextureV(Texture2D texture, Vector2 position, Color tint);                                // Draw a Texture2D with position defined as Vector2\nRLAPI void DrawTextureEx(Texture2D texture, Vector2 position, float rotation, float scale, Color tint);  // Draw a Texture2D with extended parameters\nRLAPI void DrawTextureRec(Texture2D texture, Rectangle source, Vector2 position, Color tint);            // Draw a part of a texture defined by a rectangle\nRLAPI void DrawTextureQuad(Texture2D texture, Vector2 tiling, Vector2 offset, Rectangle quad, Color tint);  // Draw texture quad with tiling and offset parameters\nRLAPI void DrawTextureTiled(Texture2D texture, Rectangle source, Rectangle dest, Vector2 origin, float rotation, float scale, Color tint);      // Draw part of a texture (defined by a rectangle) with rotation and scale tiled into dest.\nRLAPI void DrawTexturePro(Texture2D texture, Rectangle source, Rectangle dest, Vector2 origin, float rotation, Color tint);           // Draw a part of a texture defined by a rectangle with 'pro' parameters\nRLAPI void DrawTextureNPatch(Texture2D texture, NPatchInfo nPatchInfo, Rectangle dest, Vector2 origin, float rotation, Color tint);   // Draws a texture (or part of it) that stretches or shrinks nicely\nRLAPI void DrawTexturePoly(Texture2D texture, Vector2 center, Vector2 *points, Vector2 *texcoords, int pointCount, Color tint);      // Draw a textured polygon\n\n// Color/pixel related functions\nRLAPI Color Fade(Color color, float alpha);                                 // Get color with alpha applied, alpha goes from 0.0f to 1.0f\nRLAPI int ColorToInt(Color color);                                          // Get hexadecimal value for a Color\nRLAPI Vector4 ColorNormalize(Color color);                                  // Get Color normalized as float [0..1]\nRLAPI Color ColorFromNormalized(Vector4 normalized);                        // Get Color from normalized values [0..1]\nRLAPI Vector3 ColorToHSV(Color color);                                      // Get HSV values for a Color, hue [0..360], saturation/value [0..1]\nRLAPI Color ColorFromHSV(float hue, float saturation, float value);         // Get a Color from HSV values, hue [0..360], saturation/value [0..1]\nRLAPI Color ColorAlpha(Color color, float alpha);                           // Get color with alpha applied, alpha goes from 0.0f to 1.0f\nRLAPI Color ColorAlphaBlend(Color dst, Color src, Color tint);              // Get src alpha-blended into dst color with tint\nRLAPI Color GetColor(unsigned int hexValue);                                // Get Color structure from hexadecimal value\nRLAPI Color GetPixelColor(void *srcPtr, int format);                        // Get Color from a source pixel pointer of certain format\nRLAPI void SetPixelColor(void *dstPtr, Color color, int format);            // Set color formatted into destination pixel pointer\nRLAPI int GetPixelDataSize(int width, int height, int format);              // Get pixel data size in bytes for certain format\n\n//------------------------------------------------------------------------------------\n// Font Loading and Text Drawing Functions (Module: text)\n//------------------------------------------------------------------------------------\n\n// Font loading/unloading functions\nRLAPI Font GetFontDefault(void);                                                            // Get the default Font\nRLAPI Font LoadFont(const char *fileName);                                                  // Load font from file into GPU memory (VRAM)\nRLAPI Font LoadFontEx(const char *fileName, int fontSize, int *fontChars, int glyphCount);  // Load font from file with extended parameters\nRLAPI Font LoadFontFromImage(Image image, Color key, int firstChar);                        // Load font from Image (XNA style)\nRLAPI Font LoadFontFromMemory(const char *fileType, const unsigned char *fileData, int dataSize, int fontSize, int *fontChars, int glyphCount); // Load font from memory buffer, fileType refers to extension: i.e. '.ttf'\nRLAPI GlyphInfo *LoadFontData(const unsigned char *fileData, int dataSize, int fontSize, int *fontChars, int glyphCount, int type);      // Load font data for further use\nRLAPI Image GenImageFontAtlas(const GlyphInfo *chars, Rectangle **recs, int glyphCount, int fontSize, int padding, int packMethod);      // Generate image font atlas using chars info\nRLAPI void UnloadFontData(GlyphInfo *chars, int glyphCount);                                 // Unload font chars info data (RAM)\nRLAPI void UnloadFont(Font font);                                                           // Unload Font from GPU memory (VRAM)\n\n// Text drawing functions\nRLAPI void DrawFPS(int posX, int posY);                                                     // Draw current FPS\nRLAPI void DrawText(const char *text, int posX, int posY, int fontSize, Color color);       // Draw text (using default font)\nRLAPI void DrawTextEx(Font font, const char *text, Vector2 position, float fontSize, float spacing, Color tint);    // Draw text using font and additional parameters\nRLAPI void DrawTextPro(Font font, const char *text, Vector2 position, Vector2 origin, float rotation, float fontSize, float spacing, Color tint); // Draw text using Font and pro parameters (rotation)\nRLAPI void DrawTextCodepoint(Font font, int codepoint, Vector2 position, float fontSize, Color tint);   // Draw one character (codepoint)\n\n// Text font info functions\nRLAPI int MeasureText(const char *text, int fontSize);                                      // Measure string width for default font\nRLAPI Vector2 MeasureTextEx(Font font, const char *text, float fontSize, float spacing);    // Measure string size for Font\nRLAPI int GetGlyphIndex(Font font, int codepoint);                                          // Get glyph index position in font for a codepoint (unicode character), fallback to '?' if not found\nRLAPI GlyphInfo GetGlyphInfo(Font font, int codepoint);                                     // Get glyph font info data for a codepoint (unicode character), fallback to '?' if not found\nRLAPI Rectangle GetGlyphAtlasRec(Font font, int codepoint);                                 // Get glyph rectangle in font atlas for a codepoint (unicode character), fallback to '?' if not found\n\n// Text codepoints management functions (unicode characters)\nRLAPI int *LoadCodepoints(const char *text, int *count);              // Load all codepoints from a UTF-8 text string, codepoints count returned by parameter\nRLAPI void UnloadCodepoints(int *codepoints);                         // Unload codepoints data from memory\nRLAPI int GetCodepointCount(const char *text);                        // Get total number of codepoints in a UTF-8 encoded string\nRLAPI int GetCodepoint(const char *text, int *bytesProcessed);        // Get next codepoint in a UTF-8 encoded string, 0x3f('?') is returned on failure\nRLAPI const char *CodepointToUTF8(int codepoint, int *byteSize);      // Encode one codepoint into UTF-8 byte array (array length returned as parameter)\nRLAPI char *TextCodepointsToUTF8(int *codepoints, int length);        // Encode text as codepoints array into UTF-8 text string (WARNING: memory must be freed!)\n\n// Text strings management functions (no UTF-8 strings, only byte chars)\n// NOTE: Some strings allocate memory internally for returned strings, just be careful!\nRLAPI int TextCopy(char *dst, const char *src);                                             // Copy one string to another, returns bytes copied\nRLAPI bool TextIsEqual(const char *text1, const char *text2);                               // Check if two text string are equal\nRLAPI unsigned int TextLength(const char *text);                                            // Get text length, checks for '\\0' ending\nRLAPI const char *TextFormat(const char *text, ...);                                        // Text formatting with variables (sprintf() style)\nRLAPI const char *TextSubtext(const char *text, int position, int length);                  // Get a piece of a text string\nRLAPI char *TextReplace(char *text, const char *replace, const char *by);                   // Replace text string (WARNING: memory must be freed!)\nRLAPI char *TextInsert(const char *text, const char *insert, int position);                 // Insert text in a position (WARNING: memory must be freed!)\nRLAPI const char *TextJoin(const char **textList, int count, const char *delimiter);        // Join text strings with delimiter\nRLAPI const char **TextSplit(const char *text, char delimiter, int *count);                 // Split text into multiple strings\nRLAPI void TextAppend(char *text, const char *append, int *position);                       // Append text at specific position and move cursor!\nRLAPI int TextFindIndex(const char *text, const char *find);                                // Find first text occurrence within a string\nRLAPI const char *TextToUpper(const char *text);                      // Get upper case version of provided string\nRLAPI const char *TextToLower(const char *text);                      // Get lower case version of provided string\nRLAPI const char *TextToPascal(const char *text);                     // Get Pascal case notation version of provided string\nRLAPI int TextToInteger(const char *text);                            // Get integer value from text (negative values not supported)\n\n//------------------------------------------------------------------------------------\n// Basic 3d Shapes Drawing Functions (Module: models)\n//------------------------------------------------------------------------------------\n\n// Basic geometric 3D shapes drawing functions\nRLAPI void DrawLine3D(Vector3 startPos, Vector3 endPos, Color color);                                    // Draw a line in 3D world space\nRLAPI void DrawPoint3D(Vector3 position, Color color);                                                   // Draw a point in 3D space, actually a small line\nRLAPI void DrawCircle3D(Vector3 center, float radius, Vector3 rotationAxis, float rotationAngle, Color color); // Draw a circle in 3D world space\nRLAPI void DrawTriangle3D(Vector3 v1, Vector3 v2, Vector3 v3, Color color);                              // Draw a color-filled triangle (vertex in counter-clockwise order!)\nRLAPI void DrawTriangleStrip3D(Vector3 *points, int pointCount, Color color);                           // Draw a triangle strip defined by points\nRLAPI void DrawCube(Vector3 position, float width, float height, float length, Color color);             // Draw cube\nRLAPI void DrawCubeV(Vector3 position, Vector3 size, Color color);                                       // Draw cube (Vector version)\nRLAPI void DrawCubeWires(Vector3 position, float width, float height, float length, Color color);        // Draw cube wires\nRLAPI void DrawCubeWiresV(Vector3 position, Vector3 size, Color color);                                  // Draw cube wires (Vector version)\nRLAPI void DrawCubeTexture(Texture2D texture, Vector3 position, float width, float height, float length, Color color); // Draw cube textured\nRLAPI void DrawCubeTextureRec(Texture2D texture, Rectangle source, Vector3 position, float width, float height, float length, Color color); // Draw cube with a region of a texture\nRLAPI void DrawSphere(Vector3 centerPos, float radius, Color color);                                     // Draw sphere\nRLAPI void DrawSphereEx(Vector3 centerPos, float radius, int rings, int slices, Color color);            // Draw sphere with extended parameters\nRLAPI void DrawSphereWires(Vector3 centerPos, float radius, int rings, int slices, Color color);         // Draw sphere wires\nRLAPI void DrawCylinder(Vector3 position, float radiusTop, float radiusBottom, float height, int slices, Color color); // Draw a cylinder/cone\nRLAPI void DrawCylinderEx(Vector3 startPos, Vector3 endPos, float startRadius, float endRadius, int sides, Color color); // Draw a cylinder with base at startPos and top at endPos\nRLAPI void DrawCylinderWires(Vector3 position, float radiusTop, float radiusBottom, float height, int slices, Color color); // Draw a cylinder/cone wires\nRLAPI void DrawCylinderWiresEx(Vector3 startPos, Vector3 endPos, float startRadius, float endRadius, int sides, Color color); // Draw a cylinder wires with base at startPos and top at endPos\nRLAPI void DrawPlane(Vector3 centerPos, Vector2 size, Color color);                                      // Draw a plane XZ\nRLAPI void DrawRay(Ray ray, Color color);                                                                // Draw a ray line\nRLAPI void DrawGrid(int slices, float spacing);                                                          // Draw a grid (centered at (0, 0, 0))\n\n//------------------------------------------------------------------------------------\n// Model 3d Loading and Drawing Functions (Module: models)\n//------------------------------------------------------------------------------------\n\n// Model management functions\nRLAPI Model LoadModel(const char *fileName);                                                // Load model from files (meshes and materials)\nRLAPI Model LoadModelFromMesh(Mesh mesh);                                                   // Load model from generated mesh (default material)\nRLAPI void UnloadModel(Model model);                                                        // Unload model (including meshes) from memory (RAM and/or VRAM)\nRLAPI void UnloadModelKeepMeshes(Model model);                                              // Unload model (but not meshes) from memory (RAM and/or VRAM)\nRLAPI BoundingBox GetModelBoundingBox(Model model);                                         // Compute model bounding box limits (considers all meshes)\n\n// Model drawing functions\nRLAPI void DrawModel(Model model, Vector3 position, float scale, Color tint);                           // Draw a model (with texture if set)\nRLAPI void DrawModelEx(Model model, Vector3 position, Vector3 rotationAxis, float rotationAngle, Vector3 scale, Color tint); // Draw a model with extended parameters\nRLAPI void DrawModelWires(Model model, Vector3 position, float scale, Color tint);                      // Draw a model wires (with texture if set)\nRLAPI void DrawModelWiresEx(Model model, Vector3 position, Vector3 rotationAxis, float rotationAngle, Vector3 scale, Color tint); // Draw a model wires (with texture if set) with extended parameters\nRLAPI void DrawBoundingBox(BoundingBox box, Color color);                                               // Draw bounding box (wires)\nRLAPI void DrawBillboard(Camera camera, Texture2D texture, Vector3 position, float size, Color tint);   // Draw a billboard texture\nRLAPI void DrawBillboardRec(Camera camera, Texture2D texture, Rectangle source, Vector3 position, Vector2 size, Color tint); // Draw a billboard texture defined by source\nRLAPI void DrawBillboardPro(Camera camera, Texture2D texture, Rectangle source, Vector3 position, Vector3 up, Vector2 size, Vector2 origin, float rotation, Color tint); // Draw a billboard texture defined by source and rotation\n\n// Mesh management functions\nRLAPI void UploadMesh(Mesh *mesh, bool dynamic);                                            // Upload mesh vertex data in GPU and provide VAO/VBO ids\nRLAPI void UpdateMeshBuffer(Mesh mesh, int index, void *data, int dataSize, int offset);    // Update mesh vertex data in GPU for a specific buffer index\nRLAPI void UnloadMesh(Mesh mesh);                                                           // Unload mesh data from CPU and GPU\nRLAPI void DrawMesh(Mesh mesh, Material material, Matrix transform);                        // Draw a 3d mesh with material and transform\nRLAPI void DrawMeshInstanced(Mesh mesh, Material material, Matrix *transforms, int instances); // Draw multiple mesh instances with material and different transforms\nRLAPI bool ExportMesh(Mesh mesh, const char *fileName);                                     // Export mesh data to file, returns true on success\nRLAPI BoundingBox GetMeshBoundingBox(Mesh mesh);                                            // Compute mesh bounding box limits\nRLAPI void GenMeshTangents(Mesh *mesh);                                                     // Compute mesh tangents\nRLAPI void GenMeshBinormals(Mesh *mesh);                                                    // Compute mesh binormals\n\n// Mesh generation functions\nRLAPI Mesh GenMeshPoly(int sides, float radius);                                            // Generate polygonal mesh\nRLAPI Mesh GenMeshPlane(float width, float length, int resX, int resZ);                     // Generate plane mesh (with subdivisions)\nRLAPI Mesh GenMeshCube(float width, float height, float length);                            // Generate cuboid mesh\nRLAPI Mesh GenMeshSphere(float radius, int rings, int slices);                              // Generate sphere mesh (standard sphere)\nRLAPI Mesh GenMeshHemiSphere(float radius, int rings, int slices);                          // Generate half-sphere mesh (no bottom cap)\nRLAPI Mesh GenMeshCylinder(float radius, float height, int slices);                         // Generate cylinder mesh\nRLAPI Mesh GenMeshCone(float radius, float height, int slices);                             // Generate cone/pyramid mesh\nRLAPI Mesh GenMeshTorus(float radius, float size, int radSeg, int sides);                   // Generate torus mesh\nRLAPI Mesh GenMeshKnot(float radius, float size, int radSeg, int sides);                    // Generate trefoil knot mesh\nRLAPI Mesh GenMeshHeightmap(Image heightmap, Vector3 size);                                 // Generate heightmap mesh from image data\nRLAPI Mesh GenMeshCubicmap(Image cubicmap, Vector3 cubeSize);                               // Generate cubes-based map mesh from image data\n\n// Material loading/unloading functions\nRLAPI Material *LoadMaterials(const char *fileName, int *materialCount);                    // Load materials from model file\nRLAPI Material LoadMaterialDefault(void);                                                   // Load default material (Supports: DIFFUSE, SPECULAR, NORMAL maps)\nRLAPI void UnloadMaterial(Material material);                                               // Unload material from GPU memory (VRAM)\nRLAPI void SetMaterialTexture(Material *material, int mapType, Texture2D texture);          // Set texture for a material map type (MATERIAL_MAP_DIFFUSE, MATERIAL_MAP_SPECULAR...)\nRLAPI void SetModelMeshMaterial(Model *model, int meshId, int materialId);                  // Set material for a mesh\n\n// Model animations loading/unloading functions\nRLAPI ModelAnimation *LoadModelAnimations(const char *fileName, unsigned int *animCount);   // Load model animations from file\nRLAPI void UpdateModelAnimation(Model model, ModelAnimation anim, int frame);               // Update model animation pose\nRLAPI void UnloadModelAnimation(ModelAnimation anim);                                       // Unload animation data\nRLAPI void UnloadModelAnimations(ModelAnimation* animations, unsigned int count);           // Unload animation array data\nRLAPI bool IsModelAnimationValid(Model model, ModelAnimation anim);                         // Check model animation skeleton match\n\n// Collision detection functions\nRLAPI bool CheckCollisionSpheres(Vector3 center1, float radius1, Vector3 center2, float radius2);       // Check collision between two spheres\nRLAPI bool CheckCollisionBoxes(BoundingBox box1, BoundingBox box2);                                     // Check collision between two bounding boxes\nRLAPI bool CheckCollisionBoxSphere(BoundingBox box, Vector3 center, float radius);                      // Check collision between box and sphere\nRLAPI RayCollision GetRayCollisionSphere(Ray ray, Vector3 center, float radius);                        // Get collision info between ray and sphere\nRLAPI RayCollision GetRayCollisionBox(Ray ray, BoundingBox box);                                        // Get collision info between ray and box\nRLAPI RayCollision GetRayCollisionModel(Ray ray, Model model);                                          // Get collision info between ray and model\nRLAPI RayCollision GetRayCollisionMesh(Ray ray, Mesh mesh, Matrix transform);                           // Get collision info between ray and mesh\nRLAPI RayCollision GetRayCollisionTriangle(Ray ray, Vector3 p1, Vector3 p2, Vector3 p3);                // Get collision info between ray and triangle\nRLAPI RayCollision GetRayCollisionQuad(Ray ray, Vector3 p1, Vector3 p2, Vector3 p3, Vector3 p4);        // Get collision info between ray and quad\n\n//------------------------------------------------------------------------------------\n// Audio Loading and Playing Functions (Module: audio)\n//------------------------------------------------------------------------------------\n\n// Audio device management functions\nRLAPI void InitAudioDevice(void);                                     // Initialize audio device and context\nRLAPI void CloseAudioDevice(void);                                    // Close the audio device and context\nRLAPI bool IsAudioDeviceReady(void);                                  // Check if audio device has been initialized successfully\nRLAPI void SetMasterVolume(float volume);                             // Set master volume (listener)\n\n// Wave/Sound loading/unloading functions\nRLAPI Wave LoadWave(const char *fileName);                            // Load wave data from file\nRLAPI Wave LoadWaveFromMemory(const char *fileType, const unsigned char *fileData, int dataSize); // Load wave from memory buffer, fileType refers to extension: i.e. '.wav'\nRLAPI Sound LoadSound(const char *fileName);                          // Load sound from file\nRLAPI Sound LoadSoundFromWave(Wave wave);                             // Load sound from wave data\nRLAPI void UpdateSound(Sound sound, const void *data, int sampleCount); // Update sound buffer with new data\nRLAPI void UnloadWave(Wave wave);                                     // Unload wave data\nRLAPI void UnloadSound(Sound sound);                                  // Unload sound\nRLAPI bool ExportWave(Wave wave, const char *fileName);               // Export wave data to file, returns true on success\nRLAPI bool ExportWaveAsCode(Wave wave, const char *fileName);         // Export wave sample data to code (.h), returns true on success\n\n// Wave/Sound management functions\nRLAPI void PlaySound(Sound sound);                                    // Play a sound\nRLAPI void StopSound(Sound sound);                                    // Stop playing a sound\nRLAPI void PauseSound(Sound sound);                                   // Pause a sound\nRLAPI void ResumeSound(Sound sound);                                  // Resume a paused sound\nRLAPI void PlaySoundMulti(Sound sound);                               // Play a sound (using multichannel buffer pool)\nRLAPI void StopSoundMulti(void);                                      // Stop any sound playing (using multichannel buffer pool)\nRLAPI int GetSoundsPlaying(void);                                     // Get number of sounds playing in the multichannel\nRLAPI bool IsSoundPlaying(Sound sound);                               // Check if a sound is currently playing\nRLAPI void SetSoundVolume(Sound sound, float volume);                 // Set volume for a sound (1.0 is max level)\nRLAPI void SetSoundPitch(Sound sound, float pitch);                   // Set pitch for a sound (1.0 is base level)\nRLAPI void WaveFormat(Wave *wave, int sampleRate, int sampleSize, int channels);  // Convert wave data to desired format\nRLAPI Wave WaveCopy(Wave wave);                                       // Copy a wave to a new wave\nRLAPI void WaveCrop(Wave *wave, int initSample, int finalSample);     // Crop a wave to defined samples range\nRLAPI float *LoadWaveSamples(Wave wave);                              // Load samples data from wave as a floats array\nRLAPI void UnloadWaveSamples(float *samples);                         // Unload samples data loaded with LoadWaveSamples()\n\n// Music management functions\nRLAPI Music LoadMusicStream(const char *fileName);                    // Load music stream from file\nRLAPI Music LoadMusicStreamFromMemory(const char *fileType, unsigned char *data, int dataSize); // Load music stream from data\nRLAPI void UnloadMusicStream(Music music);                            // Unload music stream\nRLAPI void PlayMusicStream(Music music);                              // Start music playing\nRLAPI bool IsMusicStreamPlaying(Music music);                         // Check if music is playing\nRLAPI void UpdateMusicStream(Music music);                            // Updates buffers for music streaming\nRLAPI void StopMusicStream(Music music);                              // Stop music playing\nRLAPI void PauseMusicStream(Music music);                             // Pause music playing\nRLAPI void ResumeMusicStream(Music music);                            // Resume playing paused music\nRLAPI void SeekMusicStream(Music music, float position);              // Seek music to a position (in seconds)\nRLAPI void SetMusicVolume(Music music, float volume);                 // Set volume for music (1.0 is max level)\nRLAPI void SetMusicPitch(Music music, float pitch);                   // Set pitch for a music (1.0 is base level)\nRLAPI float GetMusicTimeLength(Music music);                          // Get music time length (in seconds)\nRLAPI float GetMusicTimePlayed(Music music);                          // Get current music time played (in seconds)\n\n// AudioStream management functions\nRLAPI AudioStream LoadAudioStream(unsigned int sampleRate, unsigned int sampleSize, unsigned int channels); // Load audio stream (to stream raw audio pcm data)\nRLAPI void UnloadAudioStream(AudioStream stream);                      // Unload audio stream and free memory\nRLAPI void UpdateAudioStream(AudioStream stream, const void *data, int frameCount); // Update audio stream buffers with data\nRLAPI bool IsAudioStreamProcessed(AudioStream stream);                // Check if any audio stream buffers requires refill\nRLAPI void PlayAudioStream(AudioStream stream);                       // Play audio stream\nRLAPI void PauseAudioStream(AudioStream stream);                      // Pause audio stream\nRLAPI void ResumeAudioStream(AudioStream stream);                     // Resume audio stream\nRLAPI bool IsAudioStreamPlaying(AudioStream stream);                  // Check if audio stream is playing\nRLAPI void StopAudioStream(AudioStream stream);                       // Stop audio stream\nRLAPI void SetAudioStreamVolume(AudioStream stream, float volume);    // Set volume for audio stream (1.0 is max level)\nRLAPI void SetAudioStreamPitch(AudioStream stream, float pitch);      // Set pitch for audio stream (1.0 is base level)\nRLAPI void SetAudioStreamBufferSizeDefault(int size);                 // Default size for new audio streams\n\n#if defined(__cplusplus)\n}\n#endif\n\n#endif // RAYLIB_H",
    "assembly": ".file\t\"158.c\"\n\t.text\n\t.ident\t\"GCC: (MinGW-W64 x86_64-ucrt-posix-seh, built by Brecht Sanders, r8) 13.2.0\"",
    "generation_time": 16.58600091934204,
    "tokens_generated": 512,
    "metrics": {
      "length_ratio": 0.0004796674305814635,
      "line_ratio": 0.0006510416666666666,
      "token_overlap": 0.001219884111009454,
      "token_precision": 0.4444444444444444,
      "keyword_coverage": 0.0,
      "keyword_match_ratio": 0.0,
      "brace_ratio": 0.0,
      "semicolon_ratio": 0.0014367816091954023
    }
  },
  {
    "filename": "168",
    "optimization": "Osize",
    "generated_c": ".file={(C:\\Program Files\\Windows NT 64-bit Windows NT -x86_64-ucrt-posix-seh, build by Brecht Sanders, r8) 14.5.1\"",
    "reference_c": "//\n// Copyright (C) 2015-2018 Seagate Technology LLC and/or its Affiliates. Apache License, Version 2.0.\n//\n#pragma once\n#ifndef __H0_M0INIT_H__\n#define __H0_M0INIT_H__\n\nstruct m0_halon_interface;\n\nextern struct m0_halon_interface *m0init_hi;\n\nint m0_init_wrapper(void);\nvoid m0_fini_wrapper(void);\n\n#endif  // __H0_M0INIT_H__",
    "assembly": ".file\t\"168.c\"\n\t.text\n\t.ident\t\"GCC: (MinGW-W64 x86_64-ucrt-posix-seh, built by Brecht Sanders, r8) 13.2.0\"",
    "generation_time": 3.294999122619629,
    "tokens_generated": 102,
    "metrics": {
      "length_ratio": 0.3496932515337423,
      "line_ratio": 0.06666666666666667,
      "token_overlap": 0.0,
      "token_precision": 0.0,
      "keyword_coverage": 0.0,
      "keyword_match_ratio": 0.0,
      "brace_ratio": 0,
      "semicolon_ratio": 0.0
    }
  }
]